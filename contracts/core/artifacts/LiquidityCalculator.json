{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:326:33",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:33",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "95:229:33",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "141:26:33",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:33"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:33"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "143:6:33"
															},
															"nodeType": "YulFunctionCall",
															"src": "143:22:33"
														},
														"nodeType": "YulExpressionStatement",
														"src": "143:22:33"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "116:7:33"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "125:9:33"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "112:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "112:23:33"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "137:2:33",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "108:3:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "108:32:33"
											},
											"nodeType": "YulIf",
											"src": "105:2:33"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "176:29:33",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "195:9:33"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "189:5:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "189:16:33"
											},
											"variables": [
												{
													"name": "value",
													"nodeType": "YulTypedName",
													"src": "180:5:33",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "268:26:33",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "277:6:33"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "285:6:33"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "270:6:33"
															},
															"nodeType": "YulFunctionCall",
															"src": "270:22:33"
														},
														"nodeType": "YulExpressionStatement",
														"src": "270:22:33"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "227:5:33"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "238:5:33"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "253:3:33",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "258:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "249:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "249:11:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "262:1:33",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "245:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "245:19:33"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "234:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:31:33"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "224:2:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "224:42:33"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "217:6:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "217:50:33"
											},
											"nodeType": "YulIf",
											"src": "214:2:33"
										},
										{
											"nodeType": "YulAssignment",
											"src": "303:15:33",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "313:5:33"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "303:6:33"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_address_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "61:9:33",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "72:7:33",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "84:6:33",
										"type": ""
									}
								],
								"src": "14:310:33"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
					"id": 33,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "60a060405234801561001057600080fd5b5060405161096538038061096583398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6108ce61009760003980609d528060c6528061015b52506108ce6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806316f0115b146100465780633d1c387b1461006457806347c1128a1461007a575b600080fd5b61004e61009b565b60405161005b9190610862565b60405180910390f35b61006c6100bf565b60405161005b929190610876565b61008d61008836600461084a565b610211565b60405161005b92919061088a565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011d57600080fd5b505afa158015610131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015591906107a8565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160c06040518083038186803b1580156101b257600080fd5b505afa1580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea91906107c2565b50505050915050818260020b8260020b8161020157fe5b0502828103959201935090915050565b60008060008061021f6100bf565b91509150600061022e836102e9565b9050600061023b836102e9565b9050600061025f670de0b6b3a7640000600160601b846001600160a01b031661061b565b61027f670de0b6b3a7640000600160601b866001600160a01b031661061b565b0390506001600160a01b038084169083160360006102a78264e8d4a51000600160601b61061b565b8301905060006102c08b670de0b6b3a76400008461061b565b90506102cd8686836106cb565b99506102da868683610734565b98505050505050505050915091565b60008060008360020b12610300578260020b610308565b8260020b6000035b9050620d89e8811115610346576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b60006001821661035a57600160801b61036c565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156103a0576ffff97272373d413259a46990580e213a0260801c5b60048216156103bf576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156103de576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156103fd576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561041c576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561043b576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561045a576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561047a576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561049a576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156104ba576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156104da576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156104fa576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561051a576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561053a576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561055a576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561057b576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561059b576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156105ba576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156105d7576b048a170391f7dc42444e8fa20260801c5b60008460020b13156105f25780600019816105ee57fe5b0490505b640100000000810615610606576001610609565b60005b60ff16602082901c0192505050919050565b6000808060001985870986860292508281109083900303905080610651576000841161064657600080fd5b5082900490506106c4565b80841161065d57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6000826001600160a01b0316846001600160a01b031611156106eb579192915b836001600160a01b0316610724606060ff16846001600160801b0316901b8686036001600160a01b0316866001600160a01b031661061b565b8161072b57fe5b04949350505050565b6000826001600160a01b0316846001600160a01b03161115610754579192915b610777826001600160801b03168585036001600160a01b0316600160601b61061b565b949350505050565b8051600281900b811461079157600080fd5b919050565b805161ffff8116811461079157600080fd5b6000602082840312156107b9578081fd5b6106c48261077f565b60008060008060008060c087890312156107da578182fd5b86516001600160a01b03811681146107f0578283fd5b95506107fe6020880161077f565b945061080c60408801610796565b935061081a60608801610796565b925061082860808801610796565b915060a0870151801515811461083c578182fd5b809150509295509295509295565b60006020828403121561085b578081fd5b5035919050565b6001600160a01b0391909116815260200190565b600292830b8152910b602082015260400190565b91825260208201526040019056fea264697066735822122033851afa100994014fcd00d471c03a2e66eb93e7d9759ce2285a386a1dbff41964736f6c63430007060033",
			"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x965 CODESIZE SUB DUP1 PUSH2 0x965 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x44 JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH2 0x72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6B JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x8CE PUSH2 0x97 PUSH1 0x0 CODECOPY DUP1 PUSH1 0x9D MSTORE DUP1 PUSH1 0xC6 MSTORE DUP1 PUSH2 0x15B MSTORE POP PUSH2 0x8CE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16F0115B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3D1C387B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x47C1128A EQ PUSH2 0x7A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP3 SWAP2 SWAP1 PUSH2 0x876 JUMP JUMPDEST PUSH2 0x8D PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x211 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP3 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x7C2 JUMP JUMPDEST POP POP POP POP SWAP2 POP POP DUP2 DUP3 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x201 JUMPI INVALID JUMPDEST SDIV MUL DUP3 DUP2 SUB SWAP6 SWAP3 ADD SWAP4 POP SWAP1 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x21F PUSH2 0xBF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x22E DUP4 PUSH2 0x2E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x23B DUP4 PUSH2 0x2E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25F PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x60 SHL DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B JUMP JUMPDEST PUSH2 0x27F PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x60 SHL DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B JUMP JUMPDEST SUB SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP1 DUP4 AND SUB PUSH1 0x0 PUSH2 0x2A7 DUP3 PUSH5 0xE8D4A51000 PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x61B JUMP JUMPDEST DUP4 ADD SWAP1 POP PUSH1 0x0 PUSH2 0x2C0 DUP12 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x61B JUMP JUMPDEST SWAP1 POP PUSH2 0x2CD DUP7 DUP7 DUP4 PUSH2 0x6CB JUMP JUMPDEST SWAP10 POP PUSH2 0x2DA DUP7 DUP7 DUP4 PUSH2 0x734 JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x300 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x308 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x346 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0x35A JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x36C JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x3A0 JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x3BF JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x3DE JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x3FD JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x41C JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x43B JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x45A JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x47A JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x49A JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x4BA JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x4DA JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x4FA JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x51A JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x53A JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x55A JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x57B JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x59B JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x5BA JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x5D7 JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x5F2 JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x5EE JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP2 MOD ISZERO PUSH2 0x606 JUMPI PUSH1 0x1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP7 DUP7 MUL SWAP3 POP DUP3 DUP2 LT SWAP1 DUP4 SWAP1 SUB SUB SWAP1 POP DUP1 PUSH2 0x651 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x6C4 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x6EB JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x724 PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 SHL DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B JUMP JUMPDEST DUP2 PUSH2 0x72B JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x754 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x777 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 DUP6 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x61B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6C4 DUP3 PUSH2 0x77F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x7DA JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7F0 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP6 POP PUSH2 0x7FE PUSH1 0x20 DUP9 ADD PUSH2 0x77F JUMP JUMPDEST SWAP5 POP PUSH2 0x80C PUSH1 0x40 DUP9 ADD PUSH2 0x796 JUMP JUMPDEST SWAP4 POP PUSH2 0x81A PUSH1 0x60 DUP9 ADD PUSH2 0x796 JUMP JUMPDEST SWAP3 POP PUSH2 0x828 PUSH1 0x80 DUP9 ADD PUSH2 0x796 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x83C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP3 DUP4 SIGNEXTEND DUP2 MSTORE SWAP2 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER DUP6 BYTE STATICCALL LT MULMOD SWAP5 ADD 0x4F 0xCD STOP 0xD4 PUSH18 0xC03A2E66EB93E7D9759CE2285A386A1DBFF4 NOT PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
			"sourceMap": "948:3630:31:-:0;;;1065:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1103:21;;-1:-1:-1;;;;;;1103:21:31;;;948:3630;;14:310:33;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:33;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:33:o;:::-;948:3630:31;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:2347:33",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:33",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "74:106:33",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "84:22:33",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "99:6:33"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "93:5:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "93:13:33"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "84:5:33"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "158:16:33",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "167:1:33",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "170:1:33",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "160:6:33"
															},
															"nodeType": "YulFunctionCall",
															"src": "160:12:33"
														},
														"nodeType": "YulExpressionStatement",
														"src": "160:12:33"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "128:5:33"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:33",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "149:5:33"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "135:10:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "135:20:33"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "125:2:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "125:31:33"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "118:6:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "118:39:33"
											},
											"nodeType": "YulIf",
											"src": "115:2:33"
										}
									]
								},
								"name": "abi_decode_t_int24_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "53:6:33",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "64:5:33",
										"type": ""
									}
								],
								"src": "14:166:33"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "246:104:33",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "256:22:33",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "271:6:33"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "265:5:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "265:13:33"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "256:5:33"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "328:16:33",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "337:1:33",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "340:1:33",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "330:6:33"
															},
															"nodeType": "YulFunctionCall",
															"src": "330:12:33"
														},
														"nodeType": "YulExpressionStatement",
														"src": "330:12:33"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "300:5:33"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "311:5:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "318:6:33",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:18:33"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "297:2:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "297:29:33"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "290:6:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "290:37:33"
											},
											"nodeType": "YulIf",
											"src": "287:2:33"
										}
									]
								},
								"name": "abi_decode_t_uint16_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "225:6:33",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "236:5:33",
										"type": ""
									}
								],
								"src": "185:165:33"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "434:137:33",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "480:26:33",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "489:6:33"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "497:6:33"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "482:6:33"
															},
															"nodeType": "YulFunctionCall",
															"src": "482:22:33"
														},
														"nodeType": "YulExpressionStatement",
														"src": "482:22:33"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "455:7:33"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "464:9:33"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "451:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "451:23:33"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "476:2:33",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "447:3:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "447:32:33"
											},
											"nodeType": "YulIf",
											"src": "444:2:33"
										},
										{
											"nodeType": "YulAssignment",
											"src": "515:50:33",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "555:9:33"
													}
												],
												"functionName": {
													"name": "abi_decode_t_int24_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "525:29:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "525:40:33"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "515:6:33"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_int24_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "400:9:33",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "411:7:33",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "423:6:33",
										"type": ""
									}
								],
								"src": "355:216:33"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "734:665:33",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "781:26:33",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "790:6:33"
																},
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:33"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "783:6:33"
															},
															"nodeType": "YulFunctionCall",
															"src": "783:22:33"
														},
														"nodeType": "YulExpressionStatement",
														"src": "783:22:33"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "755:7:33"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "764:9:33"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "751:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "751:23:33"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "776:3:33",
														"type": "",
														"value": "192"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "747:3:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "747:33:33"
											},
											"nodeType": "YulIf",
											"src": "744:2:33"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "816:29:33",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "835:9:33"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "829:5:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "829:16:33"
											},
											"variables": [
												{
													"name": "value",
													"nodeType": "YulTypedName",
													"src": "820:5:33",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "908:26:33",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "917:6:33"
																},
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:33"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "910:6:33"
															},
															"nodeType": "YulFunctionCall",
															"src": "910:22:33"
														},
														"nodeType": "YulExpressionStatement",
														"src": "910:22:33"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "867:5:33"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "878:5:33"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "893:3:33",
																						"type": "",
																						"value": "160"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "898:1:33",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "889:3:33"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "889:11:33"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "902:1:33",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "885:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "885:19:33"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "874:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:31:33"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "864:2:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "864:42:33"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "857:6:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "857:50:33"
											},
											"nodeType": "YulIf",
											"src": "854:2:33"
										},
										{
											"nodeType": "YulAssignment",
											"src": "943:15:33",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "953:5:33"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "943:6:33"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "967:59:33",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1011:9:33"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1022:2:33",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1007:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "1007:18:33"
													}
												],
												"functionName": {
													"name": "abi_decode_t_int24_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "977:29:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "977:49:33"
											},
											"variableNames": [
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "967:6:33"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1035:60:33",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1080:9:33"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1091:2:33",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1076:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "1076:18:33"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint16_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "1045:30:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "1045:50:33"
											},
											"variableNames": [
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "1035:6:33"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1104:60:33",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1149:9:33"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1160:2:33",
																"type": "",
																"value": "96"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1145:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "1145:18:33"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint16_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "1114:30:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "1114:50:33"
											},
											"variableNames": [
												{
													"name": "value3",
													"nodeType": "YulIdentifier",
													"src": "1104:6:33"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1173:61:33",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1218:9:33"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1229:3:33",
																"type": "",
																"value": "128"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1214:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "1214:19:33"
													}
												],
												"functionName": {
													"name": "abi_decode_t_uint16_fromMemory",
													"nodeType": "YulIdentifier",
													"src": "1183:30:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "1183:51:33"
											},
											"variableNames": [
												{
													"name": "value4",
													"nodeType": "YulIdentifier",
													"src": "1173:6:33"
												}
											]
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "1243:41:33",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1268:9:33"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1279:3:33",
																"type": "",
																"value": "160"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1264:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "1264:19:33"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1258:5:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "1258:26:33"
											},
											"variables": [
												{
													"name": "value_1",
													"nodeType": "YulTypedName",
													"src": "1247:7:33",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1341:26:33",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:33"
																},
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:33"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1343:6:33"
															},
															"nodeType": "YulFunctionCall",
															"src": "1343:22:33"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1343:22:33"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1306:7:33"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "1329:7:33"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1322:6:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:15:33"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:23:33"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "1303:2:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "1303:36:33"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1296:6:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "1296:44:33"
											},
											"nodeType": "YulIf",
											"src": "1293:2:33"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1376:17:33",
											"value": {
												"name": "value_1",
												"nodeType": "YulIdentifier",
												"src": "1386:7:33"
											},
											"variableNames": [
												{
													"name": "value5",
													"nodeType": "YulIdentifier",
													"src": "1376:6:33"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "660:9:33",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "671:7:33",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "683:6:33",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "691:6:33",
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
										"src": "699:6:33",
										"type": ""
									},
									{
										"name": "value3",
										"nodeType": "YulTypedName",
										"src": "707:6:33",
										"type": ""
									},
									{
										"name": "value4",
										"nodeType": "YulTypedName",
										"src": "715:6:33",
										"type": ""
									},
									{
										"name": "value5",
										"nodeType": "YulTypedName",
										"src": "723:6:33",
										"type": ""
									}
								],
								"src": "576:823:33"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1474:120:33",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1520:26:33",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:33"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:33"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1522:6:33"
															},
															"nodeType": "YulFunctionCall",
															"src": "1522:22:33"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1522:22:33"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1495:7:33"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1504:9:33"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1491:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "1491:23:33"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1516:2:33",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1487:3:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "1487:32:33"
											},
											"nodeType": "YulIf",
											"src": "1484:2:33"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1555:33:33",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1578:9:33"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "1565:12:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "1565:23:33"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1555:6:33"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1440:9:33",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1451:7:33",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1463:6:33",
										"type": ""
									}
								],
								"src": "1404:190:33"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1715:102:33",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1725:26:33",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1737:9:33"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1748:2:33",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1733:3:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "1733:18:33"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1725:4:33"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1767:9:33"
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "1782:6:33"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1798:3:33",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1803:1:33",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1794:3:33"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1794:11:33"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:33",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:33"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:19:33"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "1778:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "1778:32:33"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1760:6:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "1760:51:33"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1760:51:33"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_ICLPool_$591__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1684:9:33",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1695:6:33",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1706:4:33",
										"type": ""
									}
								],
								"src": "1599:218:33"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1943:149:33",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1953:26:33",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1965:9:33"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1976:2:33",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1961:3:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "1961:18:33"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1953:4:33"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1995:9:33"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2017:1:33",
																"type": "",
																"value": "2"
															},
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "2020:6:33"
															}
														],
														"functionName": {
															"name": "signextend",
															"nodeType": "YulIdentifier",
															"src": "2006:10:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "2006:21:33"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1988:6:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "1988:40:33"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1988:40:33"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2048:9:33"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2059:2:33",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2044:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "2044:18:33"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2075:1:33",
																"type": "",
																"value": "2"
															},
															{
																"name": "value1",
																"nodeType": "YulIdentifier",
																"src": "2078:6:33"
															}
														],
														"functionName": {
															"name": "signextend",
															"nodeType": "YulIdentifier",
															"src": "2064:10:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "2064:21:33"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2037:6:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "2037:49:33"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2037:49:33"
										}
									]
								},
								"name": "abi_encode_tuple_t_int24_t_int24__to_t_int24_t_int24__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1904:9:33",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "1915:6:33",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1923:6:33",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1934:4:33",
										"type": ""
									}
								],
								"src": "1822:270:33"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2226:119:33",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2236:26:33",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2248:9:33"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2259:2:33",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2244:3:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "2244:18:33"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2236:4:33"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2278:9:33"
													},
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2289:6:33"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2271:6:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "2271:25:33"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2271:25:33"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2316:9:33"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2327:2:33",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2312:3:33"
														},
														"nodeType": "YulFunctionCall",
														"src": "2312:18:33"
													},
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "2332:6:33"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2305:6:33"
												},
												"nodeType": "YulFunctionCall",
												"src": "2305:34:33"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2305:34:33"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2187:9:33",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "2198:6:33",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2206:6:33",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "2217:4:33",
										"type": ""
									}
								],
								"src": "2097:248:33"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_t_int24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(2, value))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_int24_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_int24_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value4, value4) }\n        value0 := value\n        value1 := abi_decode_t_int24_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_uint16_fromMemory(add(headStart, 64))\n        value3 := abi_decode_t_uint16_fromMemory(add(headStart, 96))\n        value4 := abi_decode_t_uint16_fromMemory(add(headStart, 128))\n        let value_1 := mload(add(headStart, 160))\n        if iszero(eq(value_1, iszero(iszero(value_1)))) { revert(value5, value5) }\n        value5 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_ICLPool_$591__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_int24_t_int24__to_t_int24_t_int24__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, signextend(2, value0))\n        mstore(add(headStart, 32), signextend(2, value1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
					"id": 33,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {
				"4675": [
					{
						"length": 32,
						"start": 157
					},
					{
						"length": 32,
						"start": 198
					},
					{
						"length": 32,
						"start": 347
					}
				]
			},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806316f0115b146100465780633d1c387b1461006457806347c1128a1461007a575b600080fd5b61004e61009b565b60405161005b9190610862565b60405180910390f35b61006c6100bf565b60405161005b929190610876565b61008d61008836600461084a565b610211565b60405161005b92919061088a565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011d57600080fd5b505afa158015610131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015591906107a8565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160c06040518083038186803b1580156101b257600080fd5b505afa1580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea91906107c2565b50505050915050818260020b8260020b8161020157fe5b0502828103959201935090915050565b60008060008061021f6100bf565b91509150600061022e836102e9565b9050600061023b836102e9565b9050600061025f670de0b6b3a7640000600160601b846001600160a01b031661061b565b61027f670de0b6b3a7640000600160601b866001600160a01b031661061b565b0390506001600160a01b038084169083160360006102a78264e8d4a51000600160601b61061b565b8301905060006102c08b670de0b6b3a76400008461061b565b90506102cd8686836106cb565b99506102da868683610734565b98505050505050505050915091565b60008060008360020b12610300578260020b610308565b8260020b6000035b9050620d89e8811115610346576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b60006001821661035a57600160801b61036c565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156103a0576ffff97272373d413259a46990580e213a0260801c5b60048216156103bf576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156103de576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156103fd576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561041c576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561043b576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561045a576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561047a576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561049a576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156104ba576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156104da576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156104fa576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561051a576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561053a576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561055a576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561057b576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561059b576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156105ba576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156105d7576b048a170391f7dc42444e8fa20260801c5b60008460020b13156105f25780600019816105ee57fe5b0490505b640100000000810615610606576001610609565b60005b60ff16602082901c0192505050919050565b6000808060001985870986860292508281109083900303905080610651576000841161064657600080fd5b5082900490506106c4565b80841161065d57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6000826001600160a01b0316846001600160a01b031611156106eb579192915b836001600160a01b0316610724606060ff16846001600160801b0316901b8686036001600160a01b0316866001600160a01b031661061b565b8161072b57fe5b04949350505050565b6000826001600160a01b0316846001600160a01b03161115610754579192915b610777826001600160801b03168585036001600160a01b0316600160601b61061b565b949350505050565b8051600281900b811461079157600080fd5b919050565b805161ffff8116811461079157600080fd5b6000602082840312156107b9578081fd5b6106c48261077f565b60008060008060008060c087890312156107da578182fd5b86516001600160a01b03811681146107f0578283fd5b95506107fe6020880161077f565b945061080c60408801610796565b935061081a60608801610796565b925061082860808801610796565b915060a0870151801515811461083c578182fd5b809150509295509295509295565b60006020828403121561085b578081fd5b5035919050565b6001600160a01b0391909116815260200190565b600292830b8152910b602082015260400190565b91825260208201526040019056fea264697066735822122033851afa100994014fcd00d471c03a2e66eb93e7d9759ce2285a386a1dbff41964736f6c63430007060033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16F0115B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3D1C387B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x47C1128A EQ PUSH2 0x7A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP3 SWAP2 SWAP1 PUSH2 0x876 JUMP JUMPDEST PUSH2 0x8D PUSH2 0x88 CALLDATASIZE PUSH1 0x4 PUSH2 0x84A JUMP JUMPDEST PUSH2 0x211 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP3 SWAP2 SWAP1 PUSH2 0x88A JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x7A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x7C2 JUMP JUMPDEST POP POP POP POP SWAP2 POP POP DUP2 DUP3 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x201 JUMPI INVALID JUMPDEST SDIV MUL DUP3 DUP2 SUB SWAP6 SWAP3 ADD SWAP4 POP SWAP1 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x21F PUSH2 0xBF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x22E DUP4 PUSH2 0x2E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x23B DUP4 PUSH2 0x2E9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25F PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x60 SHL DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B JUMP JUMPDEST PUSH2 0x27F PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x60 SHL DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B JUMP JUMPDEST SUB SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP1 DUP4 AND SUB PUSH1 0x0 PUSH2 0x2A7 DUP3 PUSH5 0xE8D4A51000 PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x61B JUMP JUMPDEST DUP4 ADD SWAP1 POP PUSH1 0x0 PUSH2 0x2C0 DUP12 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x61B JUMP JUMPDEST SWAP1 POP PUSH2 0x2CD DUP7 DUP7 DUP4 PUSH2 0x6CB JUMP JUMPDEST SWAP10 POP PUSH2 0x2DA DUP7 DUP7 DUP4 PUSH2 0x734 JUMP JUMPDEST SWAP9 POP POP POP POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x300 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x308 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x346 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0x35A JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x36C JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x3A0 JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x3BF JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x3DE JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x3FD JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x41C JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x43B JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x45A JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x47A JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x49A JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x4BA JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x4DA JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x4FA JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x51A JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x53A JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x55A JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x57B JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x59B JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x5BA JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x5D7 JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x5F2 JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x5EE JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP2 MOD ISZERO PUSH2 0x606 JUMPI PUSH1 0x1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP7 DUP7 MUL SWAP3 POP DUP3 DUP2 LT SWAP1 DUP4 SWAP1 SUB SUB SWAP1 POP DUP1 PUSH2 0x651 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x6C4 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x6EB JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x724 PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 SHL DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B JUMP JUMPDEST DUP2 PUSH2 0x72B JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x754 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x777 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 DUP6 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x61B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6C4 DUP3 PUSH2 0x77F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x7DA JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7F0 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP6 POP PUSH2 0x7FE PUSH1 0x20 DUP9 ADD PUSH2 0x77F JUMP JUMPDEST SWAP5 POP PUSH2 0x80C PUSH1 0x40 DUP9 ADD PUSH2 0x796 JUMP JUMPDEST SWAP4 POP PUSH2 0x81A PUSH1 0x60 DUP9 ADD PUSH2 0x796 JUMP JUMPDEST SWAP3 POP PUSH2 0x828 PUSH1 0x80 DUP9 ADD PUSH2 0x796 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x83C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x85B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP3 DUP4 SIGNEXTEND DUP2 MSTORE SWAP2 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER DUP6 BYTE STATICCALL LT MULMOD SWAP5 ADD 0x4F 0xCD STOP 0xD4 PUSH18 0xC03A2E66EB93E7D9759CE2285A386A1DBFF4 NOT PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
			"sourceMap": "948:3630:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1027:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1142:419;;;:::i;:::-;;;;;;;;:::i;1642:1722::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1027:29::-;;;:::o;1142:419::-;1184:13;1199:14;1225:17;1262:4;-1:-1:-1;;;;;1245:34:31;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1225:56;;1295:17;1332:4;-1:-1:-1;;;;;1324:19:31;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1292:53;;;;;;;1400:11;1385;1371:25;;:11;:25;;;;;;;;1370:41;1432:25;;;;1479;;;-1:-1:-1;1142:419:31;;-1:-1:-1;;1142:419:31:o;1642:1722::-;1791:12;1805;1841:15;1857;1876:10;:8;:10::i;:::-;1840:46;;;;1944:22;1969:38;1997:9;1969:27;:38::i;:::-;1944:63;;2018:22;2043:38;2071:9;2043:27;:38::i;:::-;2018:63;;2187:25;2340:46;2356:4;-1:-1:-1;;;2371:14:31;-1:-1:-1;;;;;2340:46:31;:15;:46::i;:::-;2258;2274:4;-1:-1:-1;;;2289:14:31;-1:-1:-1;;;;;2258:46:31;:15;:46::i;:::-;:128;;-1:-1:-1;;;;;;2506:23:31;;;2480;;;:49;2455:22;3051:46;2480:49;3083:4;-1:-1:-1;;;3051:15:31;:46::i;:::-;3031:17;:66;3009:88;;3108:17;3136:45;3152:9;3163:4;3169:11;3136:15;:45::i;:::-;3108:74;;3205:65;3228:14;3244;3260:9;3205:22;:65::i;:::-;3195:75;;3291:65;3314:14;3330;3346:9;3291:22;:65::i;:::-;3281:75;;1642:1722;;;;;;;;;;;:::o;1362:2580:28:-;1425:20;1457:15;1482:1;1475:4;:8;;;:57;;1526:4;1519:12;;1475:57;;;1502:4;1495:12;;1494:13;;1475:57;1457:75;-1:-1:-1;644:9:28;1550:28;;;1542:42;;;;;-1:-1:-1;;;1542:42:28;;;;;;;;;;;;-1:-1:-1;;;1542:42:28;;;;;;;;;;;;;;;1595:13;1621:3;1611:13;;:93;;-1:-1:-1;;;1611:93:28;;;1632:34;1611:93;1595:109;;;-1:-1:-1;1728:3:28;1718:13;;:18;1714:83;;1755:34;1747:42;1794:3;1746:51;1714:83;1821:3;1811:13;;:18;1807:83;;1848:34;1840:42;1887:3;1839:51;1807:83;1914:3;1904:13;;:18;1900:83;;1941:34;1933:42;1980:3;1932:51;1900:83;2007:4;1997:14;;:19;1993:84;;2035:34;2027:42;2074:3;2026:51;1993:84;2101:4;2091:14;;:19;2087:84;;2129:34;2121:42;2168:3;2120:51;2087:84;2195:4;2185:14;;:19;2181:84;;2223:34;2215:42;2262:3;2214:51;2181:84;2289:4;2279:14;;:19;2275:84;;2317:34;2309:42;2356:3;2308:51;2275:84;2383:5;2373:15;;:20;2369:85;;2412:34;2404:42;2451:3;2403:51;2369:85;2478:5;2468:15;;:20;2464:85;;2507:34;2499:42;2546:3;2498:51;2464:85;2573:5;2563:15;;:20;2559:85;;2602:34;2594:42;2641:3;2593:51;2559:85;2668:5;2658:15;;:20;2654:85;;2697:34;2689:42;2736:3;2688:51;2654:85;2763:6;2753:16;;:21;2749:86;;2793:34;2785:42;2832:3;2784:51;2749:86;2859:6;2849:16;;:21;2845:86;;2889:34;2881:42;2928:3;2880:51;2845:86;2955:6;2945:16;;:21;2941:86;;2985:34;2977:42;3024:3;2976:51;2941:86;3051:6;3041:16;;:21;3037:86;;3081:34;3073:42;3120:3;3072:51;3037:86;3147:7;3137:17;;:22;3133:86;;3178:33;3170:41;3216:3;3169:50;3133:86;3243:7;3233:17;;:22;3229:85;;3274:32;3266:40;3311:3;3265:49;3229:85;3338:7;3328:17;;:22;3324:83;;3369:30;3361:38;3404:3;3360:47;3324:83;3431:7;3421:17;;:22;3417:78;;3462:25;3454:33;3492:3;3453:42;3417:78;3517:1;3510:4;:8;;;3506:47;;;3548:5;-1:-1:-1;;3528:25:28;;;;;;3520:33;;3506:47;3912:7;3903:5;:17;:22;:30;;3932:1;3903:30;;;3928:1;3903:30;3886:48;;3896:2;3887:5;:11;;3886:48;3863:72;;1362:2580;;;;;:::o;749:3746:19:-;831:14;;;-1:-1:-1;;1338:1:19;1335;1328:20;1370:9;;;;-1:-1:-1;1421:13:19;;;1405:14;;;;1401:34;;-1:-1:-1;1517:10:19;1513:179;;1565:1;1551:11;:15;1543:24;;;;;;-1:-1:-1;1618:23:19;;;;-1:-1:-1;1668:13:19;;1513:179;1819:5;1805:11;:19;1797:28;;;;;;2102:17;2178:11;2175:1;2172;2165:25;2530:12;2545;;;:26;;2665:22;;;;;3468:1;3449;:15;;3448:21;;3695:17;;;3691:21;;3684:28;3753:17;;;3749:21;;3742:28;3812:17;;;3808:21;;3801:28;3871:17;;;3867:21;;3860:28;3930:17;;;3926:21;;3919:28;3990:17;;;3986:21;;;3979:28;3037:12;;;;3033:23;;;3058:1;3029:31;2307:20;;;2296:32;;;3088:12;;;;2350:21;;;;2793:16;;;;3079:21;;;;4454:11;;;;;-1:-1:-1;;749:3746:19;;;;;;:::o;3375:454:31:-;3522:15;3575:13;-1:-1:-1;;;;;3559:29:31;:13;-1:-1:-1;;;;;3559:29:31;;3555:98;;;3624:13;;3639;3555:98;3808:13;-1:-1:-1;;;;;3673:148:31;:132;309:2:18;3703:45:31;;3711:9;-1:-1:-1;;;;;3703:18:31;:45;;3766:13;3750;:29;-1:-1:-1;;;;;3673:132:31;3781:13;-1:-1:-1;;;;;3673:132:31;:15;:132::i;:::-;:148;;;;;;;3375:454;-1:-1:-1;;;;3375:454:31:o;4194:381::-;4341:15;4394:13;-1:-1:-1;;;;;4378:29:31;:13;-1:-1:-1;;;;;4378:29:31;;4374:98;;;4443:13;;4458;4374:98;4492:75;4508:9;-1:-1:-1;;;;;4492:75:31;4535:13;4519;:29;-1:-1:-1;;;;;4492:75:31;-1:-1:-1;;;4492:15:31;:75::i;:::-;4485:82;4194:381;-1:-1:-1;;;;4194:381:31:o;14:166:33:-;93:13;;146:1;135:20;;;125:31;;115:2;;170:1;167;160:12;115:2;74:106;;;:::o;185:165::-;265:13;;318:6;307:18;;297:29;;287:2;;340:1;337;330:12;355:216;;476:2;464:9;455:7;451:23;447:32;444:2;;;497:6;489;482:22;444:2;525:40;555:9;525:40;:::i;576:823::-;;;;;;;776:3;764:9;755:7;751:23;747:33;744:2;;;798:6;790;783:22;744:2;829:16;;-1:-1:-1;;;;;874:31:33;;864:42;;854:2;;925:6;917;910:22;854:2;953:5;-1:-1:-1;977:49:33;1022:2;1007:18;;977:49;:::i;:::-;967:59;;1045:50;1091:2;1080:9;1076:18;1045:50;:::i;:::-;1035:60;;1114:50;1160:2;1149:9;1145:18;1114:50;:::i;:::-;1104:60;;1183:51;1229:3;1218:9;1214:19;1183:51;:::i;:::-;1173:61;;1279:3;1268:9;1264:19;1258:26;1329:7;1322:15;1315:23;1306:7;1303:36;1293:2;;1358:6;1350;1343:22;1293:2;1386:7;1376:17;;;734:665;;;;;;;;:::o;1404:190::-;;1516:2;1504:9;1495:7;1491:23;1487:32;1484:2;;;1537:6;1529;1522:22;1484:2;-1:-1:-1;1565:23:33;;1474:120;-1:-1:-1;1474:120:33:o;1599:218::-;-1:-1:-1;;;;;1778:32:33;;;;1760:51;;1748:2;1733:18;;1715:102::o;1822:270::-;2017:1;2006:21;;;1988:40;;2064:21;;2059:2;2044:18;;2037:49;1976:2;1961:18;;1943:149::o;2097:248::-;2271:25;;;2327:2;2312:18;;2305:34;2259:2;2244:18;;2226:119::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "450800",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"calculateLiquidityForUSD(uint256)": "infinite",
				"getTicks()": "infinite",
				"pool()": "infinite"
			},
			"internal": {
				"getAmount0ForLiquidity(uint160,uint160,uint128)": "705",
				"getAmount1ForLiquidity(uint160,uint160,uint128)": "635"
			}
		},
		"methodIdentifiers": {
			"calculateLiquidityForUSD(uint256)": "47c1128a",
			"getTicks()": "3d1c387b",
			"pool()": "16f0115b"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_pool",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "usdAmount",
					"type": "uint256"
				}
			],
			"name": "calculateLiquidityForUSD",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "amount0",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "amount1",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getTicks",
			"outputs": [
				{
					"internalType": "int24",
					"name": "lowTick",
					"type": "int24"
				},
				{
					"internalType": "int24",
					"name": "highTick",
					"type": "int24"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "pool",
			"outputs": [
				{
					"internalType": "contract ICLPool",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}