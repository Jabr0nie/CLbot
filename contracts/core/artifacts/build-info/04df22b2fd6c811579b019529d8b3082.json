{
	"id": "04df22b2fd6c811579b019529d8b3082",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/core/VeloOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0;\r\n\r\nimport \"./interfaces/pool/ICLPoolDerivedState.sol\";\r\nimport \"./libraries/LowGasSafeMath.sol\";\r\nimport \"./libraries/SafeCast.sol\";\r\nimport \"./libraries/Tick.sol\";\r\nimport \"./libraries/TickBitmap.sol\";\r\nimport \"./libraries/Position.sol\";\r\nimport \"./libraries/Oracle.sol\";\r\n\r\nimport \"./libraries/FullMath.sol\";\r\nimport \"./libraries/FixedPoint128.sol\";\r\nimport \"./libraries/TransferHelper.sol\";\r\nimport \"./libraries/TickMath.sol\";\r\nimport \"./libraries/LiquidityMath.sol\";\r\nimport \"./libraries/SqrtPriceMath.sol\";\r\n\r\ncontract VeloOracle {\r\n\r\nICLPoolDerivedState public V3Pool;\r\n\r\nuint32[] private secondsAgos = [0,1];\r\n\r\n    function GetPrice(address pool) public view returns (uint price) {\r\n        uint price;\r\n\r\n    \r\n        (int56[] memory tickCumulatives,) = ICLPoolDerivedState(pool).observe(secondsAgos);\r\n        int56 ticka = tickCumulatives[0];\r\n        int56 tickb = tickCumulatives[1];\r\n        int56 tick = (ticka-tickb)/1;\r\n        int24 tick24 = int24(tick);\r\n        uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick24);\r\n        uint256 a = uint256(sqrtRatioX96);\r\n        uint256 s = (a ** 2);\r\n        uint256 t = (2 ** 192);\r\n        uint256 r = (10 ** 14);\r\n        uint256 d = FullMath.mulDiv(s,r,t);\r\n        price = (d * r)*(10 ** 2);\r\n        return price;\r\n    }\r\n}\r\n"
			},
			"contracts/core/libraries/SqrtPriceMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport \"./LowGasSafeMath.sol\";\nimport \"./SafeCast.sol\";\n\nimport \"./FullMath.sol\";\nimport \"./UnsafeMath.sol\";\nimport \"./FixedPoint96.sol\";\n\n/// @title Functions based on Q64.96 sqrt price and liquidity\n/// @notice Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas\nlibrary SqrtPriceMath {\n    using LowGasSafeMath for uint256;\n    using SafeCast for uint256;\n\n    /// @notice Gets the next sqrt price given a delta of token0\n    /// @dev Always rounds up, because in the exact output case (increasing price) we need to move the price at least\n    /// far enough to get the desired output amount, and in the exact input case (decreasing price) we need to move the\n    /// price less in order to not send too much output.\n    /// The most precise formula for this is liquidity * sqrtPX96 / (liquidity +- amount * sqrtPX96),\n    /// if this is impossible because of overflow, we calculate liquidity / (liquidity / sqrtPX96 +- amount).\n    /// @param sqrtPX96 The starting price, i.e. before accounting for the token0 delta\n    /// @param liquidity The amount of usable liquidity\n    /// @param amount How much of token0 to add or remove from virtual reserves\n    /// @param add Whether to add or remove the amount of token0\n    /// @return The price after adding or removing amount, depending on add\n    function getNextSqrtPriceFromAmount0RoundingUp(uint160 sqrtPX96, uint128 liquidity, uint256 amount, bool add)\n        internal\n        pure\n        returns (uint160)\n    {\n        // we short circuit amount == 0 because the result is otherwise not guaranteed to equal the input price\n        if (amount == 0) return sqrtPX96;\n        uint256 numerator1 = uint256(liquidity) << FixedPoint96.RESOLUTION;\n\n        if (add) {\n            uint256 product;\n            if ((product = amount * sqrtPX96) / amount == sqrtPX96) {\n                uint256 denominator = numerator1 + product;\n                if (denominator >= numerator1) {\n                    // always fits in 160 bits\n                    return uint160(FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator));\n                }\n            }\n\n            return uint160(UnsafeMath.divRoundingUp(numerator1, (numerator1 / sqrtPX96).add(amount)));\n        } else {\n            uint256 product;\n            // if the product overflows, we know the denominator underflows\n            // in addition, we must check that the denominator does not underflow\n            require((product = amount * sqrtPX96) / amount == sqrtPX96 && numerator1 > product);\n            uint256 denominator = numerator1 - product;\n            return FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator).toUint160();\n        }\n    }\n\n    /// @notice Gets the next sqrt price given a delta of token1\n    /// @dev Always rounds down, because in the exact output case (decreasing price) we need to move the price at least\n    /// far enough to get the desired output amount, and in the exact input case (increasing price) we need to move the\n    /// price less in order to not send too much output.\n    /// The formula we compute is within <1 wei of the lossless version: sqrtPX96 +- amount / liquidity\n    /// @param sqrtPX96 The starting price, i.e., before accounting for the token1 delta\n    /// @param liquidity The amount of usable liquidity\n    /// @param amount How much of token1 to add, or remove, from virtual reserves\n    /// @param add Whether to add, or remove, the amount of token1\n    /// @return The price after adding or removing `amount`\n    function getNextSqrtPriceFromAmount1RoundingDown(uint160 sqrtPX96, uint128 liquidity, uint256 amount, bool add)\n        internal\n        pure\n        returns (uint160)\n    {\n        // if we're adding (subtracting), rounding down requires rounding the quotient down (up)\n        // in both cases, avoid a mulDiv for most inputs\n        if (add) {\n            uint256 quotient = (\n                amount <= type(uint160).max\n                    ? (amount << FixedPoint96.RESOLUTION) / liquidity\n                    : FullMath.mulDiv(amount, FixedPoint96.Q96, liquidity)\n            );\n\n            return uint256(sqrtPX96).add(quotient).toUint160();\n        } else {\n            uint256 quotient = (\n                amount <= type(uint160).max\n                    ? UnsafeMath.divRoundingUp(amount << FixedPoint96.RESOLUTION, liquidity)\n                    : FullMath.mulDivRoundingUp(amount, FixedPoint96.Q96, liquidity)\n            );\n\n            require(sqrtPX96 > quotient);\n            // always fits 160 bits\n            return uint160(sqrtPX96 - quotient);\n        }\n    }\n\n    /// @notice Gets the next sqrt price given an input amount of token0 or token1\n    /// @dev Throws if price or liquidity are 0, or if the next price is out of bounds\n    /// @param sqrtPX96 The starting price, i.e., before accounting for the input amount\n    /// @param liquidity The amount of usable liquidity\n    /// @param amountIn How much of token0, or token1, is being swapped in\n    /// @param zeroForOne Whether the amount in is token0 or token1\n    /// @return sqrtQX96 The price after adding the input amount to token0 or token1\n    function getNextSqrtPriceFromInput(uint160 sqrtPX96, uint128 liquidity, uint256 amountIn, bool zeroForOne)\n        internal\n        pure\n        returns (uint160 sqrtQX96)\n    {\n        require(sqrtPX96 > 0);\n        require(liquidity > 0);\n\n        // round to make sure that we don't pass the target price\n        return zeroForOne\n            ? getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountIn, true)\n            : getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountIn, true);\n    }\n\n    /// @notice Gets the next sqrt price given an output amount of token0 or token1\n    /// @dev Throws if price or liquidity are 0 or the next price is out of bounds\n    /// @param sqrtPX96 The starting price before accounting for the output amount\n    /// @param liquidity The amount of usable liquidity\n    /// @param amountOut How much of token0, or token1, is being swapped out\n    /// @param zeroForOne Whether the amount out is token0 or token1\n    /// @return sqrtQX96 The price after removing the output amount of token0 or token1\n    function getNextSqrtPriceFromOutput(uint160 sqrtPX96, uint128 liquidity, uint256 amountOut, bool zeroForOne)\n        internal\n        pure\n        returns (uint160 sqrtQX96)\n    {\n        require(sqrtPX96 > 0);\n        require(liquidity > 0);\n\n        // round to make sure that we pass the target price\n        return zeroForOne\n            ? getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountOut, false)\n            : getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountOut, false);\n    }\n\n    /// @notice Gets the amount0 delta between two prices\n    /// @dev Calculates liquidity / sqrt(lower) - liquidity / sqrt(upper),\n    /// i.e. liquidity * (sqrt(upper) - sqrt(lower)) / (sqrt(upper) * sqrt(lower))\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The amount of usable liquidity\n    /// @param roundUp Whether to round the amount up or down\n    /// @return amount0 Amount of token0 required to cover a position of size liquidity between the two passed prices\n    function getAmount0Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity, bool roundUp)\n        internal\n        pure\n        returns (uint256 amount0)\n    {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        uint256 numerator1 = uint256(liquidity) << FixedPoint96.RESOLUTION;\n        uint256 numerator2 = sqrtRatioBX96 - sqrtRatioAX96;\n\n        require(sqrtRatioAX96 > 0);\n\n        return roundUp\n            ? UnsafeMath.divRoundingUp(FullMath.mulDivRoundingUp(numerator1, numerator2, sqrtRatioBX96), sqrtRatioAX96)\n            : FullMath.mulDiv(numerator1, numerator2, sqrtRatioBX96) / sqrtRatioAX96;\n    }\n\n    /// @notice Gets the amount1 delta between two prices\n    /// @dev Calculates liquidity * (sqrt(upper) - sqrt(lower))\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The amount of usable liquidity\n    /// @param roundUp Whether to round the amount up, or down\n    /// @return amount1 Amount of token1 required to cover a position of size liquidity between the two passed prices\n    function getAmount1Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity, bool roundUp)\n        internal\n        pure\n        returns (uint256 amount1)\n    {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        return roundUp\n            ? FullMath.mulDivRoundingUp(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96)\n            : FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96);\n    }\n\n    /// @notice Helper that gets signed token0 delta\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The change in liquidity for which to compute the amount0 delta\n    /// @return amount0 Amount of token0 corresponding to the passed liquidityDelta between the two prices\n    function getAmount0Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, int128 liquidity)\n        internal\n        pure\n        returns (int256 amount0)\n    {\n        return liquidity < 0\n            ? -getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(-liquidity), false).toInt256()\n            : getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(liquidity), true).toInt256();\n    }\n\n    /// @notice Helper that gets signed token1 delta\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The change in liquidity for which to compute the amount1 delta\n    /// @return amount1 Amount of token1 corresponding to the passed liquidityDelta between the two prices\n    function getAmount1Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, int128 liquidity)\n        internal\n        pure\n        returns (int256 amount1)\n    {\n        return liquidity < 0\n            ? -getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(-liquidity), false).toInt256()\n            : getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(liquidity), true).toInt256();\n    }\n}\n"
			},
			"contracts/core/libraries/LiquidityMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math library for liquidity\nlibrary LiquidityMath {\n    /// @notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n    /// @param x The liquidity before change\n    /// @param y The delta by which liquidity should be changed\n    /// @return z The liquidity delta\n    function addDelta(uint128 x, int128 y) internal pure returns (uint128 z) {\n        if (y < 0) {\n            require((z = x - uint128(-y)) < x, \"LS\");\n        } else {\n            require((z = x + uint128(y)) >= x, \"LA\");\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(MAX_TICK), \"T\");\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, \"R\");\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"
			},
			"contracts/core/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport \"../interfaces/IERC20Minimal.sol\";\n\n/// @title TransferHelper\n/// @notice Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false\nlibrary TransferHelper {\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Calls transfer on token contract, errors with TF if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(address token, address to, uint256 value) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20Minimal.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TF\");\n    }\n}\n"
			},
			"contracts/core/libraries/FixedPoint128.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.4.0;\n\n/// @title FixedPoint128\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\nlibrary FixedPoint128 {\n    uint256 internal constant Q128 = 0x100000000000000000000000000000000;\n}\n"
			},
			"contracts/core/libraries/FullMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.0 <0.8.0;\n\n/// @title Contains 512-bit math functions\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\nlibrary FullMath {\n    /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    function mulDiv(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {\n        // 512-bit multiply [prod1 prod0] = a * b\n        // Compute the product mod 2**256 and mod 2**256 - 1\n        // then use the Chinese Remainder Theorem to reconstruct\n        // the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2**256 + prod0\n        uint256 prod0; // Least significant 256 bits of the product\n        uint256 prod1; // Most significant 256 bits of the product\n        assembly {\n            let mm := mulmod(a, b, not(0))\n            prod0 := mul(a, b)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        // Handle non-overflow cases, 256 by 256 division\n        if (prod1 == 0) {\n            require(denominator > 0);\n            assembly {\n                result := div(prod0, denominator)\n            }\n            return result;\n        }\n\n        // Make sure the result is less than 2**256.\n        // Also prevents denominator == 0\n        require(denominator > prod1);\n\n        ///////////////////////////////////////////////\n        // 512 by 256 division.\n        ///////////////////////////////////////////////\n\n        // Make division exact by subtracting the remainder from [prod1 prod0]\n        // Compute remainder using mulmod\n        uint256 remainder;\n        assembly {\n            remainder := mulmod(a, b, denominator)\n        }\n        // Subtract 256 bit number from 512 bit number\n        assembly {\n            prod1 := sub(prod1, gt(remainder, prod0))\n            prod0 := sub(prod0, remainder)\n        }\n\n        // Factor powers of two out of denominator\n        // Compute largest power of two divisor of denominator.\n        // Always >= 1.\n        uint256 twos = -denominator & denominator;\n        // Divide denominator by power of two\n        assembly {\n            denominator := div(denominator, twos)\n        }\n\n        // Divide [prod1 prod0] by the factors of two\n        assembly {\n            prod0 := div(prod0, twos)\n        }\n        // Shift in bits from prod1 into prod0. For this we need\n        // to flip `twos` such that it is 2**256 / twos.\n        // If twos is zero, then it becomes one\n        assembly {\n            twos := add(div(sub(0, twos), twos), 1)\n        }\n        prod0 |= prod1 * twos;\n\n        // Invert denominator mod 2**256\n        // Now that denominator is an odd number, it has an inverse\n        // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n        // Compute the inverse by starting with a seed that is correct\n        // correct for four bits. That is, denominator * inv = 1 mod 2**4\n        uint256 inv = (3 * denominator) ^ 2;\n        // Now use Newton-Raphson iteration to improve the precision.\n        // Thanks to Hensel's lifting lemma, this also works in modular\n        // arithmetic, doubling the correct bits in each step.\n        inv *= 2 - denominator * inv; // inverse mod 2**8\n        inv *= 2 - denominator * inv; // inverse mod 2**16\n        inv *= 2 - denominator * inv; // inverse mod 2**32\n        inv *= 2 - denominator * inv; // inverse mod 2**64\n        inv *= 2 - denominator * inv; // inverse mod 2**128\n        inv *= 2 - denominator * inv; // inverse mod 2**256\n\n        // Because the division is now exact we can divide by multiplying\n        // with the modular inverse of denominator. This will give us the\n        // correct result modulo 2**256. Since the precoditions guarantee\n        // that the outcome is less than 2**256, this is the final result.\n        // We don't need to compute the high bits of the result and prod1\n        // is no longer required.\n        result = prod0 * inv;\n        return result;\n    }\n\n    /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    function mulDivRoundingUp(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {\n        result = mulDiv(a, b, denominator);\n        if (mulmod(a, b, denominator) > 0) {\n            require(result < type(uint256).max);\n            result++;\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/Oracle.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\n/// @title Oracle\n/// @notice Provides price and liquidity data useful for a wide variety of system designs\n/// @dev Instances of stored oracle data, \"observations\", are collected in the oracle array\n/// Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the\n/// maximum length of the oracle array. New slots will be added when the array is fully populated.\n/// Observations are overwritten when the full length of the oracle array is populated.\n/// The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()\nlibrary Oracle {\n    struct Observation {\n        // the block timestamp of the observation\n        uint32 blockTimestamp;\n        // the tick accumulator, i.e. tick * time elapsed since the pool was first initialized\n        int56 tickCumulative;\n        // the seconds per liquidity, i.e. seconds elapsed / max(1, liquidity) since the pool was first initialized\n        uint160 secondsPerLiquidityCumulativeX128;\n        // whether or not the observation is initialized\n        bool initialized;\n    }\n\n    /// @notice Transforms a previous observation into a new observation, given the passage of time and the current tick and liquidity values\n    /// @dev blockTimestamp _must_ be chronologically equal to or greater than last.blockTimestamp, safe for 0 or 1 overflows\n    /// @param last The specified observation to be transformed\n    /// @param blockTimestamp The timestamp of the new observation\n    /// @param tick The active tick at the time of the new observation\n    /// @param liquidity The total in-range liquidity at the time of the new observation\n    /// @return Observation The newly populated observation\n    function transform(Observation memory last, uint32 blockTimestamp, int24 tick, uint128 liquidity)\n        private\n        pure\n        returns (Observation memory)\n    {\n        uint32 delta = blockTimestamp - last.blockTimestamp;\n        return Observation({\n            blockTimestamp: blockTimestamp,\n            tickCumulative: last.tickCumulative + int56(tick) * delta,\n            secondsPerLiquidityCumulativeX128: last.secondsPerLiquidityCumulativeX128\n                + ((uint160(delta) << 128) / (liquidity > 0 ? liquidity : 1)),\n            initialized: true\n        });\n    }\n\n    /// @notice Initialize the oracle array by writing the first slot. Called once for the lifecycle of the observations array\n    /// @param self The stored oracle array\n    /// @param time The time of the oracle initialization, via block.timestamp truncated to uint32\n    /// @return cardinality The number of populated elements in the oracle array\n    /// @return cardinalityNext The new length of the oracle array, independent of population\n    function initialize(Observation[65535] storage self, uint32 time)\n        internal\n        returns (uint16 cardinality, uint16 cardinalityNext)\n    {\n        self[0] = Observation({\n            blockTimestamp: time,\n            tickCumulative: 0,\n            secondsPerLiquidityCumulativeX128: 0,\n            initialized: true\n        });\n        return (1, 1);\n    }\n\n    /// @notice Writes an oracle observation to the array\n    /// @dev Writable at most once per block. Index represents the most recently written element. cardinality and index must be tracked externally.\n    /// If the index is at the end of the allowable array length (according to cardinality), and the next cardinality\n    /// is greater than the current one, cardinality may be increased. This restriction is created to preserve ordering.\n    /// @param self The stored oracle array\n    /// @param index The index of the observation that was most recently written to the observations array\n    /// @param blockTimestamp The timestamp of the new observation\n    /// @param tick The active tick at the time of the new observation\n    /// @param liquidity The total in-range liquidity at the time of the new observation\n    /// @param cardinality The number of populated elements in the oracle array\n    /// @param cardinalityNext The new length of the oracle array, independent of population\n    /// @return indexUpdated The new index of the most recently written element in the oracle array\n    /// @return cardinalityUpdated The new cardinality of the oracle array\n    function write(\n        Observation[65535] storage self,\n        uint16 index,\n        uint32 blockTimestamp,\n        int24 tick,\n        uint128 liquidity,\n        uint16 cardinality,\n        uint16 cardinalityNext\n    ) internal returns (uint16 indexUpdated, uint16 cardinalityUpdated) {\n        Observation memory last = self[index];\n\n        // early return if we've already written an observation this block\n        if (last.blockTimestamp == blockTimestamp) return (index, cardinality);\n\n        // if the conditions are right, we can bump the cardinality\n        if (cardinalityNext > cardinality && index == (cardinality - 1)) {\n            cardinalityUpdated = cardinalityNext;\n        } else {\n            cardinalityUpdated = cardinality;\n        }\n\n        indexUpdated = (index + 1) % cardinalityUpdated;\n        self[indexUpdated] = transform(last, blockTimestamp, tick, liquidity);\n    }\n\n    /// @notice Prepares the oracle array to store up to `next` observations\n    /// @param self The stored oracle array\n    /// @param current The current next cardinality of the oracle array\n    /// @param next The proposed next cardinality which will be populated in the oracle array\n    /// @return next The next cardinality which will be populated in the oracle array\n    function grow(Observation[65535] storage self, uint16 current, uint16 next) internal returns (uint16) {\n        require(current > 0, \"I\");\n        // no-op if the passed next value isn't greater than the current next value\n        if (next <= current) return current;\n        // store in each slot to prevent fresh SSTOREs in swaps\n        // this data will not be used because the initialized boolean is still false\n        for (uint16 i = current; i < next; i++) {\n            self[i].blockTimestamp = 1;\n        }\n        return next;\n    }\n\n    /// @notice comparator for 32-bit timestamps\n    /// @dev safe for 0 or 1 overflows, a and b _must_ be chronologically before or equal to time\n    /// @param time A timestamp truncated to 32 bits\n    /// @param a A comparison timestamp from which to determine the relative position of `time`\n    /// @param b From which to determine the relative position of `time`\n    /// @return bool Whether `a` is chronologically <= `b`\n    function lte(uint32 time, uint32 a, uint32 b) private pure returns (bool) {\n        // if there hasn't been overflow, no need to adjust\n        if (a <= time && b <= time) return a <= b;\n\n        uint256 aAdjusted = a > time ? a : a + 2 ** 32;\n        uint256 bAdjusted = b > time ? b : b + 2 ** 32;\n\n        return aAdjusted <= bAdjusted;\n    }\n\n    /// @notice Fetches the observations beforeOrAt and atOrAfter a target, i.e. where [beforeOrAt, atOrAfter] is satisfied.\n    /// The result may be the same observation, or adjacent observations.\n    /// @dev The answer must be contained in the array, used when the target is located within the stored observation\n    /// boundaries: older than the most recent observation and younger, or the same age as, the oldest observation\n    /// @param self The stored oracle array\n    /// @param time The current block.timestamp\n    /// @param target The timestamp at which the reserved observation should be for\n    /// @param index The index of the observation that was most recently written to the observations array\n    /// @param cardinality The number of populated elements in the oracle array\n    /// @return beforeOrAt The observation recorded before, or at, the target\n    /// @return atOrAfter The observation recorded at, or after, the target\n    function binarySearch(Observation[65535] storage self, uint32 time, uint32 target, uint16 index, uint16 cardinality)\n        private\n        view\n        returns (Observation memory beforeOrAt, Observation memory atOrAfter)\n    {\n        uint256 l = (index + 1) % cardinality; // oldest observation\n        uint256 r = l + cardinality - 1; // newest observation\n        uint256 i;\n        while (true) {\n            i = (l + r) / 2;\n\n            beforeOrAt = self[i % cardinality];\n\n            // we've landed on an uninitialized tick, keep searching higher (more recently)\n            if (!beforeOrAt.initialized) {\n                l = i + 1;\n                continue;\n            }\n\n            atOrAfter = self[(i + 1) % cardinality];\n\n            bool targetAtOrAfter = lte(time, beforeOrAt.blockTimestamp, target);\n\n            // check if we've found the answer!\n            if (targetAtOrAfter && lte(time, target, atOrAfter.blockTimestamp)) break;\n\n            if (!targetAtOrAfter) r = i - 1;\n            else l = i + 1;\n        }\n    }\n\n    /// @notice Fetches the observations beforeOrAt and atOrAfter a given target, i.e. where [beforeOrAt, atOrAfter] is satisfied\n    /// @dev Assumes there is at least 1 initialized observation.\n    /// Used by observeSingle() to compute the counterfactual accumulator values as of a given block timestamp.\n    /// @param self The stored oracle array\n    /// @param time The current block.timestamp\n    /// @param target The timestamp at which the reserved observation should be for\n    /// @param tick The active tick at the time of the returned or simulated observation\n    /// @param index The index of the observation that was most recently written to the observations array\n    /// @param liquidity The total pool liquidity at the time of the call\n    /// @param cardinality The number of populated elements in the oracle array\n    /// @return beforeOrAt The observation which occurred at, or before, the given timestamp\n    /// @return atOrAfter The observation which occurred at, or after, the given timestamp\n    function getSurroundingObservations(\n        Observation[65535] storage self,\n        uint32 time,\n        uint32 target,\n        int24 tick,\n        uint16 index,\n        uint128 liquidity,\n        uint16 cardinality\n    ) private view returns (Observation memory beforeOrAt, Observation memory atOrAfter) {\n        // optimistically set before to the newest observation\n        beforeOrAt = self[index];\n\n        // if the target is chronologically at or after the newest observation, we can early return\n        if (lte(time, beforeOrAt.blockTimestamp, target)) {\n            if (beforeOrAt.blockTimestamp == target) {\n                // if newest observation equals target, we're in the same block, so we can ignore atOrAfter\n                return (beforeOrAt, atOrAfter);\n            } else {\n                // otherwise, we need to transform\n                return (beforeOrAt, transform(beforeOrAt, target, tick, liquidity));\n            }\n        }\n\n        // now, set before to the oldest observation\n        beforeOrAt = self[(index + 1) % cardinality];\n        if (!beforeOrAt.initialized) beforeOrAt = self[0];\n\n        // ensure that the target is chronologically at or after the oldest observation\n        require(lte(time, beforeOrAt.blockTimestamp, target), \"OLD\");\n\n        // if we've reached this point, we have to binary search\n        return binarySearch(self, time, target, index, cardinality);\n    }\n\n    /// @dev Reverts if an observation at or before the desired observation timestamp does not exist.\n    /// 0 may be passed as `secondsAgo' to return the current cumulative values.\n    /// If called with a timestamp falling between two observations, returns the counterfactual accumulator values\n    /// at exactly the timestamp between the two observations.\n    /// @param self The stored oracle array\n    /// @param time The current block timestamp\n    /// @param secondsAgo The amount of time to look back, in seconds, at which point to return an observation\n    /// @param tick The current tick\n    /// @param index The index of the observation that was most recently written to the observations array\n    /// @param liquidity The current in-range pool liquidity\n    /// @param cardinality The number of populated elements in the oracle array\n    /// @return tickCumulative The tick * time elapsed since the pool was first initialized, as of `secondsAgo`\n    /// @return secondsPerLiquidityCumulativeX128 The time elapsed / max(1, liquidity) since the pool was first initialized, as of `secondsAgo`\n    function observeSingle(\n        Observation[65535] storage self,\n        uint32 time,\n        uint32 secondsAgo,\n        int24 tick,\n        uint16 index,\n        uint128 liquidity,\n        uint16 cardinality\n    ) internal view returns (int56 tickCumulative, uint160 secondsPerLiquidityCumulativeX128) {\n        if (secondsAgo == 0) {\n            Observation memory last = self[index];\n            if (last.blockTimestamp != time) last = transform(last, time, tick, liquidity);\n            return (last.tickCumulative, last.secondsPerLiquidityCumulativeX128);\n        }\n\n        uint32 target = time - secondsAgo;\n\n        (Observation memory beforeOrAt, Observation memory atOrAfter) =\n            getSurroundingObservations(self, time, target, tick, index, liquidity, cardinality);\n\n        if (target == beforeOrAt.blockTimestamp) {\n            // we're at the left boundary\n            return (beforeOrAt.tickCumulative, beforeOrAt.secondsPerLiquidityCumulativeX128);\n        } else if (target == atOrAfter.blockTimestamp) {\n            // we're at the right boundary\n            return (atOrAfter.tickCumulative, atOrAfter.secondsPerLiquidityCumulativeX128);\n        } else {\n            // we're in the middle\n            uint32 observationTimeDelta = atOrAfter.blockTimestamp - beforeOrAt.blockTimestamp;\n            uint32 targetDelta = target - beforeOrAt.blockTimestamp;\n            return (\n                beforeOrAt.tickCumulative\n                    + ((atOrAfter.tickCumulative - beforeOrAt.tickCumulative) / observationTimeDelta) * targetDelta,\n                beforeOrAt.secondsPerLiquidityCumulativeX128\n                    + uint160(\n                        (\n                            uint256(\n                                atOrAfter.secondsPerLiquidityCumulativeX128 - beforeOrAt.secondsPerLiquidityCumulativeX128\n                            ) * targetDelta\n                        ) / observationTimeDelta\n                    )\n            );\n        }\n    }\n\n    /// @notice Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`\n    /// @dev Reverts if `secondsAgos` > oldest observation\n    /// @param self The stored oracle array\n    /// @param time The current block.timestamp\n    /// @param secondsAgos Each amount of time to look back, in seconds, at which point to return an observation\n    /// @param tick The current tick\n    /// @param index The index of the observation that was most recently written to the observations array\n    /// @param liquidity The current in-range pool liquidity\n    /// @param cardinality The number of populated elements in the oracle array\n    /// @return tickCumulatives The tick * time elapsed since the pool was first initialized, as of each `secondsAgo`\n    /// @return secondsPerLiquidityCumulativeX128s The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of each `secondsAgo`\n    function observe(\n        Observation[65535] storage self,\n        uint32 time,\n        uint32[] memory secondsAgos,\n        int24 tick,\n        uint16 index,\n        uint128 liquidity,\n        uint16 cardinality\n    ) internal view returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s) {\n        require(cardinality > 0, \"I\");\n\n        tickCumulatives = new int56[](secondsAgos.length);\n        secondsPerLiquidityCumulativeX128s = new uint160[](secondsAgos.length);\n        for (uint256 i = 0; i < secondsAgos.length; i++) {\n            (tickCumulatives[i], secondsPerLiquidityCumulativeX128s[i]) =\n                observeSingle(self, time, secondsAgos[i], tick, index, liquidity, cardinality);\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/Position.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\nimport \"./FullMath.sol\";\nimport \"./FixedPoint128.sol\";\nimport \"./LiquidityMath.sol\";\n\n/// @title Position\n/// @notice Positions represent an owner address' liquidity between a lower and upper tick boundary\n/// @dev Positions store additional state for tracking fees owed to the position\nlibrary Position {\n    // info stored for each user's position\n    struct Info {\n        // the amount of liquidity owned by this position\n        uint128 liquidity;\n        // fee growth per unit of liquidity as of the last update to liquidity or fees owed\n        uint256 feeGrowthInside0LastX128;\n        uint256 feeGrowthInside1LastX128;\n        // the fees owed to the position owner in token0/token1\n        uint128 tokensOwed0;\n        uint128 tokensOwed1;\n    }\n\n    /// @notice Returns the Info struct of a position, given an owner and position boundaries\n    /// @param self The mapping containing all user positions\n    /// @param owner The address of the position owner\n    /// @param tickLower The lower tick boundary of the position\n    /// @param tickUpper The upper tick boundary of the position\n    /// @return position The position info struct of the given owners' position\n    function get(mapping(bytes32 => Info) storage self, address owner, int24 tickLower, int24 tickUpper)\n        internal\n        view\n        returns (Position.Info storage position)\n    {\n        position = self[keccak256(abi.encodePacked(owner, tickLower, tickUpper))];\n    }\n\n    /// @notice Credits accumulated fees to a user's position\n    /// @param self The individual position to update\n    /// @param liquidityDelta The change in pool liquidity as a result of the position update\n    /// @param feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n    /// @param feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries\n    /// @param staked Signifies if the position is staked in the gauge or not\n    function update(\n        Info storage self,\n        int128 liquidityDelta,\n        uint256 feeGrowthInside0X128,\n        uint256 feeGrowthInside1X128,\n        bool staked\n    ) internal {\n        Info memory _self = self;\n\n        uint128 liquidityNext;\n        if (liquidityDelta == 0) {\n            require(_self.liquidity > 0, \"NP\"); // disallow pokes for 0 liquidity positions\n            liquidityNext = _self.liquidity;\n        } else {\n            liquidityNext = LiquidityMath.addDelta(_self.liquidity, liquidityDelta);\n        }\n\n        uint128 tokensOwed0;\n        uint128 tokensOwed1;\n        if (!staked) {\n            // calculate accumulated fees\n            tokensOwed0 = uint128(\n                FullMath.mulDiv(\n                    feeGrowthInside0X128 - _self.feeGrowthInside0LastX128, _self.liquidity, FixedPoint128.Q128\n                )\n            );\n            tokensOwed1 = uint128(\n                FullMath.mulDiv(\n                    feeGrowthInside1X128 - _self.feeGrowthInside1LastX128, _self.liquidity, FixedPoint128.Q128\n                )\n            );\n        }\n\n        // update the position\n        if (liquidityDelta != 0) self.liquidity = liquidityNext;\n        self.feeGrowthInside0LastX128 = feeGrowthInside0X128;\n        self.feeGrowthInside1LastX128 = feeGrowthInside1X128;\n        if (tokensOwed0 > 0 || tokensOwed1 > 0) {\n            // overflow is acceptable, have to withdraw before you hit type(uint128).max fees\n            self.tokensOwed0 += tokensOwed0;\n            self.tokensOwed1 += tokensOwed1;\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/TickBitmap.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport \"./BitMath.sol\";\n\n/// @title Packed tick initialized state library\n/// @notice Stores a packed mapping of tick index to its initialized state\n/// @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\nlibrary TickBitmap {\n    /// @notice Computes the position in the mapping where the initialized bit for a tick lives\n    /// @param tick The tick for which to compute the position\n    /// @return wordPos The key in the mapping containing the word in which the bit is stored\n    /// @return bitPos The bit position in the word where the flag is stored\n    function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {\n        wordPos = int16(tick >> 8);\n        bitPos = uint8(tick % 256);\n    }\n\n    /// @notice Flips the initialized state for a given tick from false to true, or vice versa\n    /// @param self The mapping in which to flip the tick\n    /// @param tick The tick to flip\n    /// @param tickSpacing The spacing between usable ticks\n    function flipTick(mapping(int16 => uint256) storage self, int24 tick, int24 tickSpacing) internal {\n        require(tick % tickSpacing == 0); // ensure that the tick is spaced\n        (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing);\n        uint256 mask = 1 << bitPos;\n        self[wordPos] ^= mask;\n    }\n\n    /// @notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n    /// to the left (less than or equal to) or right (greater than) of the given tick\n    /// @param self The mapping in which to compute the next initialized tick\n    /// @param tick The starting tick\n    /// @param tickSpacing The spacing between usable ticks\n    /// @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n    /// @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n    /// @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks\n    function nextInitializedTickWithinOneWord(\n        mapping(int16 => uint256) storage self,\n        int24 tick,\n        int24 tickSpacing,\n        bool lte\n    ) internal view returns (int24 next, bool initialized) {\n        int24 compressed = tick / tickSpacing;\n        if (tick < 0 && tick % tickSpacing != 0) compressed--; // round towards negative infinity\n\n        if (lte) {\n            (int16 wordPos, uint8 bitPos) = position(compressed);\n            // all the 1s at or to the right of the current bitPos\n            uint256 mask = (1 << bitPos) - 1 + (1 << bitPos);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the right of or at the current tick, return rightmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed - int24(bitPos - BitMath.mostSignificantBit(masked))) * tickSpacing\n                : (compressed - int24(bitPos)) * tickSpacing;\n        } else {\n            // start from the word of the next tick, since the current tick state doesn't matter\n            (int16 wordPos, uint8 bitPos) = position(compressed + 1);\n            // all the 1s at or to the left of the bitPos\n            uint256 mask = ~((1 << bitPos) - 1);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the left of the current tick, return leftmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed + 1 + int24(BitMath.leastSignificantBit(masked) - bitPos)) * tickSpacing\n                : (compressed + 1 + int24(type(uint8).max - bitPos)) * tickSpacing;\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/Tick.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\nimport \"./LowGasSafeMath.sol\";\nimport \"./SafeCast.sol\";\n\nimport \"./TickMath.sol\";\nimport \"./LiquidityMath.sol\";\n\n/// @title Tick\n/// @notice Contains functions for managing tick processes and relevant calculations\nlibrary Tick {\n    using LowGasSafeMath for int256;\n    using SafeCast for int256;\n\n    // info stored for each initialized individual tick\n    struct Info {\n        // the total position liquidity that references this tick\n        // includes both staked and unstaked liquidity\n        uint128 liquidityGross;\n        // amount of net liquidity added (subtracted) when tick is crossed from left to right (right to left)\n        // includes both staked and unstaked liquidity\n        int128 liquidityNet;\n        // amount of net staked liquidity added (subtracted) when tick is crossed from left to right (right to left)\n        int128 stakedLiquidityNet;\n        // fee growth per unit of liquidity on the _other_ side of this tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint256 feeGrowthOutside0X128;\n        uint256 feeGrowthOutside1X128;\n        // reward growth per unit of liquidity on the _other_ side of this tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint256 rewardGrowthOutsideX128;\n        // the cumulative tick value on the other side of the tick\n        int56 tickCumulativeOutside;\n        // the seconds per unit of liquidity on the _other_ side of this tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint160 secondsPerLiquidityOutsideX128;\n        // the seconds spent on the other side of the tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint32 secondsOutside;\n        // true iff the tick is initialized, i.e. the value is exactly equivalent to the expression liquidityGross != 0\n        // these 8 bits are set to prevent fresh sstores when crossing newly initialized ticks\n        bool initialized;\n    }\n\n    struct LiquidityNets {\n        int128 liquidityNet;\n        int128 stakedLiquidityNet;\n    }\n\n    /// @notice Derives max liquidity per tick from given tick spacing\n    /// @dev Executed within the pool constructor\n    /// @param tickSpacing The amount of required tick separation, realized in multiples of `tickSpacing`\n    ///     e.g., a tickSpacing of 3 requires ticks to be initialized every 3rd tick i.e., ..., -6, -3, 0, 3, 6, ...\n    /// @return The max liquidity per tick\n    function tickSpacingToMaxLiquidityPerTick(int24 tickSpacing) internal pure returns (uint128) {\n        int24 minTick = (TickMath.MIN_TICK / tickSpacing) * tickSpacing;\n        int24 maxTick = (TickMath.MAX_TICK / tickSpacing) * tickSpacing;\n        uint24 numTicks = uint24((maxTick - minTick) / tickSpacing) + 1;\n        return type(uint128).max / numTicks;\n    }\n\n    /// @notice Retrieves fee growth data\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tickLower The lower tick boundary of the position\n    /// @param tickUpper The upper tick boundary of the position\n    /// @param tickCurrent The current tick\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n    /// @return feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n    /// @return feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries\n    function getFeeGrowthInside(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tickLower,\n        int24 tickUpper,\n        int24 tickCurrent,\n        uint256 feeGrowthGlobal0X128,\n        uint256 feeGrowthGlobal1X128\n    ) internal view returns (uint256 feeGrowthInside0X128, uint256 feeGrowthInside1X128) {\n        Info storage lower = self[tickLower];\n        Info storage upper = self[tickUpper];\n\n        // calculate fee growth below\n        uint256 feeGrowthBelow0X128;\n        uint256 feeGrowthBelow1X128;\n        if (tickCurrent >= tickLower) {\n            feeGrowthBelow0X128 = lower.feeGrowthOutside0X128;\n            feeGrowthBelow1X128 = lower.feeGrowthOutside1X128;\n        } else {\n            feeGrowthBelow0X128 = feeGrowthGlobal0X128 - lower.feeGrowthOutside0X128;\n            feeGrowthBelow1X128 = feeGrowthGlobal1X128 - lower.feeGrowthOutside1X128;\n        }\n\n        // calculate fee growth above\n        uint256 feeGrowthAbove0X128;\n        uint256 feeGrowthAbove1X128;\n        if (tickCurrent < tickUpper) {\n            feeGrowthAbove0X128 = upper.feeGrowthOutside0X128;\n            feeGrowthAbove1X128 = upper.feeGrowthOutside1X128;\n        } else {\n            feeGrowthAbove0X128 = feeGrowthGlobal0X128 - upper.feeGrowthOutside0X128;\n            feeGrowthAbove1X128 = feeGrowthGlobal1X128 - upper.feeGrowthOutside1X128;\n        }\n\n        feeGrowthInside0X128 = feeGrowthGlobal0X128 - feeGrowthBelow0X128 - feeGrowthAbove0X128;\n        feeGrowthInside1X128 = feeGrowthGlobal1X128 - feeGrowthBelow1X128 - feeGrowthAbove1X128;\n    }\n\n    function getRewardGrowthInside(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tickLower,\n        int24 tickUpper,\n        int24 tickCurrent,\n        uint256 rewardGrowthGlobalX128\n    ) internal view returns (uint256 rewardGrowthInsideX128) {\n        Info storage lower = self[tickLower];\n        Info storage upper = self[tickUpper];\n\n        // calculate reward growth below\n        uint256 rewardGrowthBelowX128;\n        if (tickCurrent >= tickLower) {\n            rewardGrowthBelowX128 = lower.rewardGrowthOutsideX128;\n        } else {\n            rewardGrowthBelowX128 = rewardGrowthGlobalX128 - lower.rewardGrowthOutsideX128;\n        }\n\n        // calculate reward growth above\n        uint256 rewardGrowthAboveX128;\n        if (tickCurrent < tickUpper) {\n            rewardGrowthAboveX128 = upper.rewardGrowthOutsideX128;\n        } else {\n            rewardGrowthAboveX128 = rewardGrowthGlobalX128 - upper.rewardGrowthOutsideX128;\n        }\n\n        rewardGrowthInsideX128 = rewardGrowthGlobalX128 - rewardGrowthBelowX128 - rewardGrowthAboveX128;\n    }\n\n    /// @notice Updates a tick and returns true if the tick was flipped from initialized to uninitialized, or vice versa\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tick The tick that will be updated\n    /// @param tickCurrent The current tick\n    /// @param liquidityDelta A new amount of liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n    /// @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n    /// @param secondsPerLiquidityCumulativeX128 The all-time seconds per max(1, liquidity) of the pool\n    /// @param tickCumulative The tick * time elapsed since the pool was first initialized\n    /// @param time The current block timestamp cast to a uint32\n    /// @param upper true for updating a position's upper tick, or false for updating a position's lower tick\n    /// @param maxLiquidity The maximum liquidity allocation for a single tick\n    /// @return flipped Whether the tick was flipped from initialized to uninitialized, or vice versa\n    function update(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tick,\n        int24 tickCurrent,\n        int128 liquidityDelta,\n        uint256 feeGrowthGlobal0X128,\n        uint256 feeGrowthGlobal1X128,\n        uint256 rewardGrowthGlobalX128,\n        uint160 secondsPerLiquidityCumulativeX128,\n        int56 tickCumulative,\n        uint32 time,\n        bool upper,\n        uint128 maxLiquidity\n    ) internal returns (bool flipped) {\n        Tick.Info storage info = self[tick];\n\n        uint128 liquidityGrossBefore = info.liquidityGross;\n        uint128 liquidityGrossAfter = LiquidityMath.addDelta(liquidityGrossBefore, liquidityDelta);\n\n        require(liquidityGrossAfter <= maxLiquidity, \"LO\");\n\n        flipped = (liquidityGrossAfter == 0) != (liquidityGrossBefore == 0);\n\n        if (liquidityGrossBefore == 0) {\n            // by convention, we assume that all growth before a tick was initialized happened _below_ the tick\n            if (tick <= tickCurrent) {\n                info.feeGrowthOutside0X128 = feeGrowthGlobal0X128;\n                info.feeGrowthOutside1X128 = feeGrowthGlobal1X128;\n                info.rewardGrowthOutsideX128 = rewardGrowthGlobalX128;\n                info.secondsPerLiquidityOutsideX128 = secondsPerLiquidityCumulativeX128;\n                info.tickCumulativeOutside = tickCumulative;\n                info.secondsOutside = time;\n            }\n            info.initialized = true;\n        }\n\n        info.liquidityGross = liquidityGrossAfter;\n\n        // when the lower (upper) tick is crossed left to right (right to left), liquidity must be added (removed)\n        info.liquidityNet = upper\n            ? int256(info.liquidityNet).sub(liquidityDelta).toInt128()\n            : int256(info.liquidityNet).add(liquidityDelta).toInt128();\n    }\n\n    /// @notice Updates the staked liquidity component of a tick. Assumes tick is already initialized with an existing position.\n    /// @notice We reuse existing liquidity for staking, so there is no change in liquidity\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tick The tick that will be updated\n    /// @param stakedLiquidityDelta The amount of staked liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n    /// @param upper true for updating a position's upper tick, or false for updating a position's lower tick\n    function updateStake(mapping(int24 => Tick.Info) storage self, int24 tick, int128 stakedLiquidityDelta, bool upper)\n        internal\n    {\n        Tick.Info storage info = self[tick];\n        // when the lower (upper) tick is crossed left to right (right to left), staked liquidity must be added (removed)\n        info.stakedLiquidityNet = upper\n            ? int256(info.stakedLiquidityNet).sub(stakedLiquidityDelta).toInt128()\n            : int256(info.stakedLiquidityNet).add(stakedLiquidityDelta).toInt128();\n    }\n\n    /// @notice Clears tick data\n    /// @param self The mapping containing all initialized tick information for initialized ticks\n    /// @param tick The tick that will be cleared\n    function clear(mapping(int24 => Tick.Info) storage self, int24 tick) internal {\n        delete self[tick];\n    }\n\n    /// @notice Transitions to next tick as needed by price movement\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tick The destination tick of the transition\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n    /// @param secondsPerLiquidityCumulativeX128 The current seconds per liquidity\n    /// @param tickCumulative The tick * time elapsed since the pool was first initialized\n    /// @param time The current block.timestamp\n    /// @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n    /// @return nets The amount of liquidity and staked liquidity added (subtracted) when tick is crossed from left to right (right to left)\n    function cross(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tick,\n        uint256 feeGrowthGlobal0X128,\n        uint256 feeGrowthGlobal1X128,\n        uint160 secondsPerLiquidityCumulativeX128,\n        int56 tickCumulative,\n        uint32 time,\n        uint256 rewardGrowthGlobalX128\n    ) internal returns (LiquidityNets memory nets) {\n        Tick.Info storage info = self[tick];\n        info.feeGrowthOutside0X128 = feeGrowthGlobal0X128 - info.feeGrowthOutside0X128;\n        info.feeGrowthOutside1X128 = feeGrowthGlobal1X128 - info.feeGrowthOutside1X128;\n        info.rewardGrowthOutsideX128 = rewardGrowthGlobalX128 - info.rewardGrowthOutsideX128;\n        info.secondsPerLiquidityOutsideX128 = secondsPerLiquidityCumulativeX128 - info.secondsPerLiquidityOutsideX128;\n        info.tickCumulativeOutside = tickCumulative - info.tickCumulativeOutside;\n        info.secondsOutside = time - info.secondsOutside;\n        nets.liquidityNet = info.liquidityNet;\n        nets.stakedLiquidityNet = info.stakedLiquidityNet;\n    }\n}\n"
			},
			"contracts/core/libraries/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Safe casting methods\n/// @notice Contains methods for safely casting between types\nlibrary SafeCast {\n    /// @notice Cast a uint256 to a uint160, revert on overflow\n    /// @param y The uint256 to be downcasted\n    /// @return z The downcasted integer, now type uint160\n    function toUint160(uint256 y) internal pure returns (uint160 z) {\n        require((z = uint160(y)) == y);\n    }\n\n    /// @notice Cast a int256 to a int128, revert on overflow or underflow\n    /// @param y The int256 to be downcasted\n    /// @return z The downcasted integer, now type int128\n    function toInt128(int256 y) internal pure returns (int128 z) {\n        require((z = int128(y)) == y);\n    }\n\n    /// @notice Cast a uint256 to a int256, revert on overflow\n    /// @param y The uint256 to be casted\n    /// @return z The casted integer, now type int256\n    function toInt256(uint256 y) internal pure returns (int256 z) {\n        require(y < 2 ** 255);\n        z = int256(y);\n    }\n}\n"
			},
			"contracts/core/libraries/LowGasSafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.0;\n\n/// @title Optimized overflow and underflow safe math operations\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\nlibrary LowGasSafeMath {\n    /// @notice Returns x + y, reverts if sum overflows uint256\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x);\n    }\n\n    /// @notice Returns x - y, reverts if underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x);\n    }\n\n    /// @notice Returns x * y, reverts if overflows\n    /// @param x The multiplicand\n    /// @param y The multiplier\n    /// @return z The product of x and y\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(x == 0 || (z = x * y) / x == y);\n    }\n\n    /// @notice Returns x + y, reverts if overflows or underflows\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x + y) >= x == (y >= 0));\n    }\n\n    /// @notice Returns x - y, reverts if overflows or underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x - y) <= x == (y >= 0));\n    }\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface ICLPoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (int56 tickCumulativeInside, uint160 secondsPerLiquidityInsideX128, uint32 secondsInside);\n}\n"
			},
			"contracts/core/interfaces/IERC20Minimal.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Minimal ERC20 interface for CL\n/// @notice Contains a subset of the full ERC20 interface that is used in CL\ninterface IERC20Minimal {\n    /// @notice Returns the balance of a token\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\n    /// @return The number of tokens held by the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\n    /// @param recipient The account that will receive the amount transferred\n    /// @param amount The number of tokens to send from the sender to the recipient\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /// @notice Returns the current allowance given to a spender by an owner\n    /// @param owner The account of the token owner\n    /// @param spender The account of the token spender\n    /// @return The current allowance granted by `owner` to `spender`\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\n    /// @param amount The amount of tokens allowed to be used by `spender`\n    /// @return Returns true for a successful approval, false for unsuccessful\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n    /// @param sender The account from which the transfer will be initiated\n    /// @param recipient The recipient of the transfer\n    /// @param amount The amount of the transfer\n    /// @return Returns true for a successful transfer, false for unsuccessful\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\n    /// @param value The amount of tokens that were transferred\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n    /// @param owner The account that approved spending of its tokens\n    /// @param spender The account for which the spending allowance was modified\n    /// @param value The new allowance from the owner to the spender\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/core/libraries/BitMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title BitMath\n/// @dev This library provides functionality for computing bit properties of an unsigned integer\nlibrary BitMath {\n    /// @notice Returns the index of the most significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n    /// @param x the value for which to compute the most significant bit, must be greater than 0\n    /// @return r the index of the most significant bit\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        if (x >= 0x100000000000000000000000000000000) {\n            x >>= 128;\n            r += 128;\n        }\n        if (x >= 0x10000000000000000) {\n            x >>= 64;\n            r += 64;\n        }\n        if (x >= 0x100000000) {\n            x >>= 32;\n            r += 32;\n        }\n        if (x >= 0x10000) {\n            x >>= 16;\n            r += 16;\n        }\n        if (x >= 0x100) {\n            x >>= 8;\n            r += 8;\n        }\n        if (x >= 0x10) {\n            x >>= 4;\n            r += 4;\n        }\n        if (x >= 0x4) {\n            x >>= 2;\n            r += 2;\n        }\n        if (x >= 0x2) r += 1;\n    }\n\n    /// @notice Returns the index of the least significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n    /// @param x the value for which to compute the least significant bit, must be greater than 0\n    /// @return r the index of the least significant bit\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        r = 255;\n        if (x & type(uint128).max > 0) {\n            r -= 128;\n        } else {\n            x >>= 128;\n        }\n        if (x & type(uint64).max > 0) {\n            r -= 64;\n        } else {\n            x >>= 64;\n        }\n        if (x & type(uint32).max > 0) {\n            r -= 32;\n        } else {\n            x >>= 32;\n        }\n        if (x & type(uint16).max > 0) {\n            r -= 16;\n        } else {\n            x >>= 16;\n        }\n        if (x & type(uint8).max > 0) {\n            r -= 8;\n        } else {\n            x >>= 8;\n        }\n        if (x & 0xf > 0) {\n            r -= 4;\n        } else {\n            x >>= 4;\n        }\n        if (x & 0x3 > 0) {\n            r -= 2;\n        } else {\n            x >>= 2;\n        }\n        if (x & 0x1 > 0) r -= 1;\n    }\n}\n"
			},
			"contracts/core/libraries/FixedPoint96.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.4.0;\n\n/// @title FixedPoint96\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n/// @dev Used in SqrtPriceMath.sol\nlibrary FixedPoint96 {\n    uint8 internal constant RESOLUTION = 96;\n    uint256 internal constant Q96 = 0x1000000000000000000000000;\n}\n"
			},
			"contracts/core/libraries/UnsafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math functions that do not check inputs or outputs\n/// @notice Contains methods that perform common math functions but do not do any overflow or underflow checks\nlibrary UnsafeMath {\n    /// @notice Returns ceil(x / y)\n    /// @dev division by 0 has unspecified behavior, and must be checked externally\n    /// @param x The dividend\n    /// @param y The divisor\n    /// @return z The quotient, ceil(x / y)\n    function divRoundingUp(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        assembly {\n            z := add(div(x, y), gt(mod(x, y), 0))\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/core/VeloOracle.sol": {
				"VeloOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "GetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "V3Pool",
							"outputs": [
								{
									"internalType": "contract ICLPoolDerivedState",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/VeloOracle.sol\":636:672  uint32[] private secondsAgos = [0,1] */\n  0xc0\n    /* \"contracts/core/VeloOracle.sol\":573:1355  contract VeloOracle {\r... */\n  0x40\n    /* \"contracts/core/VeloOracle.sol\":636:672  uint32[] private secondsAgos = [0,1] */\n  mstore\n  0x00\n    /* \"contracts/core/VeloOracle.sol\":573:1355  contract VeloOracle {\r... */\n  0x80\n    /* \"contracts/core/VeloOracle.sol\":636:672  uint32[] private secondsAgos = [0,1] */\n  swap1\n  dup2\n  mstore\n    /* \"contracts/core/VeloOracle.sol\":670:671  1 */\n  0x01\n    /* \"contracts/core/VeloOracle.sol\":636:672  uint32[] private secondsAgos = [0,1] */\n  0xa0\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  0x02\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/core/VeloOracle.sol\":573:1355  contract VeloOracle {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  jump(tag_4)\ntag_2:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x07\n  add\n  0x08\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_5\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\n  0x00\ntag_6:\n  dup4\n  dup3\n  gt\n  iszero\n  tag_7\n  jumpi\n  dup4\n  mload\n  dup4\n  dup3\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap3\n  0x20\n  add\n  swap3\n  0x04\n  add\n  0x20\n  dup2\n  0x03\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_6)\ntag_7:\n  dup1\n  iszero\n  tag_8\n  jumpi\n  dup3\n  dup2\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  sstore\n  0x04\n  add\n  0x20\n  dup2\n  0x03\n  add\n  div\n  swap3\n  dup4\n  add\n  swap3\n  0x01\n  sub\n  mul\n  jump(tag_7)\ntag_8:\n  pop\ntag_5:\n  pop\n  tag_9\n  swap3\n  swap2\n  pop\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n  swap1\n  jump\t// out\ntag_10:\ntag_11:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_9\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_11)\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/VeloOracle.sol\":573:1355  contract VeloOracle {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x11ea5441\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf29d0040\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/core/VeloOracle.sol\":598:631  ICLPoolDerivedState public V3Pool */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/core/VeloOracle.sol\":681:1352  function GetPrice(address pool) public view returns (uint price) {\r... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_9\n      jump\t// in\n    tag_7:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/core/VeloOracle.sol\":598:631  ICLPoolDerivedState public V3Pool */\n    tag_6:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"contracts/core/VeloOracle.sol\":681:1352  function GetPrice(address pool) public view returns (uint price) {\r... */\n    tag_9:\n        /* \"contracts/core/VeloOracle.sol\":734:744  uint price */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":757:767  uint price */\n      dup1\n        /* \"contracts/core/VeloOracle.sol\":787:817  int56[] memory tickCumulatives */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":842:846  pool */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/VeloOracle.sol\":822:855  ICLPoolDerivedState(pool).observe */\n      and\n      0x883bdbfd\n        /* \"contracts/core/VeloOracle.sol\":856:867  secondsAgos */\n      0x01\n        /* \"contracts/core/VeloOracle.sol\":822:868  ICLPoolDerivedState(pool).observe(secondsAgos) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      sload\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x00\n      swap1\n    tag_12:\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x04\n      add\n      swap1\n      0x20\n      dup3\n      0x03\n      add\n      div\n      swap3\n      dup4\n      add\n      swap3\n      0x01\n      sub\n      dup3\n      mul\n      swap2\n      pop\n      dup1\n      dup5\n      gt\n      tag_12\n      jumpi\n      swap1\n      pop\n    tag_11:\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_15\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_15:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      swap1\n      dup2\n      mstore\n      dup2\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      swap1\n      dup4\n      add\n      swap1\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup3\n      mload\n      dup7\n      0x20\n      dup3\n      mul\n      dup4\n      add\n      gt\n      0x0100000000\n      dup3\n      gt\n      or\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup3\n      mstore\n      pop\n      dup2\n      mload\n      0x20\n      swap2\n      dup3\n      add\n      swap3\n      dup3\n      add\n      swap2\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_20:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_20)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      0x20\n      add\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      swap1\n      dup4\n      add\n      swap1\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup3\n      mload\n      dup7\n      0x20\n      dup3\n      mul\n      dup4\n      add\n      gt\n      0x0100000000\n      dup3\n      gt\n      or\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup3\n      mstore\n      pop\n      dup2\n      mload\n      0x20\n      swap2\n      dup3\n      add\n      swap3\n      dup3\n      add\n      swap2\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_26:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_28\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_26)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":786:868  (int56[] memory tickCumulatives,) = ICLPoolDerivedState(pool).observe(secondsAgos) */\n      pop\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":879:890  int56 ticka */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":893:908  tickCumulatives */\n      dup2\n        /* \"contracts/core/VeloOracle.sol\":909:910  0 */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":893:911  tickCumulatives[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/core/VeloOracle.sol\":879:911  int56 ticka = tickCumulatives[0] */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":922:933  int56 tickb */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":936:951  tickCumulatives */\n      dup3\n        /* \"contracts/core/VeloOracle.sol\":952:953  1 */\n      0x01\n        /* \"contracts/core/VeloOracle.sol\":936:954  tickCumulatives[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/core/VeloOracle.sol\":922:954  int56 tickb = tickCumulatives[1] */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":965:975  int56 tick */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":992:993  1 */\n      0x01\n        /* \"contracts/core/VeloOracle.sol\":985:990  tickb */\n      dup3\n        /* \"contracts/core/VeloOracle.sol\":979:984  ticka */\n      dup5\n        /* \"contracts/core/VeloOracle.sol\":979:990  ticka-tickb */\n      sub\n        /* \"contracts/core/VeloOracle.sol\":978:993  (ticka-tickb)/1 */\n      0x06\n      signextend\n      dup2\n      tag_31\n      jumpi\n      invalid\n    tag_31:\n      sdiv\n      swap1\n      pop\n      dup1\n        /* \"contracts/core/VeloOracle.sol\":1004:1016  int24 tick24 */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":1064:1099  TickMath.getSqrtRatioAtTick(tick24) */\n      tag_32\n        /* \"contracts/core/VeloOracle.sol\":978:993  (ticka-tickb)/1 */\n      dup3\n        /* \"contracts/core/VeloOracle.sol\":1064:1091  TickMath.getSqrtRatioAtTick */\n      tag_33\n        /* \"contracts/core/VeloOracle.sol\":1064:1099  TickMath.getSqrtRatioAtTick(tick24) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/core/VeloOracle.sol\":1041:1099  uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick24) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/VeloOracle.sol\":1122:1143  uint256(sqrtRatioX96) */\n      dup2\n      and\n        /* \"contracts/core/VeloOracle.sol\":1172:1173  2 */\n      0x02\n        /* \"contracts/core/VeloOracle.sol\":1167:1173  a ** 2 */\n      dup2\n      exp\n      shl(0xc0, 0x01)\n        /* \"contracts/core/VeloOracle.sol\":1231:1239  10 ** 14 */\n      0x5af3107a4000\n        /* \"contracts/core/VeloOracle.sol\":1110:1119  uint256 a */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":1263:1285  FullMath.mulDiv(s,r,t) */\n      tag_34\n        /* \"contracts/core/VeloOracle.sol\":1167:1173  a ** 2 */\n      dup5\n        /* \"contracts/core/VeloOracle.sol\":1231:1239  10 ** 14 */\n      dup4\n        /* \"contracts/core/VeloOracle.sol\":1198:1206  2 ** 192 */\n      dup6\n        /* \"contracts/core/VeloOracle.sol\":1263:1278  FullMath.mulDiv */\n      tag_35\n        /* \"contracts/core/VeloOracle.sol\":1263:1285  FullMath.mulDiv(s,r,t) */\n      jump\t// in\n    tag_34:\n        /* \"contracts/core/VeloOracle.sol\":1305:1310  d * r */\n      swap1\n      swap2\n      mul\n        /* \"contracts/core/VeloOracle.sol\":1313:1320  10 ** 2 */\n      0x64\n        /* \"contracts/core/VeloOracle.sol\":1304:1321  (d * r)*(10 ** 2) */\n      mul\n      swap14\n        /* \"contracts/core/VeloOracle.sol\":681:1352  function GetPrice(address pool) public view returns (uint price) {\r... */\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/libraries/TickMath.sol\":1362:3942  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n    tag_33:\n        /* \"contracts/core/libraries/TickMath.sol\":1425:1445  uint160 sqrtPriceX96 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":1457:1472  uint256 absTick */\n      dup1\n        /* \"contracts/core/libraries/TickMath.sol\":1482:1483  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":1475:1479  tick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":1475:1483  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"contracts/core/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      tag_37\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":1526:1530  tick */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":1519:1531  int256(tick) */\n      0x02\n      signextend\n        /* \"contracts/core/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      jump(tag_38)\n    tag_37:\n        /* \"contracts/core/libraries/TickMath.sol\":1502:1506  tick */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":1495:1507  int256(tick) */\n      0x02\n      signextend\n        /* \"contracts/core/libraries/TickMath.sol\":1494:1507  -int256(tick) */\n      0x00\n      sub\n        /* \"contracts/core/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n    tag_38:\n        /* \"contracts/core/libraries/TickMath.sol\":1457:1532  uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":644:653  -MIN_TICK */\n      0x0d89e8\n        /* \"contracts/core/libraries/TickMath.sol\":1550:1578  absTick <= uint256(MAX_TICK) */\n      dup2\n      gt\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":1542:1584  require(absTick <= uint256(MAX_TICK), \"T\") */\n      tag_39\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x01\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xfa, 0x15)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_39:\n        /* \"contracts/core/libraries/TickMath.sol\":1595:1608  uint256 ratio */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":1621:1624  0x1 */\n      0x01\n        /* \"contracts/core/libraries/TickMath.sol\":1611:1624  absTick & 0x1 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":1611:1704  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      tag_40\n      jumpi\n      shl(0x80, 0x01)\n      jump(tag_41)\n    tag_40:\n        /* \"contracts/core/libraries/TickMath.sol\":1632:1666  0xfffcb933bd6fad37aa2d162d1a594001 */\n      0xfffcb933bd6fad37aa2d162d1a594001\n        /* \"contracts/core/libraries/TickMath.sol\":1611:1704  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n    tag_41:\n        /* \"contracts/core/libraries/TickMath.sol\":1595:1704  uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      0xffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":1728:1731  0x2 */\n      0x02\n        /* \"contracts/core/libraries/TickMath.sol\":1718:1731  absTick & 0x2 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":1718:1736  absTick & 0x2 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":1714:1797  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      tag_42\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":1755:1789  0xfff97272373d413259a46990580e213a */\n      0xfff97272373d413259a46990580e213a\n        /* \"contracts/core/libraries/TickMath.sol\":1747:1789  ratio * 0xfff97272373d413259a46990580e213a */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":1794:1797  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":1746:1797  (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":1714:1797  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n    tag_42:\n        /* \"contracts/core/libraries/TickMath.sol\":1821:1824  0x4 */\n      0x04\n        /* \"contracts/core/libraries/TickMath.sol\":1811:1824  absTick & 0x4 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":1811:1829  absTick & 0x4 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":1807:1890  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      tag_43\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":1848:1882  0xfff2e50f5f656932ef12357cf3c7fdcc */\n      0xfff2e50f5f656932ef12357cf3c7fdcc\n        /* \"contracts/core/libraries/TickMath.sol\":1840:1882  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":1887:1890  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":1839:1890  (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":1807:1890  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n    tag_43:\n        /* \"contracts/core/libraries/TickMath.sol\":1914:1917  0x8 */\n      0x08\n        /* \"contracts/core/libraries/TickMath.sol\":1904:1917  absTick & 0x8 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":1904:1922  absTick & 0x8 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":1900:1983  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      tag_44\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":1941:1975  0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      0xffe5caca7e10e4e61c3624eaa0941cd0\n        /* \"contracts/core/libraries/TickMath.sol\":1933:1975  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":1980:1983  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":1932:1983  (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":1900:1983  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n    tag_44:\n        /* \"contracts/core/libraries/TickMath.sol\":2007:2011  0x10 */\n      0x10\n        /* \"contracts/core/libraries/TickMath.sol\":1997:2011  absTick & 0x10 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":1997:2016  absTick & 0x10 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":1993:2077  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      tag_45\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2035:2069  0xffcb9843d60f6159c9db58835c926644 */\n      0xffcb9843d60f6159c9db58835c926644\n        /* \"contracts/core/libraries/TickMath.sol\":2027:2069  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2074:2077  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2026:2077  (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":1993:2077  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n    tag_45:\n        /* \"contracts/core/libraries/TickMath.sol\":2101:2105  0x20 */\n      0x20\n        /* \"contracts/core/libraries/TickMath.sol\":2091:2105  absTick & 0x20 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2091:2110  absTick & 0x20 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":2087:2171  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      tag_46\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2129:2163  0xff973b41fa98c081472e6896dfb254c0 */\n      0xff973b41fa98c081472e6896dfb254c0\n        /* \"contracts/core/libraries/TickMath.sol\":2121:2163  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2168:2171  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2120:2171  (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2087:2171  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n    tag_46:\n        /* \"contracts/core/libraries/TickMath.sol\":2195:2199  0x40 */\n      0x40\n        /* \"contracts/core/libraries/TickMath.sol\":2185:2199  absTick & 0x40 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2185:2204  absTick & 0x40 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":2181:2265  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      tag_47\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2223:2257  0xff2ea16466c96a3843ec78b326b52861 */\n      0xff2ea16466c96a3843ec78b326b52861\n        /* \"contracts/core/libraries/TickMath.sol\":2215:2257  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2262:2265  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2214:2265  (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2181:2265  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n    tag_47:\n        /* \"contracts/core/libraries/TickMath.sol\":2289:2293  0x80 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2279:2293  absTick & 0x80 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2279:2298  absTick & 0x80 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":2275:2359  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      tag_48\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2317:2351  0xfe5dee046a99a2a811c461f1969c3053 */\n      0xfe5dee046a99a2a811c461f1969c3053\n        /* \"contracts/core/libraries/TickMath.sol\":2309:2351  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2356:2359  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2308:2359  (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2275:2359  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n    tag_48:\n        /* \"contracts/core/libraries/TickMath.sol\":2383:2388  0x100 */\n      0x0100\n        /* \"contracts/core/libraries/TickMath.sol\":2373:2388  absTick & 0x100 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2373:2393  absTick & 0x100 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":2369:2454  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      tag_49\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2412:2446  0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      0xfcbe86c7900a88aedcffc83b479aa3a4\n        /* \"contracts/core/libraries/TickMath.sol\":2404:2446  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2451:2454  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2403:2454  (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2369:2454  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n    tag_49:\n        /* \"contracts/core/libraries/TickMath.sol\":2478:2483  0x200 */\n      0x0200\n        /* \"contracts/core/libraries/TickMath.sol\":2468:2483  absTick & 0x200 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2468:2488  absTick & 0x200 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":2464:2549  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      tag_50\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2507:2541  0xf987a7253ac413176f2b074cf7815e54 */\n      0xf987a7253ac413176f2b074cf7815e54\n        /* \"contracts/core/libraries/TickMath.sol\":2499:2541  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2546:2549  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2498:2549  (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2464:2549  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n    tag_50:\n        /* \"contracts/core/libraries/TickMath.sol\":2573:2578  0x400 */\n      0x0400\n        /* \"contracts/core/libraries/TickMath.sol\":2563:2578  absTick & 0x400 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2563:2583  absTick & 0x400 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":2559:2644  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      tag_51\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2602:2636  0xf3392b0822b70005940c7a398e4b70f3 */\n      0xf3392b0822b70005940c7a398e4b70f3\n        /* \"contracts/core/libraries/TickMath.sol\":2594:2636  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2641:2644  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2593:2644  (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2559:2644  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n    tag_51:\n        /* \"contracts/core/libraries/TickMath.sol\":2668:2673  0x800 */\n      0x0800\n        /* \"contracts/core/libraries/TickMath.sol\":2658:2673  absTick & 0x800 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2658:2678  absTick & 0x800 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":2654:2739  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      tag_52\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2697:2731  0xe7159475a2c29b7443b29c7fa6e889d9 */\n      0xe7159475a2c29b7443b29c7fa6e889d9\n        /* \"contracts/core/libraries/TickMath.sol\":2689:2731  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2736:2739  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2688:2739  (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2654:2739  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n    tag_52:\n        /* \"contracts/core/libraries/TickMath.sol\":2763:2769  0x1000 */\n      0x1000\n        /* \"contracts/core/libraries/TickMath.sol\":2753:2769  absTick & 0x1000 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2753:2774  absTick & 0x1000 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":2749:2835  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      tag_53\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2793:2827  0xd097f3bdfd2022b8845ad8f792aa5825 */\n      0xd097f3bdfd2022b8845ad8f792aa5825\n        /* \"contracts/core/libraries/TickMath.sol\":2785:2827  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2832:2835  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2784:2835  (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2749:2835  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n    tag_53:\n        /* \"contracts/core/libraries/TickMath.sol\":2859:2865  0x2000 */\n      0x2000\n        /* \"contracts/core/libraries/TickMath.sol\":2849:2865  absTick & 0x2000 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2849:2870  absTick & 0x2000 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":2845:2931  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      tag_54\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2889:2923  0xa9f746462d870fdf8a65dc1f90e061e5 */\n      0xa9f746462d870fdf8a65dc1f90e061e5\n        /* \"contracts/core/libraries/TickMath.sol\":2881:2923  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2928:2931  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2880:2931  (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2845:2931  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n    tag_54:\n        /* \"contracts/core/libraries/TickMath.sol\":2955:2961  0x4000 */\n      0x4000\n        /* \"contracts/core/libraries/TickMath.sol\":2945:2961  absTick & 0x4000 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2945:2966  absTick & 0x4000 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":2941:3027  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      tag_55\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2985:3019  0x70d869a156d2a1b890bb3df62baf32f7 */\n      0x70d869a156d2a1b890bb3df62baf32f7\n        /* \"contracts/core/libraries/TickMath.sol\":2977:3019  ratio * 0x70d869a156d2a1b890bb3df62baf32f7 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":3024:3027  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2976:3027  (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2941:3027  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n    tag_55:\n        /* \"contracts/core/libraries/TickMath.sol\":3051:3057  0x8000 */\n      0x8000\n        /* \"contracts/core/libraries/TickMath.sol\":3041:3057  absTick & 0x8000 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3041:3062  absTick & 0x8000 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":3037:3123  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      tag_56\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3081:3115  0x31be135f97d08fd981231505542fcfa6 */\n      0x31be135f97d08fd981231505542fcfa6\n        /* \"contracts/core/libraries/TickMath.sol\":3073:3115  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":3120:3123  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":3072:3123  (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3037:3123  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n    tag_56:\n        /* \"contracts/core/libraries/TickMath.sol\":3147:3154  0x10000 */\n      0x010000\n        /* \"contracts/core/libraries/TickMath.sol\":3137:3154  absTick & 0x10000 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3137:3159  absTick & 0x10000 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":3133:3219  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      tag_57\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3178:3211  0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      0x09aa508b5b7a84e1c677de54f3e99bc9\n        /* \"contracts/core/libraries/TickMath.sol\":3170:3211  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":3216:3219  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":3169:3219  (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3133:3219  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n    tag_57:\n        /* \"contracts/core/libraries/TickMath.sol\":3243:3250  0x20000 */\n      0x020000\n        /* \"contracts/core/libraries/TickMath.sol\":3233:3250  absTick & 0x20000 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3233:3255  absTick & 0x20000 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":3229:3314  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      tag_58\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3274:3306  0x5d6af8dedb81196699c329225ee604 */\n      0x5d6af8dedb81196699c329225ee604\n        /* \"contracts/core/libraries/TickMath.sol\":3266:3306  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":3311:3314  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":3265:3314  (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3229:3314  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n    tag_58:\n        /* \"contracts/core/libraries/TickMath.sol\":3338:3345  0x40000 */\n      0x040000\n        /* \"contracts/core/libraries/TickMath.sol\":3328:3345  absTick & 0x40000 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3328:3350  absTick & 0x40000 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":3324:3407  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      tag_59\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3369:3399  0x2216e584f5fa1ea926041bedfe98 */\n      0x2216e584f5fa1ea926041bedfe98\n        /* \"contracts/core/libraries/TickMath.sol\":3361:3399  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":3404:3407  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":3360:3407  (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3324:3407  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n    tag_59:\n        /* \"contracts/core/libraries/TickMath.sol\":3431:3438  0x80000 */\n      0x080000\n        /* \"contracts/core/libraries/TickMath.sol\":3421:3438  absTick & 0x80000 */\n      dup3\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3421:3443  absTick & 0x80000 != 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":3417:3495  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      tag_60\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3462:3487  0x48a170391f7dc42444e8fa2 */\n      0x048a170391f7dc42444e8fa2\n        /* \"contracts/core/libraries/TickMath.sol\":3454:3487  ratio * 0x48a170391f7dc42444e8fa2 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":3492:3495  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":3453:3495  (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3417:3495  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n    tag_60:\n        /* \"contracts/core/libraries/TickMath.sol\":3517:3518  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":3510:3514  tick */\n      dup5\n        /* \"contracts/core/libraries/TickMath.sol\":3510:3518  tick > 0 */\n      0x02\n      signextend\n      sgt\n        /* \"contracts/core/libraries/TickMath.sol\":3506:3553  if (tick > 0) ratio = type(uint256).max / ratio */\n      iszero\n      tag_61\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3548:3553  ratio */\n      dup1\n      not(0x00)\n        /* \"contracts/core/libraries/TickMath.sol\":3528:3553  type(uint256).max / ratio */\n      dup2\n      tag_62\n      jumpi\n      invalid\n    tag_62:\n      div\n        /* \"contracts/core/libraries/TickMath.sol\":3520:3553  ratio = type(uint256).max / ratio */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":3506:3553  if (tick > 0) ratio = type(uint256).max / ratio */\n    tag_61:\n        /* \"contracts/core/libraries/TickMath.sol\":3912:3919  1 << 32 */\n      0x0100000000\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3908  ratio */\n      dup2\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3920  ratio % (1 << 32) */\n      mod\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3925  ratio % (1 << 32) == 0 */\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n      tag_64\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3932:3933  1 */\n      0x01\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n      jump(tag_65)\n    tag_64:\n        /* \"contracts/core/libraries/TickMath.sol\":3928:3929  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n    tag_65:\n        /* \"contracts/core/libraries/TickMath.sol\":3886:3934  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      0xff\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3896:3898  32 */\n      0x20\n        /* \"contracts/core/libraries/TickMath.sol\":3887:3892  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":3887:3898  ratio >> 32 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3886:3934  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      add\n        /* \"contracts/core/libraries/TickMath.sol\":3863:3935  sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1)) */\n      swap3\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":1362:3942  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/core/libraries/FullMath.sol\":749:4495  function mulDiv(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_35:\n        /* \"contracts/core/libraries/FullMath.sol\":831:845  uint256 result */\n      0x00\n      dup1\n      dup1\n      not(0x00)\n        /* \"contracts/core/libraries/FullMath.sol\":1338:1339  b */\n      dup6\n        /* \"contracts/core/libraries/FullMath.sol\":1335:1336  a */\n      dup8\n        /* \"contracts/core/libraries/FullMath.sol\":1328:1348  mulmod(a, b, not(0)) */\n      mulmod\n        /* \"contracts/core/libraries/FullMath.sol\":1370:1379  mul(a, b) */\n      dup7\n      dup7\n      mul\n      swap3\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":1421:1434  lt(mm, prod0) */\n      dup3\n      dup2\n      lt\n        /* \"contracts/core/libraries/FullMath.sol\":1405:1419  sub(mm, prod0) */\n      swap1\n      dup4\n      swap1\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":1401:1435  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":1517:1527  prod1 == 0 */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":1513:1692  if (prod1 == 0) {... */\n      tag_67\n      jumpi\n        /* \"contracts/core/libraries/FullMath.sol\":1565:1566  0 */\n      0x00\n        /* \"contracts/core/libraries/FullMath.sol\":1551:1562  denominator */\n      dup5\n        /* \"contracts/core/libraries/FullMath.sol\":1551:1566  denominator > 0 */\n      gt\n        /* \"contracts/core/libraries/FullMath.sol\":1543:1567  require(denominator > 0) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":1618:1641  div(prod0, denominator) */\n      dup3\n      swap1\n      div\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":1668:1681  return result */\n      jump(tag_66)\n        /* \"contracts/core/libraries/FullMath.sol\":1513:1692  if (prod1 == 0) {... */\n    tag_67:\n        /* \"contracts/core/libraries/FullMath.sol\":1819:1824  prod1 */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":1805:1816  denominator */\n      dup5\n        /* \"contracts/core/libraries/FullMath.sol\":1805:1824  denominator > prod1 */\n      gt\n        /* \"contracts/core/libraries/FullMath.sol\":1797:1825  require(denominator > prod1) */\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n        /* \"contracts/core/libraries/FullMath.sol\":2102:2119  uint256 remainder */\n      0x00\n        /* \"contracts/core/libraries/FullMath.sol\":2178:2189  denominator */\n      dup5\n        /* \"contracts/core/libraries/FullMath.sol\":2175:2176  b */\n      dup7\n        /* \"contracts/core/libraries/FullMath.sol\":2172:2173  a */\n      dup9\n        /* \"contracts/core/libraries/FullMath.sol\":2165:2190  mulmod(a, b, denominator) */\n      mulmod\n        /* \"contracts/core/libraries/FullMath.sol\":2530:2542  uint256 twos */\n      0x00\n        /* \"contracts/core/libraries/FullMath.sol\":2545:2557  -denominator */\n      dup7\n      dup2\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":2545:2571  -denominator & denominator */\n      dup8\n      and\n        /* \"contracts/core/libraries/FullMath.sol\":2665:2687  div(denominator, twos) */\n      swap7\n      dup8\n      swap1\n      div\n      swap7\n        /* \"contracts/core/libraries/FullMath.sol\":3468:3469  2 */\n      0x02\n        /* \"contracts/core/libraries/FullMath.sol\":3449:3450  3 */\n      0x03\n        /* \"contracts/core/libraries/FullMath.sol\":3449:3464  3 * denominator */\n      dup10\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3448:3469  (3 * denominator) ^ 2 */\n      dup2\n      xor\n        /* \"contracts/core/libraries/FullMath.sol\":3695:3712  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3691:3712  2 - denominator * inv */\n      dup3\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3684:3712  inv *= 2 - denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3753:3770  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3749:3770  2 - denominator * inv */\n      dup3\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3742:3770  inv *= 2 - denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3812:3829  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3808:3829  2 - denominator * inv */\n      dup3\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3801:3829  inv *= 2 - denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3871:3888  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3867:3888  2 - denominator * inv */\n      dup3\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3860:3888  inv *= 2 - denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3930:3947  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3926:3947  2 - denominator * inv */\n      dup3\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3919:3947  inv *= 2 - denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3990:4007  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3986:4007  2 - denominator * inv */\n      swap1\n      swap2\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3979:4007  inv *= 2 - denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3037:3049  sub(0, twos) */\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3033:3056  div(sub(0, twos), twos) */\n      dup2\n      swap1\n      div\n        /* \"contracts/core/libraries/FullMath.sol\":3058:3059  1 */\n      0x01\n        /* \"contracts/core/libraries/FullMath.sol\":3029:3060  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"contracts/core/libraries/FullMath.sol\":2307:2327  gt(remainder, prod0) */\n      dup7\n      dup5\n      gt\n        /* \"contracts/core/libraries/FullMath.sol\":2296:2328  sub(prod1, gt(remainder, prod0)) */\n      swap1\n      swap6\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3088:3100  prod1 * twos */\n      swap5\n      swap1\n      swap5\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":2350:2371  sub(prod0, remainder) */\n      swap2\n      swap1\n      swap5\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":2793:2809  div(prod0, twos) */\n      swap3\n      swap1\n      swap3\n      div\n        /* \"contracts/core/libraries/FullMath.sol\":3079:3100  prod0 |= prod1 * twos */\n      swap2\n      swap1\n      swap2\n      or\n        /* \"contracts/core/libraries/FullMath.sol\":4454:4465  prod0 * inv */\n      swap2\n      swap1\n      swap2\n      mul\n      swap2\n      pop\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":749:4495  function mulDiv(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_66:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220af74f3653c7f3156c2709f6c82dfd10ce768541cda96333ecb74c06ece9b42cd64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60c060405260006080908152600160a081905261001d916002610030565b5034801561002a57600080fd5b506100f1565b828054828255906000526020600020906007016008900481019282156100cc5791602002820160005b8382111561009a57835183826101000a81548163ffffffff021916908360ff1602179055509260200192600401602081600301049283019260010302610059565b80156100ca5782816101000a81549063ffffffff021916905560040160208160030104928301926001030261009a565b505b506100d89291506100dc565b5090565b5b808211156100d857600081556001016100dd565b610758806101006000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806311ea54411461003b578063f29d00401461005f575b600080fd5b610043610097565b604080516001600160a01b039092168252519081900360200190f35b6100856004803603602081101561007557600080fd5b50356001600160a01b03166100a6565b60408051918252519081900360200190f35b6000546001600160a01b031681565b6000806000836001600160a01b031663883bdbfd60016040518263ffffffff1660e01b81526004018080602001828103825283818154815260200191508054801561013c57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116100ff5790505b50509250505060006040518083038186803b15801561015a57600080fd5b505afa15801561016e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561019757600080fd5b81019080805160405193929190846401000000008211156101b757600080fd5b9083019060208201858111156101cc57600080fd5b82518660208202830111640100000000821117156101e957600080fd5b82525081516020918201928201910280838360005b838110156102165781810151838201526020016101fe565b505050509050016040526020018051604051939291908464010000000082111561023f57600080fd5b90830190602082018581111561025457600080fd5b825186602082028301116401000000008211171561027157600080fd5b82525081516020918201928201910280838360005b8381101561029e578181015183820152602001610286565b505050509050016040525050505090506000816000815181106102bd57fe5b602002602001015190506000826001815181106102d657fe5b602002602001015190506000600182840360060b816102f157fe5b05905080600061030082610340565b90506001600160a01b0381166002810a600160c01b655af3107a40006000610329848385610672565b9091026064029d9c50505050505050505050505050565b60008060008360020b12610357578260020b61035f565b8260020b6000035b9050620d89e881111561039d576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b6000600182166103b157600160801b6103c3565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156103f7576ffff97272373d413259a46990580e213a0260801c5b6004821615610416576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610435576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610454576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610473576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610492576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156104b1576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156104d1576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156104f1576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610511576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610531576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610551576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610571576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610591576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156105b1576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156105d2576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156105f2576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610611576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561062e576b048a170391f7dc42444e8fa20260801c5b60008460020b131561064957806000198161064557fe5b0490505b64010000000081061561065d576001610660565b60005b60ff16602082901c0192505050919050565b60008080600019858709868602925082811090839003039050806106a8576000841161069d57600080fd5b50829004905061071b565b8084116106b457600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b939250505056fea2646970667358221220af74f3653c7f3156c2709f6c82dfd10ce768541cda96333ecb74c06ece9b42cd64736f6c63430007060033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH2 0x1D SWAP2 PUSH1 0x2 PUSH2 0x30 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 ADD PUSH1 0x8 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xCC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x9A JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x59 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCA JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x9A JUMP JUMPDEST POP JUMPDEST POP PUSH2 0xD8 SWAP3 SWAP2 POP PUSH2 0xDC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xDD JUMP JUMPDEST PUSH2 0x758 DUP1 PUSH2 0x100 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11EA5441 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF29D0040 EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x883BDBFD PUSH1 0x1 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0xFF JUMPI SWAP1 POP JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 LT ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x216 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x286 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2D6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP5 SUB PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0x2F1 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH1 0x0 PUSH2 0x300 DUP3 PUSH2 0x340 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x2 DUP2 EXP PUSH1 0x1 PUSH1 0xC0 SHL PUSH6 0x5AF3107A4000 PUSH1 0x0 PUSH2 0x329 DUP5 DUP4 DUP6 PUSH2 0x672 JUMP JUMPDEST SWAP1 SWAP2 MUL PUSH1 0x64 MUL SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x357 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x35F JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x39D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0x3B1 JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x3C3 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x3F7 JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x416 JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x435 JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x454 JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x473 JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x492 JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x4B1 JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x4D1 JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x4F1 JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x511 JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x531 JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x551 JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x571 JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x591 JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x5B1 JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x5D2 JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x5F2 JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x611 JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x62E JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x649 JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x645 JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP2 MOD ISZERO PUSH2 0x65D JUMPI PUSH1 0x1 PUSH2 0x660 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP7 DUP7 MUL SWAP3 POP DUP3 DUP2 LT SWAP1 DUP4 SWAP1 SUB SUB SWAP1 POP DUP1 PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x71B JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF PUSH21 0xF3653C7F3156C2709F6C82DFD10CE768541CDA9633 RETURNDATACOPY 0xCB PUSH21 0xC06ECE9B42CD64736F6C6343000706003300000000 ",
							"sourceMap": "636:36:0:-:0;573:782;636:36;-1:-1:-1;573:782:0;636:36;;;670:1;636:36;;;;;;;;:::i;:::-;;573:782;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;573:782:0;;;-1:-1:-1;573:782:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806311ea54411461003b578063f29d00401461005f575b600080fd5b610043610097565b604080516001600160a01b039092168252519081900360200190f35b6100856004803603602081101561007557600080fd5b50356001600160a01b03166100a6565b60408051918252519081900360200190f35b6000546001600160a01b031681565b6000806000836001600160a01b031663883bdbfd60016040518263ffffffff1660e01b81526004018080602001828103825283818154815260200191508054801561013c57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116100ff5790505b50509250505060006040518083038186803b15801561015a57600080fd5b505afa15801561016e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561019757600080fd5b81019080805160405193929190846401000000008211156101b757600080fd5b9083019060208201858111156101cc57600080fd5b82518660208202830111640100000000821117156101e957600080fd5b82525081516020918201928201910280838360005b838110156102165781810151838201526020016101fe565b505050509050016040526020018051604051939291908464010000000082111561023f57600080fd5b90830190602082018581111561025457600080fd5b825186602082028301116401000000008211171561027157600080fd5b82525081516020918201928201910280838360005b8381101561029e578181015183820152602001610286565b505050509050016040525050505090506000816000815181106102bd57fe5b602002602001015190506000826001815181106102d657fe5b602002602001015190506000600182840360060b816102f157fe5b05905080600061030082610340565b90506001600160a01b0381166002810a600160c01b655af3107a40006000610329848385610672565b9091026064029d9c50505050505050505050505050565b60008060008360020b12610357578260020b61035f565b8260020b6000035b9050620d89e881111561039d576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b6000600182166103b157600160801b6103c3565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156103f7576ffff97272373d413259a46990580e213a0260801c5b6004821615610416576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610435576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610454576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610473576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610492576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156104b1576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156104d1576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156104f1576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610511576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610531576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610551576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610571576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610591576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156105b1576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156105d2576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156105f2576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610611576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561062e576b048a170391f7dc42444e8fa20260801c5b60008460020b131561064957806000198161064557fe5b0490505b64010000000081061561065d576001610660565b60005b60ff16602082901c0192505050919050565b60008080600019858709868602925082811090839003039050806106a8576000841161069d57600080fd5b50829004905061071b565b8084116106b457600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b939250505056fea2646970667358221220af74f3653c7f3156c2709f6c82dfd10ce768541cda96333ecb74c06ece9b42cd64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11EA5441 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF29D0040 EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x883BDBFD PUSH1 0x1 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0xFF JUMPI SWAP1 POP JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 LT ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x216 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x286 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2BD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2D6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP5 SUB PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0x2F1 JUMPI INVALID JUMPDEST SDIV SWAP1 POP DUP1 PUSH1 0x0 PUSH2 0x300 DUP3 PUSH2 0x340 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x2 DUP2 EXP PUSH1 0x1 PUSH1 0xC0 SHL PUSH6 0x5AF3107A4000 PUSH1 0x0 PUSH2 0x329 DUP5 DUP4 DUP6 PUSH2 0x672 JUMP JUMPDEST SWAP1 SWAP2 MUL PUSH1 0x64 MUL SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x357 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x35F JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x39D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0x3B1 JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x3C3 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x3F7 JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x416 JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x435 JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x454 JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x473 JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x492 JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x4B1 JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x4D1 JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x4F1 JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x511 JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x531 JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x551 JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x571 JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x591 JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x5B1 JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x5D2 JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x5F2 JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x611 JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x62E JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x649 JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x645 JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP2 MOD ISZERO PUSH2 0x65D JUMPI PUSH1 0x1 PUSH2 0x660 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP7 DUP7 MUL SWAP3 POP DUP3 DUP2 LT SWAP1 DUP4 SWAP1 SUB SUB SWAP1 POP DUP1 PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x71B JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF PUSH21 0xF3653C7F3156C2709F6C82DFD10CE768541CDA9633 RETURNDATACOPY 0xCB PUSH21 0xC06ECE9B42CD64736F6C6343000706003300000000 ",
							"sourceMap": "573:782:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:33;;;:::i;:::-;;;;-1:-1:-1;;;;;598:33:0;;;;;;;;;;;;;;681:671;;;;;;;;;;;;;;;;-1:-1:-1;681:671:0;-1:-1:-1;;;;;681:671:0;;:::i;:::-;;;;;;;;;;;;;;;;598:33;;;-1:-1:-1;;;;;598:33:0;;:::o;681:671::-;734:10;757;787:30;842:4;-1:-1:-1;;;;;822:33:0;;856:11;822:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;822:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;822:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;822:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:82;;;879:11;893:15;909:1;893:18;;;;;;;;;;;;;;879:32;;922:11;936:15;952:1;936:18;;;;;;;;;;;;;;922:32;;965:10;992:1;985:5;979;:11;978:15;;;;;;;;;-1:-1:-1;978:15:0;1004:12;1064:35;978:15;1064:27;:35::i;:::-;1041:58;-1:-1:-1;;;;;;1122:21:0;;1172:1;1167:6;;-1:-1:-1;;;1231:8:0;1110:9;1263:22;1167:6;1231:8;1198;1263:15;:22::i;:::-;1305:5;;;1313:7;1304:17;;681:671;-1:-1:-1;;;;;;;;;;;;;681:671:0:o;1362:2580:15:-;1425:20;1457:15;1482:1;1475:4;:8;;;:57;;1526:4;1519:12;;1475:57;;;1502:4;1495:12;;1494:13;;1475:57;1457:75;-1:-1:-1;644:9:15;1550:28;;;1542:42;;;;;-1:-1:-1;;;1542:42:15;;;;;;;;;;;;-1:-1:-1;;;1542:42:15;;;;;;;;;;;;;;;1595:13;1621:3;1611:13;;:93;;-1:-1:-1;;;1611:93:15;;;1632:34;1611:93;1595:109;;;-1:-1:-1;1728:3:15;1718:13;;:18;1714:83;;1755:34;1747:42;1794:3;1746:51;1714:83;1821:3;1811:13;;:18;1807:83;;1848:34;1840:42;1887:3;1839:51;1807:83;1914:3;1904:13;;:18;1900:83;;1941:34;1933:42;1980:3;1932:51;1900:83;2007:4;1997:14;;:19;1993:84;;2035:34;2027:42;2074:3;2026:51;1993:84;2101:4;2091:14;;:19;2087:84;;2129:34;2121:42;2168:3;2120:51;2087:84;2195:4;2185:14;;:19;2181:84;;2223:34;2215:42;2262:3;2214:51;2181:84;2289:4;2279:14;;:19;2275:84;;2317:34;2309:42;2356:3;2308:51;2275:84;2383:5;2373:15;;:20;2369:85;;2412:34;2404:42;2451:3;2403:51;2369:85;2478:5;2468:15;;:20;2464:85;;2507:34;2499:42;2546:3;2498:51;2464:85;2573:5;2563:15;;:20;2559:85;;2602:34;2594:42;2641:3;2593:51;2559:85;2668:5;2658:15;;:20;2654:85;;2697:34;2689:42;2736:3;2688:51;2654:85;2763:6;2753:16;;:21;2749:86;;2793:34;2785:42;2832:3;2784:51;2749:86;2859:6;2849:16;;:21;2845:86;;2889:34;2881:42;2928:3;2880:51;2845:86;2955:6;2945:16;;:21;2941:86;;2985:34;2977:42;3024:3;2976:51;2941:86;3051:6;3041:16;;:21;3037:86;;3081:34;3073:42;3120:3;3072:51;3037:86;3147:7;3137:17;;:22;3133:86;;3178:33;3170:41;3216:3;3169:50;3133:86;3243:7;3233:17;;:22;3229:85;;3274:32;3266:40;3311:3;3265:49;3229:85;3338:7;3328:17;;:22;3324:83;;3369:30;3361:38;3404:3;3360:47;3324:83;3431:7;3421:17;;:22;3417:78;;3462:25;3454:33;3492:3;3453:42;3417:78;3517:1;3510:4;:8;;;3506:47;;;3548:5;-1:-1:-1;;3528:25:15;;;;;;3520:33;;3506:47;3912:7;3903:5;:17;:22;:30;;3932:1;3903:30;;;3928:1;3903:30;3886:48;;3896:2;3887:5;:11;;3886:48;3863:72;;1362:2580;;;;;:::o;749:3746:6:-;831:14;;;-1:-1:-1;;1338:1:6;1335;1328:20;1370:9;;;;-1:-1:-1;1421:13:6;;;1405:14;;;;1401:34;;-1:-1:-1;1517:10:6;1513:179;;1565:1;1551:11;:15;1543:24;;;;;;-1:-1:-1;1618:23:6;;;;-1:-1:-1;1668:13:6;;1513:179;1819:5;1805:11;:19;1797:28;;;;;;2102:17;2178:11;2175:1;2172;2165:25;2530:12;2545;;;:26;;2665:22;;;;;3468:1;3449;:15;;3448:21;;3695:17;;;3691:21;;3684:28;3753:17;;;3749:21;;3742:28;3812:17;;;3808:21;;3801:28;3871:17;;;3867:21;;3860:28;3930:17;;;3926:21;;3919:28;3990:17;;;3986:21;;;3979:28;3037:12;;;;3033:23;;;3058:1;3029:31;2307:20;;;2296:32;;;3088:12;;;;2350:21;;;;2793:16;;;;3079:21;;;;4454:11;;;;;-1:-1:-1;;749:3746:6;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "376000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"GetPrice(address)": "infinite",
								"V3Pool()": "1015"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 636,
									"end": 672,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 636,
									"end": 672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 636,
									"end": 672,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 636,
									"end": 672,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 636,
									"end": 672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 670,
									"end": 671,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 636,
									"end": 672,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 636,
									"end": 672,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 636,
									"end": 672,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 636,
									"end": 672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 636,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 636,
									"end": 672,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 636,
									"end": 672,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 636,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 636,
									"end": 672,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 636,
									"end": 672,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 636,
									"end": 672,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 636,
									"end": 672,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 1355,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220af74f3653c7f3156c2709f6c82dfd10ce768541cda96333ecb74c06ece9b42cd64736f6c63430007060033",
									".code": [
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "11EA5441"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "F29D0040"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 573,
											"end": 1355,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 598,
											"end": 631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 598,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 598,
											"end": 631,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 598,
											"end": 631,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 598,
											"end": 631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 598,
											"end": 631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 598,
											"end": 631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 598,
											"end": 631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 631,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 734,
											"end": 744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 822,
											"end": 855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 822,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "883BDBFD"
										},
										{
											"begin": 856,
											"end": 867,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 822,
											"end": 868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 786,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 786,
											"end": 868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 786,
											"end": 868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 879,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 893,
											"end": 911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 893,
											"end": 911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 893,
											"end": 911,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 893,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 893,
											"end": 911,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 893,
											"end": 911,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 893,
											"end": 911,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 893,
											"end": 911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 911,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 893,
											"end": 911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 893,
											"end": 911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 893,
											"end": 911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 879,
											"end": 911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 879,
											"end": 911,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 952,
											"end": 953,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 936,
											"end": 954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 936,
											"end": 954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 936,
											"end": 954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 936,
											"end": 954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 936,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 936,
											"end": 954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 936,
											"end": 954,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 936,
											"end": 954,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 936,
											"end": 954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 936,
											"end": 954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 954,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 936,
											"end": 954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 936,
											"end": 954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 936,
											"end": 954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 922,
											"end": 954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 922,
											"end": 954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 979,
											"end": 984,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 979,
											"end": 990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 978,
											"end": 993,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 978,
											"end": 993,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 978,
											"end": 993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 978,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 978,
											"end": 993,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 978,
											"end": 993,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 978,
											"end": 993,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 978,
											"end": 993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 978,
											"end": 993,
											"name": "SDIV",
											"source": 0
										},
										{
											"begin": 978,
											"end": 993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 978,
											"end": 993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 978,
											"end": 993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1064,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1064,
											"end": 1099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1064,
											"end": 1099,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1064,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1231,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "5AF3107A4000"
										},
										{
											"begin": 1110,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1239,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1206,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1263,
											"end": 1285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1263,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1263,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1305,
											"end": 1310,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1321,
											"name": "SWAP14",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 681,
											"end": 1352,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1425,
											"end": 1445,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1472,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1483,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1479,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1526,
											"end": 1530,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1502,
											"end": 1506,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 1494,
											"end": 1507,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1507,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1457,
											"end": 1532,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 644,
											"end": 653,
											"name": "PUSH",
											"source": 15,
											"value": "D89E8"
										},
										{
											"begin": 1550,
											"end": 1578,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1550,
											"end": 1578,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1550,
											"end": 1578,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1624,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1611,
											"end": 1624,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1611,
											"end": 1624,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1632,
											"end": 1666,
											"name": "PUSH",
											"source": 15,
											"value": "FFFCB933BD6FAD37AA2D162D1A594001"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1728,
											"end": 1731,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1718,
											"end": 1731,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1731,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1755,
											"end": 1789,
											"name": "PUSH",
											"source": 15,
											"value": "FFF97272373D413259A46990580E213A"
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1794,
											"end": 1797,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1746,
											"end": 1797,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1821,
											"end": 1824,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1848,
											"end": 1882,
											"name": "PUSH",
											"source": 15,
											"value": "FFF2E50F5F656932EF12357CF3C7FDCC"
										},
										{
											"begin": 1840,
											"end": 1882,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 1904,
											"end": 1917,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1904,
											"end": 1917,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1904,
											"end": 1922,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1941,
											"end": 1975,
											"name": "PUSH",
											"source": 15,
											"value": "FFE5CACA7E10E4E61C3624EAA0941CD0"
										},
										{
											"begin": 1933,
											"end": 1975,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1980,
											"end": 1983,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1932,
											"end": 1983,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2007,
											"end": 2011,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 1997,
											"end": 2011,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1997,
											"end": 2011,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2035,
											"end": 2069,
											"name": "PUSH",
											"source": 15,
											"value": "FFCB9843D60F6159C9DB58835C926644"
										},
										{
											"begin": 2027,
											"end": 2069,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2077,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2026,
											"end": 2077,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "tag",
											"source": 15,
											"value": "45"
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2105,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2091,
											"end": 2105,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2129,
											"end": 2163,
											"name": "PUSH",
											"source": 15,
											"value": "FF973B41FA98C081472E6896DFB254C0"
										},
										{
											"begin": 2121,
											"end": 2163,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2168,
											"end": 2171,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2120,
											"end": 2171,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2195,
											"end": 2199,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2185,
											"end": 2204,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "PUSH",
											"source": 15,
											"value": "FF2EA16466C96A3843EC78B326B52861"
										},
										{
											"begin": 2215,
											"end": 2257,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2214,
											"end": 2265,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2279,
											"end": 2293,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2279,
											"end": 2293,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2279,
											"end": 2298,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2351,
											"name": "PUSH",
											"source": 15,
											"value": "FE5DEE046A99A2A811C461F1969C3053"
										},
										{
											"begin": 2309,
											"end": 2351,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2356,
											"end": 2359,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2308,
											"end": 2359,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 2373,
											"end": 2388,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2373,
											"end": 2388,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2373,
											"end": 2393,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "PUSH",
											"source": 15,
											"value": "FCBE86C7900A88AEDCFFC83B479AA3A4"
										},
										{
											"begin": 2404,
											"end": 2446,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2451,
											"end": 2454,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2403,
											"end": 2454,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2478,
											"end": 2483,
											"name": "PUSH",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 2468,
											"end": 2483,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2468,
											"end": 2483,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2468,
											"end": 2488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH",
											"source": 15,
											"value": "F987A7253AC413176F2B074CF7815E54"
										},
										{
											"begin": 2499,
											"end": 2541,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2498,
											"end": 2549,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "PUSH",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2602,
											"end": 2636,
											"name": "PUSH",
											"source": 15,
											"value": "F3392B0822B70005940C7A398E4B70F3"
										},
										{
											"begin": 2594,
											"end": 2636,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2641,
											"end": 2644,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "PUSH",
											"source": 15,
											"value": "800"
										},
										{
											"begin": 2658,
											"end": 2673,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2658,
											"end": 2673,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2697,
											"end": 2731,
											"name": "PUSH",
											"source": 15,
											"value": "E7159475A2C29B7443B29C7FA6E889D9"
										},
										{
											"begin": 2689,
											"end": 2731,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2736,
											"end": 2739,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2688,
											"end": 2739,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 15,
											"value": "1000"
										},
										{
											"begin": 2753,
											"end": 2769,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2769,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2753,
											"end": 2774,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2793,
											"end": 2827,
											"name": "PUSH",
											"source": 15,
											"value": "D097F3BDFD2022B8845AD8F792AA5825"
										},
										{
											"begin": 2785,
											"end": 2827,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2832,
											"end": 2835,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2784,
											"end": 2835,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "PUSH",
											"source": 15,
											"value": "2000"
										},
										{
											"begin": 2849,
											"end": 2865,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2849,
											"end": 2865,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "PUSH",
											"source": 15,
											"value": "A9F746462D870FDF8A65DC1F90E061E5"
										},
										{
											"begin": 2881,
											"end": 2923,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2928,
											"end": 2931,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "PUSH",
											"source": 15,
											"value": "4000"
										},
										{
											"begin": 2945,
											"end": 2961,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2945,
											"end": 2961,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2945,
											"end": 2966,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2985,
											"end": 3019,
											"name": "PUSH",
											"source": 15,
											"value": "70D869A156D2A1B890BB3DF62BAF32F7"
										},
										{
											"begin": 2977,
											"end": 3019,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "tag",
											"source": 15,
											"value": "55"
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3051,
											"end": 3057,
											"name": "PUSH",
											"source": 15,
											"value": "8000"
										},
										{
											"begin": 3041,
											"end": 3057,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3041,
											"end": 3057,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3041,
											"end": 3062,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "PUSH",
											"source": 15,
											"value": "31BE135F97D08FD981231505542FCFA6"
										},
										{
											"begin": 3073,
											"end": 3115,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3120,
											"end": 3123,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3072,
											"end": 3123,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "tag",
											"source": 15,
											"value": "56"
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3147,
											"end": 3154,
											"name": "PUSH",
											"source": 15,
											"value": "10000"
										},
										{
											"begin": 3137,
											"end": 3154,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3137,
											"end": 3154,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3137,
											"end": 3159,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3178,
											"end": 3211,
											"name": "PUSH",
											"source": 15,
											"value": "9AA508B5B7A84E1C677DE54F3E99BC9"
										},
										{
											"begin": 3170,
											"end": 3211,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3169,
											"end": 3219,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3243,
											"end": 3250,
											"name": "PUSH",
											"source": 15,
											"value": "20000"
										},
										{
											"begin": 3233,
											"end": 3250,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3250,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3233,
											"end": 3255,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3274,
											"end": 3306,
											"name": "PUSH",
											"source": 15,
											"value": "5D6AF8DEDB81196699C329225EE604"
										},
										{
											"begin": 3266,
											"end": 3306,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3311,
											"end": 3314,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3265,
											"end": 3314,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "PUSH",
											"source": 15,
											"value": "40000"
										},
										{
											"begin": 3328,
											"end": 3345,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3328,
											"end": 3345,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3369,
											"end": 3399,
											"name": "PUSH",
											"source": 15,
											"value": "2216E584F5FA1EA926041BEDFE98"
										},
										{
											"begin": 3361,
											"end": 3399,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3404,
											"end": 3407,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3360,
											"end": 3407,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3431,
											"end": 3438,
											"name": "PUSH",
											"source": 15,
											"value": "80000"
										},
										{
											"begin": 3421,
											"end": 3438,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3421,
											"end": 3438,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3421,
											"end": 3443,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "PUSH",
											"source": 15,
											"value": "48A170391F7DC42444E8FA2"
										},
										{
											"begin": 3454,
											"end": 3487,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 3453,
											"end": 3495,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3514,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "SGT",
											"source": 15
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "INVALID",
											"source": 15
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 3520,
											"end": 3553,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3520,
											"end": 3553,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3912,
											"end": 3919,
											"name": "PUSH",
											"source": 15,
											"value": "100000000"
										},
										{
											"begin": 3903,
											"end": 3908,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "MOD",
											"source": 15
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3932,
											"end": 3933,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 3929,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3896,
											"end": 3898,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3887,
											"end": 3892,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3863,
											"end": 3935,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3863,
											"end": 3935,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 831,
											"end": 845,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 845,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 831,
											"end": 845,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1338,
											"end": 1339,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "MULMOD",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1421,
											"end": 1434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1434,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1401,
											"end": 1435,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1401,
											"end": 1435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1517,
											"end": 1527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1513,
											"end": 1692,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1565,
											"end": 1566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1562,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1566,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1618,
											"end": 1641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1641,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1513,
											"end": 1692,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1513,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1824,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1816,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1805,
											"end": 1824,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2189,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2176,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2173,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "MULMOD",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2557,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2557,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2557,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2571,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3449,
											"end": 3450,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3449,
											"end": 3464,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3464,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "XOR",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3712,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3712,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3712,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 3712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 3712,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3712,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3770,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3770,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3770,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3770,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3770,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3829,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3829,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3829,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3829,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3829,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3829,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3888,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3888,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3867,
											"end": 3888,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3947,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3947,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 3947,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3947,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3947,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4007,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4007,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4007,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 4007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 4007,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 4007,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4007,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3049,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3056,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3029,
											"end": 3060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2328,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2328,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3100,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4465,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"GetPrice(address)": "f29d0040",
							"V3Pool()": "11ea5441"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"GetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"V3Pool\",\"outputs\":[{\"internalType\":\"contract ICLPoolDerivedState\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/VeloOracle.sol\":\"VeloOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/VeloOracle.sol\":{\"keccak256\":\"0xb968ab2e5581a5329fabcf54d95352d7adcc3aa46d68f60417b6cc5a99081419\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d23b4476695aea2b2b9a5c65155a77565e0b6ca6cf5e0ad4a9534266c8290407\",\"dweb:/ipfs/QmWMoD28xyo6Ha2vyKytV4WzPKGpgRj55N4Cy9gdm6Gzt4\"]},\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]},\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]},\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/Oracle.sol\":{\"keccak256\":\"0x4c6e24eafb2d339d1848003d20e31a042f0fc1517a5e8649ceb0eea178a4f650\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://81914d71910b5778da85f5724ac1abd9ac4b40caf42af0a34e10247338f8c662\",\"dweb:/ipfs/QmVnmo3atEWw82VaC74Pyi9UBPf3P2NpXQzuSPTnd33gyc\"]},\"contracts/core/libraries/Position.sol\":{\"keccak256\":\"0xcf1e701e3fae35be8b77ff1217cfdd23d33eb16fd3cec70be8ea6888f87af285\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8c89746dd30e76cc029d4e090e402b28aae0659cc71800758b99137dfe85f55\",\"dweb:/ipfs/QmY4Ft1YBLqzqwTgNdpCyRd7WrY78zKgg4Ddv2zqZiBEiE\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xefd51a282ca9fbc89394776e7f5c6f96fa084ca26b71d99727780332c87d1843\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f09b719eff523f65d0d11fc476b9735e1390018d5ff585991d0fc644e913ecf\",\"dweb:/ipfs/QmNiZxxQhqteYgJdhCQ3cZ4S7bTQf2AQRUJqMVvPY3doot\"]},\"contracts/core/libraries/Tick.sol\":{\"keccak256\":\"0xb5ebd80c667f4501dba65f4e39e51ff36e5334480849e0ed8604222d20b4ed1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://246f590513441ac0f307170f5099e4a0c0b1f579406fc30b909b249858dbd099\",\"dweb:/ipfs/QmaA5uC3eck7nMqyJbpSPEhmXmAXaKLNBSS1Lfnzzzjc95\"]},\"contracts/core/libraries/TickBitmap.sol\":{\"keccak256\":\"0xd829fadfca3f8f5870c877c7eeceb4a692603c16b711174526129987e8745f5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d2cbf3802f7e611708a45bc390ee9307d947e49b348294591659444b9989c05\",\"dweb:/ipfs/Qmcny7JNyVYCtcZG3b1BL4ThuKREmAkE9ZKaC3i32pnt7X\"]},\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]},\"contracts/core/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3bbe07a0684d98efe73f7012e446873494e74983e1f75a16d42c25b956d61651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78ac9659c70ba3253a6e526ba5a144994fb3d32df2e9537787eeb45aae320aec\",\"dweb:/ipfs/QmbaZRbPP2wFZ9coJd2iyPM37hm3kXzPLuRtL6KKr1MCSL\"]},\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 16,
								"contract": "contracts/core/VeloOracle.sol:VeloOracle",
								"label": "V3Pool",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ICLPoolDerivedState)235"
							},
							{
								"astId": 22,
								"contract": "contracts/core/VeloOracle.sol:VeloOracle",
								"label": "secondsAgos",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint32)dyn_storage"
							}
						],
						"types": {
							"t_array(t_uint32)dyn_storage": {
								"base": "t_uint32",
								"encoding": "dynamic_array",
								"label": "uint32[]",
								"numberOfBytes": "32"
							},
							"t_contract(ICLPoolDerivedState)235": {
								"encoding": "inplace",
								"label": "contract ICLPoolDerivedState",
								"numberOfBytes": "20"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/IERC20Minimal.sol": {
				"IERC20Minimal": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"title": "Minimal ERC20 interface for CL",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for CL\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in CL\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/IERC20Minimal.sol\":\"IERC20Minimal\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"notice": "Contains a subset of the full ERC20 interface that is used in CL",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolDerivedState.sol": {
				"ICLPoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":\"ICLPoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/BitMath.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"details": "This library provides functionality for computing bit properties of an unsigned integer",
						"kind": "dev",
						"methods": {},
						"title": "BitMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/BitMath.sol\":187:2789  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/BitMath.sol\":187:2789  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e9e957cb50153001d070b46e0a59e386f39dc0fba94434812b9aef01112e58ef64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e9e957cb50153001d070b46e0a59e386f39dc0fba94434812b9aef01112e58ef64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xE9 JUMPI 0xCB POP ISZERO ADDRESS ADD 0xD0 PUSH17 0xB46E0A59E386F39DC0FBA94434812B9AEF ADD GT 0x2E PC 0xEF PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "187:2602:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e9e957cb50153001d070b46e0a59e386f39dc0fba94434812b9aef01112e58ef64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xE9 JUMPI 0xCB POP ISZERO ADDRESS ADD 0xD0 PUSH17 0xB46E0A59E386F39DC0FBA94434812B9AEF ADD GT 0x2E PC 0xEF PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "187:2602:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9e957cb50153001d070b46e0a59e386f39dc0fba94434812b9aef01112e58ef64736f6c63430007060033",
									".code": [
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/libraries/FixedPoint128.sol": {
				"FixedPoint128": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "FixedPoint128",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/FixedPoint128.sol\":211:310  library FixedPoint128 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/FixedPoint128.sol\":211:310  library FixedPoint128 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220af2e45a8ae608292f3ff954bcf0aec028d297ff58410fb4dec9e8abf8b7302b264736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af2e45a8ae608292f3ff954bcf0aec028d297ff58410fb4dec9e8abf8b7302b264736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0x2E GASLIMIT 0xA8 0xAE PUSH1 0x82 SWAP3 RETURN SELFDESTRUCT SWAP6 0x4B 0xCF EXP 0xEC MUL DUP14 0x29 PUSH32 0xF58410FB4DEC9E8ABF8B7302B264736F6C634300070600330000000000000000 ",
							"sourceMap": "211:99:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af2e45a8ae608292f3ff954bcf0aec028d297ff58410fb4dec9e8abf8b7302b264736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0x2E GASLIMIT 0xA8 0xAE PUSH1 0x82 SWAP3 RETURN SELFDESTRUCT SWAP6 0x4B 0xCF EXP 0xEC MUL DUP14 0x29 PUSH32 0xF58410FB4DEC9E8ABF8B7302B264736F6C634300070600330000000000000000 ",
							"sourceMap": "211:99:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 211,
									"end": 310,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220af2e45a8ae608292f3ff954bcf0aec028d297ff58410fb4dec9e8abf8b7302b264736f6c63430007060033",
									".code": [
										{
											"begin": 211,
											"end": 310,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 211,
											"end": 310,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 211,
											"end": 310,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 211,
											"end": 310,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 310,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 310,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 211,
											"end": 310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 310,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 211,
											"end": 310,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint128\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/FixedPoint128.sol\":\"FixedPoint128\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/FixedPoint96.sol": {
				"FixedPoint96": {
					"abi": [],
					"devdoc": {
						"details": "Used in SqrtPriceMath.sol",
						"kind": "dev",
						"methods": {},
						"title": "FixedPoint96",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/FixedPoint96.sol\":245:379  library FixedPoint96 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/FixedPoint96.sol\":245:379  library FixedPoint96 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122091b00088012a888ead7d274b38fdf84d1fa38587dd76dc2c7e4d4cf58cb9987464736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122091b00088012a888ead7d274b38fdf84d1fa38587dd76dc2c7e4d4cf58cb9987464736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xB0 STOP DUP9 ADD 0x2A DUP9 DUP15 0xAD PUSH30 0x274B38FDF84D1FA38587DD76DC2C7E4D4CF58CB9987464736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "245:134:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122091b00088012a888ead7d274b38fdf84d1fa38587dd76dc2c7e4d4cf58cb9987464736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xB0 STOP DUP9 ADD 0x2A DUP9 DUP15 0xAD PUSH30 0x274B38FDF84D1FA38587DD76DC2C7E4D4CF58CB9987464736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "245:134:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 245,
									"end": 379,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122091b00088012a888ead7d274b38fdf84d1fa38587dd76dc2c7e4d4cf58cb9987464736f6c63430007060033",
									".code": [
										{
											"begin": 245,
											"end": 379,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 245,
											"end": 379,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 245,
											"end": 379,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 245,
											"end": 379,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Used in SqrtPriceMath.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint96\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/FixedPoint96.sol\":\"FixedPoint96\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/FullMath.sol": {
				"FullMath": {
					"abi": [],
					"devdoc": {
						"details": "Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits",
						"kind": "dev",
						"methods": {},
						"title": "Contains 512-bit math functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/FullMath.sol\":362:5064  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/FullMath.sol\":362:5064  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f95828329d9d950e6117728e0b3a0e7e1ae406599a5c4028c24a61931920daab64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f95828329d9d950e6117728e0b3a0e7e1ae406599a5c4028c24a61931920daab64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 PC 0x28 ORIGIN SWAP14 SWAP14 SWAP6 0xE PUSH2 0x1772 DUP15 SIGNEXTEND GASPRICE 0xE PUSH31 0x1AE406599A5C4028C24A61931920DAAB64736F6C6343000706003300000000 ",
							"sourceMap": "362:4702:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f95828329d9d950e6117728e0b3a0e7e1ae406599a5c4028c24a61931920daab64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 PC 0x28 ORIGIN SWAP14 SWAP14 SWAP6 0xE PUSH2 0x1772 DUP15 SIGNEXTEND GASPRICE 0xE PUSH31 0x1AE406599A5C4028C24A61931920DAAB64736F6C6343000706003300000000 ",
							"sourceMap": "362:4702:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "INVALID",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f95828329d9d950e6117728e0b3a0e7e1ae406599a5c4028c24a61931920daab64736f6c63430007060033",
									".code": [
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/LiquidityMath.sol": {
				"LiquidityMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Math library for liquidity",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f9a07e4c3f39b008473af8ec96bec1a5d2f59c60cff67bb1ea3c3fa6199ac08b64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9a07e4c3f39b008473af8ec96bec1a5d2f59c60cff67bb1ea3c3fa6199ac08b64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 LOG0 PUSH31 0x4C3F39B008473AF8EC96BEC1A5D2F59C60CFF67BB1EA3C3FA6199AC08B6473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "109:512:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9a07e4c3f39b008473af8ec96bec1a5d2f59c60cff67bb1ea3c3fa6199ac08b64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 LOG0 PUSH31 0x4C3F39B008473AF8EC96BEC1A5D2F59C60CFF67BB1EA3C3FA6199AC08B6473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "109:512:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"addDelta(uint128,int128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 109,
									"end": 621,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9a07e4c3f39b008473af8ec96bec1a5d2f59c60cff67bb1ea3c3fa6199ac08b64736f6c63430007060033",
									".code": [
										{
											"begin": 109,
											"end": 621,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 109,
											"end": 621,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 109,
											"end": 621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 109,
											"end": 621,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math library for liquidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/LiquidityMath.sol\":\"LiquidityMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/libraries/LowGasSafeMath.sol": {
				"LowGasSafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Optimized overflow and underflow safe math operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/LowGasSafeMath.sol\":249:1695  library LowGasSafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/LowGasSafeMath.sol\":249:1695  library LowGasSafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206f6d69b70b687c61cc4bf2e0895902ef99930a5d7a77f108f53303d03b38f21664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f6d69b70b687c61cc4bf2e0895902ef99930a5d7a77f108f53303d03b38f21664736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x6D69B70B687C61CC4BF2E0895902EF99 SWAP4 EXP 0x5D PUSH27 0x77F108F53303D03B38F21664736F6C634300070600330000000000 ",
							"sourceMap": "249:1446:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206f6d69b70b687c61cc4bf2e0895902ef99930a5d7a77f108f53303d03b38f21664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x6D69B70B687C61CC4BF2E0895902EF99 SWAP4 EXP 0x5D PUSH27 0x77F108F53303D03B38F21664736F6C634300070600330000000000 ",
							"sourceMap": "249:1446:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(int256,int256)": "infinite",
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(int256,int256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f6d69b70b687c61cc4bf2e0895902ef99930a5d7a77f108f53303d03b38f21664736f6c63430007060033",
									".code": [
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/LowGasSafeMath.sol\":\"LowGasSafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/Oracle.sol": {
				"Oracle": {
					"abi": [],
					"devdoc": {
						"details": "Instances of stored oracle data, \"observations\", are collected in the oracle array Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the maximum length of the oracle array. New slots will be added when the array is fully populated. Observations are overwritten when the full length of the oracle array is populated. The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()",
						"kind": "dev",
						"methods": {},
						"title": "Oracle",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/Oracle.sol\":691:16258  library Oracle {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/Oracle.sol\":691:16258  library Oracle {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a680fcfaeac24789afa2e21b60086e5f4cc83fc1c95f005a1f96fbacb6d29c4b64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a680fcfaeac24789afa2e21b60086e5f4cc83fc1c95f005a1f96fbacb6d29c4b64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 DUP1 0xFC STATICCALL 0xEA 0xC2 SELFBALANCE DUP10 0xAF LOG2 0xE2 SHL PUSH1 0x8 PUSH15 0x5F4CC83FC1C95F005A1F96FBACB6D2 SWAP13 0x4B PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "691:15567:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a680fcfaeac24789afa2e21b60086e5f4cc83fc1c95f005a1f96fbacb6d29c4b64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 DUP1 0xFC STATICCALL 0xEA 0xC2 SELFBALANCE DUP10 0xAF LOG2 0xE2 SHL PUSH1 0x8 PUSH15 0x5F4CC83FC1C95F005A1F96FBACB6D2 SWAP13 0x4B PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "691:15567:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"binarySearch(struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,uint16,uint16)": "infinite",
								"getSurroundingObservations(struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16)": "infinite",
								"grow(struct Oracle.Observation storage ref[65535] storage pointer,uint16,uint16)": "infinite",
								"initialize(struct Oracle.Observation storage ref[65535] storage pointer,uint32)": "infinite",
								"lte(uint32,uint32,uint32)": "infinite",
								"observe(struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32[] memory,int24,uint16,uint128,uint16)": "infinite",
								"observeSingle(struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16)": "infinite",
								"transform(struct Oracle.Observation memory,uint32,int24,uint128)": "infinite",
								"write(struct Oracle.Observation storage ref[65535] storage pointer,uint16,uint32,int24,uint128,uint16,uint16)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a680fcfaeac24789afa2e21b60086e5f4cc83fc1c95f005a1f96fbacb6d29c4b64736f6c63430007060033",
									".code": [
										{
											"begin": 691,
											"end": 16258,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Instances of stored oracle data, \\\"observations\\\", are collected in the oracle array Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the maximum length of the oracle array. New slots will be added when the array is fully populated. Observations are overwritten when the full length of the oracle array is populated. The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Oracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides price and liquidity data useful for a wide variety of system designs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/Oracle.sol\":\"Oracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/Oracle.sol\":{\"keccak256\":\"0x4c6e24eafb2d339d1848003d20e31a042f0fc1517a5e8649ceb0eea178a4f650\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://81914d71910b5778da85f5724ac1abd9ac4b40caf42af0a34e10247338f8c662\",\"dweb:/ipfs/QmVnmo3atEWw82VaC74Pyi9UBPf3P2NpXQzuSPTnd33gyc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides price and liquidity data useful for a wide variety of system designs",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/Position.sol": {
				"Position": {
					"abi": [],
					"devdoc": {
						"details": "Positions store additional state for tracking fees owed to the position",
						"kind": "dev",
						"methods": {},
						"title": "Position",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/Position.sol\":365:3661  library Position {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/Position.sol\":365:3661  library Position {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209ffdbfba7c2b3c708191ea46264fbd18f6bf78c7372ab908fd46612996e3450064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ffdbfba7c2b3c708191ea46264fbd18f6bf78c7372ab908fd46612996e3450064736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 REVERT 0xBF 0xBA PUSH29 0x2B3C708191EA46264FBD18F6BF78C7372AB908FD46612996E345006473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "365:3296:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ffdbfba7c2b3c708191ea46264fbd18f6bf78c7372ab908fd46612996e3450064736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 REVERT 0xBF 0xBA PUSH29 0x2B3C708191EA46264FBD18F6BF78C7372AB908FD46612996E345006473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "365:3296:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"get(mapping(bytes32 => struct Position.Info storage ref),address,int24,int24)": "infinite",
								"update(struct Position.Info storage pointer,int128,uint256,uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "INVALID",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ffdbfba7c2b3c708191ea46264fbd18f6bf78c7372ab908fd46612996e3450064736f6c63430007060033",
									".code": [
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Positions store additional state for tracking fees owed to the position\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Position\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Positions represent an owner address' liquidity between a lower and upper tick boundary\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/Position.sol\":\"Position\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/Position.sol\":{\"keccak256\":\"0xcf1e701e3fae35be8b77ff1217cfdd23d33eb16fd3cec70be8ea6888f87af285\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8c89746dd30e76cc029d4e090e402b28aae0659cc71800758b99137dfe85f55\",\"dweb:/ipfs/QmY4Ft1YBLqzqwTgNdpCyRd7WrY78zKgg4Ddv2zqZiBEiE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Positions represent an owner address' liquidity between a lower and upper tick boundary",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Safe casting methods",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/SafeCast.sol\":165:1049  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/SafeCast.sol\":165:1049  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208bc1d5498e8868630b52635c31abd8a241527d05d09b96891d03ac75c956531664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208bc1d5498e8868630b52635c31abd8a241527d05d09b96891d03ac75c956531664736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xC1 0xD5 0x49 DUP15 DUP9 PUSH9 0x630B52635C31ABD8A2 COINBASE MSTORE PUSH30 0x5D09B96891D03AC75C956531664736F6C63430007060033000000000000 ",
							"sourceMap": "165:884:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208bc1d5498e8868630b52635c31abd8a241527d05d09b96891d03ac75c956531664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xC1 0xD5 0x49 DUP15 DUP9 PUSH9 0x630B52635C31ABD8A2 COINBASE MSTORE PUSH30 0x5D09B96891D03AC75C956531664736F6C63430007060033000000000000 ",
							"sourceMap": "165:884:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toUint160(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208bc1d5498e8868630b52635c31abd8a241527d05d09b96891d03ac75c956531664736f6c63430007060033",
									".code": [
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe casting methods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for safely casting between types",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/SqrtPriceMath.sol": {
				"SqrtPriceMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Functions based on Q64.96 sqrt price and liquidity",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/SqrtPriceMath.sol\":377:10495  library SqrtPriceMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/SqrtPriceMath.sol\":377:10495  library SqrtPriceMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bdfb710106889611c8be3fde13915b318a902850e4157772fe840e0b9d0212f264736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdfb710106889611c8be3fde13915b318a902850e4157772fe840e0b9d0212f264736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xFB PUSH18 0x106889611C8BE3FDE13915B318A902850E4 ISZERO PUSH24 0x72FE840E0B9D0212F264736F6C6343000706003300000000 ",
							"sourceMap": "377:10118:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdfb710106889611c8be3fde13915b318a902850e4157772fe840e0b9d0212f264736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xFB PUSH18 0x106889611C8BE3FDE13915B318A902850E4 ISZERO PUSH24 0x72FE840E0B9D0212F264736F6C6343000706003300000000 ",
							"sourceMap": "377:10118:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAmount0Delta(uint160,uint160,int128)": "infinite",
								"getAmount0Delta(uint160,uint160,uint128,bool)": "infinite",
								"getAmount1Delta(uint160,uint160,int128)": "infinite",
								"getAmount1Delta(uint160,uint160,uint128,bool)": "infinite",
								"getNextSqrtPriceFromAmount0RoundingUp(uint160,uint128,uint256,bool)": "infinite",
								"getNextSqrtPriceFromAmount1RoundingDown(uint160,uint128,uint256,bool)": "infinite",
								"getNextSqrtPriceFromInput(uint160,uint128,uint256,bool)": "infinite",
								"getNextSqrtPriceFromOutput(uint160,uint128,uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "INVALID",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bdfb710106889611c8be3fde13915b318a902850e4157772fe840e0b9d0212f264736f6c63430007060033",
									".code": [
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Functions based on Q64.96 sqrt price and liquidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/SqrtPriceMath.sol\":\"SqrtPriceMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xefd51a282ca9fbc89394776e7f5c6f96fa084ca26b71d99727780332c87d1843\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f09b719eff523f65d0d11fc476b9735e1390018d5ff585991d0fc644e913ecf\",\"dweb:/ipfs/QmNiZxxQhqteYgJdhCQ3cZ4S7bTQf2AQRUJqMVvPY3doot\"]},\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/Tick.sol": {
				"Tick": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Tick",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/Tick.sol\":292:13071  library Tick {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/Tick.sol\":292:13071  library Tick {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220067ba41cd20fa2a5d0af1679ff37714980de111a7d56f8368279ecb2df8100cb64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220067ba41cd20fa2a5d0af1679ff37714980de111a7d56f8368279ecb2df8100cb64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH28 0xA41CD20FA2A5D0AF1679FF37714980DE111A7D56F8368279ECB2DF81 STOP 0xCB PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "292:12779:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220067ba41cd20fa2a5d0af1679ff37714980de111a7d56f8368279ecb2df8100cb64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD PUSH28 0xA41CD20FA2A5D0AF1679FF37714980DE111A7D56F8368279ECB2DF81 STOP 0xCB PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "292:12779:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"clear(mapping(int24 => struct Tick.Info storage ref),int24)": "infinite",
								"cross(mapping(int24 => struct Tick.Info storage ref),int24,uint256,uint256,uint160,int56,uint32,uint256)": "infinite",
								"getFeeGrowthInside(mapping(int24 => struct Tick.Info storage ref),int24,int24,int24,uint256,uint256)": "infinite",
								"getRewardGrowthInside(mapping(int24 => struct Tick.Info storage ref),int24,int24,int24,uint256)": "infinite",
								"tickSpacingToMaxLiquidityPerTick(int24)": "infinite",
								"update(mapping(int24 => struct Tick.Info storage ref),int24,int24,int128,uint256,uint256,uint256,uint160,int56,uint32,bool,uint128)": "infinite",
								"updateStake(mapping(int24 => struct Tick.Info storage ref),int24,int128,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "INVALID",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220067ba41cd20fa2a5d0af1679ff37714980de111a7d56f8368279ecb2df8100cb64736f6c63430007060033",
									".code": [
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Tick\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains functions for managing tick processes and relevant calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/Tick.sol\":\"Tick\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/Tick.sol\":{\"keccak256\":\"0xb5ebd80c667f4501dba65f4e39e51ff36e5334480849e0ed8604222d20b4ed1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://246f590513441ac0f307170f5099e4a0c0b1f579406fc30b909b249858dbd099\",\"dweb:/ipfs/QmaA5uC3eck7nMqyJbpSPEhmXmAXaKLNBSS1Lfnzzzjc95\"]},\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains functions for managing tick processes and relevant calculations",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/TickBitmap.sol": {
				"TickBitmap": {
					"abi": [],
					"devdoc": {
						"details": "The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.",
						"kind": "dev",
						"methods": {},
						"title": "Packed tick initialized state library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/TickBitmap.sol\":339:4089  library TickBitmap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/TickBitmap.sol\":339:4089  library TickBitmap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220775625b5e662e54e19faf8e3afd2d16ad4a04e28de958a2dba6cd2d3e1e02d9464736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220775625b5e662e54e19faf8e3afd2d16ad4a04e28de958a2dba6cd2d3e1e02d9464736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x5625B5E662E54E19FAF8E3AFD2D16AD4A04E28DE958A2DBA PUSH13 0xD2D3E1E02D9464736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "339:3750:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220775625b5e662e54e19faf8e3afd2d16ad4a04e28de958a2dba6cd2d3e1e02d9464736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x5625B5E662E54E19FAF8E3AFD2D16AD4A04E28DE958A2DBA PUSH13 0xD2D3E1E02D9464736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "339:3750:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"flipTick(mapping(int16 => uint256),int24,int24)": "infinite",
								"nextInitializedTickWithinOneWord(mapping(int16 => uint256),int24,int24,bool)": "infinite",
								"position(int24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "INVALID",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220775625b5e662e54e19faf8e3afd2d16ad4a04e28de958a2dba6cd2d3e1e02d9464736f6c63430007060033",
									".code": [
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/TickBitmap.sol\":\"TickBitmap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"contracts/core/libraries/TickBitmap.sol\":{\"keccak256\":\"0xd829fadfca3f8f5870c877c7eeceb4a692603c16b711174526129987e8745f5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d2cbf3802f7e611708a45bc390ee9307d947e49b348294591659444b9989c05\",\"dweb:/ipfs/Qmcny7JNyVYCtcZG3b1BL4ThuKREmAkE9ZKaC3i32pnt7X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Stores a packed mapping of tick index to its initialized state",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/TickMath.sol\":313:8644  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/TickMath.sol\":313:8644  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e4369cc3d85a47546a752711b91428efe87c932f9ab54fa9d49354beb95ea76864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e4369cc3d85a47546a752711b91428efe87c932f9ab54fa9d49354beb95ea76864736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 CALLDATASIZE SWAP13 0xC3 0xD8 GAS SELFBALANCE SLOAD PUSH11 0x752711B91428EFE87C932F SWAP11 0xB5 0x4F 0xA9 0xD4 SWAP4 SLOAD 0xBE 0xB9 0x5E 0xA7 PUSH9 0x64736F6C6343000706 STOP CALLER ",
							"sourceMap": "313:8331:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e4369cc3d85a47546a752711b91428efe87c932f9ab54fa9d49354beb95ea76864736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 CALLDATASIZE SWAP13 0xC3 0xD8 GAS SELFBALANCE SLOAD PUSH11 0x752711B91428EFE87C932F SWAP11 0xB5 0x4F 0xA9 0xD4 SWAP4 SLOAD 0xBE 0xB9 0x5E 0xA7 PUSH9 0x64736F6C6343000706 STOP CALLER ",
							"sourceMap": "313:8331:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "INVALID",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e4369cc3d85a47546a752711b91428efe87c932f9ab54fa9d49354beb95ea76864736f6c63430007060033",
									".code": [
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "TransferHelper",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/TransferHelper.sol\":253:902  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/TransferHelper.sol\":253:902  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205f14c657273f9d0b538e050f2b1afc06e9d6f3c540c64cfa5bc92ab0b346b6ea64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f14c657273f9d0b538e050f2b1afc06e9d6f3c540c64cfa5bc92ab0b346b6ea64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F EQ 0xC6 JUMPI 0x27 EXTCODEHASH SWAP14 SIGNEXTEND MSTORE8 DUP15 SDIV 0xF 0x2B BYTE 0xFC MOD 0xE9 0xD6 RETURN 0xC5 BLOCKHASH 0xC6 0x4C STATICCALL JUMPDEST 0xC9 0x2A 0xB0 0xB3 CHAINID 0xB6 0xEA PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "253:649:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f14c657273f9d0b538e050f2b1afc06e9d6f3c540c64cfa5bc92ab0b346b6ea64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F EQ 0xC6 JUMPI 0x27 EXTCODEHASH SWAP14 SIGNEXTEND MSTORE8 DUP15 SDIV 0xF 0x2B BYTE 0xFC MOD 0xE9 0xD6 RETURN 0xC5 BLOCKHASH 0xC6 0x4C STATICCALL JUMPDEST 0xC9 0x2A 0xB0 0xB3 CHAINID 0xB6 0xEA PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "253:649:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "INVALID",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 253,
									"end": 902,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205f14c657273f9d0b538e050f2b1afc06e9d6f3c540c64cfa5bc92ab0b346b6ea64736f6c63430007060033",
									".code": [
										{
											"begin": 253,
											"end": 902,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 253,
											"end": 902,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 253,
											"end": 902,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 253,
											"end": 902,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 253,
											"end": 902,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 902,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 253,
											"end": 902,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 902,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 253,
											"end": 902,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"TransferHelper\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]},\"contracts/core/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3bbe07a0684d98efe73f7012e446873494e74983e1f75a16d42c25b956d61651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78ac9659c70ba3253a6e526ba5a144994fb3d32df2e9537787eeb45aae320aec\",\"dweb:/ipfs/QmbaZRbPP2wFZ9coJd2iyPM37hm3kXzPLuRtL6KKr1MCSL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/UnsafeMath.sol": {
				"UnsafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Math functions that do not check inputs or outputs",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/UnsafeMath.sol\":244:659  library UnsafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/UnsafeMath.sol\":244:659  library UnsafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122020037c21a6c9a8c96c3d6041914e3aaa6b0e7a297b3bd4bd3226d03c52f318a264736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020037c21a6c9a8c96c3d6041914e3aaa6b0e7a297b3bd4bd3226d03c52f318a264736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 SUB PUSH29 0x21A6C9A8C96C3D6041914E3AAA6B0E7A297B3BD4BD3226D03C52F318A2 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "244:415:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122020037c21a6c9a8c96c3d6041914e3aaa6b0e7a297b3bd4bd3226d03c52f318a264736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 SUB PUSH29 0x21A6C9A8C96C3D6041914E3AAA6B0E7A297B3BD4BD3226D03C52F318A2 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "244:415:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"divRoundingUp(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "INVALID",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 244,
									"end": 659,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020037c21a6c9a8c96c3d6041914e3aaa6b0e7a297b3bd4bd3226d03c52f318a264736f6c63430007060033",
									".code": [
										{
											"begin": 244,
											"end": 659,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 244,
											"end": 659,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 244,
											"end": 659,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 244,
											"end": 659,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 659,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 659,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 244,
											"end": 659,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 659,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 244,
											"end": 659,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math functions that do not check inputs or outputs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods that perform common math functions but do not do any overflow or underflow checks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/UnsafeMath.sol\":\"UnsafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods that perform common math functions but do not do any overflow or underflow checks",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "contracts/core/VeloOracle.sol:26:9: Warning: This declaration shadows an existing declaration.\n        uint price;\n        ^--------^\ncontracts/core/VeloOracle.sol:25:58: The shadowed declaration is here:\n    function GetPrice(address pool) public view returns (uint price) {\n                                                         ^--------^\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 744,
						"file": "contracts/core/VeloOracle.sol",
						"message": "The shadowed declaration is here:",
						"start": 734
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 767,
					"file": "contracts/core/VeloOracle.sol",
					"start": 757
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/core/VeloOracle.sol": {
				"ast": {
					"absolutePath": "contracts/core/VeloOracle.sol",
					"exportedSymbols": {
						"BitMath": [
							514
						],
						"FixedPoint128": [
							521
						],
						"FixedPoint96": [
							531
						],
						"FullMath": [
							704
						],
						"ICLPoolDerivedState": [
							235
						],
						"IERC20Minimal": [
							204
						],
						"LiquidityMath": [
							756
						],
						"LowGasSafeMath": [
							886
						],
						"Oracle": [
							1622
						],
						"Position": [
							1807
						],
						"SafeCast": [
							1877
						],
						"SqrtPriceMath": [
							2394
						],
						"Tick": [
							3013
						],
						"TickBitmap": [
							3269
						],
						"TickMath": [
							3804
						],
						"TransferHelper": [
							3855
						],
						"UnsafeMath": [
							3871
						],
						"VeloOracle": [
							132
						]
					},
					"id": 133,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolDerivedState.sol",
							"file": "./interfaces/pool/ICLPoolDerivedState.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 236,
							"src": "61:51:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
							"file": "./libraries/LowGasSafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 887,
							"src": "114:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SafeCast.sol",
							"file": "./libraries/SafeCast.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 1878,
							"src": "156:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/Tick.sol",
							"file": "./libraries/Tick.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 3014,
							"src": "192:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TickBitmap.sol",
							"file": "./libraries/TickBitmap.sol",
							"id": 6,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 3270,
							"src": "224:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/Position.sol",
							"file": "./libraries/Position.sol",
							"id": 7,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 1808,
							"src": "262:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/Oracle.sol",
							"file": "./libraries/Oracle.sol",
							"id": 8,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 1623,
							"src": "298:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FullMath.sol",
							"file": "./libraries/FullMath.sol",
							"id": 9,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 705,
							"src": "334:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FixedPoint128.sol",
							"file": "./libraries/FixedPoint128.sol",
							"id": 10,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 522,
							"src": "370:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TransferHelper.sol",
							"file": "./libraries/TransferHelper.sol",
							"id": 11,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 3856,
							"src": "411:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TickMath.sol",
							"file": "./libraries/TickMath.sol",
							"id": 12,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 3805,
							"src": "453:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
							"file": "./libraries/LiquidityMath.sol",
							"id": 13,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 757,
							"src": "489:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SqrtPriceMath.sol",
							"file": "./libraries/SqrtPriceMath.sol",
							"id": 14,
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 2395,
							"src": "530:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 132,
							"linearizedBaseContracts": [
								132
							],
							"name": "VeloOracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "11ea5441",
									"id": 16,
									"mutability": "mutable",
									"name": "V3Pool",
									"nodeType": "VariableDeclaration",
									"scope": 132,
									"src": "598:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICLPoolDerivedState_$235",
										"typeString": "contract ICLPoolDerivedState"
									},
									"typeName": {
										"id": 15,
										"name": "ICLPoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 235,
										"src": "598:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolDerivedState_$235",
											"typeString": "contract ICLPoolDerivedState"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "secondsAgos",
									"nodeType": "VariableDeclaration",
									"scope": 132,
									"src": "636:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
										"typeString": "uint32[]"
									},
									"typeName": {
										"baseType": {
											"id": 17,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "636:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										},
										"id": 18,
										"nodeType": "ArrayTypeName",
										"src": "636:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
											"typeString": "uint32[]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "30",
												"id": 19,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "668:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											{
												"hexValue": "31",
												"id": 20,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "670:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1_by_1",
													"typeString": "int_const 1"
												},
												"value": "1"
											}
										],
										"id": 21,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "667:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint8_$2_memory_ptr",
											"typeString": "uint8[2] memory"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "746:606:0",
										"statements": [
											{
												"assignments": [
													30
												],
												"declarations": [
													{
														"constant": false,
														"id": 30,
														"mutability": "mutable",
														"name": "price",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "757:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 29,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "757:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 31,
												"nodeType": "VariableDeclarationStatement",
												"src": "757:10:0"
											},
											{
												"assignments": [
													36,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "tickCumulatives",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "787:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
															"typeString": "int56[]"
														},
														"typeName": {
															"baseType": {
																"id": 34,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "787:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															},
															"id": 35,
															"nodeType": "ArrayTypeName",
															"src": "787:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
																"typeString": "int56[]"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"id": 41,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "856:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
																"typeString": "uint32[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage",
																"typeString": "uint32[] storage ref"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 38,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "842:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 37,
																"name": "ICLPoolDerivedState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "822:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICLPoolDerivedState_$235_$",
																	"typeString": "type(contract ICLPoolDerivedState)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "822:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICLPoolDerivedState_$235",
																"typeString": "contract ICLPoolDerivedState"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "observe",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 220,
														"src": "822:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
															"typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
														"typeString": "tuple(int56[] memory,uint160[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "786:82:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "ticka",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "879:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"typeName": {
															"id": 44,
															"name": "int56",
															"nodeType": "ElementaryTypeName",
															"src": "879:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"baseExpression": {
														"id": 46,
														"name": "tickCumulatives",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "893:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
															"typeString": "int56[] memory"
														}
													},
													"id": 48,
													"indexExpression": {
														"hexValue": "30",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "909:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "893:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "879:32:0"
											},
											{
												"assignments": [
													51
												],
												"declarations": [
													{
														"constant": false,
														"id": 51,
														"mutability": "mutable",
														"name": "tickb",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "922:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"typeName": {
															"id": 50,
															"name": "int56",
															"nodeType": "ElementaryTypeName",
															"src": "922:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 55,
												"initialValue": {
													"baseExpression": {
														"id": 52,
														"name": "tickCumulatives",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "936:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
															"typeString": "int56[] memory"
														}
													},
													"id": 54,
													"indexExpression": {
														"hexValue": "31",
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "936:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "922:32:0"
											},
											{
												"assignments": [
													57
												],
												"declarations": [
													{
														"constant": false,
														"id": 57,
														"mutability": "mutable",
														"name": "tick",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "965:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"typeName": {
															"id": 56,
															"name": "int56",
															"nodeType": "ElementaryTypeName",
															"src": "965:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 64,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 58,
																	"name": "ticka",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "979:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 59,
																	"name": "tickb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "985:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"src": "979:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															}
														],
														"id": 61,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "978:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "992:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "978:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "965:28:0"
											},
											{
												"assignments": [
													66
												],
												"declarations": [
													{
														"constant": false,
														"id": 66,
														"mutability": "mutable",
														"name": "tick24",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "1004:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 65,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "1004:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 71,
												"initialValue": {
													"arguments": [
														{
															"id": 69,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														],
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1019:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 67,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "1019:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1019:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1004:26:0"
											},
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"mutability": "mutable",
														"name": "sqrtRatioX96",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "1041:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 72,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 78,
												"initialValue": {
													"arguments": [
														{
															"id": 76,
															"name": "tick24",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1092:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 74,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3804,
															"src": "1064:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$3804_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3664,
														"src": "1064:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1064:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1041:58:0"
											},
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"mutability": "mutable",
														"name": "a",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "1110:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 79,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1110:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"arguments": [
														{
															"id": 83,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1130:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 81,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1122:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1110:33:0"
											},
											{
												"assignments": [
													87
												],
												"declarations": [
													{
														"constant": false,
														"id": 87,
														"mutability": "mutable",
														"name": "s",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "1154:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 86,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 88,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1167:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "32",
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1167:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 91,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1166:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1154:20:0"
											},
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "t",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "1185:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 93,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 99,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																"typeString": "int_const 6277...(50 digits omitted)...2896"
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1198:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "313932",
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1203:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_192_by_1",
																	"typeString": "int_const 192"
																},
																"value": "192"
															},
															"src": "1198:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																"typeString": "int_const 6277...(50 digits omitted)...2896"
															}
														}
													],
													"id": 98,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1197:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1185:22:0"
											},
											{
												"assignments": [
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 101,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "1218:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1218:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1231:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3134",
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1237:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_14_by_1",
																	"typeString": "int_const 14"
																},
																"value": "14"
															},
															"src": "1231:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000000000_by_1",
																"typeString": "int_const 100000000000000"
															}
														}
													],
													"id": 105,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1230:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100000000000000_by_1",
														"typeString": "int_const 100000000000000"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1218:22:0"
											},
											{
												"assignments": [
													108
												],
												"declarations": [
													{
														"constant": false,
														"id": 108,
														"mutability": "mutable",
														"name": "d",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "1251:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1251:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"initialValue": {
													"arguments": [
														{
															"id": 111,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "1279:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 112,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1281:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 113,
															"name": "t",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1283:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 109,
															"name": "FullMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "1263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FullMath_$704_$",
																"typeString": "type(library FullMath)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 660,
														"src": "1263:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1263:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1251:34:0"
											},
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 116,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "1296:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 117,
																		"name": "d",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 108,
																		"src": "1305:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 118,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 101,
																		"src": "1309:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1305:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 120,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1313:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1319:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1313:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																}
															],
															"id": 124,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1312:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														},
														"src": "1304:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1296:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1296:25:0"
											},
											{
												"expression": {
													"id": 128,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1339:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 28,
												"id": 129,
												"nodeType": "Return",
												"src": "1332:12:0"
											}
										]
									},
									"functionSelector": "f29d0040",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "699:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:14:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "price",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "734:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:12:0"
									},
									"scope": 132,
									"src": "681:671:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 133,
							"src": "573:782:0"
						}
					],
					"src": "33:1324:0"
				},
				"id": 0
			},
			"contracts/core/interfaces/IERC20Minimal.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/IERC20Minimal.sol",
					"exportedSymbols": {
						"IERC20Minimal": [
							204
						]
					},
					"id": 205,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 134,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "71:119:1",
								"text": "@title Minimal ERC20 interface for CL\n @notice Contains a subset of the full ERC20 interface that is used in CL"
							},
							"fullyImplemented": false,
							"id": 204,
							"linearizedBaseContracts": [
								204
							],
							"name": "IERC20Minimal",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "220:201:1",
										"text": "@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
									},
									"functionSelector": "70a08231",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:17:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "485:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:9:1"
									},
									"scope": 204,
									"src": "426:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "500:333:1",
										"text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
									},
									"functionSelector": "a9059cbb",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "856:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "875:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:35:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "909:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "909:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:6:1"
									},
									"scope": 204,
									"src": "838:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "921:250:1",
										"text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
									},
									"functionSelector": "dd62ed3e",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1195:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1210:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:32:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1250:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1249:9:1"
									},
									"scope": 204,
									"src": "1176:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1265:343:1",
										"text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
									},
									"functionSelector": "095ea7b3",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1630:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1647:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:33:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1681:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1681:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:6:1"
									},
									"scope": 204,
									"src": "1613:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "1693:371:1",
										"text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
									},
									"functionSelector": "23b872dd",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2091:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2107:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2126:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:51:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "2160:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2160:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:6:1"
									},
									"scope": 204,
									"src": "2069:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "2172:369:1",
										"text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
									},
									"id": 194,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "2561:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "2583:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "2603:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:57:1"
									},
									"src": "2546:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "2624:321:1",
										"text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
									},
									"id": 203,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2965:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2988:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:63:1"
									},
									"src": "2950:78:1"
								}
							],
							"scope": 205,
							"src": "190:2840:1"
						}
					],
					"src": "45:2986:1"
				},
				"id": 1
			},
			"contracts/core/interfaces/pool/ICLPoolDerivedState.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolDerivedState.sol",
					"exportedSymbols": {
						"ICLPoolDerivedState": [
							235
						]
					},
					"id": 236,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 206,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 207,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:2",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 235,
							"linearizedBaseContracts": [
								235
							],
							"name": "ICLPoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "329:1045:2",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "1396:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 209,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1396:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 210,
													"nodeType": "ArrayTypeName",
													"src": "1396:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1395:31:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "1474:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 213,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1474:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 214,
													"nodeType": "ArrayTypeName",
													"src": "1474:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "1506:51:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 216,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1506:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 217,
													"nodeType": "ArrayTypeName",
													"src": "1506:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1473:85:2"
									},
									"scope": 235,
									"src": "1379:180:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "1565:771:2",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2376:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 222,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2376:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2393:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 224,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2393:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:34:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2457:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 227,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2457:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2485:37:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 229,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2485:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2524:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 231,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2524:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:89:2"
									},
									"scope": 235,
									"src": "2341:205:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 236,
							"src": "293:2255:2"
						}
					],
					"src": "45:2504:2"
				},
				"id": 2
			},
			"contracts/core/libraries/BitMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/BitMath.sol",
					"exportedSymbols": {
						"BitMath": [
							514
						]
					},
					"id": 515,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 237,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:3",
								"text": "@title BitMath\n @dev This library provides functionality for computing bit properties of an unsigned integer"
							},
							"fullyImplemented": true,
							"id": 514,
							"linearizedBaseContracts": [
								514
							],
							"name": "BitMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "742:660:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 247,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "760:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "764:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "760:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "752:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "752:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "752:14:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 252,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "781:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "781:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 264,
												"nodeType": "IfStatement",
												"src": "777:102:3",
												"trueBody": {
													"id": 263,
													"nodeType": "Block",
													"src": "823:56:3",
													"statements": [
														{
															"expression": {
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 255,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "837:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "837:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 258,
															"nodeType": "ExpressionStatement",
															"src": "837:9:3"
														},
														{
															"expression": {
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 259,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "860:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "865:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "860:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 262,
															"nodeType": "ExpressionStatement",
															"src": "860:8:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 265,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "892:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "897:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "892:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 277,
												"nodeType": "IfStatement",
												"src": "888:84:3",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "918:54:3",
													"statements": [
														{
															"expression": {
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 268,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "932:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "938:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "932:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 271,
															"nodeType": "ExpressionStatement",
															"src": "932:8:3"
														},
														{
															"expression": {
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 272,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "954:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "959:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "954:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 275,
															"nodeType": "ExpressionStatement",
															"src": "954:7:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "985:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "990:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "985:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "981:76:3",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "1003:54:3",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 281,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "1017:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1023:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1017:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "1017:8:3"
														},
														{
															"expression": {
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 285,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "1039:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1044:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1039:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 288,
															"nodeType": "ExpressionStatement",
															"src": "1039:7:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 291,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1070:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1075:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "1070:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 303,
												"nodeType": "IfStatement",
												"src": "1066:72:3",
												"trueBody": {
													"id": 302,
													"nodeType": "Block",
													"src": "1084:54:3",
													"statements": [
														{
															"expression": {
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 294,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "1098:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1104:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1098:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 297,
															"nodeType": "ExpressionStatement",
															"src": "1098:8:3"
														},
														{
															"expression": {
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 298,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "1120:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1125:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1120:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 301,
															"nodeType": "ExpressionStatement",
															"src": "1120:7:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 304,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1151:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1156:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "1151:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "1147:68:3",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "1163:52:3",
													"statements": [
														{
															"expression": {
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 307,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "1177:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1183:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1177:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 310,
															"nodeType": "ExpressionStatement",
															"src": "1177:7:3"
														},
														{
															"expression": {
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 311,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "1198:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1203:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1198:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 314,
															"nodeType": "ExpressionStatement",
															"src": "1198:6:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 317,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1228:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "1228:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 329,
												"nodeType": "IfStatement",
												"src": "1224:67:3",
												"trueBody": {
													"id": 328,
													"nodeType": "Block",
													"src": "1239:52:3",
													"statements": [
														{
															"expression": {
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 320,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "1253:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1259:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1253:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 323,
															"nodeType": "ExpressionStatement",
															"src": "1253:7:3"
														},
														{
															"expression": {
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 324,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "1274:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1279:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1274:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 327,
															"nodeType": "ExpressionStatement",
															"src": "1274:6:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 330,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1304:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307834",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1309:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "0x4"
													},
													"src": "1304:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 342,
												"nodeType": "IfStatement",
												"src": "1300:66:3",
												"trueBody": {
													"id": 341,
													"nodeType": "Block",
													"src": "1314:52:3",
													"statements": [
														{
															"expression": {
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 333,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "1328:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1334:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1328:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 336,
															"nodeType": "ExpressionStatement",
															"src": "1328:7:3"
														},
														{
															"expression": {
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 337,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "1349:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1354:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1349:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 340,
															"nodeType": "ExpressionStatement",
															"src": "1349:6:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1379:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307832",
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1384:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "0x2"
													},
													"src": "1379:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 350,
												"nodeType": "IfStatement",
												"src": "1375:20:3",
												"trueBody": {
													"expression": {
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 346,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "1389:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1389:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 349,
													"nodeType": "ExpressionStatement",
													"src": "1389:6:3"
												}
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "209:457:3",
										"text": "@notice Returns the index of the most significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n @param x the value for which to compute the most significant bit, must be greater than 0\n @return r the index of the most significant bit"
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "699:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:11:3"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "733:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 243,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "733:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:9:3"
									},
									"scope": 514,
									"src": "671:731:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1965:822:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 361,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "1983:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1987:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1983:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 360,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1975:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "1975:14:3"
											},
											{
												"expression": {
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 366,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "2000:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323535",
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2004:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "2000:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "2000:7:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 370,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "2021:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2030:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 372,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2030:7:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 371,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2025:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2025:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2025:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "2021:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2045:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2021:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 388,
													"nodeType": "Block",
													"src": "2087:34:3",
													"statements": [
														{
															"expression": {
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 384,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "2101:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2101:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 387,
															"nodeType": "ExpressionStatement",
															"src": "2101:9:3"
														}
													]
												},
												"id": 389,
												"nodeType": "IfStatement",
												"src": "2017:104:3",
												"trueBody": {
													"id": 383,
													"nodeType": "Block",
													"src": "2048:33:3",
													"statements": [
														{
															"expression": {
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 379,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "2062:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2067:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2062:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 382,
															"nodeType": "ExpressionStatement",
															"src": "2062:8:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 390,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "2134:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2143:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 392,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "2143:6:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		}
																	],
																	"id": 391,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2138:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2138:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint64",
																	"typeString": "type(uint64)"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2138:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "2134:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2157:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2134:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 408,
													"nodeType": "Block",
													"src": "2198:33:3",
													"statements": [
														{
															"expression": {
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 404,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "2212:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2218:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2212:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 407,
															"nodeType": "ExpressionStatement",
															"src": "2212:8:3"
														}
													]
												},
												"id": 409,
												"nodeType": "IfStatement",
												"src": "2130:101:3",
												"trueBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "2160:32:3",
													"statements": [
														{
															"expression": {
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 399,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "2174:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2179:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2174:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 402,
															"nodeType": "ExpressionStatement",
															"src": "2174:7:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 410,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "2244:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2253:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 412,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2253:6:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 411,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2248:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2248:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "2244:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2267:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2244:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "2308:33:3",
													"statements": [
														{
															"expression": {
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 424,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "2322:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2328:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2322:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "2322:8:3"
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "2240:101:3",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "2270:32:3",
													"statements": [
														{
															"expression": {
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 419,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "2284:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2289:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2284:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 422,
															"nodeType": "ExpressionStatement",
															"src": "2284:7:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 430,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "2354:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2363:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 432,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "2363:6:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		}
																	],
																	"id": 431,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2358:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2358:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint16",
																	"typeString": "type(uint16)"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2358:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "2354:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2354:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 448,
													"nodeType": "Block",
													"src": "2418:33:3",
													"statements": [
														{
															"expression": {
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 444,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "2432:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2438:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2432:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "2432:8:3"
														}
													]
												},
												"id": 449,
												"nodeType": "IfStatement",
												"src": "2350:101:3",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "2380:32:3",
													"statements": [
														{
															"expression": {
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 439,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "2394:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2399:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2394:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 442,
															"nodeType": "ExpressionStatement",
															"src": "2394:7:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 450,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "2464:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2473:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 452,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "2473:5:3",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 451,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2468:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2468:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2468:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2464:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2486:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2464:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 468,
													"nodeType": "Block",
													"src": "2526:32:3",
													"statements": [
														{
															"expression": {
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 464,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "2540:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2546:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2540:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "2540:7:3"
														}
													]
												},
												"id": 469,
												"nodeType": "IfStatement",
												"src": "2460:98:3",
												"trueBody": {
													"id": 463,
													"nodeType": "Block",
													"src": "2489:31:3",
													"statements": [
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 459,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "2503:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2508:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2503:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "2503:6:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 470,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "2571:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307866",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2575:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "0xf"
														},
														"src": "2571:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2581:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2571:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 484,
													"nodeType": "Block",
													"src": "2621:32:3",
													"statements": [
														{
															"expression": {
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 480,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "2635:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2641:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2635:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 483,
															"nodeType": "ExpressionStatement",
															"src": "2635:7:3"
														}
													]
												},
												"id": 485,
												"nodeType": "IfStatement",
												"src": "2567:86:3",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "2584:31:3",
													"statements": [
														{
															"expression": {
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 475,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "2598:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2603:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2598:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 478,
															"nodeType": "ExpressionStatement",
															"src": "2598:6:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 486,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "2666:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307833",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2670:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "0x3"
														},
														"src": "2666:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2676:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2666:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 500,
													"nodeType": "Block",
													"src": "2716:32:3",
													"statements": [
														{
															"expression": {
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 496,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "2730:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2736:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2730:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 499,
															"nodeType": "ExpressionStatement",
															"src": "2730:7:3"
														}
													]
												},
												"id": 501,
												"nodeType": "IfStatement",
												"src": "2662:86:3",
												"trueBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "2679:31:3",
													"statements": [
														{
															"expression": {
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 491,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "2693:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2698:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2693:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 494,
															"nodeType": "ExpressionStatement",
															"src": "2693:6:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 502,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "2761:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2765:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x1"
														},
														"src": "2761:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2771:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2761:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "IfStatement",
												"src": "2757:23:3",
												"trueBody": {
													"expression": {
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 507,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "2774:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2779:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2774:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 510,
													"nodeType": "ExpressionStatement",
													"src": "2774:6:3"
												}
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "1408:480:3",
										"text": "@notice Returns the index of the least significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n @param x the value for which to compute the least significant bit, must be greater than 0\n @return r the index of the least significant bit"
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1922:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:11:3"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1956:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1956:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:9:3"
									},
									"scope": 514,
									"src": "1893:894:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 515,
							"src": "187:2602:3"
						}
					],
					"src": "45:2745:3"
				},
				"id": 3
			},
			"contracts/core/libraries/FixedPoint128.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/FixedPoint128.sol",
					"exportedSymbols": {
						"FixedPoint128": [
							521
						]
					},
					"id": 522,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 516,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 517,
								"nodeType": "StructuredDocumentation",
								"src": "71:140:4",
								"text": "@title FixedPoint128\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)"
							},
							"fullyImplemented": true,
							"id": 521,
							"linearizedBaseContracts": [
								521
							],
							"name": "FixedPoint128",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 520,
									"mutability": "constant",
									"name": "Q128",
									"nodeType": "VariableDeclaration",
									"scope": 521,
									"src": "239:68:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 518,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "239:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
										"id": 519,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "272:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										},
										"value": "0x100000000000000000000000000000000"
									},
									"visibility": "internal"
								}
							],
							"scope": 522,
							"src": "211:99:4"
						}
					],
					"src": "45:266:4"
				},
				"id": 4
			},
			"contracts/core/libraries/FixedPoint96.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/FixedPoint96.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							531
						]
					},
					"id": 532,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 523,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 524,
								"nodeType": "StructuredDocumentation",
								"src": "71:174:5",
								"text": "@title FixedPoint96\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n @dev Used in SqrtPriceMath.sol"
							},
							"fullyImplemented": true,
							"id": 531,
							"linearizedBaseContracts": [
								531
							],
							"name": "FixedPoint96",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 527,
									"mutability": "constant",
									"name": "RESOLUTION",
									"nodeType": "VariableDeclaration",
									"scope": 531,
									"src": "272:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 525,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "272:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3936",
										"id": 526,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "309:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96_by_1",
											"typeString": "int_const 96"
										},
										"value": "96"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 530,
									"mutability": "constant",
									"name": "Q96",
									"nodeType": "VariableDeclaration",
									"scope": 531,
									"src": "317:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 528,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307831303030303030303030303030303030303030303030303030",
										"id": 529,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "349:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
											"typeString": "int_const 79228162514264337593543950336"
										},
										"value": "0x1000000000000000000000000"
									},
									"visibility": "internal"
								}
							],
							"scope": 532,
							"src": "245:134:5"
						}
					],
					"src": "45:335:5"
				},
				"id": 5
			},
			"contracts/core/libraries/FullMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/FullMath.sol",
					"exportedSymbols": {
						"FullMath": [
							704
						]
					},
					"id": 705,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 533,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 534,
								"nodeType": "StructuredDocumentation",
								"src": "65:297:6",
								"text": "@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"
							},
							"fullyImplemented": true,
							"id": 704,
							"linearizedBaseContracts": [
								704
							],
							"name": "FullMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "847:3648:6",
										"statements": [
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "prod0",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "1160:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1160:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"nodeType": "VariableDeclarationStatement",
												"src": "1160:13:6"
											},
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "prod1",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "1228:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 549,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1228:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 551,
												"nodeType": "VariableDeclarationStatement",
												"src": "1228:13:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1304:141:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1318:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1335:1:6"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1338:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1345:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1341:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1341:6:6"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:20:6"
															},
															"variables": [
																{
																	"name": "mm",
																	"nodeType": "YulTypedName",
																	"src": "1322:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1361:18:6",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1374:1:6"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1377:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1370:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:9:6"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "1361:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1392:43:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1409:2:6"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1424:2:6"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1428:5:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1421:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:13:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1401:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:34:6"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "1392:5:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 537,
														"isOffset": false,
														"isSlot": false,
														"src": "1335:1:6",
														"valueSize": 1
													},
													{
														"declaration": 537,
														"isOffset": false,
														"isSlot": false,
														"src": "1374:1:6",
														"valueSize": 1
													},
													{
														"declaration": 539,
														"isOffset": false,
														"isSlot": false,
														"src": "1338:1:6",
														"valueSize": 1
													},
													{
														"declaration": 539,
														"isOffset": false,
														"isSlot": false,
														"src": "1377:1:6",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "1361:5:6",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "1413:5:6",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "1428:5:6",
														"valueSize": 1
													},
													{
														"declaration": 550,
														"isOffset": false,
														"isSlot": false,
														"src": "1392:5:6",
														"valueSize": 1
													}
												],
												"id": 552,
												"nodeType": "InlineAssembly",
												"src": "1295:150:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 553,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1517:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1526:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1517:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 566,
												"nodeType": "IfStatement",
												"src": "1513:179:6",
												"trueBody": {
													"id": 565,
													"nodeType": "Block",
													"src": "1529:163:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 557,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 541,
																			"src": "1551:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1565:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1551:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 556,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1543:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1543:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 561,
															"nodeType": "ExpressionStatement",
															"src": "1543:24:6"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1590:65:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1608:33:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod0",
																					"nodeType": "YulIdentifier",
																					"src": "1622:5:6"
																				},
																				{
																					"name": "denominator",
																					"nodeType": "YulIdentifier",
																					"src": "1629:11:6"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "1618:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1618:23:6"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:6"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 541,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1629:11:6",
																	"valueSize": 1
																},
																{
																	"declaration": 547,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1622:5:6",
																	"valueSize": 1
																},
																{
																	"declaration": 544,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1608:6:6",
																	"valueSize": 1
																}
															],
															"id": 562,
															"nodeType": "InlineAssembly",
															"src": "1581:74:6"
														},
														{
															"expression": {
																"id": 563,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "1675:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 545,
															"id": 564,
															"nodeType": "Return",
															"src": "1668:13:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 568,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "1805:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 569,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "1819:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1805:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1797:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "1797:28:6"
											},
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "remainder",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "2102:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 573,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2102:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 575,
												"nodeType": "VariableDeclarationStatement",
												"src": "2102:17:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2138:62:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2152:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2172:1:6"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2175:1:6"
																	},
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2178:11:6"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:25:6"
															},
															"variableNames": [
																{
																	"name": "remainder",
																	"nodeType": "YulIdentifier",
																	"src": "2152:9:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 537,
														"isOffset": false,
														"isSlot": false,
														"src": "2172:1:6",
														"valueSize": 1
													},
													{
														"declaration": 539,
														"isOffset": false,
														"isSlot": false,
														"src": "2175:1:6",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "2178:11:6",
														"valueSize": 1
													},
													{
														"declaration": 574,
														"isOffset": false,
														"isSlot": false,
														"src": "2152:9:6",
														"valueSize": 1
													}
												],
												"id": 576,
												"nodeType": "InlineAssembly",
												"src": "2129:71:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2273:108:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2287:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "prod1",
																		"nodeType": "YulIdentifier",
																		"src": "2300:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "2310:9:6"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "2321:5:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2307:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:32:6"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "2287:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2341:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2354:5:6"
																	},
																	{
																		"name": "remainder",
																		"nodeType": "YulIdentifier",
																		"src": "2361:9:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2350:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2350:21:6"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2341:5:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "2321:5:6",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "2341:5:6",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "2354:5:6",
														"valueSize": 1
													},
													{
														"declaration": 550,
														"isOffset": false,
														"isSlot": false,
														"src": "2287:5:6",
														"valueSize": 1
													},
													{
														"declaration": 550,
														"isOffset": false,
														"isSlot": false,
														"src": "2300:5:6",
														"valueSize": 1
													},
													{
														"declaration": 574,
														"isOffset": false,
														"isSlot": false,
														"src": "2310:9:6",
														"valueSize": 1
													},
													{
														"declaration": 574,
														"isOffset": false,
														"isSlot": false,
														"src": "2361:9:6",
														"valueSize": 1
													}
												],
												"id": 577,
												"nodeType": "InlineAssembly",
												"src": "2264:117:6"
											},
											{
												"assignments": [
													579
												],
												"declarations": [
													{
														"constant": false,
														"id": 579,
														"mutability": "mutable",
														"name": "twos",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "2530:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2530:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 584,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "2545:12:6",
														"subExpression": {
															"id": 580,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2546:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 582,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "2560:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2545:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2530:41:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2636:61:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2650:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2669:11:6"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2682:4:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2665:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2665:22:6"
															},
															"variableNames": [
																{
																	"name": "denominator",
																	"nodeType": "YulIdentifier",
																	"src": "2650:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "2650:11:6",
														"valueSize": 1
													},
													{
														"declaration": 541,
														"isOffset": false,
														"isSlot": false,
														"src": "2669:11:6",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "2682:4:6",
														"valueSize": 1
													}
												],
												"id": 585,
												"nodeType": "InlineAssembly",
												"src": "2627:70:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2770:49:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2784:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2797:5:6"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2804:4:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2793:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2793:16:6"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2784:5:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "2784:5:6",
														"valueSize": 1
													},
													{
														"declaration": 547,
														"isOffset": false,
														"isSlot": false,
														"src": "2797:5:6",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "2804:4:6",
														"valueSize": 1
													}
												],
												"id": 586,
												"nodeType": "InlineAssembly",
												"src": "2761:58:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3007:63:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3021:39:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3041:1:6",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "3044:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3037:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3037:12:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3051:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3033:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3058:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3029:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:31:6"
															},
															"variableNames": [
																{
																	"name": "twos",
																	"nodeType": "YulIdentifier",
																	"src": "3021:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "3021:4:6",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "3044:4:6",
														"valueSize": 1
													},
													{
														"declaration": 579,
														"isOffset": false,
														"isSlot": false,
														"src": "3051:4:6",
														"valueSize": 1
													}
												],
												"id": 587,
												"nodeType": "InlineAssembly",
												"src": "2998:72:6"
											},
											{
												"expression": {
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 588,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "3079:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 589,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3088:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 590,
															"name": "twos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "3096:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3088:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3079:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "3079:21:6"
											},
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "inv",
														"nodeType": "VariableDeclaration",
														"scope": 659,
														"src": "3434:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 594,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3434:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "33",
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3449:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 597,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "3453:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3449:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 599,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3448:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "^",
													"rightExpression": {
														"hexValue": "32",
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3468:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3448:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3434:35:6"
											},
											{
												"expression": {
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 603,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3684:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3691:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 605,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "3695:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 606,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "3709:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3695:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3691:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3684:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "3684:28:6"
											},
											{
												"expression": {
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 611,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3742:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3749:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 613,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "3753:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 614,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "3767:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3753:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3749:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3742:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "3742:28:6"
											},
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 619,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3801:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 621,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "3812:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 622,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "3826:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3812:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3808:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3801:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "3801:28:6"
											},
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 627,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3860:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3867:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 629,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "3871:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 630,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "3885:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3871:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3867:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3860:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "3860:28:6"
											},
											{
												"expression": {
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 635,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3919:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3926:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 637,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "3930:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 638,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "3944:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3930:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3926:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3919:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "3919:28:6"
											},
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 643,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3979:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3986:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 645,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "3990:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 646,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "4004:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3990:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3986:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3979:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "3979:28:6"
											},
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 651,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4445:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 652,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4454:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 653,
															"name": "inv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "4462:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4454:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4445:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "4445:20:6"
											},
											{
												"expression": {
													"id": 657,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 544,
													"src": "4482:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 545,
												"id": 658,
												"nodeType": "Return",
												"src": "4475:13:6"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "385:359:6",
										"text": "@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "765:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "776:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "787:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:43:6"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "831:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:16:6"
									},
									"scope": 704,
									"src": "749:3746:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "4885:177:6",
										"statements": [
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 672,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "4895:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 674,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "4911:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 675,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "4914:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 676,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "4917:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 673,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4904:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4904:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4895:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "4895:34:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 681,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "4950:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 682,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "4953:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 683,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "4956:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 680,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967280,
															"src": "4943:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4943:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4971:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4943:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 701,
												"nodeType": "IfStatement",
												"src": "4939:117:6",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "4974:82:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 688,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 670,
																			"src": "4996:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 691,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5010:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 690,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "5010:7:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 689,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "5005:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5005:13:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "5005:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4996:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 687,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4988:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4988:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 696,
															"nodeType": "ExpressionStatement",
															"src": "4988:35:6"
														},
														{
															"expression": {
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5037:8:6",
																"subExpression": {
																	"id": 697,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "5037:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 699,
															"nodeType": "ExpressionStatement",
															"src": "5037:8:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "4501:271:6",
										"text": "@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4803:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4814:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4814:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4825:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4825:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:43:6"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4869:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4869:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4868:16:6"
									},
									"scope": 704,
									"src": "4777:285:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 705,
							"src": "362:4702:6"
						}
					],
					"src": "32:5033:6"
				},
				"id": 6
			},
			"contracts/core/libraries/LiquidityMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
					"exportedSymbols": {
						"LiquidityMath": [
							756
						]
					},
					"id": 757,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 706,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 707,
								"nodeType": "StructuredDocumentation",
								"src": "71:38:7",
								"text": "@title Math library for liquidity"
							},
							"fullyImplemented": true,
							"id": 756,
							"linearizedBaseContracts": [
								756
							],
							"name": "LiquidityMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "456:163:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "470:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "474:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "470:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 752,
													"nodeType": "Block",
													"src": "548:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"id": 745,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 738,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 715,
																						"src": "571:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 744,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 739,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 710,
																							"src": "575:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 742,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 712,
																									"src": "587:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 741,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "579:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 740,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "579:7:7",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 743,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "579:10:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "575:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "571:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "570:20:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 747,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "594:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "570:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c41",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "597:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		},
																		"value": "LA"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		}
																	],
																	"id": 737,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "562:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "562:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 751,
															"nodeType": "ExpressionStatement",
															"src": "562:40:7"
														}
													]
												},
												"id": 753,
												"nodeType": "IfStatement",
												"src": "466:147:7",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "477:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"id": 729,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 721,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 715,
																						"src": "500:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 728,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 722,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 710,
																							"src": "504:1:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 726,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "-",
																									"prefix": true,
																									"src": "516:2:7",
																									"subExpression": {
																										"id": 725,
																										"name": "y",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 712,
																										"src": "517:1:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int128",
																											"typeString": "int128"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 724,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "508:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 723,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "508:7:7",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 727,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "508:11:7",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "504:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "500:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 730,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "499:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 731,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "523:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "499:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c53",
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "526:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		},
																		"value": "LS"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		}
																	],
																	"id": 720,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "491:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "491:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 735,
															"nodeType": "ExpressionStatement",
															"src": "491:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "137:241:7",
										"text": "@notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n @param x The liquidity before change\n @param y The delta by which liquidity should be changed\n @return z The liquidity delta"
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addDelta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "401:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 709,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "412:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 711,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "412:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:21:7"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "445:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 714,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:11:7"
									},
									"scope": 756,
									"src": "383:236:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 757,
							"src": "109:512:7"
						}
					],
					"src": "45:577:7"
				},
				"id": 7
			},
			"contracts/core/libraries/LowGasSafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
					"exportedSymbols": {
						"LowGasSafeMath": [
							886
						]
					},
					"id": 887,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 758,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 759,
								"nodeType": "StructuredDocumentation",
								"src": "71:178:8",
								"text": "@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost"
							},
							"fullyImplemented": true,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "LowGasSafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "504:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 770,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "523:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 771,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 762,
																				"src": "527:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 772,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 764,
																				"src": "531:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "527:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "523:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 775,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "522:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 776,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "537:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "522:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "514:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "514:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "514:25:8"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "278:152:8",
										"text": "@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "448:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "459:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:22:8"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "493:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:11:8"
									},
									"scope": 886,
									"src": "435:111:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "779:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 792,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 789,
																			"src": "798:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 793,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 784,
																				"src": "802:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 794,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 786,
																				"src": "806:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "802:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "798:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 797,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "797:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 798,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "812:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "797:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "789:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "789:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "789:25:8"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "552:153:8",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "723:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "734:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:22:8"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:11:8"
									},
									"scope": 886,
									"src": "710:111:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "1055:56:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 814,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "1073:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1078:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1073:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 817,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "1084:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 818,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "1088:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 819,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 808,
																						"src": "1092:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1088:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1084:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 822,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1083:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 823,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "1097:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1083:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 825,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "1102:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1083:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1073:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1065:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "1065:39:8"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "827:154:8",
										"text": "@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"
									},
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "999:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "1010:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:22:8"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "1044:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:11:8"
									},
									"scope": 886,
									"src": "986:125:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "1342:54:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 842,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 839,
																				"src": "1361:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 843,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 834,
																					"src": "1365:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 844,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 836,
																					"src": "1369:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1365:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1361:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 847,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1360:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 848,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "1375:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1360:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 850,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 836,
																			"src": "1381:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1386:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1381:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 853,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1380:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1360:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 841,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1352:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "1352:37:8"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "1117:154:8",
										"text": "@notice Returns x + y, reverts if overflows or underflows\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1289:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 833,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1299:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 835,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:20:8"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "1332:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 838,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:10:8"
									},
									"scope": 886,
									"src": "1276:120:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "1639:54:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 869,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 866,
																				"src": "1658:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 870,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 861,
																					"src": "1662:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 871,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "1666:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1662:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1658:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 874,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1657:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 875,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "1672:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1657:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 877,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 863,
																			"src": "1678:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1683:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1678:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 880,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1677:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1657:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1649:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "1649:37:8"
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "1402:166:8",
										"text": "@notice Returns x - y, reverts if overflows or underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1586:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 860,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1596:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 862,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1596:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:20:8"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "1629:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 865,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:10:8"
									},
									"scope": 886,
									"src": "1573:120:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 887,
							"src": "249:1446:8"
						}
					],
					"src": "45:1651:8"
				},
				"id": 8
			},
			"contracts/core/libraries/Oracle.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/Oracle.sol",
					"exportedSymbols": {
						"Oracle": [
							1622
						]
					},
					"id": 1623,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 889,
								"nodeType": "StructuredDocumentation",
								"src": "78:613:9",
								"text": "@title Oracle\n @notice Provides price and liquidity data useful for a wide variety of system designs\n @dev Instances of stored oracle data, \"observations\", are collected in the oracle array\n Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the\n maximum length of the oracle array. New slots will be added when the array is fully populated.\n Observations are overwritten when the full length of the oracle array is populated.\n The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()"
							},
							"fullyImplemented": true,
							"id": 1622,
							"linearizedBaseContracts": [
								1622
							],
							"name": "Oracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Oracle.Observation",
									"id": 898,
									"members": [
										{
											"constant": false,
											"id": 891,
											"mutability": "mutable",
											"name": "blockTimestamp",
											"nodeType": "VariableDeclaration",
											"scope": 898,
											"src": "791:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 890,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "791:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 893,
											"mutability": "mutable",
											"name": "tickCumulative",
											"nodeType": "VariableDeclaration",
											"scope": 898,
											"src": "917:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int56",
												"typeString": "int56"
											},
											"typeName": {
												"id": 892,
												"name": "int56",
												"nodeType": "ElementaryTypeName",
												"src": "917:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 895,
											"mutability": "mutable",
											"name": "secondsPerLiquidityCumulativeX128",
											"nodeType": "VariableDeclaration",
											"scope": 898,
											"src": "1063:41:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 894,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1063:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 897,
											"mutability": "mutable",
											"name": "initialized",
											"nodeType": "VariableDeclaration",
											"scope": 898,
											"src": "1171:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 896,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1171:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Observation",
									"nodeType": "StructDefinition",
									"scope": 1622,
									"src": "712:482:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "1987:419:9",
										"statements": [
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "delta",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "1997:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 912,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1997:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 914,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "2012:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 915,
															"name": "last",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "2029:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																"typeString": "struct Oracle.Observation memory"
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "blockTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 891,
														"src": "2029:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2012:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1997:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 920,
															"name": "blockTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "2107:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 921,
																	"name": "last",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "2151:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																		"typeString": "struct Oracle.Observation memory"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tickCumulative",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 893,
																"src": "2151:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 925,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "2179:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2173:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int56_$",
																			"typeString": "type(int56)"
																		},
																		"typeName": {
																			"id": 923,
																			"name": "int56",
																			"nodeType": "ElementaryTypeName",
																			"src": "2173:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2173:11:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 927,
																	"name": "delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "2187:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "2173:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															},
															"src": "2151:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 930,
																	"name": "last",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "2241:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																		"typeString": "struct Oracle.Observation memory"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "secondsPerLiquidityCumulativeX128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 895,
																"src": "2241:38:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 937,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 934,
																								"name": "delta",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 913,
																								"src": "2308:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							],
																							"id": 933,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2300:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							},
																							"typeName": {
																								"id": 932,
																								"name": "uint160",
																								"nodeType": "ElementaryTypeName",
																								"src": "2300:7:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 935,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2300:14:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"hexValue": "313238",
																						"id": 936,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2318:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_128_by_1",
																							"typeString": "int_const 128"
																						},
																						"value": "128"
																					},
																					"src": "2300:21:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"id": 938,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2299:23:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"components": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 941,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 939,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 907,
																							"src": "2326:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 940,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2338:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "2326:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseExpression": {
																						"hexValue": "31",
																						"id": 943,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2354:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"id": 944,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "Conditional",
																					"src": "2326:29:9",
																					"trueExpression": {
																						"id": 942,
																						"name": "liquidity",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 907,
																						"src": "2342:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 945,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2325:31:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "2299:57:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 947,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2298:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "2241:116:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"hexValue": "74727565",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2384:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 919,
														"name": "Observation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "2065:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Observation_$898_storage_ptr_$",
															"typeString": "type(struct Oracle.Observation storage pointer)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"blockTimestamp",
														"tickCumulative",
														"secondsPerLiquidityCumulativeX128",
														"initialized"
													],
													"nodeType": "FunctionCall",
													"src": "2065:334:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
														"typeString": "struct Oracle.Observation memory"
													}
												},
												"functionReturnParameters": 911,
												"id": 951,
												"nodeType": "Return",
												"src": "2058:341:9"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "1200:614:9",
										"text": "@notice Transforms a previous observation into a new observation, given the passage of time and the current tick and liquidity values\n @dev blockTimestamp _must_ be chronologically equal to or greater than last.blockTimestamp, safe for 0 or 1 overflows\n @param last The specified observation to be transformed\n @param blockTimestamp The timestamp of the new observation\n @param tick The active tick at the time of the new observation\n @param liquidity The total in-range liquidity at the time of the new observation\n @return Observation The newly populated observation"
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transform",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "last",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1838:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 900,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 898,
													"src": "1838:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1863:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 902,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1863:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1886:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 904,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1886:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1898:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 906,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1837:79:9"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1963:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 909,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 898,
													"src": "1963:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:20:9"
									},
									"scope": 1622,
									"src": "1819:587:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "3005:219:9",
										"statements": [
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 967,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "3015:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														"id": 969,
														"indexExpression": {
															"hexValue": "30",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3020:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3015:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_storage",
															"typeString": "struct Oracle.Observation storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 971,
																"name": "time",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "3067:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"hexValue": "30",
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3101:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3151:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "74727565",
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3179:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 970,
															"name": "Observation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3025:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Observation_$898_storage_ptr_$",
																"typeString": "type(struct Oracle.Observation storage pointer)"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"blockTimestamp",
															"tickCumulative",
															"secondsPerLiquidityCumulativeX128",
															"initialized"
														],
														"nodeType": "FunctionCall",
														"src": "3025:169:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
															"typeString": "struct Oracle.Observation memory"
														}
													},
													"src": "3015:179:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_storage",
														"typeString": "struct Oracle.Observation storage ref"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "3015:179:9"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "31",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3212:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "31",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3215:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"id": 980,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3211:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$",
														"typeString": "tuple(int_const 1,int_const 1)"
													}
												},
												"functionReturnParameters": 966,
												"id": 981,
												"nodeType": "Return",
												"src": "3204:13:9"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "2412:440:9",
										"text": "@notice Initialize the oracle array by writing the first slot. Called once for the lifecycle of the observations array\n @param self The stored oracle array\n @param time The time of the oracle initialization, via block.timestamp truncated to uint32\n @return cardinality The number of populated elements in the oracle array\n @return cardinalityNext The new length of the oracle array, independent of population"
									},
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2877:31:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 955,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 898,
														"src": "2877:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 957,
													"length": {
														"hexValue": "3635353335",
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2889:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "2877:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2910:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 959,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2910:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:46:9"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2957:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 962,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2957:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "cardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "2977:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 964,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2977:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:44:9"
									},
									"scope": 1622,
									"src": "2857:367:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "4689:614:9",
										"statements": [
											{
												"assignments": [
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "last",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "4699:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
															"typeString": "struct Oracle.Observation"
														},
														"typeName": {
															"id": 1007,
															"name": "Observation",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 898,
															"src": "4699:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
																"typeString": "struct Oracle.Observation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"baseExpression": {
														"id": 1009,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "4725:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
															"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
														}
													},
													"id": 1011,
													"indexExpression": {
														"id": 1010,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "4730:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4725:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_storage",
														"typeString": "struct Oracle.Observation storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4699:37:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1013,
															"name": "last",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "4826:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																"typeString": "struct Oracle.Observation memory"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "blockTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 891,
														"src": "4826:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1015,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "4849:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "4826:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1021,
												"nodeType": "IfStatement",
												"src": "4822:70:9",
												"trueBody": {
													"expression": {
														"components": [
															{
																"id": 1017,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "4873:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 1018,
																"name": "cardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "4880:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"id": 1019,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4872:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint16_$_t_uint16_$",
															"typeString": "tuple(uint16,uint16)"
														}
													},
													"functionReturnParameters": 1006,
													"id": 1020,
													"nodeType": "Return",
													"src": "4865:27:9"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1022,
															"name": "cardinalityNext",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "4975:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1023,
															"name": "cardinality",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "4993:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "4975:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1025,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "5008:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1026,
																		"name": "cardinality",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "5018:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5032:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5018:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"id": 1029,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5017:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "5008:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4975:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1041,
													"nodeType": "Block",
													"src": "5103:57:9",
													"statements": [
														{
															"expression": {
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1037,
																	"name": "cardinalityUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "5117:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1038,
																	"name": "cardinality",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "5138:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5117:32:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 1040,
															"nodeType": "ExpressionStatement",
															"src": "5117:32:9"
														}
													]
												},
												"id": 1042,
												"nodeType": "IfStatement",
												"src": "4971:189:9",
												"trueBody": {
													"id": 1036,
													"nodeType": "Block",
													"src": "5036:61:9",
													"statements": [
														{
															"expression": {
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1032,
																	"name": "cardinalityUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "5050:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1033,
																	"name": "cardinalityNext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "5071:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5050:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 1035,
															"nodeType": "ExpressionStatement",
															"src": "5050:36:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1043,
														"name": "indexUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "5170:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1044,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "5186:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5194:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5186:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"id": 1047,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5185:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"id": 1048,
															"name": "cardinalityUpdated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "5199:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "5185:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "5170:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "5170:47:9"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1052,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "5227:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														"id": 1054,
														"indexExpression": {
															"id": 1053,
															"name": "indexUpdated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "5232:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5227:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_storage",
															"typeString": "struct Oracle.Observation storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1056,
																"name": "last",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "5258:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																}
															},
															{
																"id": 1057,
																"name": "blockTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "5264:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"id": 1058,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "5280:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"id": 1059,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "5286:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 1055,
															"name": "transform",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "5248:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_Observation_$898_memory_ptr_$_t_uint32_$_t_int24_$_t_uint128_$returns$_t_struct$_Observation_$898_memory_ptr_$",
																"typeString": "function (struct Oracle.Observation memory,uint32,int24,uint128) pure returns (struct Oracle.Observation memory)"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5248:48:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
															"typeString": "struct Oracle.Observation memory"
														}
													},
													"src": "5227:69:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_storage",
														"typeString": "struct Oracle.Observation storage ref"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "5227:69:9"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "3230:1166:9",
										"text": "@notice Writes an oracle observation to the array\n @dev Writable at most once per block. Index represents the most recently written element. cardinality and index must be tracked externally.\n If the index is at the end of the allowable array length (according to cardinality), and the next cardinality\n is greater than the current one, cardinality may be increased. This restriction is created to preserve ordering.\n @param self The stored oracle array\n @param index The index of the observation that was most recently written to the observations array\n @param blockTimestamp The timestamp of the new observation\n @param tick The active tick at the time of the new observation\n @param liquidity The total in-range liquidity at the time of the new observation\n @param cardinality The number of populated elements in the oracle array\n @param cardinalityNext The new length of the oracle array, independent of population\n @return indexUpdated The new index of the most recently written element in the oracle array\n @return cardinalityUpdated The new cardinality of the oracle array"
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "write",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "4425:31:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 985,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 898,
														"src": "4425:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 987,
													"length": {
														"hexValue": "3635353335",
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4437:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "4425:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "4466:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 989,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4466:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "4488:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 991,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4488:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "4519:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 993,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4519:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "4539:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 995,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4539:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "4566:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 997,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4566:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "cardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "4594:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 999,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4594:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4415:207:9"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "indexUpdated",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "4641:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1002,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4641:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "cardinalityUpdated",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "4662:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1004,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4640:48:9"
									},
									"scope": 1622,
									"src": "4401:902:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "5784:441:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1079,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "5802:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5812:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5802:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5815:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															},
															"value": "I"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															}
														],
														"id": 1078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5794:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5794:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "5794:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1085,
														"name": "next",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "5917:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1086,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "5925:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "5917:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1090,
												"nodeType": "IfStatement",
												"src": "5913:35:9",
												"trueBody": {
													"expression": {
														"id": 1088,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "5941:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"functionReturnParameters": 1077,
													"id": 1089,
													"nodeType": "Return",
													"src": "5934:14:9"
												}
											},
											{
												"body": {
													"id": 1108,
													"nodeType": "Block",
													"src": "6147:51:9",
													"statements": [
														{
															"expression": {
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1101,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1069,
																			"src": "6161:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																				"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																			}
																		},
																		"id": 1103,
																		"indexExpression": {
																			"id": 1102,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1092,
																			"src": "6166:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6161:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$898_storage",
																			"typeString": "struct Oracle.Observation storage ref"
																		}
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "blockTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 891,
																	"src": "6161:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6186:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6161:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1107,
															"nodeType": "ExpressionStatement",
															"src": "6161:26:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1095,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "6132:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1096,
														"name": "next",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "6136:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "6132:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1109,
												"initializationExpression": {
													"assignments": [
														1092
													],
													"declarations": [
														{
															"constant": false,
															"id": 1092,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1109,
															"src": "6112:8:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"typeName": {
																"id": 1091,
																"name": "uint16",
																"nodeType": "ElementaryTypeName",
																"src": "6112:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1094,
													"initialValue": {
														"id": 1093,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "6123:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6112:18:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6142:3:9",
														"subExpression": {
															"id": 1098,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "6142:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 1100,
													"nodeType": "ExpressionStatement",
													"src": "6142:3:9"
												},
												"nodeType": "ForStatement",
												"src": "6107:91:9"
											},
											{
												"expression": {
													"id": 1110,
													"name": "next",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1073,
													"src": "6214:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1077,
												"id": 1111,
												"nodeType": "Return",
												"src": "6207:11:9"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "5309:368:9",
										"text": "@notice Prepares the oracle array to store up to `next` observations\n @param self The stored oracle array\n @param current The current next cardinality of the oracle array\n @param next The proposed next cardinality which will be populated in the oracle array\n @return next The next cardinality which will be populated in the oracle array"
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grow",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "5696:31:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 1066,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 898,
														"src": "5696:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 1068,
													"length": {
														"hexValue": "3635353335",
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5708:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "5696:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "current",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "5729:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1070,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5729:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "next",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "5745:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1072,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5745:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5695:62:9"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "5776:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1075,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5776:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:8:9"
									},
									"scope": 1622,
									"src": "5682:543:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "6733:271:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1125,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "6807:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 1126,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "6812:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "6807:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1128,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "6820:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 1129,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "6825:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "6820:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6807:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1136,
												"nodeType": "IfStatement",
												"src": "6803:41:9",
												"trueBody": {
													"expression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1132,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "6838:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 1133,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "6843:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "6838:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"functionReturnParameters": 1124,
													"id": 1135,
													"nodeType": "Return",
													"src": "6831:13:9"
												}
											},
											{
												"assignments": [
													1138
												],
												"declarations": [
													{
														"constant": false,
														"id": 1138,
														"mutability": "mutable",
														"name": "aAdjusted",
														"nodeType": "VariableDeclaration",
														"scope": 1167,
														"src": "6855:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6855:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1149,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1139,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "6875:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1140,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "6879:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "6875:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1143,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "6890:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_4294967296_by_1",
																"typeString": "int_const 4294967296"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6894:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3332",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6899:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "6894:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4294967296_by_1",
																"typeString": "int_const 4294967296"
															}
														},
														"src": "6890:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6875:26:9",
													"trueExpression": {
														"id": 1142,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "6886:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6855:46:9"
											},
											{
												"assignments": [
													1151
												],
												"declarations": [
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "bAdjusted",
														"nodeType": "VariableDeclaration",
														"scope": 1167,
														"src": "6911:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6911:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1162,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1152,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "6931:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1153,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "6935:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "6931:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1156,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "6946:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_4294967296_by_1",
																"typeString": "int_const 4294967296"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6950:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3332",
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6955:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "6950:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4294967296_by_1",
																"typeString": "int_const 4294967296"
															}
														},
														"src": "6946:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6931:26:9",
													"trueExpression": {
														"id": 1155,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "6942:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6911:46:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1163,
														"name": "aAdjusted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "6975:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1164,
														"name": "bAdjusted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "6988:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6975:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1124,
												"id": 1166,
												"nodeType": "Return",
												"src": "6968:29:9"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "6231:423:9",
										"text": "@notice comparator for 32-bit timestamps\n @dev safe for 0 or 1 overflows, a and b _must_ be chronologically before or equal to time\n @param time A timestamp truncated to 32 bits\n @param a A comparison timestamp from which to determine the relative position of `time`\n @param b From which to determine the relative position of `time`\n @return bool Whether `a` is chronologically <= `b`"
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lte",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "6672:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1115,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6672:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "6685:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1117,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6685:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "6695:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1119,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6695:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6671:33:9"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "6727:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6727:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6726:6:9"
									},
									"scope": 1622,
									"src": "6659:345:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "8187:818:9",
										"statements": [
											{
												"assignments": [
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "l",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "8197:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8197:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1196,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "8210:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8218:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8210:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"id": 1193,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8209:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1194,
														"name": "cardinality",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "8223:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "8209:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8197:37:9"
											},
											{
												"assignments": [
													1198
												],
												"declarations": [
													{
														"constant": false,
														"id": 1198,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "8266:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8266:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1204,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1199,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "8278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1200,
															"name": "cardinality",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "8282:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "8278:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8296:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8278:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8266:31:9"
											},
											{
												"assignments": [
													1206
												],
												"declarations": [
													{
														"constant": false,
														"id": 1206,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 1285,
														"src": "8329:9:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1205,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8329:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1207,
												"nodeType": "VariableDeclarationStatement",
												"src": "8329:9:9"
											},
											{
												"body": {
													"id": 1283,
													"nodeType": "Block",
													"src": "8361:638:9",
													"statements": [
														{
															"expression": {
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1209,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "8375:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1210,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "8380:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1211,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1198,
																					"src": "8384:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8380:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1213,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8379:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8389:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "8379:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8375:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1217,
															"nodeType": "ExpressionStatement",
															"src": "8375:15:9"
														},
														{
															"expression": {
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1218,
																	"name": "beforeOrAt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "8405:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																		"typeString": "struct Oracle.Observation memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1219,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1173,
																		"src": "8418:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																			"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																		}
																	},
																	"id": 1223,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1220,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1206,
																			"src": "8423:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 1221,
																			"name": "cardinality",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1181,
																			"src": "8427:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "8423:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8418:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$898_storage",
																		"typeString": "struct Oracle.Observation storage ref"
																	}
																},
																"src": "8405:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																}
															},
															"id": 1225,
															"nodeType": "ExpressionStatement",
															"src": "8405:34:9"
														},
														{
															"condition": {
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8550:23:9",
																"subExpression": {
																	"expression": {
																		"id": 1226,
																		"name": "beforeOrAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "8551:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 897,
																	"src": "8551:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1237,
															"nodeType": "IfStatement",
															"src": "8546:97:9",
															"trueBody": {
																"id": 1236,
																"nodeType": "Block",
																"src": "8575:68:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1229,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1189,
																				"src": "8593:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1230,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1206,
																					"src": "8597:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8601:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "8597:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8593:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1234,
																		"nodeType": "ExpressionStatement",
																		"src": "8593:9:9"
																	},
																	{
																		"id": 1235,
																		"nodeType": "Continue",
																		"src": "8620:8:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1238,
																	"name": "atOrAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "8657:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																		"typeString": "struct Oracle.Observation memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1239,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1173,
																		"src": "8669:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																			"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																		}
																	},
																	"id": 1246,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1242,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1240,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1206,
																						"src": "8675:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1241,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8679:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "8675:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1243,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8674:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 1244,
																			"name": "cardinality",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1181,
																			"src": "8684:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "8674:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8669:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$898_storage",
																		"typeString": "struct Oracle.Observation storage ref"
																	}
																},
																"src": "8657:39:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																}
															},
															"id": 1248,
															"nodeType": "ExpressionStatement",
															"src": "8657:39:9"
														},
														{
															"assignments": [
																1250
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1250,
																	"mutability": "mutable",
																	"name": "targetAtOrAfter",
																	"nodeType": "VariableDeclaration",
																	"scope": 1283,
																	"src": "8711:20:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1249,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "8711:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1257,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "8738:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"expression": {
																			"id": 1253,
																			"name": "beforeOrAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1184,
																			"src": "8744:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "blockTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 891,
																		"src": "8744:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"id": 1255,
																		"name": "target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1177,
																		"src": "8771:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 1251,
																	"name": "lte",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "8734:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$",
																		"typeString": "function (uint32,uint32,uint32) pure returns (bool)"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8734:44:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8711:67:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1258,
																	"name": "targetAtOrAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "8845:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1260,
																			"name": "time",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1175,
																			"src": "8868:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"id": 1261,
																			"name": "target",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "8874:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"expression": {
																				"id": 1262,
																				"name": "atOrAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1186,
																				"src": "8882:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																					"typeString": "struct Oracle.Observation memory"
																				}
																			},
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "blockTimestamp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 891,
																			"src": "8882:24:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		],
																		"id": 1259,
																		"name": "lte",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "8864:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$",
																			"typeString": "function (uint32,uint32,uint32) pure returns (bool)"
																		}
																	},
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8864:43:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8845:62:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1267,
															"nodeType": "IfStatement",
															"src": "8841:73:9",
															"trueBody": {
																"id": 1266,
																"nodeType": "Break",
																"src": "8909:5:9"
															}
														},
														{
															"condition": {
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8933:16:9",
																"subExpression": {
																	"id": 1268,
																	"name": "targetAtOrAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "8934:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1276,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "8979:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1277,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1206,
																			"src": "8983:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8987:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8983:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8979:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1281,
																"nodeType": "ExpressionStatement",
																"src": "8979:9:9"
															},
															"id": 1282,
															"nodeType": "IfStatement",
															"src": "8929:59:9",
															"trueBody": {
																"expression": {
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1270,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "8951:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1271,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1206,
																			"src": "8955:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8959:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8955:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8951:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1275,
																"nodeType": "ExpressionStatement",
																"src": "8951:9:9"
															}
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8355:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 1284,
												"nodeType": "WhileStatement",
												"src": "8348:651:9"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "7010:944:9",
										"text": "@notice Fetches the observations beforeOrAt and atOrAfter a target, i.e. where [beforeOrAt, atOrAfter] is satisfied.\n The result may be the same observation, or adjacent observations.\n @dev The answer must be contained in the array, used when the target is located within the stored observation\n boundaries: older than the most recent observation and younger, or the same age as, the oldest observation\n @param self The stored oracle array\n @param time The current block.timestamp\n @param target The timestamp at which the reserved observation should be for\n @param index The index of the observation that was most recently written to the observations array\n @param cardinality The number of populated elements in the oracle array\n @return beforeOrAt The observation recorded before, or at, the target\n @return atOrAfter The observation recorded at, or after, the target"
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "binarySearch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "7981:31:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 1170,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 898,
														"src": "7981:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 1172,
													"length": {
														"hexValue": "3635353335",
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7993:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "7981:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8014:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1174,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8014:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8027:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1176,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8027:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8042:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1178,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8042:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8056:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1180,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8056:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7980:95:9"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "beforeOrAt",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8122:29:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 1183,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 898,
													"src": "8122:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "atOrAfter",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8153:28:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 1185,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 898,
													"src": "8153:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8121:61:9"
									},
									"scope": 1622,
									"src": "7959:1046:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "10336:1118:9",
										"statements": [
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1310,
														"name": "beforeOrAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "10409:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
															"typeString": "struct Oracle.Observation memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1311,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "10422:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														"id": 1313,
														"indexExpression": {
															"id": 1312,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "10427:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10422:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_storage",
															"typeString": "struct Oracle.Observation storage ref"
														}
													},
													"src": "10409:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
														"typeString": "struct Oracle.Observation memory"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "10409:24:9"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 1317,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "10552:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"expression": {
																"id": 1318,
																"name": "beforeOrAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "10558:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "blockTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 891,
															"src": "10558:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 1320,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "10585:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 1316,
														"name": "lte",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "10548:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$",
															"typeString": "function (uint32,uint32,uint32) pure returns (bool)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10548:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1343,
												"nodeType": "IfStatement",
												"src": "10544:443:9",
												"trueBody": {
													"id": 1342,
													"nodeType": "Block",
													"src": "10594:393:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1322,
																		"name": "beforeOrAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "10612:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "blockTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 891,
																	"src": "10612:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1324,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "10641:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "10612:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1340,
																"nodeType": "Block",
																"src": "10826:151:9",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 1331,
																					"name": "beforeOrAt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1306,
																					"src": "10903:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1333,
																							"name": "beforeOrAt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1306,
																							"src": "10925:10:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																								"typeString": "struct Oracle.Observation memory"
																							}
																						},
																						{
																							"id": 1334,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1295,
																							"src": "10937:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						{
																							"id": 1335,
																							"name": "tick",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1297,
																							"src": "10945:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						{
																							"id": 1336,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1301,
																							"src": "10951:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																								"typeString": "struct Oracle.Observation memory"
																							},
																							{
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							},
																							{
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							},
																							{
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						],
																						"id": 1332,
																						"name": "transform",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 953,
																						"src": "10915:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_struct$_Observation_$898_memory_ptr_$_t_uint32_$_t_int24_$_t_uint128_$returns$_t_struct$_Observation_$898_memory_ptr_$",
																							"typeString": "function (struct Oracle.Observation memory,uint32,int24,uint128) pure returns (struct Oracle.Observation memory)"
																						}
																					},
																					"id": 1337,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10915:46:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				}
																			],
																			"id": 1338,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "10902:60:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_struct$_Observation_$898_memory_ptr_$_t_struct$_Observation_$898_memory_ptr_$",
																				"typeString": "tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"
																			}
																		},
																		"functionReturnParameters": 1309,
																		"id": 1339,
																		"nodeType": "Return",
																		"src": "10895:67:9"
																	}
																]
															},
															"id": 1341,
															"nodeType": "IfStatement",
															"src": "10608:369:9",
															"trueBody": {
																"id": 1330,
																"nodeType": "Block",
																"src": "10649:171:9",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 1326,
																					"name": "beforeOrAt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1306,
																					"src": "10783:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				},
																				{
																					"id": 1327,
																					"name": "atOrAfter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1308,
																					"src": "10795:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				}
																			],
																			"id": 1328,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "10782:23:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_struct$_Observation_$898_memory_ptr_$_t_struct$_Observation_$898_memory_ptr_$",
																				"typeString": "tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"
																			}
																		},
																		"functionReturnParameters": 1309,
																		"id": 1329,
																		"nodeType": "Return",
																		"src": "10775:30:9"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1344,
														"name": "beforeOrAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "11050:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
															"typeString": "struct Oracle.Observation memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1345,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "11063:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														"id": 1352,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1346,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "11069:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11077:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11069:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"id": 1349,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11068:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1350,
																"name": "cardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "11082:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "11068:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11063:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_storage",
															"typeString": "struct Oracle.Observation storage ref"
														}
													},
													"src": "11050:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
														"typeString": "struct Oracle.Observation memory"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "11050:44:9"
											},
											{
												"condition": {
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11108:23:9",
													"subExpression": {
														"expression": {
															"id": 1355,
															"name": "beforeOrAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "11109:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																"typeString": "struct Oracle.Observation memory"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 897,
														"src": "11109:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1364,
												"nodeType": "IfStatement",
												"src": "11104:49:9",
												"trueBody": {
													"expression": {
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1358,
															"name": "beforeOrAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "11133:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																"typeString": "struct Oracle.Observation memory"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"baseExpression": {
																"id": 1359,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "11146:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																	"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																}
															},
															"id": 1361,
															"indexExpression": {
																"hexValue": "30",
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11151:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11146:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$898_storage",
																"typeString": "struct Oracle.Observation storage ref"
															}
														},
														"src": "11133:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
															"typeString": "struct Oracle.Observation memory"
														}
													},
													"id": 1363,
													"nodeType": "ExpressionStatement",
													"src": "11133:20:9"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1367,
																	"name": "time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "11264:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"expression": {
																		"id": 1368,
																		"name": "beforeOrAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "11270:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "blockTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 891,
																	"src": "11270:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"id": 1370,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "11297:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																],
																"id": 1366,
																"name": "lte",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "11260:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$",
																	"typeString": "function (uint32,uint32,uint32) pure returns (bool)"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11260:44:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f4c44",
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11306:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d30c0d219016dd7e5cf2b2c30c4d7c091820fc329f335b57cab26b9ff3384a9e",
																"typeString": "literal_string \"OLD\""
															},
															"value": "OLD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d30c0d219016dd7e5cf2b2c30c4d7c091820fc329f335b57cab26b9ff3384a9e",
																"typeString": "literal_string \"OLD\""
															}
														],
														"id": 1365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11252:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11252:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "11252:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1376,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "11408:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														{
															"id": 1377,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "11414:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 1378,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "11420:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 1379,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1299,
															"src": "11428:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1380,
															"name": "cardinality",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "11435:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 1375,
														"name": "binarySearch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "11395:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_uint16_$_t_uint16_$returns$_t_struct$_Observation_$898_memory_ptr_$_t_struct$_Observation_$898_memory_ptr_$",
															"typeString": "function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,uint16,uint16) view returns (struct Oracle.Observation memory,struct Oracle.Observation memory)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11395:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_struct$_Observation_$898_memory_ptr_$_t_struct$_Observation_$898_memory_ptr_$",
														"typeString": "tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"
													}
												},
												"functionReturnParameters": 1309,
												"id": 1382,
												"nodeType": "Return",
												"src": "11388:59:9"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "9011:1013:9",
										"text": "@notice Fetches the observations beforeOrAt and atOrAfter a given target, i.e. where [beforeOrAt, atOrAfter] is satisfied\n @dev Assumes there is at least 1 initialized observation.\n Used by observeSingle() to compute the counterfactual accumulator values as of a given block timestamp.\n @param self The stored oracle array\n @param time The current block.timestamp\n @param target The timestamp at which the reserved observation should be for\n @param tick The active tick at the time of the returned or simulated observation\n @param index The index of the observation that was most recently written to the observations array\n @param liquidity The total pool liquidity at the time of the call\n @param cardinality The number of populated elements in the oracle array\n @return beforeOrAt The observation which occurred at, or before, the given timestamp\n @return atOrAfter The observation which occurred at, or after, the given timestamp"
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSurroundingObservations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10074:31:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 1288,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 898,
														"src": "10074:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 1290,
													"length": {
														"hexValue": "3635353335",
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10086:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "10074:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10115:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1292,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "10115:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10136:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1294,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "10136:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10159:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1296,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10159:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10179:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1298,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10179:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10201:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1300,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "10201:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10228:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1302,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10228:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10064:188:9"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "beforeOrAt",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10275:29:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 1305,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 898,
													"src": "10275:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "atOrAfter",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "10306:28:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 1307,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 898,
													"src": "10306:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10274:61:9"
									},
									"scope": 1622,
									"src": "10029:1425:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "12868:1682:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1408,
														"name": "secondsAgo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "12882:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12896:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12882:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1438,
												"nodeType": "IfStatement",
												"src": "12878:257:9",
												"trueBody": {
													"id": 1437,
													"nodeType": "Block",
													"src": "12899:236:9",
													"statements": [
														{
															"assignments": [
																1412
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1412,
																	"mutability": "mutable",
																	"name": "last",
																	"nodeType": "VariableDeclaration",
																	"scope": 1437,
																	"src": "12913:23:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																		"typeString": "struct Oracle.Observation"
																	},
																	"typeName": {
																		"id": 1411,
																		"name": "Observation",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 898,
																		"src": "12913:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
																			"typeString": "struct Oracle.Observation"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1416,
															"initialValue": {
																"baseExpression": {
																	"id": 1413,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "12939:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																		"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																	}
																},
																"id": 1415,
																"indexExpression": {
																	"id": 1414,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "12944:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12939:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$898_storage",
																	"typeString": "struct Oracle.Observation storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12913:37:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1417,
																		"name": "last",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "12968:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "blockTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 891,
																	"src": "12968:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1419,
																	"name": "time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "12991:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "12968:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1430,
															"nodeType": "IfStatement",
															"src": "12964:78:9",
															"trueBody": {
																"expression": {
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1421,
																		"name": "last",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1412,
																		"src": "12997:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1423,
																				"name": "last",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1412,
																				"src": "13014:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																					"typeString": "struct Oracle.Observation memory"
																				}
																			},
																			{
																				"id": 1424,
																				"name": "time",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1391,
																				"src": "13020:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			{
																				"id": 1425,
																				"name": "tick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1395,
																				"src": "13026:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			{
																				"id": 1426,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1399,
																				"src": "13032:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																					"typeString": "struct Oracle.Observation memory"
																				},
																				{
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				{
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 1422,
																			"name": "transform",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 953,
																			"src": "13004:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_Observation_$898_memory_ptr_$_t_uint32_$_t_int24_$_t_uint128_$returns$_t_struct$_Observation_$898_memory_ptr_$",
																				"typeString": "function (struct Oracle.Observation memory,uint32,int24,uint128) pure returns (struct Oracle.Observation memory)"
																			}
																		},
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13004:38:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"src": "12997:45:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																		"typeString": "struct Oracle.Observation memory"
																	}
																},
																"id": 1429,
																"nodeType": "ExpressionStatement",
																"src": "12997:45:9"
															}
														},
														{
															"expression": {
																"components": [
																	{
																		"expression": {
																			"id": 1431,
																			"name": "last",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "13064:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tickCumulative",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "13064:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int56",
																			"typeString": "int56"
																		}
																	},
																	{
																		"expression": {
																			"id": 1433,
																			"name": "last",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1412,
																			"src": "13085:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "secondsPerLiquidityCumulativeX128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 895,
																		"src": "13085:38:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 1435,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13063:61:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																	"typeString": "tuple(int56,uint160)"
																}
															},
															"functionReturnParameters": 1407,
															"id": 1436,
															"nodeType": "Return",
															"src": "13056:68:9"
														}
													]
												}
											},
											{
												"assignments": [
													1440
												],
												"declarations": [
													{
														"constant": false,
														"id": 1440,
														"mutability": "mutable",
														"name": "target",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "13145:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1439,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "13145:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1444,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1441,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "13161:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1442,
														"name": "secondsAgo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "13168:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "13161:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13145:33:9"
											},
											{
												"assignments": [
													1446,
													1448
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "beforeOrAt",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "13190:29:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
															"typeString": "struct Oracle.Observation"
														},
														"typeName": {
															"id": 1445,
															"name": "Observation",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 898,
															"src": "13190:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
																"typeString": "struct Oracle.Observation"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1448,
														"mutability": "mutable",
														"name": "atOrAfter",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "13221:28:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
															"typeString": "struct Oracle.Observation"
														},
														"typeName": {
															"id": 1447,
															"name": "Observation",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 898,
															"src": "13221:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
																"typeString": "struct Oracle.Observation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1458,
												"initialValue": {
													"arguments": [
														{
															"id": 1450,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "13292:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														{
															"id": 1451,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "13298:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 1452,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "13304:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 1453,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "13312:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 1454,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "13318:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1455,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "13325:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 1456,
															"name": "cardinality",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "13336:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 1449,
														"name": "getSurroundingObservations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "13265:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_int24_$_t_uint16_$_t_uint128_$_t_uint16_$returns$_t_struct$_Observation_$898_memory_ptr_$_t_struct$_Observation_$898_memory_ptr_$",
															"typeString": "function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16) view returns (struct Oracle.Observation memory,struct Oracle.Observation memory)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13265:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_struct$_Observation_$898_memory_ptr_$_t_struct$_Observation_$898_memory_ptr_$",
														"typeString": "tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13189:159:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1459,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "13363:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1460,
															"name": "beforeOrAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "13373:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																"typeString": "struct Oracle.Observation memory"
															}
														},
														"id": 1461,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "blockTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 891,
														"src": "13373:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "13363:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1470,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "13557:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1471,
																"name": "atOrAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1448,
																"src": "13567:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "blockTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 891,
															"src": "13567:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "13557:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1531,
														"nodeType": "Block",
														"src": "13745:799:9",
														"statements": [
															{
																"assignments": [
																	1482
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1482,
																		"mutability": "mutable",
																		"name": "observationTimeDelta",
																		"nodeType": "VariableDeclaration",
																		"scope": 1531,
																		"src": "13794:27:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"typeName": {
																			"id": 1481,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "13794:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1488,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1483,
																			"name": "atOrAfter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "13824:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "blockTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 891,
																		"src": "13824:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1485,
																			"name": "beforeOrAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "13851:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "blockTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 891,
																		"src": "13851:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "13824:52:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "13794:82:9"
															},
															{
																"assignments": [
																	1490
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1490,
																		"mutability": "mutable",
																		"name": "targetDelta",
																		"nodeType": "VariableDeclaration",
																		"scope": 1531,
																		"src": "13890:18:9",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"typeName": {
																			"id": 1489,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "13890:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1495,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1491,
																		"name": "target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "13911:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1492,
																			"name": "beforeOrAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "13920:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 1493,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "blockTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 891,
																		"src": "13920:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "13911:34:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "13890:55:9"
															},
															{
																"expression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			},
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1496,
																					"name": "beforeOrAt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1446,
																					"src": "13984:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				},
																				"id": 1497,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "tickCumulative",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 893,
																				"src": "13984:25:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				},
																				"id": 1508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_int56",
																								"typeString": "int56"
																							},
																							"id": 1505,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_int56",
																											"typeString": "int56"
																										},
																										"id": 1502,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 1498,
																												"name": "atOrAfter",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1448,
																												"src": "14034:9:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																													"typeString": "struct Oracle.Observation memory"
																												}
																											},
																											"id": 1499,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "tickCumulative",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 893,
																											"src": "14034:24:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_int56",
																												"typeString": "int56"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"expression": {
																												"id": 1500,
																												"name": "beforeOrAt",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1446,
																												"src": "14061:10:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																													"typeString": "struct Oracle.Observation memory"
																												}
																											},
																											"id": 1501,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "tickCumulative",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 893,
																											"src": "14061:25:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_int56",
																												"typeString": "int56"
																											}
																										},
																										"src": "14034:52:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int56",
																											"typeString": "int56"
																										}
																									}
																								],
																								"id": 1503,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "14033:54:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int56",
																									"typeString": "int56"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 1504,
																								"name": "observationTimeDelta",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1482,
																								"src": "14090:20:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"src": "14033:77:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int56",
																								"typeString": "int56"
																							}
																						}
																					],
																					"id": 1506,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "14032:79:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int56",
																						"typeString": "int56"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1507,
																					"name": "targetDelta",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1490,
																					"src": "14114:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "14032:93:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"src": "13984:141:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1510,
																					"name": "beforeOrAt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1446,
																					"src": "14143:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				},
																				"id": 1511,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "secondsPerLiquidityCumulativeX128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 895,
																				"src": "14143:44:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1526,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1523,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"arguments": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint160",
																													"typeString": "uint160"
																												},
																												"id": 1520,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"expression": {
																														"id": 1516,
																														"name": "atOrAfter",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1448,
																														"src": "14314:9:9",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																															"typeString": "struct Oracle.Observation memory"
																														}
																													},
																													"id": 1517,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "secondsPerLiquidityCumulativeX128",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 895,
																													"src": "14314:43:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint160",
																														"typeString": "uint160"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "-",
																												"rightExpression": {
																													"expression": {
																														"id": 1518,
																														"name": "beforeOrAt",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1446,
																														"src": "14360:10:9",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																															"typeString": "struct Oracle.Observation memory"
																														}
																													},
																													"id": 1519,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "secondsPerLiquidityCumulativeX128",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 895,
																													"src": "14360:44:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint160",
																														"typeString": "uint160"
																													}
																												},
																												"src": "14314:90:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint160",
																													"typeString": "uint160"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint160",
																													"typeString": "uint160"
																												}
																											],
																											"id": 1515,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "14273:7:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_uint256_$",
																												"typeString": "type(uint256)"
																											},
																											"typeName": {
																												"id": 1514,
																												"name": "uint256",
																												"nodeType": "ElementaryTypeName",
																												"src": "14273:7:9",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 1521,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "14273:161:9",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"id": 1522,
																										"name": "targetDelta",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1490,
																										"src": "14437:11:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint32",
																											"typeString": "uint32"
																										}
																									},
																									"src": "14273:175:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1524,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "14243:231:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"id": 1525,
																							"name": "observationTimeDelta",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1482,
																							"src": "14477:20:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"src": "14243:254:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1513,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "14210:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint160_$",
																						"typeString": "type(uint160)"
																					},
																					"typeName": {
																						"id": 1512,
																						"name": "uint160",
																						"nodeType": "ElementaryTypeName",
																						"src": "14210:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14210:309:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "14143:376:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 1529,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13966:567:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																		"typeString": "tuple(int56,uint160)"
																	}
																},
																"functionReturnParameters": 1407,
																"id": 1530,
																"nodeType": "Return",
																"src": "13959:574:9"
															}
														]
													},
													"id": 1532,
													"nodeType": "IfStatement",
													"src": "13553:991:9",
													"trueBody": {
														"id": 1480,
														"nodeType": "Block",
														"src": "13593:146:9",
														"statements": [
															{
																"expression": {
																	"components": [
																		{
																			"expression": {
																				"id": 1474,
																				"name": "atOrAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1448,
																				"src": "13658:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																					"typeString": "struct Oracle.Observation memory"
																				}
																			},
																			"id": 1475,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "tickCumulative",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 893,
																			"src": "13658:24:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			}
																		},
																		{
																			"expression": {
																				"id": 1476,
																				"name": "atOrAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1448,
																				"src": "13684:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																					"typeString": "struct Oracle.Observation memory"
																				}
																			},
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "secondsPerLiquidityCumulativeX128",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 895,
																			"src": "13684:43:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 1478,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13657:71:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																		"typeString": "tuple(int56,uint160)"
																	}
																},
																"functionReturnParameters": 1407,
																"id": 1479,
																"nodeType": "Return",
																"src": "13650:78:9"
															}
														]
													}
												},
												"id": 1533,
												"nodeType": "IfStatement",
												"src": "13359:1185:9",
												"trueBody": {
													"id": 1469,
													"nodeType": "Block",
													"src": "13400:147:9",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"expression": {
																			"id": 1463,
																			"name": "beforeOrAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "13464:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tickCumulative",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "13464:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int56",
																			"typeString": "int56"
																		}
																	},
																	{
																		"expression": {
																			"id": 1465,
																			"name": "beforeOrAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "13491:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$898_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "secondsPerLiquidityCumulativeX128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 895,
																		"src": "13491:44:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 1467,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13463:73:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																	"typeString": "tuple(int56,uint160)"
																}
															},
															"functionReturnParameters": 1407,
															"id": 1468,
															"nodeType": "Return",
															"src": "13456:80:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "11460:1100:9",
										"text": "@dev Reverts if an observation at or before the desired observation timestamp does not exist.\n 0 may be passed as `secondsAgo' to return the current cumulative values.\n If called with a timestamp falling between two observations, returns the counterfactual accumulator values\n at exactly the timestamp between the two observations.\n @param self The stored oracle array\n @param time The current block timestamp\n @param secondsAgo The amount of time to look back, in seconds, at which point to return an observation\n @param tick The current tick\n @param index The index of the observation that was most recently written to the observations array\n @param liquidity The current in-range pool liquidity\n @param cardinality The number of populated elements in the oracle array\n @return tickCumulative The tick * time elapsed since the pool was first initialized, as of `secondsAgo`\n @return secondsPerLiquidityCumulativeX128 The time elapsed / max(1, liquidity) since the pool was first initialized, as of `secondsAgo`"
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "observeSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "12597:31:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 1386,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 898,
														"src": "12597:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 1388,
													"length": {
														"hexValue": "3635353335",
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12609:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "12597:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "12638:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1390,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "12638:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "secondsAgo",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "12659:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1392,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "12659:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "12686:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1394,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "12686:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "12706:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1396,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12706:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "12728:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1398,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "12728:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "12755:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1400,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12755:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12587:192:9"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "12803:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1403,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "12803:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "12825:41:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1405,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "12825:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12802:65:9"
									},
									"scope": 1622,
									"src": "12565:1985:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "15831:425:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1563,
																"name": "cardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "15849:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15863:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15849:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49",
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15866:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															},
															"value": "I"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															}
														],
														"id": 1562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15841:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15841:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "15841:29:9"
											},
											{
												"expression": {
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1569,
														"name": "tickCumulatives",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "15881:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
															"typeString": "int56[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1573,
																	"name": "secondsAgos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "15911:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																		"typeString": "uint32[] memory"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15911:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "15899:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_int56_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (int56[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1570,
																	"name": "int56",
																	"nodeType": "ElementaryTypeName",
																	"src": "15903:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"id": 1571,
																"nodeType": "ArrayTypeName",
																"src": "15903:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
																	"typeString": "int56[]"
																}
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15899:31:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
															"typeString": "int56[] memory"
														}
													},
													"src": "15881:49:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
														"typeString": "int56[] memory"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "15881:49:9"
											},
											{
												"expression": {
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1578,
														"name": "secondsPerLiquidityCumulativeX128s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "15940:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1582,
																	"name": "secondsAgos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "15991:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																		"typeString": "uint32[] memory"
																	}
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15991:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "15977:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint160_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint160[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1579,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "15981:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"id": 1580,
																"nodeType": "ArrayTypeName",
																"src": "15981:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
																	"typeString": "uint160[]"
																}
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15977:33:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"src": "15940:70:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
														"typeString": "uint160[] memory"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "15940:70:9"
											},
											{
												"body": {
													"id": 1618,
													"nodeType": "Block",
													"src": "16069:181:9",
													"statements": [
														{
															"expression": {
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"baseExpression": {
																				"id": 1598,
																				"name": "tickCumulatives",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "16084:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
																					"typeString": "int56[] memory"
																				}
																			},
																			"id": 1600,
																			"indexExpression": {
																				"id": 1599,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "16100:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "16084:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1601,
																				"name": "secondsPerLiquidityCumulativeX128s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1560,
																				"src": "16104:34:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																					"typeString": "uint160[] memory"
																				}
																			},
																			"id": 1603,
																			"indexExpression": {
																				"id": 1602,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "16139:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "16104:37:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 1604,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "16083:59:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																		"typeString": "tuple(int56,uint160)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1606,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1540,
																			"src": "16175:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																				"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																			}
																		},
																		{
																			"id": 1607,
																			"name": "time",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1542,
																			"src": "16181:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1608,
																				"name": "secondsAgos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1545,
																				"src": "16187:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																					"typeString": "uint32[] memory"
																				}
																			},
																			"id": 1610,
																			"indexExpression": {
																				"id": 1609,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "16199:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16187:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"id": 1611,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "16203:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		{
																			"id": 1612,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1549,
																			"src": "16209:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		{
																			"id": 1613,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1551,
																			"src": "16216:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"id": 1614,
																			"name": "cardinality",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1553,
																			"src": "16227:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
																				"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																			},
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"id": 1605,
																		"name": "observeSingle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1535,
																		"src": "16161:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_int24_$_t_uint16_$_t_uint128_$_t_uint16_$returns$_t_int56_$_t_uint160_$",
																			"typeString": "function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16) view returns (int56,uint160)"
																		}
																	},
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16161:78:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																		"typeString": "tuple(int56,uint160)"
																	}
																},
																"src": "16083:156:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1617,
															"nodeType": "ExpressionStatement",
															"src": "16083:156:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1591,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "16040:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1592,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "16044:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16044:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16040:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1619,
												"initializationExpression": {
													"assignments": [
														1588
													],
													"declarations": [
														{
															"constant": false,
															"id": 1588,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1619,
															"src": "16025:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1587,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16025:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1590,
													"initialValue": {
														"hexValue": "30",
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16037:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "16025:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "16064:3:9",
														"subExpression": {
															"id": 1595,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "16064:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1597,
													"nodeType": "ExpressionStatement",
													"src": "16064:3:9"
												},
												"nodeType": "ForStatement",
												"src": "16020:230:9"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "14556:943:9",
										"text": "@notice Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`\n @dev Reverts if `secondsAgos` > oldest observation\n @param self The stored oracle array\n @param time The current block.timestamp\n @param secondsAgos Each amount of time to look back, in seconds, at which point to return an observation\n @param tick The current tick\n @param index The index of the observation that was most recently written to the observations array\n @param liquidity The current in-range pool liquidity\n @param cardinality The number of populated elements in the oracle array\n @return tickCumulatives The tick * time elapsed since the pool was first initialized, as of each `secondsAgo`\n @return secondsPerLiquidityCumulativeX128s The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of each `secondsAgo`"
									},
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "15530:31:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 1537,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 898,
														"src": "15530:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$898_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 1539,
													"length": {
														"hexValue": "3635353335",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15542:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "15530:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$898_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "15571:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1541,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15571:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "15592:27:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1543,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "15592:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1544,
													"nodeType": "ArrayTypeName",
													"src": "15592:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "15629:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1546,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "15629:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "15649:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1548,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "15649:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "15671:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1550,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "15671:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "15698:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1552,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "15698:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15520:202:9"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "15746:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 1555,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "15746:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 1556,
													"nodeType": "ArrayTypeName",
													"src": "15746:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "15778:51:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 1558,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "15778:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 1559,
													"nodeType": "ArrayTypeName",
													"src": "15778:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15745:85:9"
									},
									"scope": 1622,
									"src": "15504:752:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1623,
							"src": "691:15567:9"
						}
					],
					"src": "45:16214:9"
				},
				"id": 9
			},
			"contracts/core/libraries/Position.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/Position.sol",
					"exportedSymbols": {
						"FixedPoint128": [
							521
						],
						"FullMath": [
							704
						],
						"LiquidityMath": [
							756
						],
						"Position": [
							1807
						]
					},
					"id": 1808,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1624,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:10"
						},
						{
							"absolutePath": "contracts/core/libraries/FullMath.sol",
							"file": "./FullMath.sol",
							"id": 1625,
							"nodeType": "ImportDirective",
							"scope": 1808,
							"sourceUnit": 705,
							"src": "78:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FixedPoint128.sol",
							"file": "./FixedPoint128.sol",
							"id": 1626,
							"nodeType": "ImportDirective",
							"scope": 1808,
							"sourceUnit": 522,
							"src": "103:29:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
							"file": "./LiquidityMath.sol",
							"id": 1627,
							"nodeType": "ImportDirective",
							"scope": 1808,
							"sourceUnit": 757,
							"src": "133:29:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1628,
								"nodeType": "StructuredDocumentation",
								"src": "164:201:10",
								"text": "@title Position\n @notice Positions represent an owner address' liquidity between a lower and upper tick boundary\n @dev Positions store additional state for tracking fees owed to the position"
							},
							"fullyImplemented": true,
							"id": 1807,
							"linearizedBaseContracts": [
								1807
							],
							"name": "Position",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Position.Info",
									"id": 1639,
									"members": [
										{
											"constant": false,
											"id": 1630,
											"mutability": "mutable",
											"name": "liquidity",
											"nodeType": "VariableDeclaration",
											"scope": 1639,
											"src": "512:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1629,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "512:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1632,
											"mutability": "mutable",
											"name": "feeGrowthInside0LastX128",
											"nodeType": "VariableDeclaration",
											"scope": 1639,
											"src": "631:32:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1631,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "631:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1634,
											"mutability": "mutable",
											"name": "feeGrowthInside1LastX128",
											"nodeType": "VariableDeclaration",
											"scope": 1639,
											"src": "673:32:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1633,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "673:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1636,
											"mutability": "mutable",
											"name": "tokensOwed0",
											"nodeType": "VariableDeclaration",
											"scope": 1639,
											"src": "779:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1635,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "779:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1638,
											"mutability": "mutable",
											"name": "tokensOwed1",
											"nodeType": "VariableDeclaration",
											"scope": 1639,
											"src": "808:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1637,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "808:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nodeType": "StructDefinition",
									"scope": 1807,
									"src": "432:402:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "1445:90:10",
										"statements": [
											{
												"expression": {
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1655,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "1455:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
															"typeString": "struct Position.Info storage pointer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1656,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "1466:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1639_storage_$",
																"typeString": "mapping(bytes32 => struct Position.Info storage ref)"
															}
														},
														"id": 1665,
														"indexExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1660,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1646,
																			"src": "1498:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1661,
																			"name": "tickLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1648,
																			"src": "1505:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		{
																			"id": 1662,
																			"name": "tickUpper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1650,
																			"src": "1516:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"expression": {
																			"id": 1658,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1481:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1481:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1481:45:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1657,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1471:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1471:56:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1466:62:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1639_storage",
															"typeString": "struct Position.Info storage ref"
														}
													},
													"src": "1455:73:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "1455:73:10"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "840:416:10",
										"text": "@notice Returns the Info struct of a position, given an owner and position boundaries\n @param self The mapping containing all user positions\n @param owner The address of the position owner\n @param tickLower The lower tick boundary of the position\n @param tickUpper The upper tick boundary of the position\n @return position The position info struct of the given owners' position"
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1274:37:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1639_storage_$",
													"typeString": "mapping(bytes32 => struct Position.Info)"
												},
												"typeName": {
													"id": 1643,
													"keyType": {
														"id": 1641,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1282:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Mapping",
													"src": "1274:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1639_storage_$",
														"typeString": "mapping(bytes32 => struct Position.Info)"
													},
													"valueType": {
														"id": 1642,
														"name": "Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 1639,
														"src": "1293:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
															"typeString": "struct Position.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1313:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1328:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1647,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1328:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1345:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1649,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1345:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:88:10"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "position",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1409:30:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 1652,
													"name": "Position.Info",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1639,
													"src": "1409:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:32:10"
									},
									"scope": 1807,
									"src": "1261:274:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "2279:1380:10",
										"statements": [
											{
												"assignments": [
													1684
												],
												"declarations": [
													{
														"constant": false,
														"id": 1684,
														"mutability": "mutable",
														"name": "_self",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "2289:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1639_memory_ptr",
															"typeString": "struct Position.Info"
														},
														"typeName": {
															"id": 1683,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1639,
															"src": "2289:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
																"typeString": "struct Position.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1686,
												"initialValue": {
													"id": 1685,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1672,
													"src": "2309:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2289:24:10"
											},
											{
												"assignments": [
													1688
												],
												"declarations": [
													{
														"constant": false,
														"id": 1688,
														"mutability": "mutable",
														"name": "liquidityNext",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "2324:21:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1687,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2324:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1689,
												"nodeType": "VariableDeclarationStatement",
												"src": "2324:21:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1690,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "2359:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2359:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1716,
													"nodeType": "Block",
													"src": "2534:96:10",
													"statements": [
														{
															"expression": {
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1707,
																	"name": "liquidityNext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "2548:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1710,
																				"name": "_self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1684,
																				"src": "2587:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Info_$1639_memory_ptr",
																					"typeString": "struct Position.Info memory"
																				}
																			},
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "liquidity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1630,
																			"src": "2587:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"id": 1712,
																			"name": "liquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1674,
																			"src": "2604:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"id": 1708,
																			"name": "LiquidityMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "2564:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_LiquidityMath_$756_$",
																				"typeString": "type(library LiquidityMath)"
																			}
																		},
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "addDelta",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 755,
																		"src": "2564:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_int128_$returns$_t_uint128_$",
																			"typeString": "function (uint128,int128) pure returns (uint128)"
																		}
																	},
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2564:55:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2548:71:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 1715,
															"nodeType": "ExpressionStatement",
															"src": "2548:71:10"
														}
													]
												},
												"id": 1717,
												"nodeType": "IfStatement",
												"src": "2355:275:10",
												"trueBody": {
													"id": 1706,
													"nodeType": "Block",
													"src": "2380:148:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1694,
																				"name": "_self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1684,
																				"src": "2402:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Info_$1639_memory_ptr",
																					"typeString": "struct Position.Info memory"
																				}
																			},
																			"id": 1695,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "liquidity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1630,
																			"src": "2402:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2420:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2402:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e50",
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2423:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
																			"typeString": "literal_string \"NP\""
																		},
																		"value": "NP"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
																			"typeString": "literal_string \"NP\""
																		}
																	],
																	"id": 1693,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2394:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2394:34:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1700,
															"nodeType": "ExpressionStatement",
															"src": "2394:34:10"
														},
														{
															"expression": {
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1701,
																	"name": "liquidityNext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "2486:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1702,
																		"name": "_self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1684,
																		"src": "2502:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$1639_memory_ptr",
																			"typeString": "struct Position.Info memory"
																		}
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "liquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1630,
																	"src": "2502:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2486:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 1705,
															"nodeType": "ExpressionStatement",
															"src": "2486:31:10"
														}
													]
												}
											},
											{
												"assignments": [
													1719
												],
												"declarations": [
													{
														"constant": false,
														"id": 1719,
														"mutability": "mutable",
														"name": "tokensOwed0",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "2640:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1718,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2640:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1720,
												"nodeType": "VariableDeclarationStatement",
												"src": "2640:19:10"
											},
											{
												"assignments": [
													1722
												],
												"declarations": [
													{
														"constant": false,
														"id": 1722,
														"mutability": "mutable",
														"name": "tokensOwed1",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "2669:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1721,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2669:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1723,
												"nodeType": "VariableDeclarationStatement",
												"src": "2669:19:10"
											},
											{
												"condition": {
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2702:7:10",
													"subExpression": {
														"id": 1724,
														"name": "staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "2703:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1761,
												"nodeType": "IfStatement",
												"src": "2698:490:10",
												"trueBody": {
													"id": 1760,
													"nodeType": "Block",
													"src": "2711:477:10",
													"statements": [
														{
															"expression": {
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1726,
																	"name": "tokensOwed0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "2767:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1734,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1731,
																						"name": "feeGrowthInside0X128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1676,
																						"src": "2843:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 1732,
																							"name": "_self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1684,
																							"src": "2866:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Info_$1639_memory_ptr",
																								"typeString": "struct Position.Info memory"
																							}
																						},
																						"id": 1733,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "feeGrowthInside0LastX128",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1632,
																						"src": "2866:30:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2843:53:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1735,
																						"name": "_self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1684,
																						"src": "2898:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$1639_memory_ptr",
																							"typeString": "struct Position.Info memory"
																						}
																					},
																					"id": 1736,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1630,
																					"src": "2898:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				{
																					"expression": {
																						"id": 1737,
																						"name": "FixedPoint128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 521,
																						"src": "2915:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint128_$521_$",
																							"typeString": "type(library FixedPoint128)"
																						}
																					},
																					"id": 1738,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q128",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 520,
																					"src": "2915:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1729,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 704,
																					"src": "2806:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$704_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 1730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDiv",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 660,
																				"src": "2806:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2806:145:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2781:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1727,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2781:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2781:184:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2767:198:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 1742,
															"nodeType": "ExpressionStatement",
															"src": "2767:198:10"
														},
														{
															"expression": {
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1743,
																	"name": "tokensOwed1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "2979:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1748,
																						"name": "feeGrowthInside1X128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1678,
																						"src": "3055:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 1749,
																							"name": "_self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1684,
																							"src": "3078:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Info_$1639_memory_ptr",
																								"typeString": "struct Position.Info memory"
																							}
																						},
																						"id": 1750,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "feeGrowthInside1LastX128",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1634,
																						"src": "3078:30:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3055:53:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1752,
																						"name": "_self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1684,
																						"src": "3110:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$1639_memory_ptr",
																							"typeString": "struct Position.Info memory"
																						}
																					},
																					"id": 1753,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1630,
																					"src": "3110:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				{
																					"expression": {
																						"id": 1754,
																						"name": "FixedPoint128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 521,
																						"src": "3127:13:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint128_$521_$",
																							"typeString": "type(library FixedPoint128)"
																						}
																					},
																					"id": 1755,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q128",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 520,
																					"src": "3127:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1746,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 704,
																					"src": "3018:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$704_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 1747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDiv",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 660,
																				"src": "3018:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3018:145:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2993:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1744,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2993:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2993:184:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2979:198:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 1759,
															"nodeType": "ExpressionStatement",
															"src": "2979:198:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1762,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "3233:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3251:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1771,
												"nodeType": "IfStatement",
												"src": "3229:55:10",
												"trueBody": {
													"expression": {
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"id": 1765,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "3254:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
																	"typeString": "struct Position.Info storage pointer"
																}
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1630,
															"src": "3254:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 1768,
															"name": "liquidityNext",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "3271:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "3254:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"id": 1770,
													"nodeType": "ExpressionStatement",
													"src": "3254:30:10"
												}
											},
											{
												"expression": {
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1772,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "3294:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthInside0LastX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1632,
														"src": "3294:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1775,
														"name": "feeGrowthInside0X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "3326:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3294:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "3294:52:10"
											},
											{
												"expression": {
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1778,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "3356:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 1780,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthInside1LastX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1634,
														"src": "3356:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1781,
														"name": "feeGrowthInside1X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "3388:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1783,
												"nodeType": "ExpressionStatement",
												"src": "3356:52:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1784,
															"name": "tokensOwed0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "3422:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3436:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3422:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1787,
															"name": "tokensOwed1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "3441:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3455:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3441:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3422:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1804,
												"nodeType": "IfStatement",
												"src": "3418:235:10",
												"trueBody": {
													"id": 1803,
													"nodeType": "Block",
													"src": "3458:195:10",
													"statements": [
														{
															"expression": {
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1791,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "3566:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
																			"typeString": "struct Position.Info storage pointer"
																		}
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tokensOwed0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1636,
																	"src": "3566:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1794,
																	"name": "tokensOwed0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "3586:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3566:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 1796,
															"nodeType": "ExpressionStatement",
															"src": "3566:31:10"
														},
														{
															"expression": {
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1797,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "3611:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
																			"typeString": "struct Position.Info storage pointer"
																		}
																	},
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tokensOwed1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1638,
																	"src": "3611:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1800,
																	"name": "tokensOwed1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "3631:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3611:31:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 1802,
															"nodeType": "ExpressionStatement",
															"src": "3611:31:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "1541:547:10",
										"text": "@notice Credits accumulated fees to a user's position\n @param self The individual position to update\n @param liquidityDelta The change in pool liquidity as a result of the position update\n @param feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n @param feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries\n @param staked Signifies if the position is staked in the gauge or not"
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "2118:17:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 1671,
													"name": "Info",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1639,
													"src": "2118:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1639_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "2145:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1673,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2145:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "feeGrowthInside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "2176:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "feeGrowthInside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "2214:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "staked",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "2252:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2252:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2108:161:10"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2279:0:10"
									},
									"scope": 1807,
									"src": "2093:1566:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1808,
							"src": "365:3296:10"
						}
					],
					"src": "45:3617:10"
				},
				"id": 10
			},
			"contracts/core/libraries/SafeCast.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							1877
						]
					},
					"id": 1878,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1809,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1810,
								"nodeType": "StructuredDocumentation",
								"src": "71:94:11",
								"text": "@title Safe casting methods\n @notice Contains methods for safely casting between types"
							},
							"fullyImplemented": true,
							"id": 1877,
							"linearizedBaseContracts": [
								1877
							],
							"name": "SafeCast",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "421:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1819,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1816,
																			"src": "440:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1822,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1813,
																					"src": "452:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "444:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1820,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "444:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "444:10:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "440:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 1825,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "439:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1826,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "459:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "439:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1818,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "431:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "431:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "431:30:11"
											}
										]
									},
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "188:164:11",
										"text": "@notice Cast a uint256 to a uint160, revert on overflow\n @param y The uint256 to be downcasted\n @return z The downcasted integer, now type uint160"
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "376:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:11:11"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "410:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1815,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:11:11"
									},
									"scope": 1877,
									"src": "357:111:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "713:46:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1840,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1837,
																			"src": "732:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1843,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "743:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 1842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "736:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 1841,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "736:6:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "736:9:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "732:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"id": 1846,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "731:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1847,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "750:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "731:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "723:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "723:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1850,
												"nodeType": "ExpressionStatement",
												"src": "723:29:11"
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "474:173:11",
										"text": "@notice Cast a int256 to a int128, revert on overflow or underflow\n @param y The int256 to be downcasted\n @return z The downcasted integer, now type int128"
									},
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "670:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1833,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "670:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:10:11"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "703:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1836,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "703:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:10:11"
									},
									"scope": 1877,
									"src": "652:107:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "986:61:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1861,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "1004:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1008:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "323535",
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1013:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "255"
																},
																"src": "1008:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																}
															},
															"src": "1004:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "996:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1867,
												"nodeType": "ExpressionStatement",
												"src": "996:21:11"
											},
											{
												"expression": {
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1868,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1858,
														"src": "1027:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1871,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "1038:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1031:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1869,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1031:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1031:9:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1027:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "1027:13:11"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "765:154:11",
										"text": "@notice Cast a uint256 to a int256, revert on overflow\n @param y The uint256 to be casted\n @return z The casted integer, now type int256"
									},
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "942:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:11:11"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "976:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1857,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:10:11"
									},
									"scope": 1877,
									"src": "924:123:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1878,
							"src": "165:884:11"
						}
					],
					"src": "45:1005:11"
				},
				"id": 11
			},
			"contracts/core/libraries/SqrtPriceMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/SqrtPriceMath.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							531
						],
						"FullMath": [
							704
						],
						"LowGasSafeMath": [
							886
						],
						"SafeCast": [
							1877
						],
						"SqrtPriceMath": [
							2394
						],
						"UnsafeMath": [
							3871
						]
					},
					"id": 2395,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1879,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
							"file": "./LowGasSafeMath.sol",
							"id": 1880,
							"nodeType": "ImportDirective",
							"scope": 2395,
							"sourceUnit": 887,
							"src": "71:30:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 1881,
							"nodeType": "ImportDirective",
							"scope": 2395,
							"sourceUnit": 1878,
							"src": "102:24:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FullMath.sol",
							"file": "./FullMath.sol",
							"id": 1882,
							"nodeType": "ImportDirective",
							"scope": 2395,
							"sourceUnit": 705,
							"src": "128:24:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/UnsafeMath.sol",
							"file": "./UnsafeMath.sol",
							"id": 1883,
							"nodeType": "ImportDirective",
							"scope": 2395,
							"sourceUnit": 3872,
							"src": "153:26:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FixedPoint96.sol",
							"file": "./FixedPoint96.sol",
							"id": 1884,
							"nodeType": "ImportDirective",
							"scope": 2395,
							"sourceUnit": 532,
							"src": "180:28:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1885,
								"nodeType": "StructuredDocumentation",
								"src": "210:167:12",
								"text": "@title Functions based on Q64.96 sqrt price and liquidity\n @notice Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas"
							},
							"fullyImplemented": true,
							"id": 2394,
							"linearizedBaseContracts": [
								2394
							],
							"name": "SqrtPriceMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1888,
									"libraryName": {
										"id": 1886,
										"name": "LowGasSafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 886,
										"src": "411:14:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LowGasSafeMath_$886",
											"typeString": "library LowGasSafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "405:33:12",
									"typeName": {
										"id": 1887,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "430:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1891,
									"libraryName": {
										"id": 1889,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1877,
										"src": "449:8:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$1877",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "443:27:12",
									"typeName": {
										"id": 1890,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "1583:1206:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1905,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "1709:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1719:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1709:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1910,
												"nodeType": "IfStatement",
												"src": "1705:32:12",
												"trueBody": {
													"expression": {
														"id": 1908,
														"name": "sqrtPX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "1729:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"functionReturnParameters": 1904,
													"id": 1909,
													"nodeType": "Return",
													"src": "1722:15:12"
												}
											},
											{
												"assignments": [
													1912
												],
												"declarations": [
													{
														"constant": false,
														"id": 1912,
														"mutability": "mutable",
														"name": "numerator1",
														"nodeType": "VariableDeclaration",
														"scope": 2011,
														"src": "1747:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1911,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1747:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1920,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1915,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "1776:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1768:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1913,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1768:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1768:18:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"expression": {
															"id": 1917,
															"name": "FixedPoint96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "1790:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$531_$",
																"typeString": "type(library FixedPoint96)"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "RESOLUTION",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "1790:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1768:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1747:66:12"
											},
											{
												"condition": {
													"id": 1921,
													"name": "add",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1900,
													"src": "1828:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2009,
													"nodeType": "Block",
													"src": "2339:444:12",
													"statements": [
														{
															"assignments": [
																1975
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1975,
																	"mutability": "mutable",
																	"name": "product",
																	"nodeType": "VariableDeclaration",
																	"scope": 2009,
																	"src": "2353:15:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1974,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2353:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1976,
															"nodeType": "VariableDeclarationStatement",
															"src": "2353:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1985,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"id": 1982,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 1978,
																								"name": "product",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1975,
																								"src": "2549:7:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1981,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1979,
																									"name": "amount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1898,
																									"src": "2559:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"id": 1980,
																									"name": "sqrtPX96",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1894,
																									"src": "2568:8:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint160",
																										"typeString": "uint160"
																									}
																								},
																								"src": "2559:17:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2549:27:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1983,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2548:29:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1984,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1898,
																					"src": "2580:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2548:38:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1986,
																				"name": "sqrtPX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1894,
																				"src": "2590:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "2548:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1988,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1912,
																				"src": "2602:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 1989,
																				"name": "product",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1975,
																				"src": "2615:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2602:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2548:74:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1977,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2540:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2540:83:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1993,
															"nodeType": "ExpressionStatement",
															"src": "2540:83:12"
														},
														{
															"assignments": [
																1995
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1995,
																	"mutability": "mutable",
																	"name": "denominator",
																	"nodeType": "VariableDeclaration",
																	"scope": 2009,
																	"src": "2637:19:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1994,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2637:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1999,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1996,
																	"name": "numerator1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1912,
																	"src": "2659:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1997,
																	"name": "product",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1975,
																	"src": "2672:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2659:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2637:42:12"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2002,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1912,
																				"src": "2726:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2003,
																				"name": "sqrtPX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1894,
																				"src": "2738:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2004,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1995,
																				"src": "2748:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2000,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 704,
																				"src": "2700:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$704_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 2001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDivRoundingUp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 703,
																			"src": "2700:25:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2700:60:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toUint160",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1831,
																	"src": "2700:70:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint160)"
																	}
																},
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2700:72:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 1904,
															"id": 2008,
															"nodeType": "Return",
															"src": "2693:79:12"
														}
													]
												},
												"id": 2010,
												"nodeType": "IfStatement",
												"src": "1824:959:12",
												"trueBody": {
													"id": 1973,
													"nodeType": "Block",
													"src": "1833:500:12",
													"statements": [
														{
															"assignments": [
																1923
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1923,
																	"mutability": "mutable",
																	"name": "product",
																	"nodeType": "VariableDeclaration",
																	"scope": 1973,
																	"src": "1847:15:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1922,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1847:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1924,
															"nodeType": "VariableDeclarationStatement",
															"src": "1847:15:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 1929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1925,
																					"name": "product",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1923,
																					"src": "1881:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1928,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1926,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1898,
																						"src": "1891:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1927,
																						"name": "sqrtPX96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1894,
																						"src": "1900:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"src": "1891:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1881:27:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1930,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1880:29:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1931,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "1912:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1880:38:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1933,
																	"name": "sqrtPX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1894,
																	"src": "1922:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "1880:50:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1957,
															"nodeType": "IfStatement",
															"src": "1876:343:12",
															"trueBody": {
																"id": 1956,
																"nodeType": "Block",
																"src": "1932:287:12",
																"statements": [
																	{
																		"assignments": [
																			1936
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1936,
																				"mutability": "mutable",
																				"name": "denominator",
																				"nodeType": "VariableDeclaration",
																				"scope": 1956,
																				"src": "1950:19:12",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1935,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1950:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1940,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1937,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1912,
																				"src": "1972:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1938,
																				"name": "product",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1923,
																				"src": "1985:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1972:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1950:42:12"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1941,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1936,
																				"src": "2014:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1942,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1912,
																				"src": "2029:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2014:25:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1955,
																		"nodeType": "IfStatement",
																		"src": "2010:195:12",
																		"trueBody": {
																			"id": 1954,
																			"nodeType": "Block",
																			"src": "2041:164:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1948,
																										"name": "numerator1",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1912,
																										"src": "2151:10:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 1949,
																										"name": "sqrtPX96",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1894,
																										"src": "2163:8:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint160",
																											"typeString": "uint160"
																										}
																									},
																									{
																										"id": 1950,
																										"name": "denominator",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1936,
																										"src": "2173:11:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint160",
																											"typeString": "uint160"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 1946,
																										"name": "FullMath",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 704,
																										"src": "2125:8:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_FullMath_$704_$",
																											"typeString": "type(library FullMath)"
																										}
																									},
																									"id": 1947,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mulDivRoundingUp",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 703,
																									"src": "2125:25:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1951,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2125:60:12",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1945,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2117:7:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							},
																							"typeName": {
																								"id": 1944,
																								"name": "uint160",
																								"nodeType": "ElementaryTypeName",
																								"src": "2117:7:12",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1952,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2117:69:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"functionReturnParameters": 1904,
																					"id": 1953,
																					"nodeType": "Return",
																					"src": "2110:76:12"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1962,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1912,
																				"src": "2273:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 1968,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1898,
																						"src": "2313:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1965,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1963,
																									"name": "numerator1",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1912,
																									"src": "2286:10:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 1964,
																									"name": "sqrtPX96",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1894,
																									"src": "2299:8:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint160",
																										"typeString": "uint160"
																									}
																								},
																								"src": "2286:21:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1966,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2285:23:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1967,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 781,
																					"src": "2285:27:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2285:35:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1960,
																				"name": "UnsafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3871,
																				"src": "2248:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_UnsafeMath_$3871_$",
																					"typeString": "type(library UnsafeMath)"
																				}
																			},
																			"id": 1961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "divRoundingUp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3870,
																			"src": "2248:24:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2248:73:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2240:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1958,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "2240:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2240:82:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 1904,
															"id": 1972,
															"nodeType": "Return",
															"src": "2233:89:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "476:932:12",
										"text": "@notice Gets the next sqrt price given a delta of token0\n @dev Always rounds up, because in the exact output case (increasing price) we need to move the price at least\n far enough to get the desired output amount, and in the exact input case (decreasing price) we need to move the\n price less in order to not send too much output.\n The most precise formula for this is liquidity * sqrtPX96 / (liquidity +- amount * sqrtPX96),\n if this is impossible because of overflow, we calculate liquidity / (liquidity / sqrtPX96 +- amount).\n @param sqrtPX96 The starting price, i.e. before accounting for the token0 delta\n @param liquidity The amount of usable liquidity\n @param amount How much of token0 to add or remove from virtual reserves\n @param add Whether to add or remove the amount of token0\n @return The price after adding or removing amount, depending on add"
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromAmount0RoundingUp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1460:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1893,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1478:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1895,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1497:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "add",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1513:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1899,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1513:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:63:12"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1570:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1902,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1569:9:12"
									},
									"scope": 2394,
									"src": "1413:1376:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "3787:907:12",
										"statements": [
											{
												"condition": {
													"id": 2026,
													"name": "add",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2021,
													"src": "3955:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2104,
													"nodeType": "Block",
													"src": "4279:409:12",
													"statements": [
														{
															"assignments": [
																2065
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2065,
																	"mutability": "mutable",
																	"name": "quotient",
																	"nodeType": "VariableDeclaration",
																	"scope": 2104,
																	"src": "4293:16:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2064,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4293:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2090,
															"initialValue": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2066,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2019,
																				"src": "4330:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2069,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4345:7:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							},
																							"typeName": {
																								"id": 2068,
																								"name": "uint160",
																								"nodeType": "ElementaryTypeName",
																								"src": "4345:7:12",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							}
																						],
																						"id": 2067,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967269,
																						"src": "4340:4:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2070,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4340:13:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint160",
																						"typeString": "type(uint160)"
																					}
																				},
																				"id": 2071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"src": "4340:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "4330:27:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"arguments": [
																				{
																					"id": 2083,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2019,
																					"src": "4499:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 2084,
																						"name": "FixedPoint96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 531,
																						"src": "4507:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$531_$",
																							"typeString": "type(library FixedPoint96)"
																						}
																					},
																					"id": 2085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q96",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 530,
																					"src": "4507:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2086,
																					"name": "liquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2017,
																					"src": "4525:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"expression": {
																					"id": 2081,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 704,
																					"src": "4473:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$704_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 2082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDivRoundingUp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 703,
																				"src": "4473:25:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4473:62:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "4330:205:12",
																		"trueExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2078,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2075,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2019,
																						"src": "4405:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"expression": {
																							"id": 2076,
																							"name": "FixedPoint96",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 531,
																							"src": "4415:12:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$531_$",
																								"typeString": "type(library FixedPoint96)"
																							}
																						},
																						"id": 2077,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "RESOLUTION",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 527,
																						"src": "4415:23:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "4405:33:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2079,
																					"name": "liquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2017,
																					"src": "4440:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"expression": {
																					"id": 2073,
																					"name": "UnsafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3871,
																					"src": "4380:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_UnsafeMath_$3871_$",
																						"typeString": "type(library UnsafeMath)"
																					}
																				},
																				"id": 2074,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "divRoundingUp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3870,
																				"src": "4380:24:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4380:70:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2089,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4312:237:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4293:256:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2092,
																			"name": "sqrtPX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "4572:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 2093,
																			"name": "quotient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2065,
																			"src": "4583:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4572:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2091,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4564:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4564:28:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2096,
															"nodeType": "ExpressionStatement",
															"src": "4564:28:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2099,
																			"name": "sqrtPX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "4657:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2100,
																			"name": "quotient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2065,
																			"src": "4668:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4657:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4649:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2097,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "4649:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4649:28:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 2025,
															"id": 2103,
															"nodeType": "Return",
															"src": "4642:35:12"
														}
													]
												},
												"id": 2105,
												"nodeType": "IfStatement",
												"src": "3951:737:12",
												"trueBody": {
													"id": 2063,
													"nodeType": "Block",
													"src": "3960:313:12",
													"statements": [
														{
															"assignments": [
																2028
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2028,
																	"mutability": "mutable",
																	"name": "quotient",
																	"nodeType": "VariableDeclaration",
																	"scope": 2063,
																	"src": "3974:16:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2027,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3974:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2052,
															"initialValue": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2029,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2019,
																				"src": "4011:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2032,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4026:7:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							},
																							"typeName": {
																								"id": 2031,
																								"name": "uint160",
																								"nodeType": "ElementaryTypeName",
																								"src": "4026:7:12",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							}
																						],
																						"id": 2030,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967269,
																						"src": "4021:4:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2033,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4021:13:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint160",
																						"typeString": "type(uint160)"
																					}
																				},
																				"id": 2034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"src": "4021:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "4011:27:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"arguments": [
																				{
																					"id": 2045,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2019,
																					"src": "4147:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 2046,
																						"name": "FixedPoint96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 531,
																						"src": "4155:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$531_$",
																							"typeString": "type(library FixedPoint96)"
																						}
																					},
																					"id": 2047,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q96",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 530,
																					"src": "4155:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2048,
																					"name": "liquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2017,
																					"src": "4173:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"expression": {
																					"id": 2043,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 704,
																					"src": "4131:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$704_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 2044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDiv",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 660,
																				"src": "4131:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4131:52:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "4011:172:12",
																		"trueExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2039,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2036,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2019,
																							"src": "4062:6:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"expression": {
																								"id": 2037,
																								"name": "FixedPoint96",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 531,
																								"src": "4072:12:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$531_$",
																									"typeString": "type(library FixedPoint96)"
																								}
																							},
																							"id": 2038,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "RESOLUTION",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 527,
																							"src": "4072:23:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "4062:33:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2040,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4061:35:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2041,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2017,
																				"src": "4099:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "4061:47:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2051,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3993:204:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3974:223:12"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2058,
																				"name": "quotient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2028,
																				"src": "4241:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2055,
																						"name": "sqrtPX96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2015,
																						"src": "4227:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					],
																					"id": 2054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4219:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2053,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "4219:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4219:17:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 781,
																			"src": "4219:21:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4219:31:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toUint160",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1831,
																	"src": "4219:41:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint160)"
																	}
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4219:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 2025,
															"id": 2062,
															"nodeType": "Return",
															"src": "4212:50:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "2795:815:12",
										"text": "@notice Gets the next sqrt price given a delta of token1\n @dev Always rounds down, because in the exact output case (decreasing price) we need to move the price at least\n far enough to get the desired output amount, and in the exact input case (increasing price) we need to move the\n price less in order to not send too much output.\n The formula we compute is within <1 wei of the lossless version: sqrtPX96 +- amount / liquidity\n @param sqrtPX96 The starting price, i.e., before accounting for the token1 delta\n @param liquidity The amount of usable liquidity\n @param amount How much of token1 to add, or remove, from virtual reserves\n @param add Whether to add, or remove, the amount of token1\n @return The price after adding or removing `amount`"
									},
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromAmount1RoundingDown",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "3664:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2014,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3664:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "3682:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2016,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "3701:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3701:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "add",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "3717:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3717:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3663:63:12"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "3774:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2023,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:12"
									},
									"scope": 2394,
									"src": "3615:1079:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2148,
										"nodeType": "Block",
										"src": "5419:344:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2122,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "5437:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5448:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5437:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5429:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5429:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2126,
												"nodeType": "ExpressionStatement",
												"src": "5429:21:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2128,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2112,
																"src": "5468:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5480:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5468:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5460:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5460:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2132,
												"nodeType": "ExpressionStatement",
												"src": "5460:22:12"
											},
											{
												"expression": {
													"condition": {
														"id": 2133,
														"name": "zeroForOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "5566:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 2141,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "5720:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 2142,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2112,
																"src": "5730:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 2143,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2114,
																"src": "5741:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5751:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2140,
															"name": "getNextSqrtPriceFromAmount1RoundingDown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "5680:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5680:76:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5566:190:12",
													"trueExpression": {
														"arguments": [
															{
																"id": 2135,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "5629:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 2136,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2112,
																"src": "5639:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 2137,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2114,
																"src": "5650:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5660:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2134,
															"name": "getNextSqrtPriceFromAmount0RoundingUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "5591:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5591:74:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 2120,
												"id": 2147,
												"nodeType": "Return",
												"src": "5559:197:12"
											}
										]
									},
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "4700:538:12",
										"text": "@notice Gets the next sqrt price given an input amount of token0 or token1\n @dev Throws if price or liquidity are 0, or if the next price is out of bounds\n @param sqrtPX96 The starting price, i.e., before accounting for the input amount\n @param liquidity The amount of usable liquidity\n @param amountIn How much of token0, or token1, is being swapped in\n @param zeroForOne Whether the amount in is token0 or token1\n @return sqrtQX96 The price after adding the input amount to token0 or token1"
									},
									"id": 2149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "5278:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2109,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "5296:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2111,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5296:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "5315:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5315:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "5333:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5333:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5277:72:12"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "sqrtQX96",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "5397:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2118,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5397:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5396:18:12"
									},
									"scope": 2394,
									"src": "5243:520:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2190,
										"nodeType": "Block",
										"src": "6487:342:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2164,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "6505:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6516:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6505:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6497:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6497:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2168,
												"nodeType": "ExpressionStatement",
												"src": "6497:21:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2170,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2154,
																"src": "6536:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6548:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6536:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6528:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6528:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2174,
												"nodeType": "ExpressionStatement",
												"src": "6528:22:12"
											},
											{
												"expression": {
													"condition": {
														"id": 2175,
														"name": "zeroForOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "6628:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 2183,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "6784:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 2184,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2154,
																"src": "6794:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 2185,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "6805:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6816:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2182,
															"name": "getNextSqrtPriceFromAmount0RoundingUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "6746:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 2187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6746:76:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 2188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6628:194:12",
													"trueExpression": {
														"arguments": [
															{
																"id": 2177,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2152,
																"src": "6693:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 2178,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2154,
																"src": "6703:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 2179,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "6714:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6725:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2176,
															"name": "getNextSqrtPriceFromAmount1RoundingDown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "6653:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 2181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:78:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 2162,
												"id": 2189,
												"nodeType": "Return",
												"src": "6621:201:12"
											}
										]
									},
									"documentation": {
										"id": 2150,
										"nodeType": "StructuredDocumentation",
										"src": "5769:535:12",
										"text": "@notice Gets the next sqrt price given an output amount of token0 or token1\n @dev Throws if price or liquidity are 0 or the next price is out of bounds\n @param sqrtPX96 The starting price before accounting for the output amount\n @param liquidity The amount of usable liquidity\n @param amountOut How much of token0, or token1, is being swapped out\n @param zeroForOne Whether the amount out is token0 or token1\n @return sqrtQX96 The price after removing the output amount of token0 or token1"
									},
									"id": 2191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "6345:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2151,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6345:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "6363:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2153,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6363:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "6382:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6382:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "6401:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6401:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6344:73:12"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "sqrtQX96",
												"nodeType": "VariableDeclaration",
												"scope": 2191,
												"src": "6465:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2160,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6465:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6464:18:12"
									},
									"scope": 2394,
									"src": "6309:520:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "7549:519:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2205,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2194,
														"src": "7563:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2206,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "7579:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7563:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2216,
												"nodeType": "IfStatement",
												"src": "7559:98:12",
												"trueBody": {
													"expression": {
														"id": 2214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2208,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2194,
																	"src": "7595:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2209,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "7610:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2210,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "7594:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2211,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "7628:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2212,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2194,
																	"src": "7643:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2213,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7627:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "7594:63:12",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2215,
													"nodeType": "ExpressionStatement",
													"src": "7594:63:12"
												}
											},
											{
												"assignments": [
													2218
												],
												"declarations": [
													{
														"constant": false,
														"id": 2218,
														"mutability": "mutable",
														"name": "numerator1",
														"nodeType": "VariableDeclaration",
														"scope": 2260,
														"src": "7668:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7668:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2226,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2221,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "7697:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7689:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2219,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7689:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7689:18:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"expression": {
															"id": 2223,
															"name": "FixedPoint96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "7711:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$531_$",
																"typeString": "type(library FixedPoint96)"
															}
														},
														"id": 2224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "RESOLUTION",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 527,
														"src": "7711:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7689:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7668:66:12"
											},
											{
												"assignments": [
													2228
												],
												"declarations": [
													{
														"constant": false,
														"id": 2228,
														"mutability": "mutable",
														"name": "numerator2",
														"nodeType": "VariableDeclaration",
														"scope": 2260,
														"src": "7744:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7744:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2232,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2229,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "7765:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2230,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2194,
														"src": "7781:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7765:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7744:50:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2234,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2194,
																"src": "7813:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7829:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7813:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2233,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7805:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7805:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2238,
												"nodeType": "ExpressionStatement",
												"src": "7805:26:12"
											},
											{
												"expression": {
													"condition": {
														"id": 2239,
														"name": "roundUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2200,
														"src": "7849:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2252,
																	"name": "numerator1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2218,
																	"src": "8007:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2253,
																	"name": "numerator2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2228,
																	"src": "8019:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2254,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "8031:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"expression": {
																	"id": 2250,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "7991:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$704_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 660,
																"src": "7991:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7991:54:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2256,
															"name": "sqrtRatioAX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2194,
															"src": "8048:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "7991:70:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7849:212:12",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2244,
																		"name": "numerator1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2218,
																		"src": "7922:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2245,
																		"name": "numerator2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2228,
																		"src": "7934:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2246,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "7946:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"expression": {
																		"id": 2242,
																		"name": "FullMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 704,
																		"src": "7896:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FullMath_$704_$",
																			"typeString": "type(library FullMath)"
																		}
																	},
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mulDivRoundingUp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 703,
																	"src": "7896:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7896:64:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2248,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2194,
																"src": "7962:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"expression": {
																"id": 2240,
																"name": "UnsafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3871,
																"src": "7871:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_UnsafeMath_$3871_$",
																	"typeString": "type(library UnsafeMath)"
																}
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "divRoundingUp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3870,
															"src": "7871:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7871:105:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2204,
												"id": 2259,
												"nodeType": "Return",
												"src": "7842:219:12"
											}
										]
									},
									"documentation": {
										"id": 2192,
										"nodeType": "StructuredDocumentation",
										"src": "6835:537:12",
										"text": "@notice Gets the amount0 delta between two prices\n @dev Calculates liquidity / sqrt(lower) - liquidity / sqrt(upper),\n i.e. liquidity * (sqrt(upper) - sqrt(lower)) / (sqrt(upper) * sqrt(lower))\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The amount of usable liquidity\n @param roundUp Whether to round the amount up or down\n @return amount0 Amount of token0 required to cover a position of size liquidity between the two passed prices"
									},
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount0Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "7402:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2193,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7402:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "7425:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2195,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7425:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "7448:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2197,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7448:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "roundUp",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "7467:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7467:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7401:79:12"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "7528:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7528:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7527:17:12"
									},
									"scope": 2394,
									"src": "7377:691:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "8695:330:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2275,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2264,
														"src": "8709:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2276,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "8725:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "8709:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2286,
												"nodeType": "IfStatement",
												"src": "8705:98:12",
												"trueBody": {
													"expression": {
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2278,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2264,
																	"src": "8741:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2279,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "8756:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2280,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "8740:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2281,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "8774:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2282,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2264,
																	"src": "8789:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8773:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "8740:63:12",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2285,
													"nodeType": "ExpressionStatement",
													"src": "8740:63:12"
												}
											},
											{
												"expression": {
													"condition": {
														"id": 2287,
														"name": "roundUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2270,
														"src": "8821:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 2299,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2268,
																"src": "8959:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2300,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "8970:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2301,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2264,
																	"src": "8986:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8970:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"expression": {
																	"id": 2303,
																	"name": "FixedPoint96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "9001:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$531_$",
																		"typeString": "type(library FixedPoint96)"
																	}
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Q96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 530,
																"src": "9001:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2297,
																"name": "FullMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "8943:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FullMath_$704_$",
																	"typeString": "type(library FullMath)"
																}
															},
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 660,
															"src": "8943:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8943:75:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8821:197:12",
													"trueExpression": {
														"arguments": [
															{
																"id": 2290,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2268,
																"src": "8869:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2291,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "8880:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2292,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2264,
																	"src": "8896:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8880:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"expression": {
																	"id": 2294,
																	"name": "FixedPoint96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "8911:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$531_$",
																		"typeString": "type(library FixedPoint96)"
																	}
																},
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Q96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 530,
																"src": "8911:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2288,
																"name": "FullMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "8843:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FullMath_$704_$",
																	"typeString": "type(library FullMath)"
																}
															},
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mulDivRoundingUp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 703,
															"src": "8843:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8843:85:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2274,
												"id": 2307,
												"nodeType": "Return",
												"src": "8814:204:12"
											}
										]
									},
									"documentation": {
										"id": 2262,
										"nodeType": "StructuredDocumentation",
										"src": "8074:444:12",
										"text": "@notice Gets the amount1 delta between two prices\n @dev Calculates liquidity * (sqrt(upper) - sqrt(lower))\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The amount of usable liquidity\n @param roundUp Whether to round the amount up, or down\n @return amount1 Amount of token1 required to cover a position of size liquidity between the two passed prices"
									},
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount1Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "8548:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2263,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8548:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "8571:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2265,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8571:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "8594:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2267,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8594:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "roundUp",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "8613:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8613:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8547:79:12"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "8674:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8673:17:12"
									},
									"scope": 2394,
									"src": "8523:502:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "9525:234:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														},
														"id": 2323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2321,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "9542:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9554:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9542:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 2338,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2312,
																		"src": "9686:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 2339,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2314,
																		"src": "9701:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2342,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2316,
																				"src": "9724:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 2341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9716:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 2340,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "9716:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9716:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 2344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9736:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2337,
																	"name": "getAmount0Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2261,
																		2351
																	],
																	"referencedDeclaration": 2261,
																	"src": "9670:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																	}
																},
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9670:71:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toInt256",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1876,
															"src": "9670:80:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (int256)"
															}
														},
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9670:82:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9542:210:12",
													"trueExpression": {
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "9570:85:12",
														"subExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 2325,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2312,
																			"src": "9587:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2326,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2314,
																			"src": "9602:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 2330,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "9625:10:12",
																					"subExpression": {
																						"id": 2329,
																						"name": "liquidity",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2316,
																						"src": "9626:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 2328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9617:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint128_$",
																					"typeString": "type(uint128)"
																				},
																				"typeName": {
																					"id": 2327,
																					"name": "uint128",
																					"nodeType": "ElementaryTypeName",
																					"src": "9617:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9617:19:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"hexValue": "66616c7365",
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9638:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 2324,
																		"name": "getAmount0Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2261,
																			2351
																		],
																		"referencedDeclaration": 2261,
																		"src": "9571:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																		}
																	},
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9571:73:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt256",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1876,
																"src": "9571:82:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (int256)"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9571:84:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2320,
												"id": 2349,
												"nodeType": "Return",
												"src": "9535:217:12"
											}
										]
									},
									"documentation": {
										"id": 2310,
										"nodeType": "StructuredDocumentation",
										"src": "9031:333:12",
										"text": "@notice Helper that gets signed token0 delta\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The change in liquidity for which to compute the amount0 delta\n @return amount0 Amount of token0 corresponding to the passed liquidityDelta between the two prices"
									},
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount0Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "9394:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2311,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "9394:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "9417:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2313,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "9417:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "9440:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2315,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "9440:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9393:64:12"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "9505:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2318,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "9505:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9504:16:12"
									},
									"scope": 2394,
									"src": "9369:390:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2392,
										"nodeType": "Block",
										"src": "10259:234:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														},
														"id": 2365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2363,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "10276:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10288:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10276:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 2380,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2354,
																		"src": "10420:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 2381,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "10435:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2384,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2358,
																				"src": "10458:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10450:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 2382,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "10450:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10450:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 2386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10470:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2379,
																	"name": "getAmount1Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2309,
																		2393
																	],
																	"referencedDeclaration": 2309,
																	"src": "10404:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																	}
																},
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10404:71:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toInt256",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1876,
															"src": "10404:80:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (int256)"
															}
														},
														"id": 2389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10404:82:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10276:210:12",
													"trueExpression": {
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "10304:85:12",
														"subExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 2367,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2354,
																			"src": "10321:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2368,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "10336:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 2372,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "10359:10:12",
																					"subExpression": {
																						"id": 2371,
																						"name": "liquidity",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2358,
																						"src": "10360:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 2370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10351:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint128_$",
																					"typeString": "type(uint128)"
																				},
																				"typeName": {
																					"id": 2369,
																					"name": "uint128",
																					"nodeType": "ElementaryTypeName",
																					"src": "10351:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10351:19:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"hexValue": "66616c7365",
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10372:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 2366,
																		"name": "getAmount1Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2309,
																			2393
																		],
																		"referencedDeclaration": 2309,
																		"src": "10305:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																		}
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10305:73:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt256",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1876,
																"src": "10305:82:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (int256)"
																}
															},
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10305:84:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2362,
												"id": 2391,
												"nodeType": "Return",
												"src": "10269:217:12"
											}
										]
									},
									"documentation": {
										"id": 2352,
										"nodeType": "StructuredDocumentation",
										"src": "9765:333:12",
										"text": "@notice Helper that gets signed token1 delta\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The change in liquidity for which to compute the amount1 delta\n @return amount1 Amount of token1 corresponding to the passed liquidityDelta between the two prices"
									},
									"id": 2393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount1Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "10128:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2353,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "10128:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "10151:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2355,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "10151:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "10174:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2357,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10174:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:64:12"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "10239:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2360,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10239:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10238:16:12"
									},
									"scope": 2394,
									"src": "10103:390:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2395,
							"src": "377:10118:12"
						}
					],
					"src": "45:10451:12"
				},
				"id": 12
			},
			"contracts/core/libraries/Tick.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/Tick.sol",
					"exportedSymbols": {
						"LiquidityMath": [
							756
						],
						"LowGasSafeMath": [
							886
						],
						"SafeCast": [
							1877
						],
						"Tick": [
							3013
						],
						"TickMath": [
							3804
						]
					},
					"id": 3014,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2396,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:13"
						},
						{
							"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
							"file": "./LowGasSafeMath.sol",
							"id": 2397,
							"nodeType": "ImportDirective",
							"scope": 3014,
							"sourceUnit": 887,
							"src": "78:30:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 2398,
							"nodeType": "ImportDirective",
							"scope": 3014,
							"sourceUnit": 1878,
							"src": "109:24:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TickMath.sol",
							"file": "./TickMath.sol",
							"id": 2399,
							"nodeType": "ImportDirective",
							"scope": 3014,
							"sourceUnit": 3805,
							"src": "135:24:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
							"file": "./LiquidityMath.sol",
							"id": 2400,
							"nodeType": "ImportDirective",
							"scope": 3014,
							"sourceUnit": 757,
							"src": "160:29:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2401,
								"nodeType": "StructuredDocumentation",
								"src": "191:101:13",
								"text": "@title Tick\n @notice Contains functions for managing tick processes and relevant calculations"
							},
							"fullyImplemented": true,
							"id": 3013,
							"linearizedBaseContracts": [
								3013
							],
							"name": "Tick",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2404,
									"libraryName": {
										"id": 2402,
										"name": "LowGasSafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 886,
										"src": "317:14:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LowGasSafeMath_$886",
											"typeString": "library LowGasSafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "311:32:13",
									"typeName": {
										"id": 2403,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "336:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"id": 2407,
									"libraryName": {
										"id": 2405,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1877,
										"src": "354:8:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$1877",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "348:26:13",
									"typeName": {
										"id": 2406,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "367:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"canonicalName": "Tick.Info",
									"id": 2428,
									"members": [
										{
											"constant": false,
											"id": 2409,
											"mutability": "mutable",
											"name": "liquidityGross",
											"nodeType": "VariableDeclaration",
											"scope": 2428,
											"src": "579:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2408,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "579:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2411,
											"mutability": "mutable",
											"name": "liquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 2428,
											"src": "776:19:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 2410,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "776:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2413,
											"mutability": "mutable",
											"name": "stakedLiquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 2428,
											"src": "922:25:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 2412,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "922:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2415,
											"mutability": "mutable",
											"name": "feeGrowthOutside0X128",
											"nodeType": "VariableDeclaration",
											"scope": 2428,
											"src": "1170:29:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2414,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1170:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2417,
											"mutability": "mutable",
											"name": "feeGrowthOutside1X128",
											"nodeType": "VariableDeclaration",
											"scope": 2428,
											"src": "1209:29:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2416,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1209:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2419,
											"mutability": "mutable",
											"name": "rewardGrowthOutsideX128",
											"nodeType": "VariableDeclaration",
											"scope": 2428,
											"src": "1464:31:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1464:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2421,
											"mutability": "mutable",
											"name": "tickCumulativeOutside",
											"nodeType": "VariableDeclaration",
											"scope": 2428,
											"src": "1572:27:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int56",
												"typeString": "int56"
											},
											"typeName": {
												"id": 2420,
												"name": "int56",
												"nodeType": "ElementaryTypeName",
												"src": "1572:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2423,
											"mutability": "mutable",
											"name": "secondsPerLiquidityOutsideX128",
											"nodeType": "VariableDeclaration",
											"scope": 2428,
											"src": "1823:38:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 2422,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1823:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2425,
											"mutability": "mutable",
											"name": "secondsOutside",
											"nodeType": "VariableDeclaration",
											"scope": 2428,
											"src": "2066:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2424,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2066:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2427,
											"mutability": "mutable",
											"name": "initialized",
											"nodeType": "VariableDeclaration",
											"scope": 2428,
											"src": "2312:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2426,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2312:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nodeType": "StructDefinition",
									"scope": 3013,
									"src": "436:1899:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Tick.LiquidityNets",
									"id": 2433,
									"members": [
										{
											"constant": false,
											"id": 2430,
											"mutability": "mutable",
											"name": "liquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 2433,
											"src": "2372:19:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 2429,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "2372:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2432,
											"mutability": "mutable",
											"name": "stakedLiquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 2433,
											"src": "2401:25:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 2431,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "2401:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LiquidityNets",
									"nodeType": "StructDefinition",
									"scope": 3013,
									"src": "2341:92:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2483,
										"nodeType": "Block",
										"src": "2919:271:13",
										"statements": [
											{
												"assignments": [
													2442
												],
												"declarations": [
													{
														"constant": false,
														"id": 2442,
														"mutability": "mutable",
														"name": "minTick",
														"nodeType": "VariableDeclaration",
														"scope": 2483,
														"src": "2929:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2441,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2929:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2450,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2443,
																		"name": "TickMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3804,
																		"src": "2946:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TickMath_$3804_$",
																			"typeString": "type(library TickMath)"
																		}
																	},
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "MIN_TICK",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3277,
																	"src": "2946:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2445,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "2966:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "2946:31:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"id": 2447,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2945:33:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2448,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2436,
														"src": "2981:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2945:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2929:63:13"
											},
											{
												"assignments": [
													2452
												],
												"declarations": [
													{
														"constant": false,
														"id": 2452,
														"mutability": "mutable",
														"name": "maxTick",
														"nodeType": "VariableDeclaration",
														"scope": 2483,
														"src": "3002:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2451,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "3002:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2460,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 2456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2453,
																		"name": "TickMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3804,
																		"src": "3019:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TickMath_$3804_$",
																			"typeString": "type(library TickMath)"
																		}
																	},
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "MAX_TICK",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3282,
																	"src": "3019:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2455,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "3039:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3019:31:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"id": 2457,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3018:33:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2458,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2436,
														"src": "3054:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "3018:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3002:63:13"
											},
											{
												"assignments": [
													2462
												],
												"declarations": [
													{
														"constant": false,
														"id": 2462,
														"mutability": "mutable",
														"name": "numTicks",
														"nodeType": "VariableDeclaration",
														"scope": 2483,
														"src": "3075:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2461,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "3075:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2474,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													},
													"id": 2473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			"id": 2467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2465,
																				"name": "maxTick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2452,
																				"src": "3101:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2466,
																				"name": "minTick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2442,
																				"src": "3111:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"src": "3101:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"id": 2468,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3100:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2469,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "3122:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3100:33:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3093:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 2463,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "3093:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 2471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3093:41:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 2472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3137:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3093:45:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3075:63:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 2481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3160:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 2476,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "3160:7:13",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 2475,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3155:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3155:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 2479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3155:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2480,
														"name": "numTicks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2462,
														"src": "3175:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "3155:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2440,
												"id": 2482,
												"nodeType": "Return",
												"src": "3148:35:13"
											}
										]
									},
									"documentation": {
										"id": 2434,
										"nodeType": "StructuredDocumentation",
										"src": "2439:382:13",
										"text": "@notice Derives max liquidity per tick from given tick spacing\n @dev Executed within the pool constructor\n @param tickSpacing The amount of required tick separation, realized in multiples of `tickSpacing`\n     e.g., a tickSpacing of 3 requires ticks to be initialized every 3rd tick i.e., ..., -6, -3, 0, 3, 6, ...\n @return The max liquidity per tick"
									},
									"id": 2484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacingToMaxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "2868:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2435,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2868:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2867:19:13"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2484,
												"src": "2910:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2438,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2910:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2909:9:13"
									},
									"scope": 3013,
									"src": "2826:364:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2606,
										"nodeType": "Block",
										"src": "4286:1249:13",
										"statements": [
											{
												"assignments": [
													2507
												],
												"declarations": [
													{
														"constant": false,
														"id": 2507,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 2606,
														"src": "4296:18:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 2506,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2428,
															"src": "4296:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2511,
												"initialValue": {
													"baseExpression": {
														"id": 2508,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "4317:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 2510,
													"indexExpression": {
														"id": 2509,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2491,
														"src": "4322:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4317:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$2428_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4296:36:13"
											},
											{
												"assignments": [
													2513
												],
												"declarations": [
													{
														"constant": false,
														"id": 2513,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 2606,
														"src": "4342:18:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 2512,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2428,
															"src": "4342:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2517,
												"initialValue": {
													"baseExpression": {
														"id": 2514,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "4363:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 2516,
													"indexExpression": {
														"id": 2515,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2493,
														"src": "4368:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4363:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$2428_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4342:36:13"
											},
											{
												"assignments": [
													2519
												],
												"declarations": [
													{
														"constant": false,
														"id": 2519,
														"mutability": "mutable",
														"name": "feeGrowthBelow0X128",
														"nodeType": "VariableDeclaration",
														"scope": 2606,
														"src": "4427:27:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4427:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2520,
												"nodeType": "VariableDeclarationStatement",
												"src": "4427:27:13"
											},
											{
												"assignments": [
													2522
												],
												"declarations": [
													{
														"constant": false,
														"id": 2522,
														"mutability": "mutable",
														"name": "feeGrowthBelow1X128",
														"nodeType": "VariableDeclaration",
														"scope": 2606,
														"src": "4464:27:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4464:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2523,
												"nodeType": "VariableDeclarationStatement",
												"src": "4464:27:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2524,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2495,
														"src": "4505:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2525,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2491,
														"src": "4520:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "4505:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2552,
													"nodeType": "Block",
													"src": "4674:183:13",
													"statements": [
														{
															"expression": {
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2538,
																	"name": "feeGrowthBelow0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "4688:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2539,
																		"name": "feeGrowthGlobal0X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2497,
																		"src": "4710:20:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 2540,
																			"name": "lower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2507,
																			"src": "4733:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 2541,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside0X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2415,
																		"src": "4733:27:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4710:50:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4688:72:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2544,
															"nodeType": "ExpressionStatement",
															"src": "4688:72:13"
														},
														{
															"expression": {
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2545,
																	"name": "feeGrowthBelow1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "4774:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2546,
																		"name": "feeGrowthGlobal1X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2499,
																		"src": "4796:20:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 2547,
																			"name": "lower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2507,
																			"src": "4819:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside1X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2417,
																		"src": "4819:27:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4796:50:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4774:72:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2551,
															"nodeType": "ExpressionStatement",
															"src": "4774:72:13"
														}
													]
												},
												"id": 2553,
												"nodeType": "IfStatement",
												"src": "4501:356:13",
												"trueBody": {
													"id": 2537,
													"nodeType": "Block",
													"src": "4531:137:13",
													"statements": [
														{
															"expression": {
																"id": 2530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2527,
																	"name": "feeGrowthBelow0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "4545:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2528,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "4567:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside0X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "4567:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4545:49:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2531,
															"nodeType": "ExpressionStatement",
															"src": "4545:49:13"
														},
														{
															"expression": {
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2532,
																	"name": "feeGrowthBelow1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "4608:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2533,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "4630:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside1X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2417,
																	"src": "4630:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4608:49:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2536,
															"nodeType": "ExpressionStatement",
															"src": "4608:49:13"
														}
													]
												}
											},
											{
												"assignments": [
													2555
												],
												"declarations": [
													{
														"constant": false,
														"id": 2555,
														"mutability": "mutable",
														"name": "feeGrowthAbove0X128",
														"nodeType": "VariableDeclaration",
														"scope": 2606,
														"src": "4905:27:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4905:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2556,
												"nodeType": "VariableDeclarationStatement",
												"src": "4905:27:13"
											},
											{
												"assignments": [
													2558
												],
												"declarations": [
													{
														"constant": false,
														"id": 2558,
														"mutability": "mutable",
														"name": "feeGrowthAbove1X128",
														"nodeType": "VariableDeclaration",
														"scope": 2606,
														"src": "4942:27:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4942:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2559,
												"nodeType": "VariableDeclarationStatement",
												"src": "4942:27:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2560,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2495,
														"src": "4983:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2561,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2493,
														"src": "4997:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "4983:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2588,
													"nodeType": "Block",
													"src": "5151:183:13",
													"statements": [
														{
															"expression": {
																"id": 2579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2574,
																	"name": "feeGrowthAbove0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "5165:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2575,
																		"name": "feeGrowthGlobal0X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2497,
																		"src": "5187:20:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 2576,
																			"name": "upper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2513,
																			"src": "5210:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside0X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2415,
																		"src": "5210:27:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5187:50:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5165:72:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2580,
															"nodeType": "ExpressionStatement",
															"src": "5165:72:13"
														},
														{
															"expression": {
																"id": 2586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2581,
																	"name": "feeGrowthAbove1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2558,
																	"src": "5251:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2582,
																		"name": "feeGrowthGlobal1X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2499,
																		"src": "5273:20:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 2583,
																			"name": "upper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2513,
																			"src": "5296:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside1X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2417,
																		"src": "5296:27:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5273:50:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5251:72:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2587,
															"nodeType": "ExpressionStatement",
															"src": "5251:72:13"
														}
													]
												},
												"id": 2589,
												"nodeType": "IfStatement",
												"src": "4979:355:13",
												"trueBody": {
													"id": 2573,
													"nodeType": "Block",
													"src": "5008:137:13",
													"statements": [
														{
															"expression": {
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2563,
																	"name": "feeGrowthAbove0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "5022:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2564,
																		"name": "upper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2513,
																		"src": "5044:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside0X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "5044:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5022:49:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2567,
															"nodeType": "ExpressionStatement",
															"src": "5022:49:13"
														},
														{
															"expression": {
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2568,
																	"name": "feeGrowthAbove1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2558,
																	"src": "5085:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2569,
																		"name": "upper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2513,
																		"src": "5107:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside1X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2417,
																	"src": "5107:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5085:49:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2572,
															"nodeType": "ExpressionStatement",
															"src": "5085:49:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2590,
														"name": "feeGrowthInside0X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2502,
														"src": "5344:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2591,
																"name": "feeGrowthGlobal0X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2497,
																"src": "5367:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2592,
																"name": "feeGrowthBelow0X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2519,
																"src": "5390:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5367:42:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2594,
															"name": "feeGrowthAbove0X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2555,
															"src": "5412:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5367:64:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5344:87:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2597,
												"nodeType": "ExpressionStatement",
												"src": "5344:87:13"
											},
											{
												"expression": {
													"id": 2604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2598,
														"name": "feeGrowthInside1X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "5441:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2599,
																"name": "feeGrowthGlobal1X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2499,
																"src": "5464:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2600,
																"name": "feeGrowthBelow1X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2522,
																"src": "5487:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5464:42:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2602,
															"name": "feeGrowthAbove1X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2558,
															"src": "5509:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5464:64:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5441:87:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2605,
												"nodeType": "ExpressionStatement",
												"src": "5441:87:13"
											}
										]
									},
									"documentation": {
										"id": 2485,
										"nodeType": "StructuredDocumentation",
										"src": "3196:765:13",
										"text": "@notice Retrieves fee growth data\n @param self The mapping containing all tick information for initialized ticks\n @param tickLower The lower tick boundary of the position\n @param tickUpper The upper tick boundary of the position\n @param tickCurrent The current tick\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @return feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n @return feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries"
									},
									"id": 2607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeGrowthInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "4003:40:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 2488,
													"keyType": {
														"id": 2486,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "4011:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "4003:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 2487,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2428,
														"src": "4020:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "4053:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2490,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4053:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "4078:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2492,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4078:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "tickCurrent",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "4103:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2494,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4103:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "feeGrowthGlobal0X128",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "4130:28:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "feeGrowthGlobal1X128",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "4168:28:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:209:13"
									},
									"returnParameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "feeGrowthInside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "4226:28:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4226:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "feeGrowthInside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "4256:28:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4256:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4225:60:13"
									},
									"scope": 3013,
									"src": "3966:1569:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "5800:818:13",
										"statements": [
											{
												"assignments": [
													2625
												],
												"declarations": [
													{
														"constant": false,
														"id": 2625,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 2686,
														"src": "5810:18:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 2624,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2428,
															"src": "5810:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2629,
												"initialValue": {
													"baseExpression": {
														"id": 2626,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "5831:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 2628,
													"indexExpression": {
														"id": 2627,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2613,
														"src": "5836:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5831:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$2428_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5810:36:13"
											},
											{
												"assignments": [
													2631
												],
												"declarations": [
													{
														"constant": false,
														"id": 2631,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 2686,
														"src": "5856:18:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 2630,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2428,
															"src": "5856:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2635,
												"initialValue": {
													"baseExpression": {
														"id": 2632,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "5877:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 2634,
													"indexExpression": {
														"id": 2633,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2615,
														"src": "5882:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5877:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$2428_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5856:36:13"
											},
											{
												"assignments": [
													2637
												],
												"declarations": [
													{
														"constant": false,
														"id": 2637,
														"mutability": "mutable",
														"name": "rewardGrowthBelowX128",
														"nodeType": "VariableDeclaration",
														"scope": 2686,
														"src": "5944:29:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2636,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5944:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2638,
												"nodeType": "VariableDeclarationStatement",
												"src": "5944:29:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2639,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2617,
														"src": "5987:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2640,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2613,
														"src": "6002:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "5987:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2655,
													"nodeType": "Block",
													"src": "6097:103:13",
													"statements": [
														{
															"expression": {
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2648,
																	"name": "rewardGrowthBelowX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2637,
																	"src": "6111:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2649,
																		"name": "rewardGrowthGlobalX128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2619,
																		"src": "6135:22:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 2650,
																			"name": "lower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "6160:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardGrowthOutsideX128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2419,
																		"src": "6160:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6135:54:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6111:78:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2654,
															"nodeType": "ExpressionStatement",
															"src": "6111:78:13"
														}
													]
												},
												"id": 2656,
												"nodeType": "IfStatement",
												"src": "5983:217:13",
												"trueBody": {
													"id": 2647,
													"nodeType": "Block",
													"src": "6013:78:13",
													"statements": [
														{
															"expression": {
																"id": 2645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2642,
																	"name": "rewardGrowthBelowX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2637,
																	"src": "6027:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2643,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2625,
																		"src": "6051:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 2644,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardGrowthOutsideX128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2419,
																	"src": "6051:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6027:53:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2646,
															"nodeType": "ExpressionStatement",
															"src": "6027:53:13"
														}
													]
												}
											},
											{
												"assignments": [
													2658
												],
												"declarations": [
													{
														"constant": false,
														"id": 2658,
														"mutability": "mutable",
														"name": "rewardGrowthAboveX128",
														"nodeType": "VariableDeclaration",
														"scope": 2686,
														"src": "6251:29:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2657,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6251:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2659,
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:29:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2660,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2617,
														"src": "6294:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2661,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2615,
														"src": "6308:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "6294:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2676,
													"nodeType": "Block",
													"src": "6403:103:13",
													"statements": [
														{
															"expression": {
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2669,
																	"name": "rewardGrowthAboveX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "6417:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2670,
																		"name": "rewardGrowthGlobalX128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2619,
																		"src": "6441:22:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 2671,
																			"name": "upper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2631,
																			"src": "6466:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardGrowthOutsideX128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2419,
																		"src": "6466:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6441:54:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6417:78:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2675,
															"nodeType": "ExpressionStatement",
															"src": "6417:78:13"
														}
													]
												},
												"id": 2677,
												"nodeType": "IfStatement",
												"src": "6290:216:13",
												"trueBody": {
													"id": 2668,
													"nodeType": "Block",
													"src": "6319:78:13",
													"statements": [
														{
															"expression": {
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2663,
																	"name": "rewardGrowthAboveX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2658,
																	"src": "6333:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2664,
																		"name": "upper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2631,
																		"src": "6357:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 2665,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardGrowthOutsideX128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2419,
																	"src": "6357:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6333:53:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2667,
															"nodeType": "ExpressionStatement",
															"src": "6333:53:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2678,
														"name": "rewardGrowthInsideX128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2622,
														"src": "6516:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2679,
																"name": "rewardGrowthGlobalX128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "6541:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2680,
																"name": "rewardGrowthBelowX128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2637,
																"src": "6566:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6541:46:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 2682,
															"name": "rewardGrowthAboveX128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "6590:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6541:70:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6516:95:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2685,
												"nodeType": "ExpressionStatement",
												"src": "6516:95:13"
											}
										]
									},
									"id": 2687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardGrowthInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "5581:40:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 2610,
													"keyType": {
														"id": 2608,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "5589:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "5581:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 2609,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2428,
														"src": "5598:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "5631:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2612,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5631:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "5656:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2614,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5656:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "tickCurrent",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "5681:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2616,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5681:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "rewardGrowthGlobalX128",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "5708:30:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5708:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5571:173:13"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "rewardGrowthInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "5768:30:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5767:32:13"
									},
									"scope": 3013,
									"src": "5541:1077:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2844,
										"nodeType": "Block",
										"src": "8360:1350:13",
										"statements": [
											{
												"assignments": [
													2722
												],
												"declarations": [
													{
														"constant": false,
														"id": 2722,
														"mutability": "mutable",
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 2844,
														"src": "8370:22:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 2721,
															"name": "Tick.Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2428,
															"src": "8370:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2726,
												"initialValue": {
													"baseExpression": {
														"id": 2723,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2692,
														"src": "8395:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 2725,
													"indexExpression": {
														"id": 2724,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2694,
														"src": "8400:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8395:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$2428_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8370:35:13"
											},
											{
												"assignments": [
													2728
												],
												"declarations": [
													{
														"constant": false,
														"id": 2728,
														"mutability": "mutable",
														"name": "liquidityGrossBefore",
														"nodeType": "VariableDeclaration",
														"scope": 2844,
														"src": "8416:28:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 2727,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "8416:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2731,
												"initialValue": {
													"expression": {
														"id": 2729,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2722,
														"src": "8447:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info storage pointer"
														}
													},
													"id": 2730,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "liquidityGross",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2409,
													"src": "8447:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8416:50:13"
											},
											{
												"assignments": [
													2733
												],
												"declarations": [
													{
														"constant": false,
														"id": 2733,
														"mutability": "mutable",
														"name": "liquidityGrossAfter",
														"nodeType": "VariableDeclaration",
														"scope": 2844,
														"src": "8476:27:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 2732,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "8476:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2739,
												"initialValue": {
													"arguments": [
														{
															"id": 2736,
															"name": "liquidityGrossBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2728,
															"src": "8529:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 2737,
															"name": "liquidityDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2698,
															"src": "8551:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														],
														"expression": {
															"id": 2734,
															"name": "LiquidityMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "8506:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LiquidityMath_$756_$",
																"typeString": "type(library LiquidityMath)"
															}
														},
														"id": 2735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addDelta",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 755,
														"src": "8506:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_int128_$returns$_t_uint128_$",
															"typeString": "function (uint128,int128) pure returns (uint128)"
														}
													},
													"id": 2738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8506:60:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8476:90:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2741,
																"name": "liquidityGrossAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2733,
																"src": "8585:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2742,
																"name": "maxLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2714,
																"src": "8608:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8585:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c4f",
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8622:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df0e8e403ea3fe54c7efb80492fa8f6599886b9c5435c1772b8d6400862c8c48",
																"typeString": "literal_string \"LO\""
															},
															"value": "LO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df0e8e403ea3fe54c7efb80492fa8f6599886b9c5435c1772b8d6400862c8c48",
																"typeString": "literal_string \"LO\""
															}
														],
														"id": 2740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8577:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8577:50:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2746,
												"nodeType": "ExpressionStatement",
												"src": "8577:50:13"
											},
											{
												"expression": {
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2747,
														"name": "flipped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2717,
														"src": "8638:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 2750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2748,
																		"name": "liquidityGrossAfter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2733,
																		"src": "8649:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8672:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "8649:24:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2751,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8648:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2752,
																		"name": "liquidityGrossBefore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2728,
																		"src": "8679:20:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8703:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "8679:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2755,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8678:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8648:57:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8638:67:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2758,
												"nodeType": "ExpressionStatement",
												"src": "8638:67:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2759,
														"name": "liquidityGrossBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2728,
														"src": "8720:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8744:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8720:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2810,
												"nodeType": "IfStatement",
												"src": "8716:643:13",
												"trueBody": {
													"id": 2809,
													"nodeType": "Block",
													"src": "8747:612:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 2764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2762,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2694,
																	"src": "8877:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2763,
																	"name": "tickCurrent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2696,
																	"src": "8885:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "8877:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2802,
															"nodeType": "IfStatement",
															"src": "8873:439:13",
															"trueBody": {
																"id": 2801,
																"nodeType": "Block",
																"src": "8898:414:13",
																"statements": [
																	{
																		"expression": {
																			"id": 2769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2765,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2722,
																					"src": "8916:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 2767,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "feeGrowthOutside0X128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2415,
																				"src": "8916:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2768,
																				"name": "feeGrowthGlobal0X128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2700,
																				"src": "8945:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8916:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2770,
																		"nodeType": "ExpressionStatement",
																		"src": "8916:49:13"
																	},
																	{
																		"expression": {
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2771,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2722,
																					"src": "8983:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 2773,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "feeGrowthOutside1X128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2417,
																				"src": "8983:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2774,
																				"name": "feeGrowthGlobal1X128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2702,
																				"src": "9012:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8983:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2776,
																		"nodeType": "ExpressionStatement",
																		"src": "8983:49:13"
																	},
																	{
																		"expression": {
																			"id": 2781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2777,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2722,
																					"src": "9050:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 2779,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "rewardGrowthOutsideX128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2419,
																				"src": "9050:28:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2780,
																				"name": "rewardGrowthGlobalX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2704,
																				"src": "9081:22:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9050:53:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2782,
																		"nodeType": "ExpressionStatement",
																		"src": "9050:53:13"
																	},
																	{
																		"expression": {
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2783,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2722,
																					"src": "9121:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 2785,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "secondsPerLiquidityOutsideX128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2423,
																				"src": "9121:35:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2786,
																				"name": "secondsPerLiquidityCumulativeX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2706,
																				"src": "9159:33:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "9121:71:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 2788,
																		"nodeType": "ExpressionStatement",
																		"src": "9121:71:13"
																	},
																	{
																		"expression": {
																			"id": 2793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2789,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2722,
																					"src": "9210:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 2791,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "tickCumulativeOutside",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2421,
																				"src": "9210:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2792,
																				"name": "tickCumulative",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2708,
																				"src": "9239:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"src": "9210:43:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			}
																		},
																		"id": 2794,
																		"nodeType": "ExpressionStatement",
																		"src": "9210:43:13"
																	},
																	{
																		"expression": {
																			"id": 2799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2795,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2722,
																					"src": "9271:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 2797,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "secondsOutside",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2425,
																				"src": "9271:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2798,
																				"name": "time",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2710,
																				"src": "9293:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"src": "9271:26:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"id": 2800,
																		"nodeType": "ExpressionStatement",
																		"src": "9271:26:13"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2803,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2722,
																		"src": "9325:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 2805,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2427,
																	"src": "9325:16:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9344:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "9325:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2808,
															"nodeType": "ExpressionStatement",
															"src": "9325:23:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2811,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2722,
															"src": "9369:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 2813,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "liquidityGross",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2409,
														"src": "9369:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2814,
														"name": "liquidityGrossAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "9391:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9369:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 2816,
												"nodeType": "ExpressionStatement",
												"src": "9369:41:13"
											},
											{
												"expression": {
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2817,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2722,
															"src": "9536:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 2819,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "liquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2411,
														"src": "9536:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 2820,
															"name": "upper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2712,
															"src": "9556:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 2837,
																			"name": "liquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2698,
																			"src": "9677:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2833,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2722,
																						"src": "9654:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 2834,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2411,
																					"src": "9654:17:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 2832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9647:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 2831,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9647:6:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9647:25:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 858,
																		"src": "9647:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 2838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9647:45:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 2839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1852,
																"src": "9647:54:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 2840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9647:56:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"id": 2841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "9556:147:13",
														"trueExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 2827,
																			"name": "liquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2698,
																			"src": "9606:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2823,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2722,
																						"src": "9583:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 2824,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2411,
																					"src": "9583:17:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 2822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9576:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 2821,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9576:6:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9576:25:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 885,
																		"src": "9576:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9576:45:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1852,
																"src": "9576:54:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9576:56:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "9536:167:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 2843,
												"nodeType": "ExpressionStatement",
												"src": "9536:167:13"
											}
										]
									},
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "6624:1281:13",
										"text": "@notice Updates a tick and returns true if the tick was flipped from initialized to uninitialized, or vice versa\n @param self The mapping containing all tick information for initialized ticks\n @param tick The tick that will be updated\n @param tickCurrent The current tick\n @param liquidityDelta A new amount of liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n @param secondsPerLiquidityCumulativeX128 The all-time seconds per max(1, liquidity) of the pool\n @param tickCumulative The tick * time elapsed since the pool was first initialized\n @param time The current block timestamp cast to a uint32\n @param upper true for updating a position's upper tick, or false for updating a position's lower tick\n @param maxLiquidity The maximum liquidity allocation for a single tick\n @return flipped Whether the tick was flipped from initialized to uninitialized, or vice versa"
									},
									"id": 2845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "7935:40:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 2691,
													"keyType": {
														"id": 2689,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "7943:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "7935:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 2690,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2428,
														"src": "7952:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "7985:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2693,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "7985:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "tickCurrent",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "8005:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2695,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "8005:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "8032:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2697,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "8032:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "feeGrowthGlobal0X128",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "8063:28:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8063:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "feeGrowthGlobal1X128",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "8101:28:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8101:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "rewardGrowthGlobalX128",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "8139:30:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8139:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "8179:41:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2705,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8179:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "8230:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2707,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "8230:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "8260:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2709,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8260:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "upper",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "8281:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8281:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "maxLiquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "8301:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2713,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8301:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7925:402:13"
									},
									"returnParameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "flipped",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "8346:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8346:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8345:14:13"
									},
									"scope": 3013,
									"src": "7910:1800:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2894,
										"nodeType": "Block",
										"src": "10468:381:13",
										"statements": [
											{
												"assignments": [
													2862
												],
												"declarations": [
													{
														"constant": false,
														"id": 2862,
														"mutability": "mutable",
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 2894,
														"src": "10478:22:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 2861,
															"name": "Tick.Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2428,
															"src": "10478:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2866,
												"initialValue": {
													"baseExpression": {
														"id": 2863,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2850,
														"src": "10503:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 2865,
													"indexExpression": {
														"id": 2864,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2852,
														"src": "10508:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10503:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$2428_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10478:35:13"
											},
											{
												"expression": {
													"id": 2892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2867,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2862,
															"src": "10645:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 2869,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedLiquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2413,
														"src": "10645:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 2870,
															"name": "upper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2856,
															"src": "10671:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 2887,
																			"name": "stakedLiquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "10810:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2883,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2862,
																						"src": "10781:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 2884,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakedLiquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2413,
																					"src": "10781:23:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 2882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10774:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 2881,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10774:6:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10774:31:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 858,
																		"src": "10774:35:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 2888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10774:57:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 2889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1852,
																"src": "10774:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10774:68:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"id": 2891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "10671:171:13",
														"trueExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 2877,
																			"name": "stakedLiquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2854,
																			"src": "10727:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2873,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2862,
																						"src": "10698:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 2874,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakedLiquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2413,
																					"src": "10698:23:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 2872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10691:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 2871,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10691:6:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10691:31:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 885,
																		"src": "10691:35:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 2878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10691:57:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1852,
																"src": "10691:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10691:68:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "10645:197:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 2893,
												"nodeType": "ExpressionStatement",
												"src": "10645:197:13"
											}
										]
									},
									"documentation": {
										"id": 2846,
										"nodeType": "StructuredDocumentation",
										"src": "9716:610:13",
										"text": "@notice Updates the staked liquidity component of a tick. Assumes tick is already initialized with an existing position.\n @notice We reuse existing liquidity for staking, so there is no change in liquidity\n @param self The mapping containing all tick information for initialized ticks\n @param tick The tick that will be updated\n @param stakedLiquidityDelta The amount of staked liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n @param upper true for updating a position's upper tick, or false for updating a position's lower tick"
									},
									"id": 2895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateStake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "10352:40:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 2849,
													"keyType": {
														"id": 2847,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "10360:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "10352:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 2848,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2428,
														"src": "10369:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "10394:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2851,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10394:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "stakedLiquidityDelta",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "10406:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2853,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10406:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "upper",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "10435:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10435:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10351:95:13"
									},
									"returnParameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10468:0:13"
									},
									"scope": 3013,
									"src": "10331:518:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2910,
										"nodeType": "Block",
										"src": "11114:34:13",
										"statements": [
											{
												"expression": {
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11124:17:13",
													"subExpression": {
														"baseExpression": {
															"id": 2905,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2900,
															"src": "11131:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
																"typeString": "mapping(int24 => struct Tick.Info storage ref)"
															}
														},
														"id": 2907,
														"indexExpression": {
															"id": 2906,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2902,
															"src": "11136:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11131:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage",
															"typeString": "struct Tick.Info storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2909,
												"nodeType": "ExpressionStatement",
												"src": "11124:17:13"
											}
										]
									},
									"documentation": {
										"id": 2896,
										"nodeType": "StructuredDocumentation",
										"src": "10855:176:13",
										"text": "@notice Clears tick data\n @param self The mapping containing all initialized tick information for initialized ticks\n @param tick The tick that will be cleared"
									},
									"id": 2911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clear",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2911,
												"src": "11051:40:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 2899,
													"keyType": {
														"id": 2897,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "11059:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "11051:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 2898,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2428,
														"src": "11068:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2911,
												"src": "11093:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2901,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "11093:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11050:54:13"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11114:0:13"
									},
									"scope": 3013,
									"src": "11036:112:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3011,
										"nodeType": "Block",
										"src": "12382:687:13",
										"statements": [
											{
												"assignments": [
													2938
												],
												"declarations": [
													{
														"constant": false,
														"id": 2938,
														"mutability": "mutable",
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 3011,
														"src": "12392:22:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 2937,
															"name": "Tick.Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2428,
															"src": "12392:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2942,
												"initialValue": {
													"baseExpression": {
														"id": 2939,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2916,
														"src": "12417:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 2941,
													"indexExpression": {
														"id": 2940,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2918,
														"src": "12422:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12417:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$2428_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12392:35:13"
											},
											{
												"expression": {
													"id": 2950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2943,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2938,
															"src": "12437:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 2945,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthOutside0X128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2415,
														"src": "12437:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2946,
															"name": "feeGrowthGlobal0X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2920,
															"src": "12466:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 2947,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2938,
																"src": "12489:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 2948,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "feeGrowthOutside0X128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2415,
															"src": "12489:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12466:49:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12437:78:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2951,
												"nodeType": "ExpressionStatement",
												"src": "12437:78:13"
											},
											{
												"expression": {
													"id": 2959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2952,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2938,
															"src": "12525:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 2954,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthOutside1X128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2417,
														"src": "12525:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2955,
															"name": "feeGrowthGlobal1X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "12554:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 2956,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2938,
																"src": "12577:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 2957,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "feeGrowthOutside1X128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2417,
															"src": "12577:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12554:49:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12525:78:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2960,
												"nodeType": "ExpressionStatement",
												"src": "12525:78:13"
											},
											{
												"expression": {
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2961,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2938,
															"src": "12613:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 2963,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardGrowthOutsideX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2419,
														"src": "12613:28:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2964,
															"name": "rewardGrowthGlobalX128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "12644:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 2965,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2938,
																"src": "12669:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardGrowthOutsideX128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2419,
															"src": "12669:28:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12644:53:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12613:84:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2969,
												"nodeType": "ExpressionStatement",
												"src": "12613:84:13"
											},
											{
												"expression": {
													"id": 2977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2970,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2938,
															"src": "12707:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 2972,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "secondsPerLiquidityOutsideX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2423,
														"src": "12707:35:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 2976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2973,
															"name": "secondsPerLiquidityCumulativeX128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2924,
															"src": "12745:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 2974,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2938,
																"src": "12781:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 2975,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "secondsPerLiquidityOutsideX128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2423,
															"src": "12781:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "12745:71:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "12707:109:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 2978,
												"nodeType": "ExpressionStatement",
												"src": "12707:109:13"
											},
											{
												"expression": {
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2979,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2938,
															"src": "12826:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 2981,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tickCumulativeOutside",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2421,
														"src": "12826:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"id": 2985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2982,
															"name": "tickCumulative",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2926,
															"src": "12855:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 2983,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2938,
																"src": "12872:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 2984,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tickCumulativeOutside",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2421,
															"src": "12872:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"src": "12855:43:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "12826:72:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 2987,
												"nodeType": "ExpressionStatement",
												"src": "12826:72:13"
											},
											{
												"expression": {
													"id": 2995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2988,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2938,
															"src": "12908:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 2990,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "secondsOutside",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2425,
														"src": "12908:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2991,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2928,
															"src": "12930:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 2992,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2938,
																"src": "12937:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 2993,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "secondsOutside",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2425,
															"src": "12937:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "12930:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "12908:48:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2996,
												"nodeType": "ExpressionStatement",
												"src": "12908:48:13"
											},
											{
												"expression": {
													"id": 3002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2997,
															"name": "nets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2933,
															"src": "12966:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityNets_$2433_memory_ptr",
																"typeString": "struct Tick.LiquidityNets memory"
															}
														},
														"id": 2999,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "liquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2430,
														"src": "12966:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3000,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2938,
															"src": "12986:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 3001,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "liquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2411,
														"src": "12986:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "12966:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 3003,
												"nodeType": "ExpressionStatement",
												"src": "12966:37:13"
											},
											{
												"expression": {
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3004,
															"name": "nets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2933,
															"src": "13013:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityNets_$2433_memory_ptr",
																"typeString": "struct Tick.LiquidityNets memory"
															}
														},
														"id": 3006,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedLiquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2432,
														"src": "13013:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3007,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2938,
															"src": "13039:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 3008,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakedLiquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2413,
														"src": "13039:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "13013:49:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 3010,
												"nodeType": "ExpressionStatement",
												"src": "13013:49:13"
											}
										]
									},
									"documentation": {
										"id": 2912,
										"nodeType": "StructuredDocumentation",
										"src": "11154:869:13",
										"text": "@notice Transitions to next tick as needed by price movement\n @param self The mapping containing all tick information for initialized ticks\n @param tick The destination tick of the transition\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @param secondsPerLiquidityCumulativeX128 The current seconds per liquidity\n @param tickCumulative The tick * time elapsed since the pool was first initialized\n @param time The current block.timestamp\n @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n @return nets The amount of liquidity and staked liquidity added (subtracted) when tick is crossed from left to right (right to left)"
									},
									"id": 3012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cross",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "12052:40:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 2915,
													"keyType": {
														"id": 2913,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "12060:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "12052:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$2428_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 2914,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2428,
														"src": "12069:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2428_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "12102:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2917,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "12102:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "feeGrowthGlobal0X128",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "12122:28:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12122:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "feeGrowthGlobal1X128",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "12160:28:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12160:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "12198:41:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2923,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "12198:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "12249:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2925,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "12249:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "12279:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2927,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "12279:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "rewardGrowthGlobalX128",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "12300:30:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12300:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12042:294:13"
									},
									"returnParameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "nets",
												"nodeType": "VariableDeclaration",
												"scope": 3012,
												"src": "12355:25:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LiquidityNets_$2433_memory_ptr",
													"typeString": "struct Tick.LiquidityNets"
												},
												"typeName": {
													"id": 2932,
													"name": "LiquidityNets",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2433,
													"src": "12355:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LiquidityNets_$2433_storage_ptr",
														"typeString": "struct Tick.LiquidityNets"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12354:27:13"
									},
									"scope": 3013,
									"src": "12028:1041:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3014,
							"src": "292:12779:13"
						}
					],
					"src": "45:13027:13"
				},
				"id": 13
			},
			"contracts/core/libraries/TickBitmap.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/TickBitmap.sol",
					"exportedSymbols": {
						"BitMath": [
							514
						],
						"TickBitmap": [
							3269
						]
					},
					"id": 3270,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3015,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:14"
						},
						{
							"absolutePath": "contracts/core/libraries/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 3016,
							"nodeType": "ImportDirective",
							"scope": 3270,
							"sourceUnit": 515,
							"src": "71:23:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3017,
								"nodeType": "StructuredDocumentation",
								"src": "96:243:14",
								"text": "@title Packed tick initialized state library\n @notice Stores a packed mapping of tick index to its initialized state\n @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word."
							},
							"fullyImplemented": true,
							"id": 3269,
							"linearizedBaseContracts": [
								3269
							],
							"name": "TickBitmap",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3045,
										"nodeType": "Block",
										"src": "775:79:14",
										"statements": [
											{
												"expression": {
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3027,
														"name": "wordPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3023,
														"src": "785:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 3032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3030,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3020,
																	"src": "801:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "809:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "801:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 3029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "795:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 3028,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "795:5:14",
																"typeDescriptions": {}
															}
														},
														"id": 3033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "795:16:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "785:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 3035,
												"nodeType": "ExpressionStatement",
												"src": "785:26:14"
											},
											{
												"expression": {
													"id": 3043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3036,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3025,
														"src": "821:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3039,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3020,
																	"src": "836:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "323536",
																	"id": 3040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "836:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 3038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "830:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 3037,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "830:5:14",
																"typeDescriptions": {}
															}
														},
														"id": 3042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "830:17:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "821:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 3044,
												"nodeType": "ExpressionStatement",
												"src": "821:26:14"
											}
										]
									},
									"documentation": {
										"id": 3018,
										"nodeType": "StructuredDocumentation",
										"src": "364:325:14",
										"text": "@notice Computes the position in the mapping where the initialized bit for a tick lives\n @param tick The tick for which to compute the position\n @return wordPos The key in the mapping containing the word in which the bit is stored\n @return bitPos The bit position in the word where the flag is stored"
									},
									"id": 3046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "position",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "712:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3019,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "712:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:12:14"
									},
									"returnParameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "wordPos",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "746:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 3022,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "746:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "bitPos",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "761:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3024,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "761:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:29:14"
									},
									"scope": 3269,
									"src": "694:160:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3088,
										"nodeType": "Block",
										"src": "1208:220:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 3063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 3061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3059,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3053,
																	"src": "1226:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 3060,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3055,
																	"src": "1233:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "1226:18:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1248:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1226:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3058,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1218:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:32:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3065,
												"nodeType": "ExpressionStatement",
												"src": "1218:32:14"
											},
											{
												"assignments": [
													3067,
													3069
												],
												"declarations": [
													{
														"constant": false,
														"id": 3067,
														"mutability": "mutable",
														"name": "wordPos",
														"nodeType": "VariableDeclaration",
														"scope": 3088,
														"src": "1295:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 3066,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "1295:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3069,
														"mutability": "mutable",
														"name": "bitPos",
														"nodeType": "VariableDeclaration",
														"scope": 3088,
														"src": "1310:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 3068,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1310:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3075,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 3073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3071,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3053,
																"src": "1335:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 3072,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3055,
																"src": "1342:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "1335:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 3070,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3046,
														"src": "1326:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
															"typeString": "function (int24) pure returns (int16,uint8)"
														}
													},
													"id": 3074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1326:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
														"typeString": "tuple(int16,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1294:60:14"
											},
											{
												"assignments": [
													3077
												],
												"declarations": [
													{
														"constant": false,
														"id": 3077,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"scope": 3088,
														"src": "1364:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1364:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3081,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 3078,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1379:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 3079,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "1384:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1379:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1364:26:14"
											},
											{
												"expression": {
													"id": 3086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3082,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3051,
															"src": "1400:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																"typeString": "mapping(int16 => uint256)"
															}
														},
														"id": 3084,
														"indexExpression": {
															"id": 3083,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "1405:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1400:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "^=",
													"rightHandSide": {
														"id": 3085,
														"name": "mask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3077,
														"src": "1417:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1400:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3087,
												"nodeType": "ExpressionStatement",
												"src": "1400:21:14"
											}
										]
									},
									"documentation": {
										"id": 3047,
										"nodeType": "StructuredDocumentation",
										"src": "860:245:14",
										"text": "@notice Flips the initialized state for a given tick from false to true, or vice versa\n @param self The mapping in which to flip the tick\n @param tick The tick to flip\n @param tickSpacing The spacing between usable ticks"
									},
									"id": 3089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "1128:38:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 3050,
													"keyType": {
														"id": 3048,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "1136:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "1128:25:14",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueType": {
														"id": 3049,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1145:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "1168:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3052,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1168:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "1180:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3054,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1180:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:71:14"
									},
									"returnParameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1208:0:14"
									},
									"scope": 3269,
									"src": "1110:318:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3267,
										"nodeType": "Block",
										"src": "2380:1707:14",
										"statements": [
											{
												"assignments": [
													3108
												],
												"declarations": [
													{
														"constant": false,
														"id": 3108,
														"mutability": "mutable",
														"name": "compressed",
														"nodeType": "VariableDeclaration",
														"scope": 3267,
														"src": "2390:16:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 3107,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2390:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3112,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3109,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3096,
														"src": "2409:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3110,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3098,
														"src": "2416:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2409:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2390:37:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 3115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3113,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3096,
															"src": "2441:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 3114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2448:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2441:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 3120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 3118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3116,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3096,
																"src": "2453:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 3117,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3098,
																"src": "2460:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2453:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 3119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2475:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2453:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2441:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3125,
												"nodeType": "IfStatement",
												"src": "2437:53:14",
												"trueBody": {
													"expression": {
														"id": 3123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "2478:12:14",
														"subExpression": {
															"id": 3122,
															"name": "compressed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3108,
															"src": "2478:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 3124,
													"nodeType": "ExpressionStatement",
													"src": "2478:12:14"
												}
											},
											{
												"condition": {
													"id": 3126,
													"name": "lte",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3100,
													"src": "2540:3:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3265,
													"nodeType": "Block",
													"src": "3267:814:14",
													"statements": [
														{
															"assignments": [
																3193,
																3195
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3193,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 3265,
																	"src": "3379:13:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 3192,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "3379:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 3195,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 3265,
																	"src": "3394:12:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 3194,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3394:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3201,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 3199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3197,
																			"name": "compressed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3108,
																			"src": "3419:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 3198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3432:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3419:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 3196,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3046,
																	"src": "3410:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 3200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3410:24:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3378:56:14"
														},
														{
															"assignments": [
																3203
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3203,
																	"mutability": "mutable",
																	"name": "mask",
																	"nodeType": "VariableDeclaration",
																	"scope": 3265,
																	"src": "3506:12:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3202,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3506:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3212,
															"initialValue": {
																"id": 3211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "3521:20:14",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3206,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3204,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3524:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 3205,
																							"name": "bitPos",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3195,
																							"src": "3529:6:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "3524:11:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3207,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3523:13:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3539:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3523:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3210,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3522:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3506:35:14"
														},
														{
															"assignments": [
																3214
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3214,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 3265,
																	"src": "3555:14:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3213,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3555:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3220,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3215,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3094,
																		"src": "3572:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 3217,
																	"indexExpression": {
																		"id": 3216,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3193,
																		"src": "3577:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3572:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3218,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3203,
																	"src": "3588:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3572:20:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3555:37:14"
														},
														{
															"expression": {
																"id": 3225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3221,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3105,
																	"src": "3717:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3222,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3214,
																		"src": "3731:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3741:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3731:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3717:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3226,
															"nodeType": "ExpressionStatement",
															"src": "3717:25:14"
														},
														{
															"expression": {
																"id": 3263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3227,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3103,
																	"src": "3866:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 3228,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3105,
																		"src": "3873:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 3261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 3258,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 3247,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3245,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3108,
																							"src": "4007:10:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 3246,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4020:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4007:14:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 3256,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"arguments": [
																											{
																												"id": 3252,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "4035:5:14",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_uint8_$",
																													"typeString": "type(uint8)"
																												},
																												"typeName": {
																													"id": 3251,
																													"name": "uint8",
																													"nodeType": "ElementaryTypeName",
																													"src": "4035:5:14",
																													"typeDescriptions": {}
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_type$_t_uint8_$",
																													"typeString": "type(uint8)"
																												}
																											],
																											"id": 3250,
																											"name": "type",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967269,
																											"src": "4030:4:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 3253,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4030:11:14",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_meta_type_t_uint8",
																											"typeString": "type(uint8)"
																										}
																									},
																									"id": 3254,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "max",
																									"nodeType": "MemberAccess",
																									"src": "4030:15:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 3255,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3195,
																									"src": "4048:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "4030:24:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 3249,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4024:5:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 3248,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "4024:5:14",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 3257,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4024:31:14",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "4007:48:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 3259,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4006:50:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 3260,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3098,
																			"src": "4059:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "4006:64:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 3262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3873:197:14",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 3244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 3241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 3231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3229,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3108,
																							"src": "3904:10:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 3230,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3917:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3904:14:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 3239,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"id": 3236,
																											"name": "masked",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3214,
																											"src": "3955:6:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 3234,
																											"name": "BitMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 514,
																											"src": "3927:7:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_BitMath_$514_$",
																												"typeString": "type(library BitMath)"
																											}
																										},
																										"id": 3235,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "leastSignificantBit",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 513,
																										"src": "3927:27:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																											"typeString": "function (uint256) pure returns (uint8)"
																										}
																									},
																									"id": 3237,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3927:35:14",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 3238,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3195,
																									"src": "3965:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "3927:44:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 3233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3921:5:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 3232,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3921:5:14",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 3240,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3921:51:14",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3904:68:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 3242,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3903:70:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 3243,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3098,
																			"src": "3976:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3903:84:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3866:204:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 3264,
															"nodeType": "ExpressionStatement",
															"src": "3866:204:14"
														}
													]
												},
												"id": 3266,
												"nodeType": "IfStatement",
												"src": "2536:1545:14",
												"trueBody": {
													"id": 3191,
													"nodeType": "Block",
													"src": "2545:716:14",
													"statements": [
														{
															"assignments": [
																3128,
																3130
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3128,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 3191,
																	"src": "2560:13:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 3127,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "2560:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 3130,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 3191,
																	"src": "2575:12:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 3129,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2575:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3134,
															"initialValue": {
																"arguments": [
																	{
																		"id": 3132,
																		"name": "compressed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3108,
																		"src": "2600:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 3131,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3046,
																	"src": "2591:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 3133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2591:20:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2559:52:14"
														},
														{
															"assignments": [
																3136
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3136,
																	"mutability": "mutable",
																	"name": "mask",
																	"nodeType": "VariableDeclaration",
																	"scope": 3191,
																	"src": "2692:12:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3135,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2692:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3148,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 3137,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2708:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 3138,
																					"name": "bitPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3130,
																					"src": "2713:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "2708:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 3140,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2707:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 3141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2723:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2707:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 3143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2728:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 3144,
																				"name": "bitPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3130,
																				"src": "2733:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2728:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3146,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2727:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2707:33:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2692:48:14"
														},
														{
															"assignments": [
																3150
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3150,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 3191,
																	"src": "2754:14:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3149,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2754:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3156,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3151,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3094,
																		"src": "2771:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 3153,
																	"indexExpression": {
																		"id": 3152,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3128,
																		"src": "2776:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2771:13:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3154,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3136,
																	"src": "2787:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2771:20:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2754:37:14"
														},
														{
															"expression": {
																"id": 3161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3157,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3105,
																	"src": "2924:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3158,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3150,
																		"src": "2938:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2948:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2938:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2924:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3162,
															"nodeType": "ExpressionStatement",
															"src": "2924:25:14"
														},
														{
															"expression": {
																"id": 3189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3163,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3103,
																	"src": "3073:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 3164,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3105,
																		"src": "3080:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 3187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 3184,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3179,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3108,
																						"src": "3209:10:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 3182,
																								"name": "bitPos",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3130,
																								"src": "3228:6:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 3181,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3222:5:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 3180,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3222:5:14",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 3183,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3222:13:14",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3209:26:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 3185,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3208:28:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 3186,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3098,
																			"src": "3239:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3208:42:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 3188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3080:170:14",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 3178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 3175,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3165,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3108,
																						"src": "3111:10:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 3173,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3168,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3130,
																									"src": "3130:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"arguments": [
																										{
																											"id": 3171,
																											"name": "masked",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3150,
																											"src": "3166:6:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 3169,
																											"name": "BitMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 514,
																											"src": "3139:7:14",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_BitMath_$514_$",
																												"typeString": "type(library BitMath)"
																											}
																										},
																										"id": 3170,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mostSignificantBit",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 352,
																										"src": "3139:26:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																											"typeString": "function (uint256) pure returns (uint8)"
																										}
																									},
																									"id": 3172,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3139:34:14",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "3130:43:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 3167,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3124:5:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 3166,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3124:5:14",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 3174,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3124:50:14",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3111:63:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 3176,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3110:65:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 3177,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3098,
																			"src": "3178:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3110:79:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3073:177:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 3190,
															"nodeType": "ExpressionStatement",
															"src": "3073:177:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3090,
										"nodeType": "StructuredDocumentation",
										"src": "1434:727:14",
										"text": "@notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n to the left (less than or equal to) or right (greater than) of the given tick\n @param self The mapping in which to compute the next initialized tick\n @param tick The starting tick\n @param tickSpacing The spacing between usable ticks\n @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks"
									},
									"id": 3268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextInitializedTickWithinOneWord",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3094,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "2217:38:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 3093,
													"keyType": {
														"id": 3091,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "2225:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "2217:25:14",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueType": {
														"id": 3092,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2234:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3096,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "2265:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3095,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2265:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "2285:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3097,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2285:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "lte",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "2312:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2312:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:119:14"
									},
									"returnParameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "next",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "2350:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3102,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2350:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "2362:16:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2362:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:30:14"
									},
									"scope": 3269,
									"src": "2166:1921:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3270,
							"src": "339:3750:14"
						}
					],
					"src": "45:4045:14"
				},
				"id": 14
			},
			"contracts/core/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							3804
						]
					},
					"id": 3805,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3271,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3272,
								"nodeType": "StructuredDocumentation",
								"src": "78:235:15",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 3804,
							"linearizedBaseContracts": [
								3804
							],
							"name": "TickMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 3273,
										"nodeType": "StructuredDocumentation",
										"src": "336:108:15",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 3277,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 3804,
									"src": "449:42:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 3274,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "449:5:15",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 3276,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "484:7:15",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 3275,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "485:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3278,
										"nodeType": "StructuredDocumentation",
										"src": "497:107:15",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 3282,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 3804,
									"src": "609:44:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 3279,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "609:5:15",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 3281,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "644:9:15",
										"subExpression": {
											"id": 3280,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3277,
											"src": "645:8:15",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3283,
										"nodeType": "StructuredDocumentation",
										"src": "660:116:15",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 3286,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 3804,
									"src": "781:53:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 3284,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "781:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 3285,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "824:10:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3287,
										"nodeType": "StructuredDocumentation",
										"src": "840:116:15",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 3290,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 3804,
									"src": "961:92:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 3288,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "961:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 3289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1004:49:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3663,
										"nodeType": "Block",
										"src": "1447:2495:15",
										"statements": [
											{
												"assignments": [
													3299
												],
												"declarations": [
													{
														"constant": false,
														"id": 3299,
														"mutability": "mutable",
														"name": "absTick",
														"nodeType": "VariableDeclaration",
														"scope": 3663,
														"src": "1457:15:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1457:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3319,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 3302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3300,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3293,
															"src": "1475:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 3301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1482:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1475:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3315,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3293,
																		"src": "1526:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 3314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1519:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 3313,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1519:6:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1519:12:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1511:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3311,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1511:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 3317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1511:21:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1475:57:15",
													"trueExpression": {
														"arguments": [
															{
																"id": 3309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1494:13:15",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 3307,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3293,
																			"src": "1502:4:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 3306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1495:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3305,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1495:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1495:12:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1486:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3303,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1486:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 3310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1486:22:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1457:75:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3321,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3299,
																"src": "1550:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 3324,
																		"name": "MAX_TICK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3282,
																		"src": "1569:8:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 3323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1561:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 3322,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1561:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 3325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1561:17:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1550:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 3327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1580:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 3320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1542:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:42:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3329,
												"nodeType": "ExpressionStatement",
												"src": "1542:42:15"
											},
											{
												"assignments": [
													3331
												],
												"declarations": [
													{
														"constant": false,
														"id": 3331,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 3663,
														"src": "1595:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1595:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3340,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3332,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3299,
																"src": "1611:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 3333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1621:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1611:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 3335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1628:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1611:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 3338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1669:35:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 3339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1611:93:15",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 3337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1632:34:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1595:109:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3341,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "1718:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 3342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1728:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1718:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1718:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3355,
												"nodeType": "IfStatement",
												"src": "1714:83:15",
												"trueBody": {
													"expression": {
														"id": 3353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3346,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "1738:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3347,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "1747:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 3348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1755:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1747:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1746:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1794:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1746:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1738:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3354,
													"nodeType": "ExpressionStatement",
													"src": "1738:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3356,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "1811:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 3357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1821:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1811:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1828:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1811:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3370,
												"nodeType": "IfStatement",
												"src": "1807:83:15",
												"trueBody": {
													"expression": {
														"id": 3368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3361,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "1831:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3362,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "1840:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 3363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1848:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1840:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3365,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1839:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1887:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1839:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1831:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3369,
													"nodeType": "ExpressionStatement",
													"src": "1831:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3371,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "1904:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 3372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1914:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1904:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1921:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1904:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3385,
												"nodeType": "IfStatement",
												"src": "1900:83:15",
												"trueBody": {
													"expression": {
														"id": 3383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3376,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "1924:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3377,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "1933:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 3378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1941:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1933:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3380,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1932:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1932:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1924:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3384,
													"nodeType": "ExpressionStatement",
													"src": "1924:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3386,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "1997:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 3387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1997:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2015:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1997:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3400,
												"nodeType": "IfStatement",
												"src": "1993:84:15",
												"trueBody": {
													"expression": {
														"id": 3398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3391,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "2018:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3392,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "2027:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 3393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2035:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2027:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3395,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2026:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2074:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2026:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2018:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3399,
													"nodeType": "ExpressionStatement",
													"src": "2018:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3401,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "2091:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 3402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2101:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2091:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2109:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2091:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3415,
												"nodeType": "IfStatement",
												"src": "2087:84:15",
												"trueBody": {
													"expression": {
														"id": 3413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3406,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "2112:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3407,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "2121:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 3408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2129:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2121:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3410,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2168:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2120:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2112:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3414,
													"nodeType": "ExpressionStatement",
													"src": "2112:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3416,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "2185:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 3417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2195:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2185:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2203:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2185:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3430,
												"nodeType": "IfStatement",
												"src": "2181:84:15",
												"trueBody": {
													"expression": {
														"id": 3428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3421,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "2206:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3422,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "2215:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 3423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2223:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2215:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3425,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2214:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2262:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2214:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2206:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3429,
													"nodeType": "ExpressionStatement",
													"src": "2206:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3431,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "2279:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 3432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2289:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2279:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2297:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2279:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3445,
												"nodeType": "IfStatement",
												"src": "2275:84:15",
												"trueBody": {
													"expression": {
														"id": 3443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3436,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "2300:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3437,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "2309:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 3438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2317:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2309:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3440,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2308:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2356:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2308:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2300:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3444,
													"nodeType": "ExpressionStatement",
													"src": "2300:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3446,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "2373:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 3447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2383:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2373:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2392:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2373:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3460,
												"nodeType": "IfStatement",
												"src": "2369:85:15",
												"trueBody": {
													"expression": {
														"id": 3458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3451,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "2395:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3452,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "2404:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 3453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2412:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2404:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3455,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2403:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2451:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2403:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2395:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3459,
													"nodeType": "ExpressionStatement",
													"src": "2395:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3461,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "2468:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 3462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2468:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2487:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2468:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3475,
												"nodeType": "IfStatement",
												"src": "2464:85:15",
												"trueBody": {
													"expression": {
														"id": 3473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3466,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "2490:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3467,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "2499:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 3468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2507:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2499:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3470,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2498:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2546:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2498:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2490:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3474,
													"nodeType": "ExpressionStatement",
													"src": "2490:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3476,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "2563:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 3477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2573:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2563:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2582:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2563:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3490,
												"nodeType": "IfStatement",
												"src": "2559:85:15",
												"trueBody": {
													"expression": {
														"id": 3488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3481,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "2585:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3482,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "2594:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 3483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2602:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2594:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3485,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2593:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2641:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2593:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2585:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3489,
													"nodeType": "ExpressionStatement",
													"src": "2585:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3491,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "2658:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 3492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2668:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2658:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2677:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2658:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3505,
												"nodeType": "IfStatement",
												"src": "2654:85:15",
												"trueBody": {
													"expression": {
														"id": 3503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3496,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "2680:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3497,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "2689:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 3498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2697:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2689:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3500,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2688:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2736:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2688:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2680:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3504,
													"nodeType": "ExpressionStatement",
													"src": "2680:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3506,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "2753:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 3507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2763:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2753:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2773:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2753:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3520,
												"nodeType": "IfStatement",
												"src": "2749:86:15",
												"trueBody": {
													"expression": {
														"id": 3518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3511,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "2776:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3512,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "2785:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 3513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2793:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2785:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3515,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2784:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2832:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2784:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2776:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3519,
													"nodeType": "ExpressionStatement",
													"src": "2776:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3521,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "2849:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 3522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2859:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2849:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2869:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2849:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3535,
												"nodeType": "IfStatement",
												"src": "2845:86:15",
												"trueBody": {
													"expression": {
														"id": 3533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3526,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "2872:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3527,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "2881:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 3528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2889:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2881:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3530,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2880:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2928:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2880:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2872:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3534,
													"nodeType": "ExpressionStatement",
													"src": "2872:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3536,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "2945:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 3537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2955:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2945:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2965:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2945:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3550,
												"nodeType": "IfStatement",
												"src": "2941:86:15",
												"trueBody": {
													"expression": {
														"id": 3548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3541,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "2968:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3542,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "2977:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 3543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2985:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2977:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3545,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2976:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2976:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2968:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3549,
													"nodeType": "ExpressionStatement",
													"src": "2968:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3551,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "3041:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 3552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3051:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3041:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3061:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3041:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3565,
												"nodeType": "IfStatement",
												"src": "3037:86:15",
												"trueBody": {
													"expression": {
														"id": 3563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3556,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "3064:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3557,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "3073:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 3558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3081:34:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3073:42:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3560,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3072:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3120:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3072:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3064:59:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3564,
													"nodeType": "ExpressionStatement",
													"src": "3064:59:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3566,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "3137:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 3567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3147:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3137:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3158:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3137:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3580,
												"nodeType": "IfStatement",
												"src": "3133:86:15",
												"trueBody": {
													"expression": {
														"id": 3578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3571,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "3161:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3572,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "3170:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 3573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3178:33:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3170:41:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3575,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3169:43:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3216:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3169:50:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3161:58:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3579,
													"nodeType": "ExpressionStatement",
													"src": "3161:58:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3581,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "3233:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 3582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3243:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3233:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3254:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3595,
												"nodeType": "IfStatement",
												"src": "3229:85:15",
												"trueBody": {
													"expression": {
														"id": 3593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3586,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "3257:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3587,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "3266:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 3588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3274:32:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3266:40:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3590,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3265:42:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3311:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3265:49:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3257:57:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3594,
													"nodeType": "ExpressionStatement",
													"src": "3257:57:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3596,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "3328:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 3597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3338:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3328:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3349:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3328:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3610,
												"nodeType": "IfStatement",
												"src": "3324:83:15",
												"trueBody": {
													"expression": {
														"id": 3608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3601,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "3352:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3602,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "3361:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 3603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3369:30:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3361:38:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3605,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3360:40:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3404:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3360:47:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3352:55:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3609,
													"nodeType": "ExpressionStatement",
													"src": "3352:55:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3611,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3299,
															"src": "3421:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 3612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3431:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3421:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3442:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3421:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3625,
												"nodeType": "IfStatement",
												"src": "3417:78:15",
												"trueBody": {
													"expression": {
														"id": 3623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3616,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "3445:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3617,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3331,
																			"src": "3454:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 3618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3454:33:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3620,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3453:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3492:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3453:42:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3445:50:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3624,
													"nodeType": "ExpressionStatement",
													"src": "3445:50:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3626,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3293,
														"src": "3510:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3517:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3510:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3639,
												"nodeType": "IfStatement",
												"src": "3506:47:15",
												"trueBody": {
													"expression": {
														"id": 3637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3629,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "3520:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 3632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3533:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 3631,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3533:7:15",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 3630,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3528:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 3633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3528:13:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 3634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3528:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 3635,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3331,
																"src": "3548:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3528:25:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3520:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3638,
													"nodeType": "ExpressionStatement",
													"src": "3520:33:15"
												}
											},
											{
												"expression": {
													"id": 3661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3640,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3296,
														"src": "3863:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3643,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3331,
																				"src": "3887:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3896:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3887:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3646,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3886:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3647,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3331,
																						"src": "3903:5:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 3650,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 3648,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3912:1:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 3649,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3917:2:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3912:7:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 3651,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3911:9:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3903:17:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 3653,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3924:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3903:22:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 3656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3932:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 3657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3903:30:15",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 3655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3928:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 3658,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3902:32:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3886:48:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3878:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 3641,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3878:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 3660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3878:57:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3863:72:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 3662,
												"nodeType": "ExpressionStatement",
												"src": "3863:72:15"
											}
										]
									},
									"documentation": {
										"id": 3291,
										"nodeType": "StructuredDocumentation",
										"src": "1060:297:15",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 3664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3293,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 3664,
												"src": "1390:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3292,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1390:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:12:15"
									},
									"returnParameters": {
										"id": 3297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3296,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 3664,
												"src": "1425:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3295,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:22:15"
									},
									"scope": 3804,
									"src": "1362:2580:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3802,
										"nodeType": "Block",
										"src": "4446:4196:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3673,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3667,
																	"src": "4563:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 3674,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3286,
																	"src": "4579:14:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4563:30:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3676,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3667,
																	"src": "4597:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3677,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3290,
																	"src": "4612:14:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4597:29:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4563:63:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 3680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 3672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4555:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:77:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3682,
												"nodeType": "ExpressionStatement",
												"src": "4555:77:15"
											},
											{
												"assignments": [
													3684
												],
												"declarations": [
													{
														"constant": false,
														"id": 3684,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 3802,
														"src": "4642:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3683,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4642:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3691,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3687,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3667,
																"src": "4666:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 3686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4658:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3685,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4658:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 3688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4658:21:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 3689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4683:2:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4658:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4642:43:15"
											},
											{
												"assignments": [
													3693
												],
												"declarations": [
													{
														"constant": false,
														"id": 3693,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 3802,
														"src": "4696:9:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4696:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3695,
												"initialValue": {
													"id": 3694,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3684,
													"src": "4708:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4696:17:15"
											},
											{
												"assignments": [
													3697
												],
												"declarations": [
													{
														"constant": false,
														"id": 3697,
														"mutability": "mutable",
														"name": "msb",
														"nodeType": "VariableDeclaration",
														"scope": 3802,
														"src": "4723:11:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3696,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4723:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3699,
												"initialValue": {
													"hexValue": "30",
													"id": 3698,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4737:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4723:15:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4758:139:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4772:58:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:1:15",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4791:1:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4794:34:15",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4788:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4788:41:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:49:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4776:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4843:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4853:3:15"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4858:1:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4850:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:10:15"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4843:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4873:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4882:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4885:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4873:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "4843:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "4853:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "4791:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "4873:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "4885:1:15",
														"valueSize": 1
													}
												],
												"id": 3700,
												"nodeType": "InlineAssembly",
												"src": "4749:148:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4915:123:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4929:42:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:15",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4948:1:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4951:18:15",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4945:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4945:25:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:33:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4933:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4984:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4994:3:15"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4999:1:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4991:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:10:15"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5014:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5023:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5026:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5014:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "4984:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "4994:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "4948:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5014:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5026:1:15",
														"valueSize": 1
													}
												],
												"id": 3701,
												"nodeType": "InlineAssembly",
												"src": "4906:132:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5056:115:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5070:34:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5083:1:15",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5089:1:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:10:15",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5086:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:17:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5079:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:25:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5074:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5117:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:15"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5132:1:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5124:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:10:15"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5147:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5159:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5147:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5117:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5127:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5089:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5147:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5159:1:15",
														"valueSize": 1
													}
												],
												"id": 3702,
												"nodeType": "InlineAssembly",
												"src": "5047:124:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5189:111:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5203:30:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5216:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5222:1:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5225:6:15",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:13:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5212:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:21:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5207:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5246:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5256:3:15"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5261:1:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5253:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:10:15"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5246:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5285:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5288:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5281:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5276:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5246:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5256:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5222:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5276:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5288:1:15",
														"valueSize": 1
													}
												],
												"id": 3703,
												"nodeType": "InlineAssembly",
												"src": "5180:120:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5318:109:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5332:28:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5345:1:15",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5351:1:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5354:4:15",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5348:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5348:11:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5341:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:19:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5336:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5373:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5383:3:15"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5388:1:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5380:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:10:15"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5403:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5412:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5415:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5403:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5373:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5383:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5351:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5403:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5415:1:15",
														"valueSize": 1
													}
												],
												"id": 3704,
												"nodeType": "InlineAssembly",
												"src": "5309:118:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5445:108:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5459:27:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5472:1:15",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5478:1:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:3:15",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5475:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5475:10:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:18:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5463:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5499:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5509:3:15"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5514:1:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5506:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:10:15"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5529:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5538:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5541:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5529:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5499:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5509:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5478:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5529:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5541:1:15",
														"valueSize": 1
													}
												],
												"id": 3705,
												"nodeType": "InlineAssembly",
												"src": "5436:117:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5571:108:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5585:27:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5598:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5604:1:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5607:3:15",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5601:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5601:10:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:18:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5589:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5625:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5635:3:15"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5640:1:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5632:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:10:15"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5664:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5667:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5655:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5625:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5635:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5604:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5655:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5667:1:15",
														"valueSize": 1
													}
												],
												"id": 3706,
												"nodeType": "InlineAssembly",
												"src": "5562:117:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5697:73:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5711:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5723:1:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:3:15",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5720:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:10:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5715:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5743:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5753:3:15"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5758:1:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5750:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:10:15"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5743:3:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5743:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3697,
														"isOffset": false,
														"isSlot": false,
														"src": "5753:3:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5723:1:15",
														"valueSize": 1
													}
												],
												"id": 3707,
												"nodeType": "InlineAssembly",
												"src": "5688:82:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3708,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3697,
														"src": "5784:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 3709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5791:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5784:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 3727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3720,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3693,
															"src": "5835:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3721,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3684,
																"src": "5839:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 3722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5849:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 3723,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3697,
																			"src": "5855:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5849:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3725,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5848:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5839:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5835:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3728,
													"nodeType": "ExpressionStatement",
													"src": "5835:24:15"
												},
												"id": 3729,
												"nodeType": "IfStatement",
												"src": "5780:79:15",
												"trueBody": {
													"expression": {
														"id": 3718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3711,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3693,
															"src": "5796:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3712,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3684,
																"src": "5800:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3713,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3697,
																			"src": "5810:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 3714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5816:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5810:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3716,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5809:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5800:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5796:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3719,
													"nodeType": "ExpressionStatement",
													"src": "5796:24:15"
												}
											},
											{
												"assignments": [
													3731
												],
												"declarations": [
													{
														"constant": false,
														"id": 3731,
														"mutability": "mutable",
														"name": "log_2",
														"nodeType": "VariableDeclaration",
														"scope": 3802,
														"src": "5870:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3730,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5870:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3741,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3734,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3697,
																			"src": "5893:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5886:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3732,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5886:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5886:11:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5900:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5886:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3738,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5885:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 3739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5908:2:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5885:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5870:40:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5930:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5944:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5953:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5962:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5965:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5958:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5944:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5981:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5999:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5990:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5990:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5985:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6014:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6026:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6037:2:15",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6041:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6033:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6033:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6023:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6014:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6057:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6066:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6069:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6062:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6057:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6014:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6026:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5944:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5962:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5965:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "5999:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6057:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6069:1:15",
														"valueSize": 1
													}
												],
												"id": 3742,
												"nodeType": "InlineAssembly",
												"src": "5921:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6099:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6113:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6122:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6131:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6134:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6127:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6118:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6113:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6150:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6163:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6168:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6154:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6183:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6195:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6206:2:15",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6210:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6192:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6183:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6226:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6235:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6238:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6226:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6183:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6195:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6113:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6131:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6134:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6168:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6226:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6238:1:15",
														"valueSize": 1
													}
												],
												"id": 3743,
												"nodeType": "InlineAssembly",
												"src": "6090:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6268:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6282:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6300:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6303:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6296:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6296:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6287:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6282:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6319:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6332:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6337:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6323:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6352:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6364:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6375:2:15",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6379:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6361:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6352:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6395:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6404:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6407:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6395:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6352:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6364:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6282:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6300:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6303:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6337:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6395:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6407:1:15",
														"valueSize": 1
													}
												],
												"id": 3744,
												"nodeType": "InlineAssembly",
												"src": "6259:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6437:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6451:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6460:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6469:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6472:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6465:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6465:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6456:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6451:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6488:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6501:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6506:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6497:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6492:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6533:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6544:2:15",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6548:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6540:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6530:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6521:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6564:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6573:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6576:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6564:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6521:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6533:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6451:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6469:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6472:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6506:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6564:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6576:1:15",
														"valueSize": 1
													}
												],
												"id": 3745,
												"nodeType": "InlineAssembly",
												"src": "6428:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6606:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6620:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6629:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6638:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6641:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6620:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6657:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6670:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6675:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6666:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6661:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6690:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6702:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6713:2:15",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6717:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6709:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6709:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6699:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6690:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6733:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6742:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6745:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6738:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6738:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6733:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6690:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6702:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6620:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6638:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6641:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6675:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6733:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6745:1:15",
														"valueSize": 1
													}
												],
												"id": 3746,
												"nodeType": "InlineAssembly",
												"src": "6597:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6775:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6807:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6810:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6803:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6803:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6826:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6839:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6844:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6835:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6830:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6859:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6871:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6882:2:15",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6886:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6868:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6859:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6902:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6911:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6914:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6907:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6902:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6859:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "6871:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6789:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6807:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6810:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6844:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6902:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6914:1:15",
														"valueSize": 1
													}
												],
												"id": 3747,
												"nodeType": "InlineAssembly",
												"src": "6766:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6944:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6958:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6967:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6976:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6979:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6972:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6963:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6958:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6995:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7008:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7013:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7004:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6999:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7028:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7040:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7051:2:15",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7055:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7047:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7028:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7071:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7080:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7083:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7071:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7028:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7040:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6958:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6976:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "6979:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7013:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7071:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7083:1:15",
														"valueSize": 1
													}
												],
												"id": 3748,
												"nodeType": "InlineAssembly",
												"src": "6935:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7113:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7127:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7136:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7145:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7148:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7141:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7141:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7132:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7127:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7164:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7177:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7182:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7173:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7173:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7168:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7197:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7209:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7220:2:15",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7224:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7216:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7206:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7197:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7240:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7249:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7252:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7245:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7240:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7197:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7209:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7127:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7145:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7148:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7182:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7240:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7252:1:15",
														"valueSize": 1
													}
												],
												"id": 3749,
												"nodeType": "InlineAssembly",
												"src": "7104:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7282:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7296:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7305:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7314:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7317:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7310:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7301:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7296:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7333:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7346:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7351:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7337:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7366:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7378:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7389:2:15",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7393:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7385:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7375:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7366:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7409:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7418:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7421:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7414:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7409:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7366:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7378:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7296:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7314:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7317:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7351:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7409:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7421:1:15",
														"valueSize": 1
													}
												],
												"id": 3750,
												"nodeType": "InlineAssembly",
												"src": "7273:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7451:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7465:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7474:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7483:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7486:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7479:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7479:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7470:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7465:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7502:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7515:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7520:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7511:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7506:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7535:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7547:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7558:2:15",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7562:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7544:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7535:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7578:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7587:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7590:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7583:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7578:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7535:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7547:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7465:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7483:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7486:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7520:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7578:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7590:1:15",
														"valueSize": 1
													}
												],
												"id": 3751,
												"nodeType": "InlineAssembly",
												"src": "7442:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7620:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7634:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7643:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7652:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7655:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7648:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7648:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7634:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7671:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7689:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7675:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7704:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7716:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7727:2:15",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7731:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7713:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7704:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7747:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7756:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7759:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7752:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7752:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7747:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7704:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7634:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7652:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7655:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7689:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7747:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7759:1:15",
														"valueSize": 1
													}
												],
												"id": 3752,
												"nodeType": "InlineAssembly",
												"src": "7611:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7789:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7803:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7821:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7824:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7803:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7840:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7853:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7858:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7844:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7873:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7885:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7896:2:15",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7900:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7882:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7873:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7916:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7925:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7928:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7921:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7916:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7873:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "7885:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7803:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7821:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7824:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7858:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7916:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7928:1:15",
														"valueSize": 1
													}
												],
												"id": 3753,
												"nodeType": "InlineAssembly",
												"src": "7780:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7958:151:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7972:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7981:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7990:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7993:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7986:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7986:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7977:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7972:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8009:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8022:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8027:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8018:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8013:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8054:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8065:2:15",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8069:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8061:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8051:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8051:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8042:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8085:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8094:1:15"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8097:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8090:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8090:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8085:1:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "8042:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "8054:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7972:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7990:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "7993:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "8027:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "8085:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "8097:1:15",
														"valueSize": 1
													}
												],
												"id": 3754,
												"nodeType": "InlineAssembly",
												"src": "7949:160:15"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8127:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8141:24:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8150:3:15",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8159:1:15"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8162:1:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:9:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8146:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:19:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8141:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8178:20:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8191:3:15",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8187:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8187:11:15"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8182:1:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8223:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8234:2:15",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8238:1:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8230:10:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8220:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:21:15"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8211:5:15"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3731,
														"isOffset": false,
														"isSlot": false,
														"src": "8223:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "8141:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "8159:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "8162:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3693,
														"isOffset": false,
														"isSlot": false,
														"src": "8196:1:15",
														"valueSize": 1
													}
												],
												"id": 3755,
												"nodeType": "InlineAssembly",
												"src": "8118:133:15"
											},
											{
												"assignments": [
													3757
												],
												"declarations": [
													{
														"constant": false,
														"id": 3757,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nodeType": "VariableDeclaration",
														"scope": 3802,
														"src": "8261:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3756,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8261:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3761,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3758,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3731,
														"src": "8284:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 3759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8292:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8284:32:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8261:55:15"
											},
											{
												"assignments": [
													3763
												],
												"declarations": [
													{
														"constant": false,
														"id": 3763,
														"mutability": "mutable",
														"name": "tickLow",
														"nodeType": "VariableDeclaration",
														"scope": 3802,
														"src": "8345:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 3762,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8345:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3773,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3766,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3757,
																			"src": "8368:13:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 3767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8384:37:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8368:53:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 3769,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8367:55:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8426:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8367:62:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8361:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 3764,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8361:5:15",
															"typeDescriptions": {}
														}
													},
													"id": 3772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8361:69:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8345:85:15"
											},
											{
												"assignments": [
													3775
												],
												"declarations": [
													{
														"constant": false,
														"id": 3775,
														"mutability": "mutable",
														"name": "tickHi",
														"nodeType": "VariableDeclaration",
														"scope": 3802,
														"src": "8440:12:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 3774,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8440:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3785,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3778,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3757,
																			"src": "8462:13:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 3779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8478:39:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8462:55:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 3781,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8461:57:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 3782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8522:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8461:64:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8455:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 3776,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8455:5:15",
															"typeDescriptions": {}
														}
													},
													"id": 3784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8455:71:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8440:86:15"
											},
											{
												"expression": {
													"id": 3800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3786,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3670,
														"src": "8537:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 3789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3787,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3763,
																"src": "8544:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3788,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3775,
																"src": "8555:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8544:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3792,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3775,
																			"src": "8593:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 3791,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3664,
																		"src": "8574:18:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 3793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8574:26:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 3794,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3667,
																	"src": "8604:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8574:42:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 3797,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3763,
																"src": "8628:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 3798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8574:61:15",
															"trueExpression": {
																"id": 3796,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3775,
																"src": "8619:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 3799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8544:91:15",
														"trueExpression": {
															"id": 3790,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3763,
															"src": "8564:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8537:98:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 3801,
												"nodeType": "ExpressionStatement",
												"src": "8537:98:15"
											}
										]
									},
									"documentation": {
										"id": 3665,
										"nodeType": "StructuredDocumentation",
										"src": "3948:408:15",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 3803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3667,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 3803,
												"src": "4389:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3666,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4389:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4388:22:15"
									},
									"returnParameters": {
										"id": 3671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3670,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 3803,
												"src": "4434:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3669,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4434:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:12:15"
									},
									"scope": 3804,
									"src": "4361:4281:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3805,
							"src": "313:8331:15"
						}
					],
					"src": "45:8600:15"
				},
				"id": 15
			},
			"contracts/core/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20Minimal": [
							204
						],
						"TransferHelper": [
							3855
						]
					},
					"id": 3856,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3806,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"absolutePath": "contracts/core/interfaces/IERC20Minimal.sol",
							"file": "../interfaces/IERC20Minimal.sol",
							"id": 3807,
							"nodeType": "ImportDirective",
							"scope": 3856,
							"sourceUnit": 205,
							"src": "71:41:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3808,
								"nodeType": "StructuredDocumentation",
								"src": "114:139:16",
								"text": "@title TransferHelper\n @notice Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false"
							},
							"fullyImplemented": true,
							"id": 3855,
							"linearizedBaseContracts": [
								3855
							],
							"name": "TransferHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3853,
										"nodeType": "Block",
										"src": "675:225:16",
										"statements": [
											{
												"assignments": [
													3819,
													3821
												],
												"declarations": [
													{
														"constant": false,
														"id": 3819,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 3853,
														"src": "686:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3818,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "686:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3821,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 3853,
														"src": "700:17:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3820,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "700:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3833,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 3826,
																			"name": "IERC20Minimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "767:13:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$204_$",
																				"typeString": "type(contract IERC20Minimal)"
																			}
																		},
																		"id": 3827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 153,
																		"src": "767:22:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20Minimal.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 3828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "767:31:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 3829,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3813,
																	"src": "800:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3830,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3815,
																	"src": "804:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3824,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "744:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "744:22:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 3831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "744:66:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 3822,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3811,
															"src": "733:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "733:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 3832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "733:78:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "685:126:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3835,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3819,
																"src": "829:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3836,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3821,
																					"src": "841:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 3837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "841:11:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "856:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "841:16:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3842,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3821,
																					"src": "872:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 3844,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "879:4:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 3843,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "879:4:16",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 3845,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "878:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 3840,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "861:3:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 3841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "861:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 3846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "861:24:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "841:44:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3848,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "840:46:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "829:57:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5446",
															"id": 3850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "888:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cebb2b2e317200ffcf39e4291b6400d95f06e73adfd258bd495d227b7d846ff0",
																"typeString": "literal_string \"TF\""
															},
															"value": "TF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cebb2b2e317200ffcf39e4291b6400d95f06e73adfd258bd495d227b7d846ff0",
																"typeString": "literal_string \"TF\""
															}
														],
														"id": 3834,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "821:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "821:72:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3852,
												"nodeType": "ExpressionStatement",
												"src": "821:72:16"
											}
										]
									},
									"documentation": {
										"id": 3809,
										"nodeType": "StructuredDocumentation",
										"src": "282:315:16",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Calls transfer on token contract, errors with TF if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 3854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3811,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 3854,
												"src": "624:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3813,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 3854,
												"src": "639:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3815,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 3854,
												"src": "651:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:42:16"
									},
									"returnParameters": {
										"id": 3817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:0:16"
									},
									"scope": 3855,
									"src": "602:298:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3856,
							"src": "253:649:16"
						}
					],
					"src": "45:858:16"
				},
				"id": 16
			},
			"contracts/core/libraries/UnsafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/UnsafeMath.sol",
					"exportedSymbols": {
						"UnsafeMath": [
							3871
						]
					},
					"id": 3872,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3857,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3858,
								"nodeType": "StructuredDocumentation",
								"src": "71:173:17",
								"text": "@title Math functions that do not check inputs or outputs\n @notice Contains methods that perform common math functions but do not do any overflow or underflow checks"
							},
							"fullyImplemented": true,
							"id": 3871,
							"linearizedBaseContracts": [
								3871
							],
							"name": "UnsafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3869,
										"nodeType": "Block",
										"src": "571:86:17",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "590:61:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "604:37:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "617:1:17"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "620:1:17"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "613:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "631:1:17"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "634:1:17"
																					}
																				],
																				"functionName": {
																					"name": "mod",
																					"nodeType": "YulIdentifier",
																					"src": "627:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "627:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "638:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "624:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "624:16:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:32:17"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nodeType": "YulIdentifier",
																	"src": "604:1:17"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3861,
														"isOffset": false,
														"isSlot": false,
														"src": "617:1:17",
														"valueSize": 1
													},
													{
														"declaration": 3861,
														"isOffset": false,
														"isSlot": false,
														"src": "631:1:17",
														"valueSize": 1
													},
													{
														"declaration": 3863,
														"isOffset": false,
														"isSlot": false,
														"src": "620:1:17",
														"valueSize": 1
													},
													{
														"declaration": 3863,
														"isOffset": false,
														"isSlot": false,
														"src": "634:1:17",
														"valueSize": 1
													},
													{
														"declaration": 3866,
														"isOffset": false,
														"isSlot": false,
														"src": "604:1:17",
														"valueSize": 1
													}
												],
												"id": 3868,
												"nodeType": "InlineAssembly",
												"src": "581:70:17"
											}
										]
									},
									"documentation": {
										"id": 3859,
										"nodeType": "StructuredDocumentation",
										"src": "269:218:17",
										"text": "@notice Returns ceil(x / y)\n @dev division by 0 has unspecified behavior, and must be checked externally\n @param x The dividend\n @param y The divisor\n @return z The quotient, ceil(x / y)"
									},
									"id": 3870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divRoundingUp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3861,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 3870,
												"src": "515:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3863,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3870,
												"src": "526:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:22:17"
									},
									"returnParameters": {
										"id": 3867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3866,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3870,
												"src": "560:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:11:17"
									},
									"scope": 3871,
									"src": "492:165:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3872,
							"src": "244:415:17"
						}
					],
					"src": "45:615:17"
				},
				"id": 17
			}
		}
	}
}