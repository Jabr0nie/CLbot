{
	"id": "90970d28fa8da4ac0beab4b2fc2af18d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/core/VeloOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0;\r\n\r\nimport \"./interfaces/pool/ICLPoolDerivedState.sol\";\r\nimport \"./libraries/LowGasSafeMath.sol\";\r\nimport \"./libraries/SafeCast.sol\";\r\nimport \"./libraries/Tick.sol\";\r\nimport \"./libraries/TickBitmap.sol\";\r\nimport \"./libraries/Position.sol\";\r\nimport \"./libraries/Oracle.sol\";\r\nimport \"./interfaces/ICLPool.sol\";\r\nimport \"./libraries/FullMath.sol\";\r\nimport \"./libraries/FixedPoint128.sol\";\r\nimport \"./libraries/TransferHelper.sol\";\r\nimport \"./libraries/TickMath.sol\";\r\nimport \"./libraries/LiquidityMath.sol\";\r\nimport \"./libraries/LiquidityAmounts.sol\";\r\nimport \"./libraries/SqrtPriceMath.sol\";\r\nimport \"./IERC721.sol\";\r\nimport \"./INonfungiblePositionManager.sol\";\r\nimport \"./interfaces/ICLPool.sol\";\r\n\r\n\r\ninterface IERC20 {\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ncontract VeloOracle {\r\n\r\nICLPoolDerivedState public V3Pool;\r\n\r\n\r\nfunction GetPrice(address pool) public view returns (uint256 price) {\r\n    require(pool != address(0), \"Invalid pool address\");\r\n\r\n    // Fetch token addresses\r\n    address token0 = ICLPoolConstants(pool).token0();\r\n    address token1 = ICLPoolConstants(pool).token1();\r\n    require(token0 != address(0) && token1 != address(0), \"Invalid tokens\");\r\n\r\n    // Determine pool ordering\r\n\r\n    // Fetch decimals\r\n    uint8 dec0 = IERC20(token0).decimals(); // 6 (USDC)\r\n\r\n    // Fetch current tick\r\n    (, int24 tick, , , , ) = ICLPoolState(pool).slot0();\r\n\r\n    // Get sqrt price\r\n    uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick);\r\n    uint256 sqrtPrice = uint256(sqrtRatioX96);\r\n\r\n    // Calculate raw price: (sqrtPrice^2 / 2^192)\r\n    uint256 priceRaw = FullMath.mulDiv(sqrtPrice * sqrtPrice, 1, 2**192);\r\n\r\n    price = priceRaw > 0 ? FullMath.mulDiv(10**18, 10**18, priceRaw) : 0; // 18-decimal precision\r\n    // Normalize to 18 decimals: multiply by 10^dec0 (WETH decimals)\r\n    price = price / (10 ** (dec0 + 12));\r\n\r\n    return (price);\r\n}\r\n\r\nfunction getTicks (address pool) public view returns (int24 lowTick, int24 highTick){\r\n        int24 tickSpacing = ICLPoolConstants(pool).tickSpacing();\r\n        (, int24 currentTick, , , , ) = ICLPool(pool).slot0();\r\n        currentTick = (currentTick / tickSpacing) * tickSpacing;\r\n        lowTick = currentTick - tickSpacing;\r\n        highTick = currentTick + tickSpacing;\r\n        return (lowTick, highTick);\r\n        }\r\n\r\naddress _pool = 0x7cfc2Da3ba598ef4De692905feDcA32565AB836E;\r\nfunction addLiquidity(uint256 amount0ToMint) public view returns (uint128) {\r\n    // Approve the position manager\r\n    (int24 tickLower,int24 tickUpper) = getTicks(_pool);\r\n\r\n    uint160 sqrtPriceLower = TickMath.getSqrtRatioAtTick(tickLower);\r\n    uint160 sqrtPriceUpper = TickMath.getSqrtRatioAtTick(tickUpper);\r\n\r\n\r\n\r\n    uint128 liquidity = LiquidityAmounts.getLiquidityForAmount0(sqrtPriceLower, sqrtPriceUpper, amount0ToMint);\r\n\r\n    return liquidity;\r\n}\r\n}"
			},
			"contracts/core/interfaces/ICLPool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport \"./pool/ICLPoolConstants.sol\";\nimport \"./pool/ICLPoolState.sol\";\nimport \"./pool/ICLPoolDerivedState.sol\";\nimport \"./pool/ICLPoolActions.sol\";\nimport \"./pool/ICLPoolOwnerActions.sol\";\nimport \"./pool/ICLPoolEvents.sol\";\n\n/// @title The interface for a CL Pool\n/// @notice A CL pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface ICLPool is\n    ICLPoolConstants,\n    ICLPoolState,\n    ICLPoolDerivedState,\n    ICLPoolActions,\n    ICLPoolEvents,\n    ICLPoolOwnerActions\n{}\n"
			},
			"contracts/core/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\npragma abicoder v2;\r\n\r\n\r\n/// @title Non-fungible token for positions\r\n/// @notice Wraps CL positions in a non-fungible token interface which allows for them to be transferred\r\n/// and authorized.\r\ninterface INonfungiblePositionManager\r\n{\r\n    /// @notice Emitted when liquidity is increased for a position NFT\r\n    /// @dev Also emitted when a token is minted\r\n    /// @param tokenId The ID of the token for which liquidity was increased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\r\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\r\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\r\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when liquidity is decreased for a position NFT\r\n    /// @param tokenId The ID of the token for which liquidity was decreased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\r\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\r\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\r\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when tokens are collected for a position NFT\r\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\r\n    /// @param tokenId The ID of the token for which underlying tokens were collected\r\n    /// @param recipient The address of the account that received the collected tokens\r\n    /// @param amount0 The amount of token0 owed to the position that was collected\r\n    /// @param amount1 The amount of token1 owed to the position that was collected\r\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when a new Token Descriptor is set\r\n    /// @param tokenDescriptor Address of the new Token Descriptor\r\n    event TokenDescriptorChanged(address indexed tokenDescriptor);\r\n    /// @notice Emitted when a new Owner is set\r\n    /// @param owner Address of the new Owner\r\n    event TransferOwnership(address indexed owner);\r\n\r\n    /// @notice Returns the position information associated with a given token ID.\r\n    /// @dev Throws if the token ID is not valid.\r\n    /// @param tokenId The ID of the token that represents the position\r\n    /// @return nonce The nonce for permits\r\n    /// @return operator The address that is approved for spending\r\n    /// @return token0 The address of the token0 for a specific pool\r\n    /// @return token1 The address of the token1 for a specific pool\r\n    /// @return tickSpacing The tick spacing associated with the pool\r\n    /// @return tickLower The lower end of the tick range for the position\r\n    /// @return tickUpper The higher end of the tick range for the position\r\n    /// @return liquidity The liquidity of the position\r\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\r\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\r\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\r\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\r\n    function positions(uint256 tokenId)\r\n        external\r\n        view\r\n        returns (\r\n            uint96 nonce,\r\n            address operator,\r\n            address token0,\r\n            address token1,\r\n            int24 tickSpacing,\r\n            int24 tickLower,\r\n            int24 tickUpper,\r\n            uint128 liquidity,\r\n            uint256 feeGrowthInside0LastX128,\r\n            uint256 feeGrowthInside1LastX128,\r\n            uint128 tokensOwed0,\r\n            uint128 tokensOwed1\r\n        );\r\n\r\n    /// @notice Returns the address of the Token Descriptor, that handles generating token URIs for Positions\r\n    function tokenDescriptor() external view returns (address);\r\n\r\n    /// @notice Returns the address of the Owner, that is allowed to set a new TokenDescriptor\r\n    function owner() external view returns (address);\r\n\r\n    struct MintParams {\r\n        address token0;\r\n        address token1;\r\n        int24 tickSpacing;\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint160 sqrtPriceX96;\r\n    }\r\n\r\n    /// @notice Creates a new position wrapped in a NFT\r\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\r\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\r\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\r\n    /// @return tokenId The ID of the token that represents the minted position\r\n    /// @return liquidity The amount of liquidity for this position\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function mint(MintParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n\r\n    struct IncreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\r\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\r\n    /// amount0Desired The desired amount of token0 to be spent,\r\n    /// amount1Desired The desired amount of token1 to be spent,\r\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\r\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return liquidity The new liquidity amount as a result of the increase\r\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\r\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\r\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint128 liquidity, uint256 amount0, uint256 amount1);\r\n\r\n    struct DecreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint128 liquidity;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\r\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\r\n    /// amount The amount by which liquidity will be decreased,\r\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\r\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\r\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\r\n    /// @dev The use of this function can cause a loss to users of the NonfungiblePositionManager\r\n    /// @dev for tokens that have very high decimals.\r\n    /// @dev The amount of tokens necessary for the loss is: 3.4028237e+38.\r\n    /// @dev This is equivalent to 1e20 value with 18 decimals.\r\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    struct CollectParams {\r\n        uint256 tokenId;\r\n        address recipient;\r\n        uint128 amount0Max;\r\n        uint128 amount1Max;\r\n    }\r\n\r\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\r\n    /// @notice Used to update staked positions before deposit and withdraw\r\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\r\n    /// recipient The account that should receive the tokens,\r\n    /// amount0Max The maximum amount of token0 to collect,\r\n    /// amount1Max The maximum amount of token1 to collect\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\r\n    /// must be collected first.\r\n    /// @param tokenId The ID of the token that is being burned\r\n    function burn(uint256 tokenId) external payable;\r\n\r\n    /// @notice Sets a new Token Descriptor\r\n    /// @param _tokenDescriptor Address of the new Token Descriptor to be chosen\r\n    function setTokenDescriptor(address _tokenDescriptor) external;\r\n\r\n    /// @notice Sets a new Owner address\r\n    /// @param _owner Address of the new Owner to be chosen\r\n    function setOwner(address _owner) external;\r\n}\r\n"
			},
			"contracts/core/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity =0.7.6;\r\npragma abicoder v2;\r\n\r\ninterface IERC721 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n"
			},
			"contracts/core/libraries/SqrtPriceMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport \"./LowGasSafeMath.sol\";\nimport \"./SafeCast.sol\";\n\nimport \"./FullMath.sol\";\nimport \"./UnsafeMath.sol\";\nimport \"./FixedPoint96.sol\";\n\n/// @title Functions based on Q64.96 sqrt price and liquidity\n/// @notice Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas\nlibrary SqrtPriceMath {\n    using LowGasSafeMath for uint256;\n    using SafeCast for uint256;\n\n    /// @notice Gets the next sqrt price given a delta of token0\n    /// @dev Always rounds up, because in the exact output case (increasing price) we need to move the price at least\n    /// far enough to get the desired output amount, and in the exact input case (decreasing price) we need to move the\n    /// price less in order to not send too much output.\n    /// The most precise formula for this is liquidity * sqrtPX96 / (liquidity +- amount * sqrtPX96),\n    /// if this is impossible because of overflow, we calculate liquidity / (liquidity / sqrtPX96 +- amount).\n    /// @param sqrtPX96 The starting price, i.e. before accounting for the token0 delta\n    /// @param liquidity The amount of usable liquidity\n    /// @param amount How much of token0 to add or remove from virtual reserves\n    /// @param add Whether to add or remove the amount of token0\n    /// @return The price after adding or removing amount, depending on add\n    function getNextSqrtPriceFromAmount0RoundingUp(uint160 sqrtPX96, uint128 liquidity, uint256 amount, bool add)\n        internal\n        pure\n        returns (uint160)\n    {\n        // we short circuit amount == 0 because the result is otherwise not guaranteed to equal the input price\n        if (amount == 0) return sqrtPX96;\n        uint256 numerator1 = uint256(liquidity) << FixedPoint96.RESOLUTION;\n\n        if (add) {\n            uint256 product;\n            if ((product = amount * sqrtPX96) / amount == sqrtPX96) {\n                uint256 denominator = numerator1 + product;\n                if (denominator >= numerator1) {\n                    // always fits in 160 bits\n                    return uint160(FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator));\n                }\n            }\n\n            return uint160(UnsafeMath.divRoundingUp(numerator1, (numerator1 / sqrtPX96).add(amount)));\n        } else {\n            uint256 product;\n            // if the product overflows, we know the denominator underflows\n            // in addition, we must check that the denominator does not underflow\n            require((product = amount * sqrtPX96) / amount == sqrtPX96 && numerator1 > product);\n            uint256 denominator = numerator1 - product;\n            return FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator).toUint160();\n        }\n    }\n\n    /// @notice Gets the next sqrt price given a delta of token1\n    /// @dev Always rounds down, because in the exact output case (decreasing price) we need to move the price at least\n    /// far enough to get the desired output amount, and in the exact input case (increasing price) we need to move the\n    /// price less in order to not send too much output.\n    /// The formula we compute is within <1 wei of the lossless version: sqrtPX96 +- amount / liquidity\n    /// @param sqrtPX96 The starting price, i.e., before accounting for the token1 delta\n    /// @param liquidity The amount of usable liquidity\n    /// @param amount How much of token1 to add, or remove, from virtual reserves\n    /// @param add Whether to add, or remove, the amount of token1\n    /// @return The price after adding or removing `amount`\n    function getNextSqrtPriceFromAmount1RoundingDown(uint160 sqrtPX96, uint128 liquidity, uint256 amount, bool add)\n        internal\n        pure\n        returns (uint160)\n    {\n        // if we're adding (subtracting), rounding down requires rounding the quotient down (up)\n        // in both cases, avoid a mulDiv for most inputs\n        if (add) {\n            uint256 quotient = (\n                amount <= type(uint160).max\n                    ? (amount << FixedPoint96.RESOLUTION) / liquidity\n                    : FullMath.mulDiv(amount, FixedPoint96.Q96, liquidity)\n            );\n\n            return uint256(sqrtPX96).add(quotient).toUint160();\n        } else {\n            uint256 quotient = (\n                amount <= type(uint160).max\n                    ? UnsafeMath.divRoundingUp(amount << FixedPoint96.RESOLUTION, liquidity)\n                    : FullMath.mulDivRoundingUp(amount, FixedPoint96.Q96, liquidity)\n            );\n\n            require(sqrtPX96 > quotient);\n            // always fits 160 bits\n            return uint160(sqrtPX96 - quotient);\n        }\n    }\n\n    /// @notice Gets the next sqrt price given an input amount of token0 or token1\n    /// @dev Throws if price or liquidity are 0, or if the next price is out of bounds\n    /// @param sqrtPX96 The starting price, i.e., before accounting for the input amount\n    /// @param liquidity The amount of usable liquidity\n    /// @param amountIn How much of token0, or token1, is being swapped in\n    /// @param zeroForOne Whether the amount in is token0 or token1\n    /// @return sqrtQX96 The price after adding the input amount to token0 or token1\n    function getNextSqrtPriceFromInput(uint160 sqrtPX96, uint128 liquidity, uint256 amountIn, bool zeroForOne)\n        internal\n        pure\n        returns (uint160 sqrtQX96)\n    {\n        require(sqrtPX96 > 0);\n        require(liquidity > 0);\n\n        // round to make sure that we don't pass the target price\n        return zeroForOne\n            ? getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountIn, true)\n            : getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountIn, true);\n    }\n\n    /// @notice Gets the next sqrt price given an output amount of token0 or token1\n    /// @dev Throws if price or liquidity are 0 or the next price is out of bounds\n    /// @param sqrtPX96 The starting price before accounting for the output amount\n    /// @param liquidity The amount of usable liquidity\n    /// @param amountOut How much of token0, or token1, is being swapped out\n    /// @param zeroForOne Whether the amount out is token0 or token1\n    /// @return sqrtQX96 The price after removing the output amount of token0 or token1\n    function getNextSqrtPriceFromOutput(uint160 sqrtPX96, uint128 liquidity, uint256 amountOut, bool zeroForOne)\n        internal\n        pure\n        returns (uint160 sqrtQX96)\n    {\n        require(sqrtPX96 > 0);\n        require(liquidity > 0);\n\n        // round to make sure that we pass the target price\n        return zeroForOne\n            ? getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountOut, false)\n            : getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountOut, false);\n    }\n\n    /// @notice Gets the amount0 delta between two prices\n    /// @dev Calculates liquidity / sqrt(lower) - liquidity / sqrt(upper),\n    /// i.e. liquidity * (sqrt(upper) - sqrt(lower)) / (sqrt(upper) * sqrt(lower))\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The amount of usable liquidity\n    /// @param roundUp Whether to round the amount up or down\n    /// @return amount0 Amount of token0 required to cover a position of size liquidity between the two passed prices\n    function getAmount0Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity, bool roundUp)\n        internal\n        pure\n        returns (uint256 amount0)\n    {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        uint256 numerator1 = uint256(liquidity) << FixedPoint96.RESOLUTION;\n        uint256 numerator2 = sqrtRatioBX96 - sqrtRatioAX96;\n\n        require(sqrtRatioAX96 > 0);\n\n        return roundUp\n            ? UnsafeMath.divRoundingUp(FullMath.mulDivRoundingUp(numerator1, numerator2, sqrtRatioBX96), sqrtRatioAX96)\n            : FullMath.mulDiv(numerator1, numerator2, sqrtRatioBX96) / sqrtRatioAX96;\n    }\n\n    /// @notice Gets the amount1 delta between two prices\n    /// @dev Calculates liquidity * (sqrt(upper) - sqrt(lower))\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The amount of usable liquidity\n    /// @param roundUp Whether to round the amount up, or down\n    /// @return amount1 Amount of token1 required to cover a position of size liquidity between the two passed prices\n    function getAmount1Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity, bool roundUp)\n        internal\n        pure\n        returns (uint256 amount1)\n    {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        return roundUp\n            ? FullMath.mulDivRoundingUp(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96)\n            : FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96);\n    }\n\n    /// @notice Helper that gets signed token0 delta\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The change in liquidity for which to compute the amount0 delta\n    /// @return amount0 Amount of token0 corresponding to the passed liquidityDelta between the two prices\n    function getAmount0Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, int128 liquidity)\n        internal\n        pure\n        returns (int256 amount0)\n    {\n        return liquidity < 0\n            ? -getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(-liquidity), false).toInt256()\n            : getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(liquidity), true).toInt256();\n    }\n\n    /// @notice Helper that gets signed token1 delta\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The change in liquidity for which to compute the amount1 delta\n    /// @return amount1 Amount of token1 corresponding to the passed liquidityDelta between the two prices\n    function getAmount1Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, int128 liquidity)\n        internal\n        pure\n        returns (int256 amount1)\n    {\n        return liquidity < 0\n            ? -getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(-liquidity), false).toInt256()\n            : getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(liquidity), true).toInt256();\n    }\n}\n"
			},
			"contracts/core/libraries/LiquidityAmounts.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport \"contracts/core/libraries/FullMath.sol\";\r\nimport \"contracts/core/libraries/FixedPoint96.sol\";\r\n\r\n/// @title Liquidity amount functions\r\n/// @notice Provides functions for computing liquidity amounts from token amounts and prices\r\nlibrary LiquidityAmounts {\r\n    /// @notice Downcasts uint256 to uint128\r\n    /// @param x The uint258 to be downcasted\r\n    /// @return y The passed value, downcasted to uint128\r\n    function toUint128(uint256 x) private pure returns (uint128 y) {\r\n        require((y = uint128(x)) == x);\r\n    }\r\n\r\n    /// @notice Computes the amount of liquidity received for a given amount of token0 and price range\r\n    /// @dev Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param amount0 The amount0 being sent in\r\n    /// @return liquidity The amount of returned liquidity\r\n    function getLiquidityForAmount0(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint256 amount0)\r\n        internal\r\n        pure\r\n        returns (uint128 liquidity)\r\n    {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n        uint256 intermediate = FullMath.mulDiv(sqrtRatioAX96, sqrtRatioBX96, FixedPoint96.Q96);\r\n        return toUint128(FullMath.mulDiv(amount0, intermediate, sqrtRatioBX96 - sqrtRatioAX96));\r\n    }\r\n\r\n    /// @notice Computes the amount of liquidity received for a given amount of token1 and price range\r\n    /// @dev Calculates amount1 / (sqrt(upper) - sqrt(lower)).\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param amount1 The amount1 being sent in\r\n    /// @return liquidity The amount of returned liquidity\r\n    function getLiquidityForAmount1(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint256 amount1)\r\n        internal\r\n        pure\r\n        returns (uint128 liquidity)\r\n    {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n        return toUint128(FullMath.mulDiv(amount1, FixedPoint96.Q96, sqrtRatioBX96 - sqrtRatioAX96));\r\n    }\r\n\r\n    /// @notice Computes the maximum amount of liquidity received for a given amount of token0, token1, the current\r\n    /// pool prices and the prices at the tick boundaries\r\n    /// @param sqrtRatioX96 A sqrt price representing the current pool prices\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param amount0 The amount of token0 being sent in\r\n    /// @param amount1 The amount of token1 being sent in\r\n    /// @return liquidity The maximum amount of liquidity received\r\n    function getLiquidityForAmounts(\r\n        uint160 sqrtRatioX96,\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    ) internal pure returns (uint128 liquidity) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        if (sqrtRatioX96 <= sqrtRatioAX96) {\r\n            liquidity = getLiquidityForAmount0(sqrtRatioAX96, sqrtRatioBX96, amount0);\r\n        } else if (sqrtRatioX96 < sqrtRatioBX96) {\r\n            uint128 liquidity0 = getLiquidityForAmount0(sqrtRatioX96, sqrtRatioBX96, amount0);\r\n            uint128 liquidity1 = getLiquidityForAmount1(sqrtRatioAX96, sqrtRatioX96, amount1);\r\n\r\n            liquidity = liquidity0 < liquidity1 ? liquidity0 : liquidity1;\r\n        } else {\r\n            liquidity = getLiquidityForAmount1(sqrtRatioAX96, sqrtRatioBX96, amount1);\r\n        }\r\n    }\r\n\r\n    /// @notice Computes the amount of token0 for a given amount of liquidity and a price range\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param liquidity The liquidity being valued\r\n    /// @return amount0 The amount of token0\r\n    function getAmount0ForLiquidity(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity)\r\n        internal\r\n        pure\r\n        returns (uint256 amount0)\r\n    {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        return FullMath.mulDiv(\r\n            uint256(liquidity) << FixedPoint96.RESOLUTION, sqrtRatioBX96 - sqrtRatioAX96, sqrtRatioBX96\r\n        ) / sqrtRatioAX96;\r\n    }\r\n\r\n    /// @notice Computes the amount of token1 for a given amount of liquidity and a price range\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param liquidity The liquidity being valued\r\n    /// @return amount1 The amount of token1\r\n    function getAmount1ForLiquidity(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity)\r\n        internal\r\n        pure\r\n        returns (uint256 amount1)\r\n    {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        return FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96);\r\n    }\r\n\r\n    /// @notice Computes the token0 and token1 value for a given amount of liquidity, the current\r\n    /// pool prices and the prices at the tick boundaries\r\n    /// @param sqrtRatioX96 A sqrt price representing the current pool prices\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param liquidity The liquidity being valued\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function getAmountsForLiquidity(\r\n        uint160 sqrtRatioX96,\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint128 liquidity\r\n    ) internal pure returns (uint256 amount0, uint256 amount1) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        if (sqrtRatioX96 <= sqrtRatioAX96) {\r\n            amount0 = getAmount0ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity);\r\n        } else if (sqrtRatioX96 < sqrtRatioBX96) {\r\n            amount0 = getAmount0ForLiquidity(sqrtRatioX96, sqrtRatioBX96, liquidity);\r\n            amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioX96, liquidity);\r\n        } else {\r\n            amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity);\r\n        }\r\n    }\r\n}\r\n"
			},
			"contracts/core/libraries/LiquidityMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math library for liquidity\nlibrary LiquidityMath {\n    /// @notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n    /// @param x The liquidity before change\n    /// @param y The delta by which liquidity should be changed\n    /// @return z The liquidity delta\n    function addDelta(uint128 x, int128 y) internal pure returns (uint128 z) {\n        if (y < 0) {\n            require((z = x - uint128(-y)) < x, \"LS\");\n        } else {\n            require((z = x + uint128(y)) >= x, \"LA\");\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(MAX_TICK), \"T\");\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, \"R\");\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"
			},
			"contracts/core/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport \"../interfaces/IERC20Minimal.sol\";\n\n/// @title TransferHelper\n/// @notice Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false\nlibrary TransferHelper {\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Calls transfer on token contract, errors with TF if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(address token, address to, uint256 value) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20Minimal.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TF\");\n    }\n}\n"
			},
			"contracts/core/libraries/FixedPoint128.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.4.0;\n\n/// @title FixedPoint128\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\nlibrary FixedPoint128 {\n    uint256 internal constant Q128 = 0x100000000000000000000000000000000;\n}\n"
			},
			"contracts/core/libraries/FullMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.0 <0.8.0;\n\n/// @title Contains 512-bit math functions\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\nlibrary FullMath {\n    /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    function mulDiv(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {\n        // 512-bit multiply [prod1 prod0] = a * b\n        // Compute the product mod 2**256 and mod 2**256 - 1\n        // then use the Chinese Remainder Theorem to reconstruct\n        // the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2**256 + prod0\n        uint256 prod0; // Least significant 256 bits of the product\n        uint256 prod1; // Most significant 256 bits of the product\n        assembly {\n            let mm := mulmod(a, b, not(0))\n            prod0 := mul(a, b)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        // Handle non-overflow cases, 256 by 256 division\n        if (prod1 == 0) {\n            require(denominator > 0);\n            assembly {\n                result := div(prod0, denominator)\n            }\n            return result;\n        }\n\n        // Make sure the result is less than 2**256.\n        // Also prevents denominator == 0\n        require(denominator > prod1);\n\n        ///////////////////////////////////////////////\n        // 512 by 256 division.\n        ///////////////////////////////////////////////\n\n        // Make division exact by subtracting the remainder from [prod1 prod0]\n        // Compute remainder using mulmod\n        uint256 remainder;\n        assembly {\n            remainder := mulmod(a, b, denominator)\n        }\n        // Subtract 256 bit number from 512 bit number\n        assembly {\n            prod1 := sub(prod1, gt(remainder, prod0))\n            prod0 := sub(prod0, remainder)\n        }\n\n        // Factor powers of two out of denominator\n        // Compute largest power of two divisor of denominator.\n        // Always >= 1.\n        uint256 twos = -denominator & denominator;\n        // Divide denominator by power of two\n        assembly {\n            denominator := div(denominator, twos)\n        }\n\n        // Divide [prod1 prod0] by the factors of two\n        assembly {\n            prod0 := div(prod0, twos)\n        }\n        // Shift in bits from prod1 into prod0. For this we need\n        // to flip `twos` such that it is 2**256 / twos.\n        // If twos is zero, then it becomes one\n        assembly {\n            twos := add(div(sub(0, twos), twos), 1)\n        }\n        prod0 |= prod1 * twos;\n\n        // Invert denominator mod 2**256\n        // Now that denominator is an odd number, it has an inverse\n        // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n        // Compute the inverse by starting with a seed that is correct\n        // correct for four bits. That is, denominator * inv = 1 mod 2**4\n        uint256 inv = (3 * denominator) ^ 2;\n        // Now use Newton-Raphson iteration to improve the precision.\n        // Thanks to Hensel's lifting lemma, this also works in modular\n        // arithmetic, doubling the correct bits in each step.\n        inv *= 2 - denominator * inv; // inverse mod 2**8\n        inv *= 2 - denominator * inv; // inverse mod 2**16\n        inv *= 2 - denominator * inv; // inverse mod 2**32\n        inv *= 2 - denominator * inv; // inverse mod 2**64\n        inv *= 2 - denominator * inv; // inverse mod 2**128\n        inv *= 2 - denominator * inv; // inverse mod 2**256\n\n        // Because the division is now exact we can divide by multiplying\n        // with the modular inverse of denominator. This will give us the\n        // correct result modulo 2**256. Since the precoditions guarantee\n        // that the outcome is less than 2**256, this is the final result.\n        // We don't need to compute the high bits of the result and prod1\n        // is no longer required.\n        result = prod0 * inv;\n        return result;\n    }\n\n    /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    function mulDivRoundingUp(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {\n        result = mulDiv(a, b, denominator);\n        if (mulmod(a, b, denominator) > 0) {\n            require(result < type(uint256).max);\n            result++;\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/Oracle.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\n/// @title Oracle\n/// @notice Provides price and liquidity data useful for a wide variety of system designs\n/// @dev Instances of stored oracle data, \"observations\", are collected in the oracle array\n/// Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the\n/// maximum length of the oracle array. New slots will be added when the array is fully populated.\n/// Observations are overwritten when the full length of the oracle array is populated.\n/// The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()\nlibrary Oracle {\n    struct Observation {\n        // the block timestamp of the observation\n        uint32 blockTimestamp;\n        // the tick accumulator, i.e. tick * time elapsed since the pool was first initialized\n        int56 tickCumulative;\n        // the seconds per liquidity, i.e. seconds elapsed / max(1, liquidity) since the pool was first initialized\n        uint160 secondsPerLiquidityCumulativeX128;\n        // whether or not the observation is initialized\n        bool initialized;\n    }\n\n    /// @notice Transforms a previous observation into a new observation, given the passage of time and the current tick and liquidity values\n    /// @dev blockTimestamp _must_ be chronologically equal to or greater than last.blockTimestamp, safe for 0 or 1 overflows\n    /// @param last The specified observation to be transformed\n    /// @param blockTimestamp The timestamp of the new observation\n    /// @param tick The active tick at the time of the new observation\n    /// @param liquidity The total in-range liquidity at the time of the new observation\n    /// @return Observation The newly populated observation\n    function transform(Observation memory last, uint32 blockTimestamp, int24 tick, uint128 liquidity)\n        private\n        pure\n        returns (Observation memory)\n    {\n        uint32 delta = blockTimestamp - last.blockTimestamp;\n        return Observation({\n            blockTimestamp: blockTimestamp,\n            tickCumulative: last.tickCumulative + int56(tick) * delta,\n            secondsPerLiquidityCumulativeX128: last.secondsPerLiquidityCumulativeX128\n                + ((uint160(delta) << 128) / (liquidity > 0 ? liquidity : 1)),\n            initialized: true\n        });\n    }\n\n    /// @notice Initialize the oracle array by writing the first slot. Called once for the lifecycle of the observations array\n    /// @param self The stored oracle array\n    /// @param time The time of the oracle initialization, via block.timestamp truncated to uint32\n    /// @return cardinality The number of populated elements in the oracle array\n    /// @return cardinalityNext The new length of the oracle array, independent of population\n    function initialize(Observation[65535] storage self, uint32 time)\n        internal\n        returns (uint16 cardinality, uint16 cardinalityNext)\n    {\n        self[0] = Observation({\n            blockTimestamp: time,\n            tickCumulative: 0,\n            secondsPerLiquidityCumulativeX128: 0,\n            initialized: true\n        });\n        return (1, 1);\n    }\n\n    /// @notice Writes an oracle observation to the array\n    /// @dev Writable at most once per block. Index represents the most recently written element. cardinality and index must be tracked externally.\n    /// If the index is at the end of the allowable array length (according to cardinality), and the next cardinality\n    /// is greater than the current one, cardinality may be increased. This restriction is created to preserve ordering.\n    /// @param self The stored oracle array\n    /// @param index The index of the observation that was most recently written to the observations array\n    /// @param blockTimestamp The timestamp of the new observation\n    /// @param tick The active tick at the time of the new observation\n    /// @param liquidity The total in-range liquidity at the time of the new observation\n    /// @param cardinality The number of populated elements in the oracle array\n    /// @param cardinalityNext The new length of the oracle array, independent of population\n    /// @return indexUpdated The new index of the most recently written element in the oracle array\n    /// @return cardinalityUpdated The new cardinality of the oracle array\n    function write(\n        Observation[65535] storage self,\n        uint16 index,\n        uint32 blockTimestamp,\n        int24 tick,\n        uint128 liquidity,\n        uint16 cardinality,\n        uint16 cardinalityNext\n    ) internal returns (uint16 indexUpdated, uint16 cardinalityUpdated) {\n        Observation memory last = self[index];\n\n        // early return if we've already written an observation this block\n        if (last.blockTimestamp == blockTimestamp) return (index, cardinality);\n\n        // if the conditions are right, we can bump the cardinality\n        if (cardinalityNext > cardinality && index == (cardinality - 1)) {\n            cardinalityUpdated = cardinalityNext;\n        } else {\n            cardinalityUpdated = cardinality;\n        }\n\n        indexUpdated = (index + 1) % cardinalityUpdated;\n        self[indexUpdated] = transform(last, blockTimestamp, tick, liquidity);\n    }\n\n    /// @notice Prepares the oracle array to store up to `next` observations\n    /// @param self The stored oracle array\n    /// @param current The current next cardinality of the oracle array\n    /// @param next The proposed next cardinality which will be populated in the oracle array\n    /// @return next The next cardinality which will be populated in the oracle array\n    function grow(Observation[65535] storage self, uint16 current, uint16 next) internal returns (uint16) {\n        require(current > 0, \"I\");\n        // no-op if the passed next value isn't greater than the current next value\n        if (next <= current) return current;\n        // store in each slot to prevent fresh SSTOREs in swaps\n        // this data will not be used because the initialized boolean is still false\n        for (uint16 i = current; i < next; i++) {\n            self[i].blockTimestamp = 1;\n        }\n        return next;\n    }\n\n    /// @notice comparator for 32-bit timestamps\n    /// @dev safe for 0 or 1 overflows, a and b _must_ be chronologically before or equal to time\n    /// @param time A timestamp truncated to 32 bits\n    /// @param a A comparison timestamp from which to determine the relative position of `time`\n    /// @param b From which to determine the relative position of `time`\n    /// @return bool Whether `a` is chronologically <= `b`\n    function lte(uint32 time, uint32 a, uint32 b) private pure returns (bool) {\n        // if there hasn't been overflow, no need to adjust\n        if (a <= time && b <= time) return a <= b;\n\n        uint256 aAdjusted = a > time ? a : a + 2 ** 32;\n        uint256 bAdjusted = b > time ? b : b + 2 ** 32;\n\n        return aAdjusted <= bAdjusted;\n    }\n\n    /// @notice Fetches the observations beforeOrAt and atOrAfter a target, i.e. where [beforeOrAt, atOrAfter] is satisfied.\n    /// The result may be the same observation, or adjacent observations.\n    /// @dev The answer must be contained in the array, used when the target is located within the stored observation\n    /// boundaries: older than the most recent observation and younger, or the same age as, the oldest observation\n    /// @param self The stored oracle array\n    /// @param time The current block.timestamp\n    /// @param target The timestamp at which the reserved observation should be for\n    /// @param index The index of the observation that was most recently written to the observations array\n    /// @param cardinality The number of populated elements in the oracle array\n    /// @return beforeOrAt The observation recorded before, or at, the target\n    /// @return atOrAfter The observation recorded at, or after, the target\n    function binarySearch(Observation[65535] storage self, uint32 time, uint32 target, uint16 index, uint16 cardinality)\n        private\n        view\n        returns (Observation memory beforeOrAt, Observation memory atOrAfter)\n    {\n        uint256 l = (index + 1) % cardinality; // oldest observation\n        uint256 r = l + cardinality - 1; // newest observation\n        uint256 i;\n        while (true) {\n            i = (l + r) / 2;\n\n            beforeOrAt = self[i % cardinality];\n\n            // we've landed on an uninitialized tick, keep searching higher (more recently)\n            if (!beforeOrAt.initialized) {\n                l = i + 1;\n                continue;\n            }\n\n            atOrAfter = self[(i + 1) % cardinality];\n\n            bool targetAtOrAfter = lte(time, beforeOrAt.blockTimestamp, target);\n\n            // check if we've found the answer!\n            if (targetAtOrAfter && lte(time, target, atOrAfter.blockTimestamp)) break;\n\n            if (!targetAtOrAfter) r = i - 1;\n            else l = i + 1;\n        }\n    }\n\n    /// @notice Fetches the observations beforeOrAt and atOrAfter a given target, i.e. where [beforeOrAt, atOrAfter] is satisfied\n    /// @dev Assumes there is at least 1 initialized observation.\n    /// Used by observeSingle() to compute the counterfactual accumulator values as of a given block timestamp.\n    /// @param self The stored oracle array\n    /// @param time The current block.timestamp\n    /// @param target The timestamp at which the reserved observation should be for\n    /// @param tick The active tick at the time of the returned or simulated observation\n    /// @param index The index of the observation that was most recently written to the observations array\n    /// @param liquidity The total pool liquidity at the time of the call\n    /// @param cardinality The number of populated elements in the oracle array\n    /// @return beforeOrAt The observation which occurred at, or before, the given timestamp\n    /// @return atOrAfter The observation which occurred at, or after, the given timestamp\n    function getSurroundingObservations(\n        Observation[65535] storage self,\n        uint32 time,\n        uint32 target,\n        int24 tick,\n        uint16 index,\n        uint128 liquidity,\n        uint16 cardinality\n    ) private view returns (Observation memory beforeOrAt, Observation memory atOrAfter) {\n        // optimistically set before to the newest observation\n        beforeOrAt = self[index];\n\n        // if the target is chronologically at or after the newest observation, we can early return\n        if (lte(time, beforeOrAt.blockTimestamp, target)) {\n            if (beforeOrAt.blockTimestamp == target) {\n                // if newest observation equals target, we're in the same block, so we can ignore atOrAfter\n                return (beforeOrAt, atOrAfter);\n            } else {\n                // otherwise, we need to transform\n                return (beforeOrAt, transform(beforeOrAt, target, tick, liquidity));\n            }\n        }\n\n        // now, set before to the oldest observation\n        beforeOrAt = self[(index + 1) % cardinality];\n        if (!beforeOrAt.initialized) beforeOrAt = self[0];\n\n        // ensure that the target is chronologically at or after the oldest observation\n        require(lte(time, beforeOrAt.blockTimestamp, target), \"OLD\");\n\n        // if we've reached this point, we have to binary search\n        return binarySearch(self, time, target, index, cardinality);\n    }\n\n    /// @dev Reverts if an observation at or before the desired observation timestamp does not exist.\n    /// 0 may be passed as `secondsAgo' to return the current cumulative values.\n    /// If called with a timestamp falling between two observations, returns the counterfactual accumulator values\n    /// at exactly the timestamp between the two observations.\n    /// @param self The stored oracle array\n    /// @param time The current block timestamp\n    /// @param secondsAgo The amount of time to look back, in seconds, at which point to return an observation\n    /// @param tick The current tick\n    /// @param index The index of the observation that was most recently written to the observations array\n    /// @param liquidity The current in-range pool liquidity\n    /// @param cardinality The number of populated elements in the oracle array\n    /// @return tickCumulative The tick * time elapsed since the pool was first initialized, as of `secondsAgo`\n    /// @return secondsPerLiquidityCumulativeX128 The time elapsed / max(1, liquidity) since the pool was first initialized, as of `secondsAgo`\n    function observeSingle(\n        Observation[65535] storage self,\n        uint32 time,\n        uint32 secondsAgo,\n        int24 tick,\n        uint16 index,\n        uint128 liquidity,\n        uint16 cardinality\n    ) internal view returns (int56 tickCumulative, uint160 secondsPerLiquidityCumulativeX128) {\n        if (secondsAgo == 0) {\n            Observation memory last = self[index];\n            if (last.blockTimestamp != time) last = transform(last, time, tick, liquidity);\n            return (last.tickCumulative, last.secondsPerLiquidityCumulativeX128);\n        }\n\n        uint32 target = time - secondsAgo;\n\n        (Observation memory beforeOrAt, Observation memory atOrAfter) =\n            getSurroundingObservations(self, time, target, tick, index, liquidity, cardinality);\n\n        if (target == beforeOrAt.blockTimestamp) {\n            // we're at the left boundary\n            return (beforeOrAt.tickCumulative, beforeOrAt.secondsPerLiquidityCumulativeX128);\n        } else if (target == atOrAfter.blockTimestamp) {\n            // we're at the right boundary\n            return (atOrAfter.tickCumulative, atOrAfter.secondsPerLiquidityCumulativeX128);\n        } else {\n            // we're in the middle\n            uint32 observationTimeDelta = atOrAfter.blockTimestamp - beforeOrAt.blockTimestamp;\n            uint32 targetDelta = target - beforeOrAt.blockTimestamp;\n            return (\n                beforeOrAt.tickCumulative\n                    + ((atOrAfter.tickCumulative - beforeOrAt.tickCumulative) / observationTimeDelta) * targetDelta,\n                beforeOrAt.secondsPerLiquidityCumulativeX128\n                    + uint160(\n                        (\n                            uint256(\n                                atOrAfter.secondsPerLiquidityCumulativeX128 - beforeOrAt.secondsPerLiquidityCumulativeX128\n                            ) * targetDelta\n                        ) / observationTimeDelta\n                    )\n            );\n        }\n    }\n\n    /// @notice Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`\n    /// @dev Reverts if `secondsAgos` > oldest observation\n    /// @param self The stored oracle array\n    /// @param time The current block.timestamp\n    /// @param secondsAgos Each amount of time to look back, in seconds, at which point to return an observation\n    /// @param tick The current tick\n    /// @param index The index of the observation that was most recently written to the observations array\n    /// @param liquidity The current in-range pool liquidity\n    /// @param cardinality The number of populated elements in the oracle array\n    /// @return tickCumulatives The tick * time elapsed since the pool was first initialized, as of each `secondsAgo`\n    /// @return secondsPerLiquidityCumulativeX128s The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of each `secondsAgo`\n    function observe(\n        Observation[65535] storage self,\n        uint32 time,\n        uint32[] memory secondsAgos,\n        int24 tick,\n        uint16 index,\n        uint128 liquidity,\n        uint16 cardinality\n    ) internal view returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s) {\n        require(cardinality > 0, \"I\");\n\n        tickCumulatives = new int56[](secondsAgos.length);\n        secondsPerLiquidityCumulativeX128s = new uint160[](secondsAgos.length);\n        for (uint256 i = 0; i < secondsAgos.length; i++) {\n            (tickCumulatives[i], secondsPerLiquidityCumulativeX128s[i]) =\n                observeSingle(self, time, secondsAgos[i], tick, index, liquidity, cardinality);\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/Position.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\nimport \"./FullMath.sol\";\nimport \"./FixedPoint128.sol\";\nimport \"./LiquidityMath.sol\";\n\n/// @title Position\n/// @notice Positions represent an owner address' liquidity between a lower and upper tick boundary\n/// @dev Positions store additional state for tracking fees owed to the position\nlibrary Position {\n    // info stored for each user's position\n    struct Info {\n        // the amount of liquidity owned by this position\n        uint128 liquidity;\n        // fee growth per unit of liquidity as of the last update to liquidity or fees owed\n        uint256 feeGrowthInside0LastX128;\n        uint256 feeGrowthInside1LastX128;\n        // the fees owed to the position owner in token0/token1\n        uint128 tokensOwed0;\n        uint128 tokensOwed1;\n    }\n\n    /// @notice Returns the Info struct of a position, given an owner and position boundaries\n    /// @param self The mapping containing all user positions\n    /// @param owner The address of the position owner\n    /// @param tickLower The lower tick boundary of the position\n    /// @param tickUpper The upper tick boundary of the position\n    /// @return position The position info struct of the given owners' position\n    function get(mapping(bytes32 => Info) storage self, address owner, int24 tickLower, int24 tickUpper)\n        internal\n        view\n        returns (Position.Info storage position)\n    {\n        position = self[keccak256(abi.encodePacked(owner, tickLower, tickUpper))];\n    }\n\n    /// @notice Credits accumulated fees to a user's position\n    /// @param self The individual position to update\n    /// @param liquidityDelta The change in pool liquidity as a result of the position update\n    /// @param feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n    /// @param feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries\n    /// @param staked Signifies if the position is staked in the gauge or not\n    function update(\n        Info storage self,\n        int128 liquidityDelta,\n        uint256 feeGrowthInside0X128,\n        uint256 feeGrowthInside1X128,\n        bool staked\n    ) internal {\n        Info memory _self = self;\n\n        uint128 liquidityNext;\n        if (liquidityDelta == 0) {\n            require(_self.liquidity > 0, \"NP\"); // disallow pokes for 0 liquidity positions\n            liquidityNext = _self.liquidity;\n        } else {\n            liquidityNext = LiquidityMath.addDelta(_self.liquidity, liquidityDelta);\n        }\n\n        uint128 tokensOwed0;\n        uint128 tokensOwed1;\n        if (!staked) {\n            // calculate accumulated fees\n            tokensOwed0 = uint128(\n                FullMath.mulDiv(\n                    feeGrowthInside0X128 - _self.feeGrowthInside0LastX128, _self.liquidity, FixedPoint128.Q128\n                )\n            );\n            tokensOwed1 = uint128(\n                FullMath.mulDiv(\n                    feeGrowthInside1X128 - _self.feeGrowthInside1LastX128, _self.liquidity, FixedPoint128.Q128\n                )\n            );\n        }\n\n        // update the position\n        if (liquidityDelta != 0) self.liquidity = liquidityNext;\n        self.feeGrowthInside0LastX128 = feeGrowthInside0X128;\n        self.feeGrowthInside1LastX128 = feeGrowthInside1X128;\n        if (tokensOwed0 > 0 || tokensOwed1 > 0) {\n            // overflow is acceptable, have to withdraw before you hit type(uint128).max fees\n            self.tokensOwed0 += tokensOwed0;\n            self.tokensOwed1 += tokensOwed1;\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/TickBitmap.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport \"./BitMath.sol\";\n\n/// @title Packed tick initialized state library\n/// @notice Stores a packed mapping of tick index to its initialized state\n/// @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\nlibrary TickBitmap {\n    /// @notice Computes the position in the mapping where the initialized bit for a tick lives\n    /// @param tick The tick for which to compute the position\n    /// @return wordPos The key in the mapping containing the word in which the bit is stored\n    /// @return bitPos The bit position in the word where the flag is stored\n    function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {\n        wordPos = int16(tick >> 8);\n        bitPos = uint8(tick % 256);\n    }\n\n    /// @notice Flips the initialized state for a given tick from false to true, or vice versa\n    /// @param self The mapping in which to flip the tick\n    /// @param tick The tick to flip\n    /// @param tickSpacing The spacing between usable ticks\n    function flipTick(mapping(int16 => uint256) storage self, int24 tick, int24 tickSpacing) internal {\n        require(tick % tickSpacing == 0); // ensure that the tick is spaced\n        (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing);\n        uint256 mask = 1 << bitPos;\n        self[wordPos] ^= mask;\n    }\n\n    /// @notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n    /// to the left (less than or equal to) or right (greater than) of the given tick\n    /// @param self The mapping in which to compute the next initialized tick\n    /// @param tick The starting tick\n    /// @param tickSpacing The spacing between usable ticks\n    /// @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n    /// @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n    /// @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks\n    function nextInitializedTickWithinOneWord(\n        mapping(int16 => uint256) storage self,\n        int24 tick,\n        int24 tickSpacing,\n        bool lte\n    ) internal view returns (int24 next, bool initialized) {\n        int24 compressed = tick / tickSpacing;\n        if (tick < 0 && tick % tickSpacing != 0) compressed--; // round towards negative infinity\n\n        if (lte) {\n            (int16 wordPos, uint8 bitPos) = position(compressed);\n            // all the 1s at or to the right of the current bitPos\n            uint256 mask = (1 << bitPos) - 1 + (1 << bitPos);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the right of or at the current tick, return rightmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed - int24(bitPos - BitMath.mostSignificantBit(masked))) * tickSpacing\n                : (compressed - int24(bitPos)) * tickSpacing;\n        } else {\n            // start from the word of the next tick, since the current tick state doesn't matter\n            (int16 wordPos, uint8 bitPos) = position(compressed + 1);\n            // all the 1s at or to the left of the bitPos\n            uint256 mask = ~((1 << bitPos) - 1);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the left of the current tick, return leftmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed + 1 + int24(BitMath.leastSignificantBit(masked) - bitPos)) * tickSpacing\n                : (compressed + 1 + int24(type(uint8).max - bitPos)) * tickSpacing;\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/Tick.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\nimport \"./LowGasSafeMath.sol\";\nimport \"./SafeCast.sol\";\n\nimport \"./TickMath.sol\";\nimport \"./LiquidityMath.sol\";\n\n/// @title Tick\n/// @notice Contains functions for managing tick processes and relevant calculations\nlibrary Tick {\n    using LowGasSafeMath for int256;\n    using SafeCast for int256;\n\n    // info stored for each initialized individual tick\n    struct Info {\n        // the total position liquidity that references this tick\n        // includes both staked and unstaked liquidity\n        uint128 liquidityGross;\n        // amount of net liquidity added (subtracted) when tick is crossed from left to right (right to left)\n        // includes both staked and unstaked liquidity\n        int128 liquidityNet;\n        // amount of net staked liquidity added (subtracted) when tick is crossed from left to right (right to left)\n        int128 stakedLiquidityNet;\n        // fee growth per unit of liquidity on the _other_ side of this tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint256 feeGrowthOutside0X128;\n        uint256 feeGrowthOutside1X128;\n        // reward growth per unit of liquidity on the _other_ side of this tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint256 rewardGrowthOutsideX128;\n        // the cumulative tick value on the other side of the tick\n        int56 tickCumulativeOutside;\n        // the seconds per unit of liquidity on the _other_ side of this tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint160 secondsPerLiquidityOutsideX128;\n        // the seconds spent on the other side of the tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint32 secondsOutside;\n        // true iff the tick is initialized, i.e. the value is exactly equivalent to the expression liquidityGross != 0\n        // these 8 bits are set to prevent fresh sstores when crossing newly initialized ticks\n        bool initialized;\n    }\n\n    struct LiquidityNets {\n        int128 liquidityNet;\n        int128 stakedLiquidityNet;\n    }\n\n    /// @notice Derives max liquidity per tick from given tick spacing\n    /// @dev Executed within the pool constructor\n    /// @param tickSpacing The amount of required tick separation, realized in multiples of `tickSpacing`\n    ///     e.g., a tickSpacing of 3 requires ticks to be initialized every 3rd tick i.e., ..., -6, -3, 0, 3, 6, ...\n    /// @return The max liquidity per tick\n    function tickSpacingToMaxLiquidityPerTick(int24 tickSpacing) internal pure returns (uint128) {\n        int24 minTick = (TickMath.MIN_TICK / tickSpacing) * tickSpacing;\n        int24 maxTick = (TickMath.MAX_TICK / tickSpacing) * tickSpacing;\n        uint24 numTicks = uint24((maxTick - minTick) / tickSpacing) + 1;\n        return type(uint128).max / numTicks;\n    }\n\n    /// @notice Retrieves fee growth data\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tickLower The lower tick boundary of the position\n    /// @param tickUpper The upper tick boundary of the position\n    /// @param tickCurrent The current tick\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n    /// @return feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n    /// @return feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries\n    function getFeeGrowthInside(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tickLower,\n        int24 tickUpper,\n        int24 tickCurrent,\n        uint256 feeGrowthGlobal0X128,\n        uint256 feeGrowthGlobal1X128\n    ) internal view returns (uint256 feeGrowthInside0X128, uint256 feeGrowthInside1X128) {\n        Info storage lower = self[tickLower];\n        Info storage upper = self[tickUpper];\n\n        // calculate fee growth below\n        uint256 feeGrowthBelow0X128;\n        uint256 feeGrowthBelow1X128;\n        if (tickCurrent >= tickLower) {\n            feeGrowthBelow0X128 = lower.feeGrowthOutside0X128;\n            feeGrowthBelow1X128 = lower.feeGrowthOutside1X128;\n        } else {\n            feeGrowthBelow0X128 = feeGrowthGlobal0X128 - lower.feeGrowthOutside0X128;\n            feeGrowthBelow1X128 = feeGrowthGlobal1X128 - lower.feeGrowthOutside1X128;\n        }\n\n        // calculate fee growth above\n        uint256 feeGrowthAbove0X128;\n        uint256 feeGrowthAbove1X128;\n        if (tickCurrent < tickUpper) {\n            feeGrowthAbove0X128 = upper.feeGrowthOutside0X128;\n            feeGrowthAbove1X128 = upper.feeGrowthOutside1X128;\n        } else {\n            feeGrowthAbove0X128 = feeGrowthGlobal0X128 - upper.feeGrowthOutside0X128;\n            feeGrowthAbove1X128 = feeGrowthGlobal1X128 - upper.feeGrowthOutside1X128;\n        }\n\n        feeGrowthInside0X128 = feeGrowthGlobal0X128 - feeGrowthBelow0X128 - feeGrowthAbove0X128;\n        feeGrowthInside1X128 = feeGrowthGlobal1X128 - feeGrowthBelow1X128 - feeGrowthAbove1X128;\n    }\n\n    function getRewardGrowthInside(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tickLower,\n        int24 tickUpper,\n        int24 tickCurrent,\n        uint256 rewardGrowthGlobalX128\n    ) internal view returns (uint256 rewardGrowthInsideX128) {\n        Info storage lower = self[tickLower];\n        Info storage upper = self[tickUpper];\n\n        // calculate reward growth below\n        uint256 rewardGrowthBelowX128;\n        if (tickCurrent >= tickLower) {\n            rewardGrowthBelowX128 = lower.rewardGrowthOutsideX128;\n        } else {\n            rewardGrowthBelowX128 = rewardGrowthGlobalX128 - lower.rewardGrowthOutsideX128;\n        }\n\n        // calculate reward growth above\n        uint256 rewardGrowthAboveX128;\n        if (tickCurrent < tickUpper) {\n            rewardGrowthAboveX128 = upper.rewardGrowthOutsideX128;\n        } else {\n            rewardGrowthAboveX128 = rewardGrowthGlobalX128 - upper.rewardGrowthOutsideX128;\n        }\n\n        rewardGrowthInsideX128 = rewardGrowthGlobalX128 - rewardGrowthBelowX128 - rewardGrowthAboveX128;\n    }\n\n    /// @notice Updates a tick and returns true if the tick was flipped from initialized to uninitialized, or vice versa\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tick The tick that will be updated\n    /// @param tickCurrent The current tick\n    /// @param liquidityDelta A new amount of liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n    /// @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n    /// @param secondsPerLiquidityCumulativeX128 The all-time seconds per max(1, liquidity) of the pool\n    /// @param tickCumulative The tick * time elapsed since the pool was first initialized\n    /// @param time The current block timestamp cast to a uint32\n    /// @param upper true for updating a position's upper tick, or false for updating a position's lower tick\n    /// @param maxLiquidity The maximum liquidity allocation for a single tick\n    /// @return flipped Whether the tick was flipped from initialized to uninitialized, or vice versa\n    function update(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tick,\n        int24 tickCurrent,\n        int128 liquidityDelta,\n        uint256 feeGrowthGlobal0X128,\n        uint256 feeGrowthGlobal1X128,\n        uint256 rewardGrowthGlobalX128,\n        uint160 secondsPerLiquidityCumulativeX128,\n        int56 tickCumulative,\n        uint32 time,\n        bool upper,\n        uint128 maxLiquidity\n    ) internal returns (bool flipped) {\n        Tick.Info storage info = self[tick];\n\n        uint128 liquidityGrossBefore = info.liquidityGross;\n        uint128 liquidityGrossAfter = LiquidityMath.addDelta(liquidityGrossBefore, liquidityDelta);\n\n        require(liquidityGrossAfter <= maxLiquidity, \"LO\");\n\n        flipped = (liquidityGrossAfter == 0) != (liquidityGrossBefore == 0);\n\n        if (liquidityGrossBefore == 0) {\n            // by convention, we assume that all growth before a tick was initialized happened _below_ the tick\n            if (tick <= tickCurrent) {\n                info.feeGrowthOutside0X128 = feeGrowthGlobal0X128;\n                info.feeGrowthOutside1X128 = feeGrowthGlobal1X128;\n                info.rewardGrowthOutsideX128 = rewardGrowthGlobalX128;\n                info.secondsPerLiquidityOutsideX128 = secondsPerLiquidityCumulativeX128;\n                info.tickCumulativeOutside = tickCumulative;\n                info.secondsOutside = time;\n            }\n            info.initialized = true;\n        }\n\n        info.liquidityGross = liquidityGrossAfter;\n\n        // when the lower (upper) tick is crossed left to right (right to left), liquidity must be added (removed)\n        info.liquidityNet = upper\n            ? int256(info.liquidityNet).sub(liquidityDelta).toInt128()\n            : int256(info.liquidityNet).add(liquidityDelta).toInt128();\n    }\n\n    /// @notice Updates the staked liquidity component of a tick. Assumes tick is already initialized with an existing position.\n    /// @notice We reuse existing liquidity for staking, so there is no change in liquidity\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tick The tick that will be updated\n    /// @param stakedLiquidityDelta The amount of staked liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n    /// @param upper true for updating a position's upper tick, or false for updating a position's lower tick\n    function updateStake(mapping(int24 => Tick.Info) storage self, int24 tick, int128 stakedLiquidityDelta, bool upper)\n        internal\n    {\n        Tick.Info storage info = self[tick];\n        // when the lower (upper) tick is crossed left to right (right to left), staked liquidity must be added (removed)\n        info.stakedLiquidityNet = upper\n            ? int256(info.stakedLiquidityNet).sub(stakedLiquidityDelta).toInt128()\n            : int256(info.stakedLiquidityNet).add(stakedLiquidityDelta).toInt128();\n    }\n\n    /// @notice Clears tick data\n    /// @param self The mapping containing all initialized tick information for initialized ticks\n    /// @param tick The tick that will be cleared\n    function clear(mapping(int24 => Tick.Info) storage self, int24 tick) internal {\n        delete self[tick];\n    }\n\n    /// @notice Transitions to next tick as needed by price movement\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tick The destination tick of the transition\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n    /// @param secondsPerLiquidityCumulativeX128 The current seconds per liquidity\n    /// @param tickCumulative The tick * time elapsed since the pool was first initialized\n    /// @param time The current block.timestamp\n    /// @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n    /// @return nets The amount of liquidity and staked liquidity added (subtracted) when tick is crossed from left to right (right to left)\n    function cross(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tick,\n        uint256 feeGrowthGlobal0X128,\n        uint256 feeGrowthGlobal1X128,\n        uint160 secondsPerLiquidityCumulativeX128,\n        int56 tickCumulative,\n        uint32 time,\n        uint256 rewardGrowthGlobalX128\n    ) internal returns (LiquidityNets memory nets) {\n        Tick.Info storage info = self[tick];\n        info.feeGrowthOutside0X128 = feeGrowthGlobal0X128 - info.feeGrowthOutside0X128;\n        info.feeGrowthOutside1X128 = feeGrowthGlobal1X128 - info.feeGrowthOutside1X128;\n        info.rewardGrowthOutsideX128 = rewardGrowthGlobalX128 - info.rewardGrowthOutsideX128;\n        info.secondsPerLiquidityOutsideX128 = secondsPerLiquidityCumulativeX128 - info.secondsPerLiquidityOutsideX128;\n        info.tickCumulativeOutside = tickCumulative - info.tickCumulativeOutside;\n        info.secondsOutside = time - info.secondsOutside;\n        nets.liquidityNet = info.liquidityNet;\n        nets.stakedLiquidityNet = info.stakedLiquidityNet;\n    }\n}\n"
			},
			"contracts/core/libraries/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Safe casting methods\n/// @notice Contains methods for safely casting between types\nlibrary SafeCast {\n    /// @notice Cast a uint256 to a uint160, revert on overflow\n    /// @param y The uint256 to be downcasted\n    /// @return z The downcasted integer, now type uint160\n    function toUint160(uint256 y) internal pure returns (uint160 z) {\n        require((z = uint160(y)) == y);\n    }\n\n    /// @notice Cast a int256 to a int128, revert on overflow or underflow\n    /// @param y The int256 to be downcasted\n    /// @return z The downcasted integer, now type int128\n    function toInt128(int256 y) internal pure returns (int128 z) {\n        require((z = int128(y)) == y);\n    }\n\n    /// @notice Cast a uint256 to a int256, revert on overflow\n    /// @param y The uint256 to be casted\n    /// @return z The casted integer, now type int256\n    function toInt256(uint256 y) internal pure returns (int256 z) {\n        require(y < 2 ** 255);\n        z = int256(y);\n    }\n}\n"
			},
			"contracts/core/libraries/LowGasSafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.0;\n\n/// @title Optimized overflow and underflow safe math operations\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\nlibrary LowGasSafeMath {\n    /// @notice Returns x + y, reverts if sum overflows uint256\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x);\n    }\n\n    /// @notice Returns x - y, reverts if underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x);\n    }\n\n    /// @notice Returns x * y, reverts if overflows\n    /// @param x The multiplicand\n    /// @param y The multiplier\n    /// @return z The product of x and y\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(x == 0 || (z = x * y) / x == y);\n    }\n\n    /// @notice Returns x + y, reverts if overflows or underflows\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x + y) >= x == (y >= 0));\n    }\n\n    /// @notice Returns x - y, reverts if overflows or underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x - y) <= x == (y >= 0));\n    }\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface ICLPoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (int56 tickCumulativeInside, uint160 secondsPerLiquidityInsideX128, uint32 secondsInside);\n}\n"
			},
			"contracts/core/interfaces/IERC20Minimal.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Minimal ERC20 interface for CL\n/// @notice Contains a subset of the full ERC20 interface that is used in CL\ninterface IERC20Minimal {\n    /// @notice Returns the balance of a token\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\n    /// @return The number of tokens held by the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\n    /// @param recipient The account that will receive the amount transferred\n    /// @param amount The number of tokens to send from the sender to the recipient\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /// @notice Returns the current allowance given to a spender by an owner\n    /// @param owner The account of the token owner\n    /// @param spender The account of the token spender\n    /// @return The current allowance granted by `owner` to `spender`\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\n    /// @param amount The amount of tokens allowed to be used by `spender`\n    /// @return Returns true for a successful approval, false for unsuccessful\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n    /// @param sender The account from which the transfer will be initiated\n    /// @param recipient The recipient of the transfer\n    /// @param amount The amount of the transfer\n    /// @return Returns true for a successful transfer, false for unsuccessful\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\n    /// @param value The amount of tokens that were transferred\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n    /// @param owner The account that approved spending of its tokens\n    /// @param spender The account for which the spending allowance was modified\n    /// @param value The new allowance from the owner to the spender\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/core/libraries/BitMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title BitMath\n/// @dev This library provides functionality for computing bit properties of an unsigned integer\nlibrary BitMath {\n    /// @notice Returns the index of the most significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n    /// @param x the value for which to compute the most significant bit, must be greater than 0\n    /// @return r the index of the most significant bit\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        if (x >= 0x100000000000000000000000000000000) {\n            x >>= 128;\n            r += 128;\n        }\n        if (x >= 0x10000000000000000) {\n            x >>= 64;\n            r += 64;\n        }\n        if (x >= 0x100000000) {\n            x >>= 32;\n            r += 32;\n        }\n        if (x >= 0x10000) {\n            x >>= 16;\n            r += 16;\n        }\n        if (x >= 0x100) {\n            x >>= 8;\n            r += 8;\n        }\n        if (x >= 0x10) {\n            x >>= 4;\n            r += 4;\n        }\n        if (x >= 0x4) {\n            x >>= 2;\n            r += 2;\n        }\n        if (x >= 0x2) r += 1;\n    }\n\n    /// @notice Returns the index of the least significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n    /// @param x the value for which to compute the least significant bit, must be greater than 0\n    /// @return r the index of the least significant bit\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        r = 255;\n        if (x & type(uint128).max > 0) {\n            r -= 128;\n        } else {\n            x >>= 128;\n        }\n        if (x & type(uint64).max > 0) {\n            r -= 64;\n        } else {\n            x >>= 64;\n        }\n        if (x & type(uint32).max > 0) {\n            r -= 32;\n        } else {\n            x >>= 32;\n        }\n        if (x & type(uint16).max > 0) {\n            r -= 16;\n        } else {\n            x >>= 16;\n        }\n        if (x & type(uint8).max > 0) {\n            r -= 8;\n        } else {\n            x >>= 8;\n        }\n        if (x & 0xf > 0) {\n            r -= 4;\n        } else {\n            x >>= 4;\n        }\n        if (x & 0x3 > 0) {\n            r -= 2;\n        } else {\n            x >>= 2;\n        }\n        if (x & 0x1 > 0) r -= 1;\n    }\n}\n"
			},
			"contracts/core/libraries/FixedPoint96.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.4.0;\n\n/// @title FixedPoint96\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n/// @dev Used in SqrtPriceMath.sol\nlibrary FixedPoint96 {\n    uint8 internal constant RESOLUTION = 96;\n    uint256 internal constant Q96 = 0x1000000000000000000000000;\n}\n"
			},
			"contracts/core/libraries/UnsafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math functions that do not check inputs or outputs\n/// @notice Contains methods that perform common math functions but do not do any overflow or underflow checks\nlibrary UnsafeMath {\n    /// @notice Returns ceil(x / y)\n    /// @dev division by 0 has unspecified behavior, and must be checked externally\n    /// @param x The dividend\n    /// @param y The divisor\n    /// @return z The quotient, ceil(x / y)\n    function divRoundingUp(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        assembly {\n            z := add(div(x, y), gt(mod(x, y), 0))\n        }\n    }\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface ICLPoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld, uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the gauge\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectFees(address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface ICLPoolOwnerActions {\n    /// @notice Collect the gauge fee accrued to the pool\n    /// @return amount0 The gauge fee collected in token0\n    /// @return amount1 The gauge fee collected in token1\n    function collectFees() external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface ICLPoolActions {\n    /// @notice Initialize function used in proxy deployment\n    /// @dev Can be called once only\n    /// Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @dev not locked because it initializes unlocked\n    /// @param _factory The CL factory contract address\n    /// @param _token0 The first token of the pool by address sort order\n    /// @param _token1 The second token of the pool by address sort order\n    /// @param _tickSpacing The pool tick spacing\n    /// @param _factoryRegistry The address of the factory registry managing the pool factory\n    /// @param _sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    function initialize(\n        address _factory,\n        address _token0,\n        address _token1,\n        int24 _tickSpacing,\n        address _factoryRegistry,\n        uint160 _sqrtPriceX96\n    ) external;\n\n    /// @notice Initialize gauge and nft manager\n    /// @dev Callable only once, by the gauge factory\n    /// @param _gauge The gauge corresponding to this pool\n    /// @param _nft The position manager used for position management\n    function setGaugeAndPositionManager(address _gauge, address _nft) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(address recipient, int24 tickLower, int24 tickUpper, uint128 amount, bytes calldata data)\n        external\n        returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @param owner Owner of the position in the pool (nft manager or gauge)\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested,\n        address owner\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(int24 tickLower, int24 tickUpper, uint128 amount)\n        external\n        returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @param owner Owner of the position in the pool (nft manager or gauge)\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(int24 tickLower, int24 tickUpper, uint128 amount, address owner)\n        external\n        returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Convert existing liquidity into staked liquidity\n    /// @notice Only callable by the gauge associated with this pool\n    /// @param stakedLiquidityDelta The amount by which to increase or decrease the staked liquidity\n    /// @param tickLower The lower tick of the position for which to stake liquidity\n    /// @param tickUpper The upper tick of the position for which to stake liquidity\n    /// @param positionUpdate If the nft and gauge position should be updated\n    function stake(int128 stakedLiquidityDelta, int24 tickLower, int24 tickUpper, bool positionUpdate) external;\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(address recipient, uint256 amount0, uint256 amount1, bytes calldata data) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n\n    /// @notice Updates rewardGrowthGlobalX128 every time when any tick is crossed,\n    /// or when any position is staked/unstaked from the gauge\n    function updateRewardsGrowthGlobal() external;\n\n    /// @notice Syncs rewards with gauge\n    /// @param rewardRate the rate rewards being distributed during the epoch\n    /// @param rewardReserve the available rewards to be distributed during the epoch\n    /// @param periodFinish the end of the current period of rewards, updated once per epoch\n    function syncReward(uint256 rewardRate, uint256 rewardReserve, uint256 periodFinish) external;\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface ICLPoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            bool unlocked\n        );\n\n    /// @notice The pool's swap & flash fee in pips, i.e. 1e-6\n    /// @dev Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\n    /// @return The swap & flash fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool's unstaked fee in pips, i.e. 1e-6\n    /// @dev Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\n    /// @return The unstaked fee\n    function unstakedFee() external view returns (uint24);\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function rewardGrowthGlobalX128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the gauge\n    /// @dev Gauge fees will never exceed uint128 max in either token\n    function gaugeFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice the emission rate of time-based farming\n    function rewardRate() external view returns (uint256);\n\n    /// @notice acts as a virtual reserve that holds information on how many rewards are yet to be distributed\n    function rewardReserve() external view returns (uint256);\n\n    /// @notice timestamp of the end of the current epoch's rewards\n    function periodFinish() external view returns (uint256);\n\n    /// @notice last time the rewardReserve and rewardRate were updated\n    function lastUpdated() external view returns (uint32);\n\n    /// @notice tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinish\n    /// @notice this amount is rolled over on the next call to notifyRewardAmount\n    /// @dev rollover will always be smaller than the rewards distributed that epoch\n    function rollover() external view returns (uint256);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    /// @dev This value includes staked liquidity\n    function liquidity() external view returns (uint128);\n\n    /// @notice The currently in range staked liquidity available to the pool\n    /// @dev This value has no relationship to the total staked liquidity across all ticks\n    function stakedLiquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            int128 stakedLiquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            uint256 rewardGrowthOutsideX128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n\n    /// @notice Returns data about reward growth within a tick range.\n    /// RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations.\n    /// @dev Used in gauge reward/earned calculations\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @param _rewardGrowthGlobalX128 a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)\n    /// @return rewardGrowthInsideX128 The reward growth in the range\n    function getRewardGrowthInside(int24 tickLower, int24 tickUpper, uint256 _rewardGrowthGlobalX128)\n        external\n        view\n        returns (uint256 rewardGrowthInsideX128);\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolConstants.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are not defined as immutable (due to proxy pattern) but are effectively immutable.\n/// @notice i.e., the methods will always return the same values\ninterface ICLPoolConstants {\n    /// @notice The contract that deployed the pool, which must adhere to the ICLFactory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The gauge corresponding to this pool\n    /// @return The gauge contract address\n    function gauge() external view returns (address);\n\n    /// @notice The nft manager\n    /// @return The nft manager contract address\n    function nft() external view returns (address);\n\n    /// @notice The factory registry that manages pool <> gauge <> reward factory relationships\n    /// @return The factory registry contract address\n    function factoryRegistry() external view returns (address);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/core/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/IERC721.sol\":{\"keccak256\":\"0xa5d0054dd7767bd5a6b897102ce1ec058a8d36b0c34f49a394e2b9d302f4700d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://852f1c467f89daa70d729231e543b11c47e2f125202ed123fe9ac9410868fd64\",\"dweb:/ipfs/QmeaFw32FQ9QAXen9EKZkafK4jfXogcEGex4R446DQjJ5i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenDescriptor",
									"type": "address"
								}
							],
							"name": "TokenDescriptorChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "TransferOwnership",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceX96",
											"type": "uint160"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenDescriptor",
									"type": "address"
								}
							],
							"name": "setTokenDescriptor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenDescriptor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							},
							"TokenDescriptorChanged(address)": {
								"params": {
									"tokenDescriptor": "Address of the new Token Descriptor"
								}
							},
							"TransferOwnership(address)": {
								"params": {
									"owner": "Address of the new Owner"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"details": "The use of this function can cause a loss to users of the NonfungiblePositionManagerfor tokens that have very high decimals.The amount of tokens necessary for the loss is: 3.4028237e+38.This is equivalent to 1e20 value with 18 decimals.",
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"mint((address,address,int24,int24,int24,uint256,uint256,uint256,uint256,address,uint256,uint160))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickSpacing": "The tick spacing associated with the pool",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"setOwner(address)": {
								"params": {
									"_owner": "Address of the new Owner to be chosen"
								}
							},
							"setTokenDescriptor(address)": {
								"params": {
									"_tokenDescriptor": "Address of the new Token Descriptor to be chosen"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"mint((address,address,int24,int24,int24,uint256,uint256,uint256,uint256,address,uint256,uint160))": "b5007d1f",
							"owner()": "8da5cb5b",
							"positions(uint256)": "99fbab88",
							"setOwner(address)": "13af4035",
							"setTokenDescriptor(address)": "b6dc7ea3",
							"tokenDescriptor()": "5a9d7a68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenDescriptor\",\"type\":\"address\"}],\"name\":\"TokenDescriptorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenDescriptor\",\"type\":\"address\"}],\"name\":\"setTokenDescriptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenDescriptor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}},\"TokenDescriptorChanged(address)\":{\"params\":{\"tokenDescriptor\":\"Address of the new Token Descriptor\"}},\"TransferOwnership(address)\":{\"params\":{\"owner\":\"Address of the new Owner\"}}},\"kind\":\"dev\",\"methods\":{\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"details\":\"The use of this function can cause a loss to users of the NonfungiblePositionManagerfor tokens that have very high decimals.The amount of tokens necessary for the loss is: 3.4028237e+38.This is equivalent to 1e20 value with 18 decimals.\",\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"mint((address,address,int24,int24,int24,uint256,uint256,uint256,uint256,address,uint256,uint160))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickSpacing\":\"The tick spacing associated with the pool\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"setOwner(address)\":{\"params\":{\"_owner\":\"Address of the new Owner to be chosen\"}},\"setTokenDescriptor(address)\":{\"params\":{\"_tokenDescriptor\":\"Address of the new Token Descriptor to be chosen\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"},\"TokenDescriptorChanged(address)\":{\"notice\":\"Emitted when a new Token Descriptor is set\"},\"TransferOwnership(address)\":{\"notice\":\"Emitted when a new Owner is set\"}},\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipientUsed to update staked positions before deposit and withdraw\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,int24,int24,int24,uint256,uint256,uint256,uint256,address,uint256,uint160))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"owner()\":{\"notice\":\"Returns the address of the Owner, that is allowed to set a new TokenDescriptor\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"setOwner(address)\":{\"notice\":\"Sets a new Owner address\"},\"setTokenDescriptor(address)\":{\"notice\":\"Sets a new Token Descriptor\"},\"tokenDescriptor()\":{\"notice\":\"Returns the address of the Token Descriptor, that handles generating token URIs for Positions\"}},\"notice\":\"Wraps CL positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xfe7d9ee66050cd945f09f5a54bada3d8eb3b024aedc37b9c521703c61e3ac892\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f5d4cc3b9d41b44b2419a72bc3cd27bc0608e0b488196348b4a2e342d2114467\",\"dweb:/ipfs/QmYKKT5uccPQQSBT54wN2yZV5phs4kPYr76WvUerYiKbWp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							},
							"TokenDescriptorChanged(address)": {
								"notice": "Emitted when a new Token Descriptor is set"
							},
							"TransferOwnership(address)": {
								"notice": "Emitted when a new Owner is set"
							}
						},
						"kind": "user",
						"methods": {
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipientUsed to update staked positions before deposit and withdraw"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,int24,int24,int24,uint256,uint256,uint256,uint256,address,uint256,uint160))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"owner()": {
								"notice": "Returns the address of the Owner, that is allowed to set a new TokenDescriptor"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							},
							"setOwner(address)": {
								"notice": "Sets a new Owner address"
							},
							"setTokenDescriptor(address)": {
								"notice": "Sets a new Token Descriptor"
							},
							"tokenDescriptor()": {
								"notice": "Returns the address of the Token Descriptor, that handles generating token URIs for Positions"
							}
						},
						"notice": "Wraps CL positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			},
			"contracts/core/VeloOracle.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/VeloOracle.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/IERC721.sol\":{\"keccak256\":\"0xa5d0054dd7767bd5a6b897102ce1ec058a8d36b0c34f49a394e2b9d302f4700d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://852f1c467f89daa70d729231e543b11c47e2f125202ed123fe9ac9410868fd64\",\"dweb:/ipfs/QmeaFw32FQ9QAXen9EKZkafK4jfXogcEGex4R446DQjJ5i\"]},\"contracts/core/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xfe7d9ee66050cd945f09f5a54bada3d8eb3b024aedc37b9c521703c61e3ac892\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f5d4cc3b9d41b44b2419a72bc3cd27bc0608e0b488196348b4a2e342d2114467\",\"dweb:/ipfs/QmYKKT5uccPQQSBT54wN2yZV5phs4kPYr76WvUerYiKbWp\"]},\"contracts/core/VeloOracle.sol\":{\"keccak256\":\"0x1a589d5383b69c688bdd1c5b8f0826d2504c74db97343a1f35f9aacda0a51ced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef6fe1c1a88baa95a2f0ad8ea3ee810fa31799a33d4c0e6095f717cca8f6e1c\",\"dweb:/ipfs/QmUumubXMYHmBZ4v88ebdPSMTbKpc3gSS8f1LVByTwP9ED\"]},\"contracts/core/interfaces/ICLPool.sol\":{\"keccak256\":\"0x0a11e1392c4b5ef4e47a3415a9b1a2118e9370d52a253dbd1c910bbbb615e91f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0c04e689e0589f3d67961fd5febcdc0f39c0700aeebef2537ccfb29ddba29de1\",\"dweb:/ipfs/QmbuthGhVJsx45dpgF7p71VSuLshREAsaLJu34HQNgRJoz\"]},\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]},\"contracts/core/interfaces/pool/ICLPoolActions.sol\":{\"keccak256\":\"0x7699f31261ab40982e34febe16128f1edfdad39075969195301352ea66bcac40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://074f1c470e11f30d0fae8b95b963c9d19dcbd2c5bd17ad4ebba95c5f0f073044\",\"dweb:/ipfs/QmdDWMUspgBXfLhcxqESez9rSwA8JYNRycmhkhuKoDCWqJ\"]},\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":{\"keccak256\":\"0xfad00d4ca1a40ef27d9614a98483ca67c4491b6f19e376901745c57a6949b512\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5ea522565efb803d146673ff9e37aa090a5abff334fea587da62f4fb5d6647\",\"dweb:/ipfs/QmVRPscHFVjYFvRbJf41zVLtA2jVLbEUH66KGtEzspXnWS\"]},\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]},\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":{\"keccak256\":\"0x32fbcac8952f1c5c44b466b0e1c28634ce71372c0f65242aa0d821cebdddcc2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f22382292967f97640f84a7edfa01cf7deb303bf882344b9985007f1dcbef2\",\"dweb:/ipfs/Qmej7vWwun9fRBCrcvzPHdZP1jtLSCxJtjTSdkVTcgWeAE\"]},\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":{\"keccak256\":\"0xeafd14ae3e15c9f663507e004c599618bfd5d2a90d58b3b450f9372f9e3f54f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49472c8cf06dc7084e22fc57ffdce860aa7a9ff77f12e4bef0c13a078bbc5831\",\"dweb:/ipfs/Qmd29vWULezsJJzhw3wZxsU6Hsng5949v2TiVCbdga4Vqe\"]},\"contracts/core/interfaces/pool/ICLPoolState.sol\":{\"keccak256\":\"0xe57d65825a097d6f0ab55d7ae39b528695b3df65320ed524124fbb55949bfcf9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b63b25beebe612acfd564f40b0d95b3844ee71bf969a3357419e7a54f1ece961\",\"dweb:/ipfs/Qmdk3mNLz3cSZscbXFsJp69gjgxFcBv6K5mdc6tjnmtFSR\"]},\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0xae7f7b0bbbd864bc1761ec5eac62ec761f2ef168d32ef9e914e337b077ebba4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b57b2f04997cd6055404801982f57083f8e9242935b3ebf3bbed032f5035f2f1\",\"dweb:/ipfs/QmdxHVMQEA32jnyroWZG2sk4NPtQFWXPfkDDYvRtK2APFA\"]},\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/Oracle.sol\":{\"keccak256\":\"0x4c6e24eafb2d339d1848003d20e31a042f0fc1517a5e8649ceb0eea178a4f650\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://81914d71910b5778da85f5724ac1abd9ac4b40caf42af0a34e10247338f8c662\",\"dweb:/ipfs/QmVnmo3atEWw82VaC74Pyi9UBPf3P2NpXQzuSPTnd33gyc\"]},\"contracts/core/libraries/Position.sol\":{\"keccak256\":\"0xcf1e701e3fae35be8b77ff1217cfdd23d33eb16fd3cec70be8ea6888f87af285\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8c89746dd30e76cc029d4e090e402b28aae0659cc71800758b99137dfe85f55\",\"dweb:/ipfs/QmY4Ft1YBLqzqwTgNdpCyRd7WrY78zKgg4Ddv2zqZiBEiE\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xefd51a282ca9fbc89394776e7f5c6f96fa084ca26b71d99727780332c87d1843\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f09b719eff523f65d0d11fc476b9735e1390018d5ff585991d0fc644e913ecf\",\"dweb:/ipfs/QmNiZxxQhqteYgJdhCQ3cZ4S7bTQf2AQRUJqMVvPY3doot\"]},\"contracts/core/libraries/Tick.sol\":{\"keccak256\":\"0xb5ebd80c667f4501dba65f4e39e51ff36e5334480849e0ed8604222d20b4ed1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://246f590513441ac0f307170f5099e4a0c0b1f579406fc30b909b249858dbd099\",\"dweb:/ipfs/QmaA5uC3eck7nMqyJbpSPEhmXmAXaKLNBSS1Lfnzzzjc95\"]},\"contracts/core/libraries/TickBitmap.sol\":{\"keccak256\":\"0xd829fadfca3f8f5870c877c7eeceb4a692603c16b711174526129987e8745f5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d2cbf3802f7e611708a45bc390ee9307d947e49b348294591659444b9989c05\",\"dweb:/ipfs/Qmcny7JNyVYCtcZG3b1BL4ThuKREmAkE9ZKaC3i32pnt7X\"]},\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]},\"contracts/core/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3bbe07a0684d98efe73f7012e446873494e74983e1f75a16d42c25b956d61651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78ac9659c70ba3253a6e526ba5a144994fb3d32df2e9537787eeb45aae320aec\",\"dweb:/ipfs/QmbaZRbPP2wFZ9coJd2iyPM37hm3kXzPLuRtL6KKr1MCSL\"]},\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"VeloOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "GetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "V3Pool",
							"outputs": [
								{
									"internalType": "contract ICLPoolDerivedState",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0ToMint",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getTicks",
							"outputs": [
								{
									"internalType": "int24",
									"name": "lowTick",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "highTick",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/VeloOracle.sol\":1473:3546  contract VeloOracle {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/core/VeloOracle.sol\":3038:3080  0x7cfc2Da3ba598ef4De692905feDcA32565AB836E */\n  0x7cfc2da3ba598ef4de692905fedca32565ab836e\n    /* \"contracts/core/VeloOracle.sol\":3022:3080  address _pool = 0x7cfc2Da3ba598ef4De692905feDcA32565AB836E */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/core/VeloOracle.sol\":1473:3546  contract VeloOracle {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/VeloOracle.sol\":1473:3546  contract VeloOracle {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x11ea5441\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51c6590a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x802036f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf29d0040\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/core/VeloOracle.sol\":1498:1531  ICLPoolDerivedState public V3Pool */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/core/VeloOracle.sol\":3083:3543  function addLiquidity(uint256 amount0ToMint) public view returns (uint128) {\r... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/core/VeloOracle.sol\":2595:3018  function getTicks (address pool) public view returns (int24 lowTick, int24 highTick){\r... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup4\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/core/VeloOracle.sol\":1538:2591  function GetPrice(address pool) public view returns (uint256 price) {\r... */\n    tag_6:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/core/VeloOracle.sol\":1498:1531  ICLPoolDerivedState public V3Pool */\n    tag_8:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/core/VeloOracle.sol\":3083:3543  function addLiquidity(uint256 amount0ToMint) public view returns (uint128) {\r... */\n    tag_11:\n        /* \"contracts/core/VeloOracle.sol\":3149:3156  uint128 */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":3203:3218  int24 tickLower */\n      dup1\n        /* \"contracts/core/VeloOracle.sol\":3219:3234  int24 tickUpper */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":3238:3253  getTicks(_pool) */\n      tag_19\n        /* \"contracts/core/VeloOracle.sol\":3247:3252  _pool */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/core/VeloOracle.sol\":3238:3246  getTicks */\n      tag_14\n        /* \"contracts/core/VeloOracle.sol\":3238:3253  getTicks(_pool) */\n      jump\t// in\n    tag_19:\n        /* \"contracts/core/VeloOracle.sol\":3202:3253  (int24 tickLower,int24 tickUpper) = getTicks(_pool) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/core/VeloOracle.sol\":3262:3284  uint160 sqrtPriceLower */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":3287:3325  TickMath.getSqrtRatioAtTick(tickLower) */\n      tag_20\n        /* \"contracts/core/VeloOracle.sol\":3315:3324  tickLower */\n      dup4\n        /* \"contracts/core/VeloOracle.sol\":3287:3314  TickMath.getSqrtRatioAtTick */\n      tag_21\n        /* \"contracts/core/VeloOracle.sol\":3287:3325  TickMath.getSqrtRatioAtTick(tickLower) */\n      jump\t// in\n    tag_20:\n        /* \"contracts/core/VeloOracle.sol\":3262:3325  uint160 sqrtPriceLower = TickMath.getSqrtRatioAtTick(tickLower) */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":3332:3354  uint160 sqrtPriceUpper */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":3357:3395  TickMath.getSqrtRatioAtTick(tickUpper) */\n      tag_22\n        /* \"contracts/core/VeloOracle.sol\":3385:3394  tickUpper */\n      dup4\n        /* \"contracts/core/VeloOracle.sol\":3357:3384  TickMath.getSqrtRatioAtTick */\n      tag_21\n        /* \"contracts/core/VeloOracle.sol\":3357:3395  TickMath.getSqrtRatioAtTick(tickUpper) */\n      jump\t// in\n    tag_22:\n        /* \"contracts/core/VeloOracle.sol\":3332:3395  uint160 sqrtPriceUpper = TickMath.getSqrtRatioAtTick(tickUpper) */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":3408:3425  uint128 liquidity */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":3428:3514  LiquidityAmounts.getLiquidityForAmount0(sqrtPriceLower, sqrtPriceUpper, amount0ToMint) */\n      tag_23\n        /* \"contracts/core/VeloOracle.sol\":3468:3482  sqrtPriceLower */\n      dup4\n        /* \"contracts/core/VeloOracle.sol\":3484:3498  sqrtPriceUpper */\n      dup4\n        /* \"contracts/core/VeloOracle.sol\":3500:3513  amount0ToMint */\n      dup10\n        /* \"contracts/core/VeloOracle.sol\":3428:3467  LiquidityAmounts.getLiquidityForAmount0 */\n      tag_24\n        /* \"contracts/core/VeloOracle.sol\":3428:3514  LiquidityAmounts.getLiquidityForAmount0(sqrtPriceLower, sqrtPriceUpper, amount0ToMint) */\n      jump\t// in\n    tag_23:\n        /* \"contracts/core/VeloOracle.sol\":3408:3514  uint128 liquidity = LiquidityAmounts.getLiquidityForAmount0(sqrtPriceLower, sqrtPriceUpper, amount0ToMint) */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":3530:3539  liquidity */\n      dup1\n        /* \"contracts/core/VeloOracle.sol\":3523:3539  return liquidity */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":3083:3543  function addLiquidity(uint256 amount0ToMint) public view returns (uint128) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/core/VeloOracle.sol\":2595:3018  function getTicks (address pool) public view returns (int24 lowTick, int24 highTick){\r... */\n    tag_14:\n        /* \"contracts/core/VeloOracle.sol\":2649:2662  int24 lowTick */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":2664:2678  int24 highTick */\n      dup1\n        /* \"contracts/core/VeloOracle.sol\":2690:2707  int24 tickSpacing */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":2727:2731  pool */\n      dup4\n        /* \"contracts/core/VeloOracle.sol\":2710:2744  ICLPoolConstants(pool).tickSpacing */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0c93a7c\n        /* \"contracts/core/VeloOracle.sol\":2710:2746  ICLPoolConstants(pool).tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2690:2746  int24 tickSpacing = ICLPoolConstants(pool).tickSpacing() */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2760:2777  int24 currentTick */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":2797:2801  pool */\n      dup5\n        /* \"contracts/core/VeloOracle.sol\":2789:2808  ICLPool(pool).slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/core/VeloOracle.sol\":2789:2810  ICLPool(pool).slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xc0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2757:2810  (, int24 currentTick, , , , ) = ICLPool(pool).slot0() */\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2865:2876  tickSpacing */\n      dup2\n        /* \"contracts/core/VeloOracle.sol\":2850:2861  tickSpacing */\n      dup3\n        /* \"contracts/core/VeloOracle.sol\":2836:2861  currentTick / tickSpacing */\n      0x02\n      signextend\n        /* \"contracts/core/VeloOracle.sol\":2836:2847  currentTick */\n      dup3\n        /* \"contracts/core/VeloOracle.sol\":2836:2861  currentTick / tickSpacing */\n      0x02\n      signextend\n      dup2\n      tag_34\n      jumpi\n      invalid\n    tag_34:\n      sdiv\n        /* \"contracts/core/VeloOracle.sol\":2835:2876  (currentTick / tickSpacing) * tickSpacing */\n      mul\n        /* \"contracts/core/VeloOracle.sol\":2821:2876  currentTick = (currentTick / tickSpacing) * tickSpacing */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2911:2922  tickSpacing */\n      dup2\n        /* \"contracts/core/VeloOracle.sol\":2897:2908  currentTick */\n      dup2\n        /* \"contracts/core/VeloOracle.sol\":2897:2922  currentTick - tickSpacing */\n      sub\n        /* \"contracts/core/VeloOracle.sol\":2887:2922  lowTick = currentTick - tickSpacing */\n      swap4\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2958:2969  tickSpacing */\n      dup2\n        /* \"contracts/core/VeloOracle.sol\":2944:2955  currentTick */\n      dup2\n        /* \"contracts/core/VeloOracle.sol\":2944:2969  currentTick + tickSpacing */\n      add\n        /* \"contracts/core/VeloOracle.sol\":2933:2969  highTick = currentTick + tickSpacing */\n      swap3\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2980:3006  return (lowTick, highTick) */\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2595:3018  function getTicks (address pool) public view returns (int24 lowTick, int24 highTick){\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/core/VeloOracle.sol\":1538:2591  function GetPrice(address pool) public view returns (uint256 price) {\r... */\n    tag_17:\n        /* \"contracts/core/VeloOracle.sol\":1591:1604  uint256 price */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":1637:1638  0 */\n      dup1\n        /* \"contracts/core/VeloOracle.sol\":1621:1639  pool != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/core/VeloOracle.sol\":1621:1625  pool */\n      dup3\n        /* \"contracts/core/VeloOracle.sol\":1621:1639  pool != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/core/VeloOracle.sol\":1613:1664  require(pool != address(0), \"Invalid pool address\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e76616c696420706f6f6c2061646472657373000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"contracts/core/VeloOracle.sol\":1703:1717  address token0 */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":1737:1741  pool */\n      dup3\n        /* \"contracts/core/VeloOracle.sol\":1720:1749  ICLPoolConstants(pool).token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/core/VeloOracle.sol\":1720:1751  ICLPoolConstants(pool).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":1703:1751  address token0 = ICLPoolConstants(pool).token0() */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":1758:1772  address token1 */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":1792:1796  pool */\n      dup4\n        /* \"contracts/core/VeloOracle.sol\":1775:1804  ICLPoolConstants(pool).token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/core/VeloOracle.sol\":1775:1806  ICLPoolConstants(pool).token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":1758:1806  address token1 = ICLPoolConstants(pool).token1() */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":1839:1840  0 */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":1821:1841  token0 != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/core/VeloOracle.sol\":1821:1827  token0 */\n      dup3\n        /* \"contracts/core/VeloOracle.sol\":1821:1841  token0 != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/core/VeloOracle.sol\":1821:1865  token0 != address(0) && token1 != address(0) */\n      dup1\n      iszero\n      tag_45\n      jumpi\n      pop\n        /* \"contracts/core/VeloOracle.sol\":1863:1864  0 */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":1845:1865  token1 != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/core/VeloOracle.sol\":1845:1851  token1 */\n      dup2\n        /* \"contracts/core/VeloOracle.sol\":1845:1865  token1 != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/core/VeloOracle.sol\":1821:1865  token0 != address(0) && token1 != address(0) */\n    tag_45:\n        /* \"contracts/core/VeloOracle.sol\":1813:1884  require(token0 != address(0) && token1 != address(0), \"Invalid tokens\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e76616c696420746f6b656e73000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/core/VeloOracle.sol\":1950:1960  uint8 dec0 */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":1970:1976  token0 */\n      dup3\n        /* \"contracts/core/VeloOracle.sol\":1963:1986  IERC20(token0).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/core/VeloOracle.sol\":1963:1988  IERC20(token0).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":1950:1988  uint8 dec0 = IERC20(token0).decimals() */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2039:2049  int24 tick */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":2074:2078  pool */\n      dup6\n        /* \"contracts/core/VeloOracle.sol\":2061:2085  ICLPoolState(pool).slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/core/VeloOracle.sol\":2061:2087  ICLPoolState(pool).slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xc0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2036:2087  (, int24 tick, , , , ) = ICLPoolState(pool).slot0() */\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2119:2139  uint160 sqrtRatioX96 */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":2142:2175  TickMath.getSqrtRatioAtTick(tick) */\n      tag_55\n        /* \"contracts/core/VeloOracle.sol\":2170:2174  tick */\n      dup3\n        /* \"contracts/core/VeloOracle.sol\":2142:2169  TickMath.getSqrtRatioAtTick */\n      tag_21\n        /* \"contracts/core/VeloOracle.sol\":2142:2175  TickMath.getSqrtRatioAtTick(tick) */\n      jump\t// in\n    tag_55:\n        /* \"contracts/core/VeloOracle.sol\":2119:2175  uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick) */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2182:2199  uint256 sqrtPrice */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":2210:2222  sqrtRatioX96 */\n      dup2\n        /* \"contracts/core/VeloOracle.sol\":2202:2223  uint256(sqrtRatioX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/core/VeloOracle.sol\":2182:2223  uint256 sqrtPrice = uint256(sqrtRatioX96) */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2283:2299  uint256 priceRaw */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":2302:2351  FullMath.mulDiv(sqrtPrice * sqrtPrice, 1, 2**192) */\n      tag_56\n        /* \"contracts/core/VeloOracle.sol\":2330:2339  sqrtPrice */\n      dup3\n        /* \"contracts/core/VeloOracle.sol\":2318:2327  sqrtPrice */\n      dup4\n        /* \"contracts/core/VeloOracle.sol\":2318:2339  sqrtPrice * sqrtPrice */\n      mul\n        /* \"contracts/core/VeloOracle.sol\":2341:2342  1 */\n      0x01\n        /* \"contracts/core/VeloOracle.sol\":2344:2350  2**192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"contracts/core/VeloOracle.sol\":2302:2317  FullMath.mulDiv */\n      tag_57\n        /* \"contracts/core/VeloOracle.sol\":2302:2351  FullMath.mulDiv(sqrtPrice * sqrtPrice, 1, 2**192) */\n      jump\t// in\n    tag_56:\n        /* \"contracts/core/VeloOracle.sol\":2283:2351  uint256 priceRaw = FullMath.mulDiv(sqrtPrice * sqrtPrice, 1, 2**192) */\n      swap1\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2379:2380  0 */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":2368:2376  priceRaw */\n      dup2\n        /* \"contracts/core/VeloOracle.sol\":2368:2380  priceRaw > 0 */\n      gt\n        /* \"contracts/core/VeloOracle.sol\":2368:2428  priceRaw > 0 ? FullMath.mulDiv(10**18, 10**18, priceRaw) : 0 */\n      tag_58\n      jumpi\n        /* \"contracts/core/VeloOracle.sol\":2427:2428  0 */\n      0x00\n        /* \"contracts/core/VeloOracle.sol\":2368:2428  priceRaw > 0 ? FullMath.mulDiv(10**18, 10**18, priceRaw) : 0 */\n      jump(tag_59)\n    tag_58:\n        /* \"contracts/core/VeloOracle.sol\":2383:2424  FullMath.mulDiv(10**18, 10**18, priceRaw) */\n      tag_60\n        /* \"contracts/core/VeloOracle.sol\":2399:2405  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/core/VeloOracle.sol\":2407:2413  10**18 */\n      dup1\n        /* \"contracts/core/VeloOracle.sol\":2415:2423  priceRaw */\n      dup4\n        /* \"contracts/core/VeloOracle.sol\":2383:2398  FullMath.mulDiv */\n      tag_57\n        /* \"contracts/core/VeloOracle.sol\":2383:2424  FullMath.mulDiv(10**18, 10**18, priceRaw) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/core/VeloOracle.sol\":2368:2428  priceRaw > 0 ? FullMath.mulDiv(10**18, 10**18, priceRaw) : 0 */\n    tag_59:\n        /* \"contracts/core/VeloOracle.sol\":2360:2428  price = priceRaw > 0 ? FullMath.mulDiv(10**18, 10**18, priceRaw) : 0 */\n      swap8\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2560:2562  12 */\n      0x0c\n        /* \"contracts/core/VeloOracle.sol\":2553:2557  dec0 */\n      dup6\n        /* \"contracts/core/VeloOracle.sol\":2553:2562  dec0 + 12 */\n      add\n        /* \"contracts/core/VeloOracle.sol\":2546:2563  10 ** (dec0 + 12) */\n      0xff\n      and\n        /* \"contracts/core/VeloOracle.sol\":2546:2548  10 */\n      0x0a\n        /* \"contracts/core/VeloOracle.sol\":2546:2563  10 ** (dec0 + 12) */\n      exp\n        /* \"contracts/core/VeloOracle.sol\":2537:2542  price */\n      dup9\n        /* \"contracts/core/VeloOracle.sol\":2537:2564  price / (10 ** (dec0 + 12)) */\n      dup2\n      tag_61\n      jumpi\n      invalid\n    tag_61:\n      div\n        /* \"contracts/core/VeloOracle.sol\":2529:2564  price = price / (10 ** (dec0 + 12)) */\n      swap8\n      pop\n        /* \"contracts/core/VeloOracle.sol\":2573:2587  return (price) */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/core/VeloOracle.sol\":1538:2591  function GetPrice(address pool) public view returns (uint256 price) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/core/libraries/TickMath.sol\":1362:3942  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n    tag_21:\n        /* \"contracts/core/libraries/TickMath.sol\":1425:1445  uint160 sqrtPriceX96 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":1457:1472  uint256 absTick */\n      dup1\n        /* \"contracts/core/libraries/TickMath.sol\":1482:1483  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":1475:1479  tick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":1475:1483  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"contracts/core/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      tag_63\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":1526:1530  tick */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":1519:1531  int256(tick) */\n      0x02\n      signextend\n        /* \"contracts/core/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      jump(tag_64)\n    tag_63:\n        /* \"contracts/core/libraries/TickMath.sol\":1502:1506  tick */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":1495:1507  int256(tick) */\n      0x02\n      signextend\n        /* \"contracts/core/libraries/TickMath.sol\":1494:1507  -int256(tick) */\n      0x00\n      sub\n        /* \"contracts/core/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n    tag_64:\n        /* \"contracts/core/libraries/TickMath.sol\":1457:1532  uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":484:491  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"contracts/core/libraries/TickMath.sol\":644:653  -MIN_TICK */\n      0x00\n      sub\n        /* \"contracts/core/libraries/TickMath.sol\":1561:1578  uint256(MAX_TICK) */\n      0x02\n      signextend\n        /* \"contracts/core/libraries/TickMath.sol\":1550:1557  absTick */\n      dup2\n        /* \"contracts/core/libraries/TickMath.sol\":1550:1578  absTick <= uint256(MAX_TICK) */\n      gt\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":1542:1584  require(absTick <= uint256(MAX_TICK), \"T\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5400000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"contracts/core/libraries/TickMath.sol\":1595:1608  uint256 ratio */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":1628:1629  0 */\n      dup1\n        /* \"contracts/core/libraries/TickMath.sol\":1621:1624  0x1 */\n      0x01\n        /* \"contracts/core/libraries/TickMath.sol\":1611:1618  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":1611:1624  absTick & 0x1 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":1611:1629  absTick & 0x1 != 0 */\n      eq\n      iszero\n        /* \"contracts/core/libraries/TickMath.sol\":1611:1704  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      tag_66\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":1669:1704  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"contracts/core/libraries/TickMath.sol\":1611:1704  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      jump(tag_67)\n    tag_66:\n        /* \"contracts/core/libraries/TickMath.sol\":1632:1666  0xfffcb933bd6fad37aa2d162d1a594001 */\n      0xfffcb933bd6fad37aa2d162d1a594001\n        /* \"contracts/core/libraries/TickMath.sol\":1611:1704  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n    tag_67:\n        /* \"contracts/core/libraries/TickMath.sol\":1595:1704  uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      0xffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":1735:1736  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":1728:1731  0x2 */\n      0x02\n        /* \"contracts/core/libraries/TickMath.sol\":1718:1725  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":1718:1731  absTick & 0x2 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":1718:1736  absTick & 0x2 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":1714:1797  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      tag_68\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":1794:1797  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":1755:1789  0xfff97272373d413259a46990580e213a */\n      0xfff97272373d413259a46990580e213a\n        /* \"contracts/core/libraries/TickMath.sol\":1747:1752  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":1747:1789  ratio * 0xfff97272373d413259a46990580e213a */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":1746:1797  (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":1738:1797  ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":1714:1797  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n    tag_68:\n        /* \"contracts/core/libraries/TickMath.sol\":1828:1829  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":1821:1824  0x4 */\n      0x04\n        /* \"contracts/core/libraries/TickMath.sol\":1811:1818  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":1811:1824  absTick & 0x4 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":1811:1829  absTick & 0x4 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":1807:1890  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      tag_69\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":1887:1890  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":1848:1882  0xfff2e50f5f656932ef12357cf3c7fdcc */\n      0xfff2e50f5f656932ef12357cf3c7fdcc\n        /* \"contracts/core/libraries/TickMath.sol\":1840:1845  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":1840:1882  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":1839:1890  (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":1831:1890  ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":1807:1890  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n    tag_69:\n        /* \"contracts/core/libraries/TickMath.sol\":1921:1922  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":1914:1917  0x8 */\n      0x08\n        /* \"contracts/core/libraries/TickMath.sol\":1904:1911  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":1904:1917  absTick & 0x8 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":1904:1922  absTick & 0x8 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":1900:1983  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      tag_70\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":1980:1983  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":1941:1975  0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      0xffe5caca7e10e4e61c3624eaa0941cd0\n        /* \"contracts/core/libraries/TickMath.sol\":1933:1938  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":1933:1975  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":1932:1983  (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":1924:1983  ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":1900:1983  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n    tag_70:\n        /* \"contracts/core/libraries/TickMath.sol\":2015:2016  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":2007:2011  0x10 */\n      0x10\n        /* \"contracts/core/libraries/TickMath.sol\":1997:2004  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":1997:2011  absTick & 0x10 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":1997:2016  absTick & 0x10 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":1993:2077  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      tag_71\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2074:2077  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2035:2069  0xffcb9843d60f6159c9db58835c926644 */\n      0xffcb9843d60f6159c9db58835c926644\n        /* \"contracts/core/libraries/TickMath.sol\":2027:2032  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":2027:2069  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2026:2077  (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2018:2077  ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":1993:2077  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n    tag_71:\n        /* \"contracts/core/libraries/TickMath.sol\":2109:2110  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":2101:2105  0x20 */\n      0x20\n        /* \"contracts/core/libraries/TickMath.sol\":2091:2098  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":2091:2105  absTick & 0x20 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2091:2110  absTick & 0x20 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":2087:2171  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      tag_72\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2168:2171  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2129:2163  0xff973b41fa98c081472e6896dfb254c0 */\n      0xff973b41fa98c081472e6896dfb254c0\n        /* \"contracts/core/libraries/TickMath.sol\":2121:2126  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":2121:2163  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2120:2171  (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2112:2171  ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":2087:2171  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n    tag_72:\n        /* \"contracts/core/libraries/TickMath.sol\":2203:2204  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":2195:2199  0x40 */\n      0x40\n        /* \"contracts/core/libraries/TickMath.sol\":2185:2192  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":2185:2199  absTick & 0x40 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2185:2204  absTick & 0x40 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":2181:2265  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      tag_73\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2262:2265  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2223:2257  0xff2ea16466c96a3843ec78b326b52861 */\n      0xff2ea16466c96a3843ec78b326b52861\n        /* \"contracts/core/libraries/TickMath.sol\":2215:2220  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":2215:2257  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2214:2265  (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2206:2265  ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":2181:2265  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n    tag_73:\n        /* \"contracts/core/libraries/TickMath.sol\":2297:2298  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":2289:2293  0x80 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2279:2286  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":2279:2293  absTick & 0x80 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2279:2298  absTick & 0x80 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":2275:2359  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      tag_74\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2356:2359  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2317:2351  0xfe5dee046a99a2a811c461f1969c3053 */\n      0xfe5dee046a99a2a811c461f1969c3053\n        /* \"contracts/core/libraries/TickMath.sol\":2309:2314  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":2309:2351  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2308:2359  (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2300:2359  ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":2275:2359  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n    tag_74:\n        /* \"contracts/core/libraries/TickMath.sol\":2392:2393  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":2383:2388  0x100 */\n      0x0100\n        /* \"contracts/core/libraries/TickMath.sol\":2373:2380  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":2373:2388  absTick & 0x100 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2373:2393  absTick & 0x100 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":2369:2454  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      tag_75\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2451:2454  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2412:2446  0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      0xfcbe86c7900a88aedcffc83b479aa3a4\n        /* \"contracts/core/libraries/TickMath.sol\":2404:2409  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":2404:2446  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2403:2454  (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2395:2454  ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":2369:2454  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n    tag_75:\n        /* \"contracts/core/libraries/TickMath.sol\":2487:2488  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":2478:2483  0x200 */\n      0x0200\n        /* \"contracts/core/libraries/TickMath.sol\":2468:2475  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":2468:2483  absTick & 0x200 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2468:2488  absTick & 0x200 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":2464:2549  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      tag_76\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2546:2549  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2507:2541  0xf987a7253ac413176f2b074cf7815e54 */\n      0xf987a7253ac413176f2b074cf7815e54\n        /* \"contracts/core/libraries/TickMath.sol\":2499:2504  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":2499:2541  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2498:2549  (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2490:2549  ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":2464:2549  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n    tag_76:\n        /* \"contracts/core/libraries/TickMath.sol\":2582:2583  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":2573:2578  0x400 */\n      0x0400\n        /* \"contracts/core/libraries/TickMath.sol\":2563:2570  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":2563:2578  absTick & 0x400 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2563:2583  absTick & 0x400 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":2559:2644  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      tag_77\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2641:2644  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2602:2636  0xf3392b0822b70005940c7a398e4b70f3 */\n      0xf3392b0822b70005940c7a398e4b70f3\n        /* \"contracts/core/libraries/TickMath.sol\":2594:2599  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":2594:2636  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2593:2644  (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2585:2644  ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":2559:2644  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n    tag_77:\n        /* \"contracts/core/libraries/TickMath.sol\":2677:2678  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":2668:2673  0x800 */\n      0x0800\n        /* \"contracts/core/libraries/TickMath.sol\":2658:2665  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":2658:2673  absTick & 0x800 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2658:2678  absTick & 0x800 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":2654:2739  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      tag_78\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2736:2739  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2697:2731  0xe7159475a2c29b7443b29c7fa6e889d9 */\n      0xe7159475a2c29b7443b29c7fa6e889d9\n        /* \"contracts/core/libraries/TickMath.sol\":2689:2694  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":2689:2731  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2688:2739  (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2680:2739  ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":2654:2739  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n    tag_78:\n        /* \"contracts/core/libraries/TickMath.sol\":2773:2774  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":2763:2769  0x1000 */\n      0x1000\n        /* \"contracts/core/libraries/TickMath.sol\":2753:2760  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":2753:2769  absTick & 0x1000 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2753:2774  absTick & 0x1000 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":2749:2835  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      tag_79\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2832:2835  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2793:2827  0xd097f3bdfd2022b8845ad8f792aa5825 */\n      0xd097f3bdfd2022b8845ad8f792aa5825\n        /* \"contracts/core/libraries/TickMath.sol\":2785:2790  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":2785:2827  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2784:2835  (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2776:2835  ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":2749:2835  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n    tag_79:\n        /* \"contracts/core/libraries/TickMath.sol\":2869:2870  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":2859:2865  0x2000 */\n      0x2000\n        /* \"contracts/core/libraries/TickMath.sol\":2849:2856  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":2849:2865  absTick & 0x2000 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2849:2870  absTick & 0x2000 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":2845:2931  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      tag_80\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":2928:2931  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2889:2923  0xa9f746462d870fdf8a65dc1f90e061e5 */\n      0xa9f746462d870fdf8a65dc1f90e061e5\n        /* \"contracts/core/libraries/TickMath.sol\":2881:2886  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":2881:2923  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2880:2931  (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2872:2931  ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":2845:2931  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n    tag_80:\n        /* \"contracts/core/libraries/TickMath.sol\":2965:2966  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":2955:2961  0x4000 */\n      0x4000\n        /* \"contracts/core/libraries/TickMath.sol\":2945:2952  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":2945:2961  absTick & 0x4000 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":2945:2966  absTick & 0x4000 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":2941:3027  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      tag_81\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3024:3027  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":2985:3019  0x70d869a156d2a1b890bb3df62baf32f7 */\n      0x70d869a156d2a1b890bb3df62baf32f7\n        /* \"contracts/core/libraries/TickMath.sol\":2977:2982  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":2977:3019  ratio * 0x70d869a156d2a1b890bb3df62baf32f7 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":2976:3027  (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":2968:3027  ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":2941:3027  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n    tag_81:\n        /* \"contracts/core/libraries/TickMath.sol\":3061:3062  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":3051:3057  0x8000 */\n      0x8000\n        /* \"contracts/core/libraries/TickMath.sol\":3041:3048  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":3041:3057  absTick & 0x8000 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3041:3062  absTick & 0x8000 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":3037:3123  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      tag_82\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3120:3123  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":3081:3115  0x31be135f97d08fd981231505542fcfa6 */\n      0x31be135f97d08fd981231505542fcfa6\n        /* \"contracts/core/libraries/TickMath.sol\":3073:3078  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":3073:3115  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":3072:3123  (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3064:3123  ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":3037:3123  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n    tag_82:\n        /* \"contracts/core/libraries/TickMath.sol\":3158:3159  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":3147:3154  0x10000 */\n      0x010000\n        /* \"contracts/core/libraries/TickMath.sol\":3137:3144  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":3137:3154  absTick & 0x10000 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3137:3159  absTick & 0x10000 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":3133:3219  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      tag_83\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3216:3219  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":3178:3211  0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      0x09aa508b5b7a84e1c677de54f3e99bc9\n        /* \"contracts/core/libraries/TickMath.sol\":3170:3175  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":3170:3211  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":3169:3219  (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3161:3219  ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":3133:3219  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n    tag_83:\n        /* \"contracts/core/libraries/TickMath.sol\":3254:3255  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":3243:3250  0x20000 */\n      0x020000\n        /* \"contracts/core/libraries/TickMath.sol\":3233:3240  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":3233:3250  absTick & 0x20000 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3233:3255  absTick & 0x20000 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":3229:3314  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      tag_84\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3311:3314  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":3274:3306  0x5d6af8dedb81196699c329225ee604 */\n      0x5d6af8dedb81196699c329225ee604\n        /* \"contracts/core/libraries/TickMath.sol\":3266:3271  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":3266:3306  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":3265:3314  (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3257:3314  ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":3229:3314  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n    tag_84:\n        /* \"contracts/core/libraries/TickMath.sol\":3349:3350  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":3338:3345  0x40000 */\n      0x040000\n        /* \"contracts/core/libraries/TickMath.sol\":3328:3335  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":3328:3345  absTick & 0x40000 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3328:3350  absTick & 0x40000 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":3324:3407  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      tag_85\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3404:3407  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":3369:3399  0x2216e584f5fa1ea926041bedfe98 */\n      0x2216e584f5fa1ea926041bedfe98\n        /* \"contracts/core/libraries/TickMath.sol\":3361:3366  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":3361:3399  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":3360:3407  (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3352:3407  ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":3324:3407  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n    tag_85:\n        /* \"contracts/core/libraries/TickMath.sol\":3442:3443  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":3431:3438  0x80000 */\n      0x080000\n        /* \"contracts/core/libraries/TickMath.sol\":3421:3428  absTick */\n      dup4\n        /* \"contracts/core/libraries/TickMath.sol\":3421:3438  absTick & 0x80000 */\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3421:3443  absTick & 0x80000 != 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":3417:3495  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      tag_86\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3492:3495  128 */\n      0x80\n        /* \"contracts/core/libraries/TickMath.sol\":3462:3487  0x48a170391f7dc42444e8fa2 */\n      0x048a170391f7dc42444e8fa2\n        /* \"contracts/core/libraries/TickMath.sol\":3454:3459  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":3454:3487  ratio * 0x48a170391f7dc42444e8fa2 */\n      mul\n        /* \"contracts/core/libraries/TickMath.sol\":3453:3495  (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3445:3495  ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":3417:3495  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n    tag_86:\n        /* \"contracts/core/libraries/TickMath.sol\":3517:3518  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":3510:3514  tick */\n      dup5\n        /* \"contracts/core/libraries/TickMath.sol\":3510:3518  tick > 0 */\n      0x02\n      signextend\n      sgt\n        /* \"contracts/core/libraries/TickMath.sol\":3506:3553  if (tick > 0) ratio = type(uint256).max / ratio */\n      iszero\n      tag_87\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3548:3553  ratio */\n      dup1\n        /* \"contracts/core/libraries/TickMath.sol\":3528:3545  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/core/libraries/TickMath.sol\":3528:3553  type(uint256).max / ratio */\n      dup2\n      tag_88\n      jumpi\n      invalid\n    tag_88:\n      div\n        /* \"contracts/core/libraries/TickMath.sol\":3520:3553  ratio = type(uint256).max / ratio */\n      swap1\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":3506:3553  if (tick > 0) ratio = type(uint256).max / ratio */\n    tag_87:\n        /* \"contracts/core/libraries/TickMath.sol\":3924:3925  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":3912:3919  1 << 32 */\n      0x0100000000\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3908  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3920  ratio % (1 << 32) */\n      dup2\n      tag_89\n      jumpi\n      invalid\n    tag_89:\n      mod\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3925  ratio % (1 << 32) == 0 */\n      eq\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n      tag_90\n      jumpi\n        /* \"contracts/core/libraries/TickMath.sol\":3932:3933  1 */\n      0x01\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n      jump(tag_91)\n    tag_90:\n        /* \"contracts/core/libraries/TickMath.sol\":3928:3929  0 */\n      0x00\n        /* \"contracts/core/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n    tag_91:\n        /* \"contracts/core/libraries/TickMath.sol\":3886:3934  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      0xff\n      and\n        /* \"contracts/core/libraries/TickMath.sol\":3896:3898  32 */\n      0x20\n        /* \"contracts/core/libraries/TickMath.sol\":3887:3892  ratio */\n      dup3\n        /* \"contracts/core/libraries/TickMath.sol\":3887:3898  ratio >> 32 */\n      swap1\n      shr\n        /* \"contracts/core/libraries/TickMath.sol\":3886:3934  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      add\n        /* \"contracts/core/libraries/TickMath.sol\":3863:3935  sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1)) */\n      swap3\n      pop\n        /* \"contracts/core/libraries/TickMath.sol\":1362:3942  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1083:1564  function getLiquidityForAmount0(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint256 amount0)\r... */\n    tag_24:\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1228:1245  uint128 liquidity */\n      0x00\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1283:1296  sqrtRatioBX96 */\n      dup3\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1267:1296  sqrtRatioAX96 > sqrtRatioBX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1267:1280  sqrtRatioAX96 */\n      dup5\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1267:1296  sqrtRatioAX96 > sqrtRatioBX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1263:1361  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n      iszero\n      tag_93\n      jumpi\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1332:1345  sqrtRatioBX96 */\n      dup3\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1347:1360  sqrtRatioAX96 */\n      dup5\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1298:1361  (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      pop\n      pop\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1263:1361  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n    tag_93:\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1372:1392  uint256 intermediate */\n      0x00\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1395:1458  FullMath.mulDiv(sqrtRatioAX96, sqrtRatioBX96, FixedPoint96.Q96) */\n      tag_94\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1411:1424  sqrtRatioAX96 */\n      dup6\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1395:1458  FullMath.mulDiv(sqrtRatioAX96, sqrtRatioBX96, FixedPoint96.Q96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1426:1439  sqrtRatioBX96 */\n      dup6\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1395:1458  FullMath.mulDiv(sqrtRatioAX96, sqrtRatioBX96, FixedPoint96.Q96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/core/libraries/FixedPoint96.sol\":349:376  0x1000000000000000000000000 */\n      0x01000000000000000000000000\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1395:1410  FullMath.mulDiv */\n      tag_57\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1395:1458  FullMath.mulDiv(sqrtRatioAX96, sqrtRatioBX96, FixedPoint96.Q96) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1372:1458  uint256 intermediate = FullMath.mulDiv(sqrtRatioAX96, sqrtRatioBX96, FixedPoint96.Q96) */\n      swap1\n      pop\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1476:1556  toUint128(FullMath.mulDiv(amount0, intermediate, sqrtRatioBX96 - sqrtRatioAX96)) */\n      tag_95\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1486:1555  FullMath.mulDiv(amount0, intermediate, sqrtRatioBX96 - sqrtRatioAX96) */\n      tag_96\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1502:1509  amount0 */\n      dup5\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1511:1523  intermediate */\n      dup4\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1541:1554  sqrtRatioAX96 */\n      dup9\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1525:1538  sqrtRatioBX96 */\n      dup9\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1525:1554  sqrtRatioBX96 - sqrtRatioAX96 */\n      sub\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1486:1555  FullMath.mulDiv(amount0, intermediate, sqrtRatioBX96 - sqrtRatioAX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1486:1501  FullMath.mulDiv */\n      tag_57\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1486:1555  FullMath.mulDiv(amount0, intermediate, sqrtRatioBX96 - sqrtRatioAX96) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1476:1485  toUint128 */\n      tag_97\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1476:1556  toUint128(FullMath.mulDiv(amount0, intermediate, sqrtRatioBX96 - sqrtRatioAX96)) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1469:1556  return toUint128(FullMath.mulDiv(amount0, intermediate, sqrtRatioBX96 - sqrtRatioAX96)) */\n      swap2\n      pop\n      pop\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":1083:1564  function getLiquidityForAmount0(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint256 amount0)\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/libraries/FullMath.sol\":749:4495  function mulDiv(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_57:\n        /* \"contracts/core/libraries/FullMath.sol\":831:845  uint256 result */\n      0x00\n        /* \"contracts/core/libraries/FullMath.sol\":1160:1173  uint256 prod0 */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":1228:1241  uint256 prod1 */\n      0x00\n        /* \"contracts/core/libraries/FullMath.sol\":1345:1346  0 */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":1341:1347  not(0) */\n      not\n        /* \"contracts/core/libraries/FullMath.sol\":1338:1339  b */\n      dup6\n        /* \"contracts/core/libraries/FullMath.sol\":1335:1336  a */\n      dup8\n        /* \"contracts/core/libraries/FullMath.sol\":1328:1348  mulmod(a, b, not(0)) */\n      mulmod\n        /* \"contracts/core/libraries/FullMath.sol\":1377:1378  b */\n      dup6\n        /* \"contracts/core/libraries/FullMath.sol\":1374:1375  a */\n      dup8\n        /* \"contracts/core/libraries/FullMath.sol\":1370:1379  mul(a, b) */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":1361:1379  prod0 := mul(a, b) */\n      swap3\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":1428:1433  prod0 */\n      dup3\n        /* \"contracts/core/libraries/FullMath.sol\":1424:1426  mm */\n      dup2\n        /* \"contracts/core/libraries/FullMath.sol\":1421:1434  lt(mm, prod0) */\n      lt\n        /* \"contracts/core/libraries/FullMath.sol\":1413:1418  prod0 */\n      dup4\n        /* \"contracts/core/libraries/FullMath.sol\":1409:1411  mm */\n      dup3\n        /* \"contracts/core/libraries/FullMath.sol\":1405:1419  sub(mm, prod0) */\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":1401:1435  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":1392:1435  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":1304:1445  {... */\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":1526:1527  0 */\n      0x00\n        /* \"contracts/core/libraries/FullMath.sol\":1517:1522  prod1 */\n      dup2\n        /* \"contracts/core/libraries/FullMath.sol\":1517:1527  prod1 == 0 */\n      eq\n        /* \"contracts/core/libraries/FullMath.sol\":1513:1692  if (prod1 == 0) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"contracts/core/libraries/FullMath.sol\":1565:1566  0 */\n      0x00\n        /* \"contracts/core/libraries/FullMath.sol\":1551:1562  denominator */\n      dup5\n        /* \"contracts/core/libraries/FullMath.sol\":1551:1566  denominator > 0 */\n      gt\n        /* \"contracts/core/libraries/FullMath.sol\":1543:1567  require(denominator > 0) */\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n        /* \"contracts/core/libraries/FullMath.sol\":1629:1640  denominator */\n      dup4\n        /* \"contracts/core/libraries/FullMath.sol\":1622:1627  prod0 */\n      dup3\n        /* \"contracts/core/libraries/FullMath.sol\":1618:1641  div(prod0, denominator) */\n      div\n        /* \"contracts/core/libraries/FullMath.sol\":1608:1641  result := div(prod0, denominator) */\n      swap3\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":1668:1681  return result */\n      pop\n      pop\n      jump(tag_98)\n        /* \"contracts/core/libraries/FullMath.sol\":1513:1692  if (prod1 == 0) {... */\n    tag_99:\n        /* \"contracts/core/libraries/FullMath.sol\":1819:1824  prod1 */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":1805:1816  denominator */\n      dup5\n        /* \"contracts/core/libraries/FullMath.sol\":1805:1824  denominator > prod1 */\n      gt\n        /* \"contracts/core/libraries/FullMath.sol\":1797:1825  require(denominator > prod1) */\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n        /* \"contracts/core/libraries/FullMath.sol\":2102:2119  uint256 remainder */\n      0x00\n        /* \"contracts/core/libraries/FullMath.sol\":2178:2189  denominator */\n      dup5\n        /* \"contracts/core/libraries/FullMath.sol\":2175:2176  b */\n      dup7\n        /* \"contracts/core/libraries/FullMath.sol\":2172:2173  a */\n      dup9\n        /* \"contracts/core/libraries/FullMath.sol\":2165:2190  mulmod(a, b, denominator) */\n      mulmod\n        /* \"contracts/core/libraries/FullMath.sol\":2152:2190  remainder := mulmod(a, b, denominator) */\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":2321:2326  prod0 */\n      dup3\n        /* \"contracts/core/libraries/FullMath.sol\":2310:2319  remainder */\n      dup2\n        /* \"contracts/core/libraries/FullMath.sol\":2307:2327  gt(remainder, prod0) */\n      gt\n        /* \"contracts/core/libraries/FullMath.sol\":2300:2305  prod1 */\n      dup3\n        /* \"contracts/core/libraries/FullMath.sol\":2296:2328  sub(prod1, gt(remainder, prod0)) */\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":2287:2328  prod1 := sub(prod1, gt(remainder, prod0)) */\n      swap2\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":2361:2370  remainder */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":2354:2359  prod0 */\n      dup4\n        /* \"contracts/core/libraries/FullMath.sol\":2350:2371  sub(prod0, remainder) */\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":2341:2371  prod0 := sub(prod0, remainder) */\n      swap3\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":2530:2542  uint256 twos */\n      0x00\n        /* \"contracts/core/libraries/FullMath.sol\":2560:2571  denominator */\n      dup6\n        /* \"contracts/core/libraries/FullMath.sol\":2546:2557  denominator */\n      dup7\n        /* \"contracts/core/libraries/FullMath.sol\":2545:2557  -denominator */\n      0x00\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":2545:2571  -denominator & denominator */\n      and\n        /* \"contracts/core/libraries/FullMath.sol\":2530:2571  uint256 twos = -denominator & denominator */\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":2682:2686  twos */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":2669:2680  denominator */\n      dup7\n        /* \"contracts/core/libraries/FullMath.sol\":2665:2687  div(denominator, twos) */\n      div\n        /* \"contracts/core/libraries/FullMath.sol\":2650:2687  denominator := div(denominator, twos) */\n      swap6\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":2804:2808  twos */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":2797:2802  prod0 */\n      dup5\n        /* \"contracts/core/libraries/FullMath.sol\":2793:2809  div(prod0, twos) */\n      div\n        /* \"contracts/core/libraries/FullMath.sol\":2784:2809  prod0 := div(prod0, twos) */\n      swap4\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":3058:3059  1 */\n      0x01\n        /* \"contracts/core/libraries/FullMath.sol\":3051:3055  twos */\n      dup2\n        /* \"contracts/core/libraries/FullMath.sol\":3044:3048  twos */\n      dup3\n        /* \"contracts/core/libraries/FullMath.sol\":3041:3042  0 */\n      0x00\n        /* \"contracts/core/libraries/FullMath.sol\":3037:3049  sub(0, twos) */\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3033:3056  div(sub(0, twos), twos) */\n      div\n        /* \"contracts/core/libraries/FullMath.sol\":3029:3060  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"contracts/core/libraries/FullMath.sol\":3021:3060  twos := add(div(sub(0, twos), twos), 1) */\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":3096:3100  twos */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":3088:3093  prod1 */\n      dup4\n        /* \"contracts/core/libraries/FullMath.sol\":3088:3100  prod1 * twos */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3079:3100  prod0 |= prod1 * twos */\n      dup5\n      or\n      swap4\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":3434:3445  uint256 inv */\n      0x00\n        /* \"contracts/core/libraries/FullMath.sol\":3468:3469  2 */\n      0x02\n        /* \"contracts/core/libraries/FullMath.sol\":3453:3464  denominator */\n      dup8\n        /* \"contracts/core/libraries/FullMath.sol\":3449:3450  3 */\n      0x03\n        /* \"contracts/core/libraries/FullMath.sol\":3449:3464  3 * denominator */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3448:3469  (3 * denominator) ^ 2 */\n      xor\n        /* \"contracts/core/libraries/FullMath.sol\":3434:3469  uint256 inv = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":3709:3712  inv */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":3695:3706  denominator */\n      dup8\n        /* \"contracts/core/libraries/FullMath.sol\":3695:3712  denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3691:3692  2 */\n      0x02\n        /* \"contracts/core/libraries/FullMath.sol\":3691:3712  2 - denominator * inv */\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3684:3712  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":3767:3770  inv */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":3753:3764  denominator */\n      dup8\n        /* \"contracts/core/libraries/FullMath.sol\":3753:3770  denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3749:3750  2 */\n      0x02\n        /* \"contracts/core/libraries/FullMath.sol\":3749:3770  2 - denominator * inv */\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3742:3770  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":3826:3829  inv */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":3812:3823  denominator */\n      dup8\n        /* \"contracts/core/libraries/FullMath.sol\":3812:3829  denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3808:3809  2 */\n      0x02\n        /* \"contracts/core/libraries/FullMath.sol\":3808:3829  2 - denominator * inv */\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3801:3829  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":3885:3888  inv */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":3871:3882  denominator */\n      dup8\n        /* \"contracts/core/libraries/FullMath.sol\":3871:3888  denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3867:3868  2 */\n      0x02\n        /* \"contracts/core/libraries/FullMath.sol\":3867:3888  2 - denominator * inv */\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3860:3888  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":3944:3947  inv */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":3930:3941  denominator */\n      dup8\n        /* \"contracts/core/libraries/FullMath.sol\":3930:3947  denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3926:3927  2 */\n      0x02\n        /* \"contracts/core/libraries/FullMath.sol\":3926:3947  2 - denominator * inv */\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3919:3947  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":4004:4007  inv */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":3990:4001  denominator */\n      dup8\n        /* \"contracts/core/libraries/FullMath.sol\":3990:4007  denominator * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":3986:3987  2 */\n      0x02\n        /* \"contracts/core/libraries/FullMath.sol\":3986:4007  2 - denominator * inv */\n      sub\n        /* \"contracts/core/libraries/FullMath.sol\":3979:4007  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":4462:4465  inv */\n      dup1\n        /* \"contracts/core/libraries/FullMath.sol\":4454:4459  prod0 */\n      dup6\n        /* \"contracts/core/libraries/FullMath.sol\":4454:4465  prod0 * inv */\n      mul\n        /* \"contracts/core/libraries/FullMath.sol\":4445:4465  result = prod0 * inv */\n      swap6\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":4475:4488  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/core/libraries/FullMath.sol\":749:4495  function mulDiv(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_98:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":495:607  function toUint128(uint256 x) private pure returns (uint128 y) {\r... */\n    tag_97:\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":547:556  uint128 y */\n      0x00\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":597:598  x */\n      dup2\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":590:591  x */\n      dup3\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":578:592  y = uint128(x) */\n      swap2\n      pop\n      dup2\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":577:598  (y = uint128(x)) == x */\n      0xffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":569:599  require((y = uint128(x)) == x) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":495:607  function toUint128(uint256 x) private pure returns (uint128 y) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220072fccf7fabcc7231618fdab75cd381f093988f5f50134643cee20f778ebca2a64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052737cfc2da3ba598ef4de692905fedca32565ab836e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b50610e22806100756000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806311ea54411461005157806351c6590a14610085578063802036f5146100d9578063f29d00401461013e575b600080fd5b610059610196565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b16004803603602081101561009b57600080fd5b81019080803590602001909291905050506101ba565b60405180826fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61011b600480360360208110156100ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610224565b604051808360020b81526020018260020b81526020019250505060405180910390f35b6101806004803603602081101561015457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061038d565b6040518082815260200191505060405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060006101ea600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610224565b9150915060006101f9836107f1565b90506000610206836107f1565b90506000610215838389610c2c565b90508095505050505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561026f57600080fd5b505afa158015610283573d6000803e3d6000fd5b505050506040513d602081101561029957600080fd5b8101908080519060200190929190505050905060008473ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160c06040518083038186803b1580156102f457600080fd5b505afa158015610308573d6000803e3d6000fd5b505050506040513d60c081101561031e57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505050505050915050818260020b8260020b8161037857fe5b05029050818103935081810192505050915091565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610431576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f496e76616c696420706f6f6c206164647265737300000000000000000000000081525060200191505060405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561047957600080fd5b505afa15801561048d573d6000803e3d6000fd5b505050506040513d60208110156104a357600080fd5b8101908080519060200190929190505050905060008373ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156104fe57600080fd5b505afa158015610512573d6000803e3d6000fd5b505050506040513d602081101561052857600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156105a55750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c696420746f6b656e7300000000000000000000000000000000000081525060200191505060405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561065f57600080fd5b505afa158015610673573d6000803e3d6000fd5b505050506040513d602081101561068957600080fd5b8101908080519060200190929190505050905060008573ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160c06040518083038186803b1580156106e457600080fd5b505afa1580156106f8573d6000803e3d6000fd5b505050506040513d60c081101561070e57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050509150506000610763826107f1565b905060008173ffffffffffffffffffffffffffffffffffffffff16905060006107a982830260017801000000000000000000000000000000000000000000000000610cea565b9050600081116107ba5760006107ce565b6107cd670de0b6b3a76400008083610cea565b5b9750600c850160ff16600a0a88816107e257fe5b04975050505050505050919050565b60008060008360020b12610808578260020b610810565b8260020b6000035b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b8111156108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f540000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000806001831614156108d2577001000000000000000000000000000000006108e4565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506000600283161461091e5760806ffff97272373d413259a46990580e213a8202901c90505b600060048316146109435760806ffff2e50f5f656932ef12357cf3c7fdcc8202901c90505b600060088316146109685760806fffe5caca7e10e4e61c3624eaa0941cd08202901c90505b6000601083161461098d5760806fffcb9843d60f6159c9db58835c9266448202901c90505b600060208316146109b25760806fff973b41fa98c081472e6896dfb254c08202901c90505b600060408316146109d75760806fff2ea16466c96a3843ec78b326b528618202901c90505b600060808316146109fc5760806ffe5dee046a99a2a811c461f1969c30538202901c90505b6000610100831614610a225760806ffcbe86c7900a88aedcffc83b479aa3a48202901c90505b6000610200831614610a485760806ff987a7253ac413176f2b074cf7815e548202901c90505b6000610400831614610a6e5760806ff3392b0822b70005940c7a398e4b70f38202901c90505b6000610800831614610a945760806fe7159475a2c29b7443b29c7fa6e889d98202901c90505b6000611000831614610aba5760806fd097f3bdfd2022b8845ad8f792aa58258202901c90505b6000612000831614610ae05760806fa9f746462d870fdf8a65dc1f90e061e58202901c90505b6000614000831614610b065760806f70d869a156d2a1b890bb3df62baf32f78202901c90505b6000618000831614610b2c5760806f31be135f97d08fd981231505542fcfa68202901c90505b600062010000831614610b535760806f09aa508b5b7a84e1c677de54f3e99bc98202901c90505b600062020000831614610b795760806e5d6af8dedb81196699c329225ee6048202901c90505b600062040000831614610b9e5760806d2216e584f5fa1ea926041bedfe988202901c90505b600062080000831614610bc15760806b048a170391f7dc42444e8fa28202901c90505b60008460020b1315610bfa57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81610bf657fe5b0490505b60006401000000008281610c0a57fe5b0614610c17576001610c1a565b60005b60ff16602082901c0192505050919050565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115610c6d57828480945081955050505b6000610cb38573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000610cea565b9050610ce0610cdb848388880373ffffffffffffffffffffffffffffffffffffffff16610cea565b610dc4565b9150509392505050565b600080600080198587098587029250828110838203039150506000811415610d255760008411610d1957600080fd5b83820492505050610dbd565b808411610d3157600080fd5b600084868809905082811182039150808303925060008586600003169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b600081829150816fffffffffffffffffffffffffffffffff1614610de757600080fd5b91905056fea2646970667358221220072fccf7fabcc7231618fdab75cd381f093988f5f50134643cee20f778ebca2a64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x7CFC2DA3BA598EF4DE692905FEDCA32565AB836E PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE22 DUP1 PUSH2 0x75 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11EA5441 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x802036F5 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xF29D0040 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1EA PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x224 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x1F9 DUP4 PUSH2 0x7F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x206 DUP4 PUSH2 0x7F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x215 DUP4 DUP4 DUP10 PUSH2 0xC2C JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x283 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x308 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP POP SWAP2 POP POP DUP2 DUP3 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x378 JUMPI INVALID JUMPDEST SDIV MUL SWAP1 POP DUP2 DUP2 SUB SWAP4 POP DUP2 DUP2 ADD SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C696420706F6F6C2061646472657373000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x512 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5A5 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C696420746F6B656E73000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH2 0x763 DUP3 PUSH2 0x7F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x7A9 DUP3 DUP4 MUL PUSH1 0x1 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH2 0xCEA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x7BA JUMPI PUSH1 0x0 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x7CD PUSH8 0xDE0B6B3A7640000 DUP1 DUP4 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST SWAP8 POP PUSH1 0xC DUP6 ADD PUSH1 0xFF AND PUSH1 0xA EXP DUP9 DUP2 PUSH2 0x7E2 JUMPI INVALID JUMPDEST DIV SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x808 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x810 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x0 SUB PUSH1 0x2 SIGNEXTEND DUP2 GT ISZERO PUSH2 0x8AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 AND EQ ISZERO PUSH2 0x8D2 JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x8E4 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 AND EQ PUSH2 0x91E JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 AND EQ PUSH2 0x943 JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 AND EQ PUSH2 0x968 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 AND EQ PUSH2 0x98D JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 AND EQ PUSH2 0x9B2 JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 AND EQ PUSH2 0x9D7 JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 AND EQ PUSH2 0x9FC JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 AND EQ PUSH2 0xA22 JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP4 AND EQ PUSH2 0xA48 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP4 AND EQ PUSH2 0xA6E JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP4 AND EQ PUSH2 0xA94 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0xABA JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0xAE0 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0xB06 JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0xB2C JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0xB53 JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0xB79 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0xB9E JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0xBC1 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0xBFA JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH2 0xBF6 JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 DUP2 PUSH2 0xC0A JUMPI INVALID JUMPDEST MOD EQ PUSH2 0xC17 JUMPI PUSH1 0x1 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xC6D JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 PUSH2 0xCEA JUMP JUMPDEST SWAP1 POP PUSH2 0xCE0 PUSH2 0xCDB DUP5 DUP4 DUP9 DUP9 SUB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCEA JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xD25 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 DIV SWAP3 POP POP POP PUSH2 0xDBD JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0xD31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 DUP6 DUP7 PUSH1 0x0 SUB AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP3 SWAP2 POP DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0x2F 0xCC 0xF7 STATICCALL 0xBC 0xC7 0x23 AND XOR REVERT 0xAB PUSH22 0xCD381F093988F5F50134643CEE20F778EBCA2A64736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "1473:2073:2:-:0;;;3038:42;3022:58;;;;;;;;;;;;;;;;;;;;1473:2073;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806311ea54411461005157806351c6590a14610085578063802036f5146100d9578063f29d00401461013e575b600080fd5b610059610196565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b16004803603602081101561009b57600080fd5b81019080803590602001909291905050506101ba565b60405180826fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61011b600480360360208110156100ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610224565b604051808360020b81526020018260020b81526020019250505060405180910390f35b6101806004803603602081101561015457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061038d565b6040518082815260200191505060405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060006101ea600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610224565b9150915060006101f9836107f1565b90506000610206836107f1565b90506000610215838389610c2c565b90508095505050505050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561026f57600080fd5b505afa158015610283573d6000803e3d6000fd5b505050506040513d602081101561029957600080fd5b8101908080519060200190929190505050905060008473ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160c06040518083038186803b1580156102f457600080fd5b505afa158015610308573d6000803e3d6000fd5b505050506040513d60c081101561031e57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505050505050915050818260020b8260020b8161037857fe5b05029050818103935081810192505050915091565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610431576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f496e76616c696420706f6f6c206164647265737300000000000000000000000081525060200191505060405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561047957600080fd5b505afa15801561048d573d6000803e3d6000fd5b505050506040513d60208110156104a357600080fd5b8101908080519060200190929190505050905060008373ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156104fe57600080fd5b505afa158015610512573d6000803e3d6000fd5b505050506040513d602081101561052857600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156105a55750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c696420746f6b656e7300000000000000000000000000000000000081525060200191505060405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561065f57600080fd5b505afa158015610673573d6000803e3d6000fd5b505050506040513d602081101561068957600080fd5b8101908080519060200190929190505050905060008573ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160c06040518083038186803b1580156106e457600080fd5b505afa1580156106f8573d6000803e3d6000fd5b505050506040513d60c081101561070e57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050505050509150506000610763826107f1565b905060008173ffffffffffffffffffffffffffffffffffffffff16905060006107a982830260017801000000000000000000000000000000000000000000000000610cea565b9050600081116107ba5760006107ce565b6107cd670de0b6b3a76400008083610cea565b5b9750600c850160ff16600a0a88816107e257fe5b04975050505050505050919050565b60008060008360020b12610808578260020b610810565b8260020b6000035b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b8111156108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f540000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000806001831614156108d2577001000000000000000000000000000000006108e4565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506000600283161461091e5760806ffff97272373d413259a46990580e213a8202901c90505b600060048316146109435760806ffff2e50f5f656932ef12357cf3c7fdcc8202901c90505b600060088316146109685760806fffe5caca7e10e4e61c3624eaa0941cd08202901c90505b6000601083161461098d5760806fffcb9843d60f6159c9db58835c9266448202901c90505b600060208316146109b25760806fff973b41fa98c081472e6896dfb254c08202901c90505b600060408316146109d75760806fff2ea16466c96a3843ec78b326b528618202901c90505b600060808316146109fc5760806ffe5dee046a99a2a811c461f1969c30538202901c90505b6000610100831614610a225760806ffcbe86c7900a88aedcffc83b479aa3a48202901c90505b6000610200831614610a485760806ff987a7253ac413176f2b074cf7815e548202901c90505b6000610400831614610a6e5760806ff3392b0822b70005940c7a398e4b70f38202901c90505b6000610800831614610a945760806fe7159475a2c29b7443b29c7fa6e889d98202901c90505b6000611000831614610aba5760806fd097f3bdfd2022b8845ad8f792aa58258202901c90505b6000612000831614610ae05760806fa9f746462d870fdf8a65dc1f90e061e58202901c90505b6000614000831614610b065760806f70d869a156d2a1b890bb3df62baf32f78202901c90505b6000618000831614610b2c5760806f31be135f97d08fd981231505542fcfa68202901c90505b600062010000831614610b535760806f09aa508b5b7a84e1c677de54f3e99bc98202901c90505b600062020000831614610b795760806e5d6af8dedb81196699c329225ee6048202901c90505b600062040000831614610b9e5760806d2216e584f5fa1ea926041bedfe988202901c90505b600062080000831614610bc15760806b048a170391f7dc42444e8fa28202901c90505b60008460020b1315610bfa57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81610bf657fe5b0490505b60006401000000008281610c0a57fe5b0614610c17576001610c1a565b60005b60ff16602082901c0192505050919050565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161115610c6d57828480945081955050505b6000610cb38573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000610cea565b9050610ce0610cdb848388880373ffffffffffffffffffffffffffffffffffffffff16610cea565b610dc4565b9150509392505050565b600080600080198587098587029250828110838203039150506000811415610d255760008411610d1957600080fd5b83820492505050610dbd565b808411610d3157600080fd5b600084868809905082811182039150808303925060008586600003169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b600081829150816fffffffffffffffffffffffffffffffff1614610de757600080fd5b91905056fea2646970667358221220072fccf7fabcc7231618fdab75cd381f093988f5f50134643cee20f778ebca2a64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x11EA5441 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x802036F5 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xF29D0040 EQ PUSH2 0x13E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1EA PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x224 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x1F9 DUP4 PUSH2 0x7F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x206 DUP4 PUSH2 0x7F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x215 DUP4 DUP4 DUP10 PUSH2 0xC2C JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x283 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x308 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP POP SWAP2 POP POP DUP2 DUP3 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x378 JUMPI INVALID JUMPDEST SDIV MUL SWAP1 POP DUP2 DUP2 SUB SWAP4 POP DUP2 DUP2 ADD SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C696420706F6F6C2061646472657373000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x512 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5A5 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E76616C696420746F6B656E73000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x673 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x70E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH2 0x763 DUP3 PUSH2 0x7F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x7A9 DUP3 DUP4 MUL PUSH1 0x1 PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH2 0xCEA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x7BA JUMPI PUSH1 0x0 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x7CD PUSH8 0xDE0B6B3A7640000 DUP1 DUP4 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST SWAP8 POP PUSH1 0xC DUP6 ADD PUSH1 0xFF AND PUSH1 0xA EXP DUP9 DUP2 PUSH2 0x7E2 JUMPI INVALID JUMPDEST DIV SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x808 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x810 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x0 SUB PUSH1 0x2 SIGNEXTEND DUP2 GT ISZERO PUSH2 0x8AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 AND EQ ISZERO PUSH2 0x8D2 JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x8E4 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 AND EQ PUSH2 0x91E JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 AND EQ PUSH2 0x943 JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 AND EQ PUSH2 0x968 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 AND EQ PUSH2 0x98D JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 AND EQ PUSH2 0x9B2 JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 AND EQ PUSH2 0x9D7 JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 AND EQ PUSH2 0x9FC JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 AND EQ PUSH2 0xA22 JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP4 AND EQ PUSH2 0xA48 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP4 AND EQ PUSH2 0xA6E JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP4 AND EQ PUSH2 0xA94 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0xABA JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0xAE0 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0xB06 JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0xB2C JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0xB53 JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0xB79 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0xB9E JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0xBC1 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0xBFA JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH2 0xBF6 JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 DUP2 PUSH2 0xC0A JUMPI INVALID JUMPDEST MOD EQ PUSH2 0xC17 JUMPI PUSH1 0x1 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xC6D JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 PUSH2 0xCEA JUMP JUMPDEST SWAP1 POP PUSH2 0xCE0 PUSH2 0xCDB DUP5 DUP4 DUP9 DUP9 SUB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCEA JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xD25 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 DIV SWAP3 POP POP POP PUSH2 0xDBD JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0xD31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 DUP6 DUP7 PUSH1 0x0 SUB AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP3 SWAP2 POP DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0x2F 0xCC 0xF7 STATICCALL 0xBC 0xC7 0x23 AND XOR REVERT 0xAB PUSH22 0xCD381F093988F5F50134643CEE20F778EBCA2A64736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "1473:2073:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1498:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3083:460;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2595:423;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:1053;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1498:33;;;;;;;;;;;;:::o;3083:460::-;3149:7;3203:15;3219;3238;3247:5;;;;;;;;;;;3238:8;:15::i;:::-;3202:51;;;;3262:22;3287:38;3315:9;3287:27;:38::i;:::-;3262:63;;3332:22;3357:38;3385:9;3357:27;:38::i;:::-;3332:63;;3408:17;3428:86;3468:14;3484;3500:13;3428:39;:86::i;:::-;3408:106;;3530:9;3523:16;;;;;;;3083:460;;;:::o;2595:423::-;2649:13;2664:14;2690:17;2727:4;2710:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:56;;2760:17;2797:4;2789:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2757:53;;;;;;;2865:11;2850;2836:25;;:11;:25;;;;;;;;2835:41;2821:55;;2911:11;2897;:25;2887:35;;2958:11;2944;:25;2933:36;;2980:26;;2595:423;;;:::o;1538:1053::-;1591:13;1637:1;1621:18;;:4;:18;;;;1613:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:14;1737:4;1720:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1703:48;;1758:14;1792:4;1775:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1758:48;;1839:1;1821:20;;:6;:20;;;;:44;;;;;1863:1;1845:20;;:6;:20;;;;1821:44;1813:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:10;1970:6;1963:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:38;;2039:10;2074:4;2061:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2036:51;;;;;;;2119:20;2142:33;2170:4;2142:27;:33::i;:::-;2119:56;;2182:17;2210:12;2202:21;;2182:41;;2283:16;2302:49;2330:9;2318;:21;2341:1;2344:6;2302:15;:49::i;:::-;2283:68;;2379:1;2368:8;:12;:60;;2427:1;2368:60;;;2383:41;2399:6;2407;2415:8;2383:15;:41::i;:::-;2368:60;2360:68;;2560:2;2553:4;:9;2546:17;;:2;:17;2537:5;:27;;;;;;2529:35;;2573:14;;;;;;;1538:1053;;;:::o;1362:2580:24:-;1425:20;1457:15;1482:1;1475:4;:8;;;:57;;1526:4;1519:12;;1475:57;;;1502:4;1495:12;;1494:13;;1475:57;1457:75;;484:7;644:9;;1561:17;;1550:7;:28;;1542:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:13;1628:1;1621:3;1611:7;:13;:18;;:93;;1669:35;1611:93;;;1632:34;1611:93;1595:109;;;;1735:1;1728:3;1718:7;:13;:18;1714:83;;1794:3;1755:34;1747:5;:42;1746:51;;1738:59;;1714:83;1828:1;1821:3;1811:7;:13;:18;1807:83;;1887:3;1848:34;1840:5;:42;1839:51;;1831:59;;1807:83;1921:1;1914:3;1904:7;:13;:18;1900:83;;1980:3;1941:34;1933:5;:42;1932:51;;1924:59;;1900:83;2015:1;2007:4;1997:7;:14;:19;1993:84;;2074:3;2035:34;2027:5;:42;2026:51;;2018:59;;1993:84;2109:1;2101:4;2091:7;:14;:19;2087:84;;2168:3;2129:34;2121:5;:42;2120:51;;2112:59;;2087:84;2203:1;2195:4;2185:7;:14;:19;2181:84;;2262:3;2223:34;2215:5;:42;2214:51;;2206:59;;2181:84;2297:1;2289:4;2279:7;:14;:19;2275:84;;2356:3;2317:34;2309:5;:42;2308:51;;2300:59;;2275:84;2392:1;2383:5;2373:7;:15;:20;2369:85;;2451:3;2412:34;2404:5;:42;2403:51;;2395:59;;2369:85;2487:1;2478:5;2468:7;:15;:20;2464:85;;2546:3;2507:34;2499:5;:42;2498:51;;2490:59;;2464:85;2582:1;2573:5;2563:7;:15;:20;2559:85;;2641:3;2602:34;2594:5;:42;2593:51;;2585:59;;2559:85;2677:1;2668:5;2658:7;:15;:20;2654:85;;2736:3;2697:34;2689:5;:42;2688:51;;2680:59;;2654:85;2773:1;2763:6;2753:7;:16;:21;2749:86;;2832:3;2793:34;2785:5;:42;2784:51;;2776:59;;2749:86;2869:1;2859:6;2849:7;:16;:21;2845:86;;2928:3;2889:34;2881:5;:42;2880:51;;2872:59;;2845:86;2965:1;2955:6;2945:7;:16;:21;2941:86;;3024:3;2985:34;2977:5;:42;2976:51;;2968:59;;2941:86;3061:1;3051:6;3041:7;:16;:21;3037:86;;3120:3;3081:34;3073:5;:42;3072:51;;3064:59;;3037:86;3158:1;3147:7;3137;:17;:22;3133:86;;3216:3;3178:33;3170:5;:41;3169:50;;3161:58;;3133:86;3254:1;3243:7;3233;:17;:22;3229:85;;3311:3;3274:32;3266:5;:40;3265:49;;3257:57;;3229:85;3349:1;3338:7;3328;:17;:22;3324:83;;3404:3;3369:30;3361:5;:38;3360:47;;3352:55;;3324:83;3442:1;3431:7;3421;:17;:22;3417:78;;3492:3;3462:25;3454:5;:33;3453:42;;3445:50;;3417:78;3517:1;3510:4;:8;;;3506:47;;;3548:5;3528:17;:25;;;;;;3520:33;;3506:47;3924:1;3912:7;3903:5;:17;;;;;;:22;:30;;3932:1;3903:30;;;3928:1;3903:30;3886:48;;3896:2;3887:5;:11;;3886:48;3863:72;;1362:2580;;;;;:::o;1083:481:15:-;1228:17;1283:13;1267:29;;:13;:29;;;1263:98;;;1332:13;1347;1298:63;;;;;;;;1263:98;1372:20;1395:63;1411:13;1395:63;;1426:13;1395:63;;349:27:13;1395:15:15;:63::i;:::-;1372:86;;1476:80;1486:69;1502:7;1511:12;1541:13;1525;:29;1486:69;;:15;:69::i;:::-;1476:9;:80::i;:::-;1469:87;;;1083:481;;;;;:::o;749:3746:14:-;831:14;1160:13;1228;1345:1;1341:6;1338:1;1335;1328:20;1377:1;1374;1370:9;1361:18;;1428:5;1424:2;1421:13;1413:5;1409:2;1405:14;1401:34;1392:43;;1304:141;1526:1;1517:5;:10;1513:179;;;1565:1;1551:11;:15;1543:24;;;;;;1629:11;1622:5;1618:23;1608:33;;1668:13;;;;1513:179;1819:5;1805:11;:19;1797:28;;;;;;2102:17;2178:11;2175:1;2172;2165:25;2152:38;;2321:5;2310:9;2307:20;2300:5;2296:32;2287:41;;2361:9;2354:5;2350:21;2341:30;;2530:12;2560:11;2546;2545:12;;:26;2530:41;;2682:4;2669:11;2665:22;2650:37;;2804:4;2797:5;2793:16;2784:25;;3058:1;3051:4;3044;3041:1;3037:12;3033:23;3029:31;3021:39;;3096:4;3088:5;:12;3079:21;;;;3434:11;3468:1;3453:11;3449:1;:15;3448:21;3434:35;;3709:3;3695:11;:17;3691:1;:21;3684:28;;;;3767:3;3753:11;:17;3749:1;:21;3742:28;;;;3826:3;3812:11;:17;3808:1;:21;3801:28;;;;3885:3;3871:11;:17;3867:1;:21;3860:28;;;;3944:3;3930:11;:17;3926:1;:21;3919:28;;;;4004:3;3990:11;:17;3986:1;:21;3979:28;;;;4462:3;4454:5;:11;4445:20;;4475:13;;;;;749:3746;;;;;;:::o;495:112:15:-;547:9;597:1;590;578:14;;;577:21;;;569:30;;;;;;495:112;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "723600",
								"executionCost": "21627",
								"totalCost": "745227"
							},
							"external": {
								"GetPrice(address)": "infinite",
								"V3Pool()": "1022",
								"addLiquidity(uint256)": "infinite",
								"getTicks(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1473,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3038,
									"end": 3080,
									"name": "PUSH",
									"source": 2,
									"value": "7CFC2DA3BA598EF4DE692905FEDCA32565AB836E"
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3022,
									"end": 3080,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1473,
									"end": 3546,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220072fccf7fabcc7231618fdab75cd381f093988f5f50134643cee20f778ebca2a64736f6c63430007060033",
									".code": [
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "11EA5441"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "51C6590A"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "802036F5"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "F29D0040"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 3546,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1531,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3247,
											"end": 3252,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3238,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3238,
											"end": 3253,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3238,
											"end": 3253,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3238,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3262,
											"end": 3284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3324,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3287,
											"end": 3325,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3287,
											"end": 3325,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3262,
											"end": 3325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3262,
											"end": 3325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3385,
											"end": 3394,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3357,
											"end": 3395,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3357,
											"end": 3395,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3357,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3468,
											"end": 3482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3484,
											"end": 3498,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3500,
											"end": 3513,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 3428,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3428,
											"end": 3514,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3428,
											"end": 3514,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3428,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3539,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3543,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2707,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2731,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2744,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2744,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2744,
											"name": "PUSH",
											"source": 2,
											"value": "D0C93A7C"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2801,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2808,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "3850C7BD"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2876,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2861,
											"name": "SDIV",
											"source": 2
										},
										{
											"begin": 2835,
											"end": 2876,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2922,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2922,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2969,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2595,
											"end": 3018,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1639,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1639,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1639,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1639,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1639,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1639,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "PUSH",
											"source": 2,
											"value": "496E76616C696420706F6F6C2061646472657373000000000000000000000000"
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1613,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1749,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1749,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1749,
											"name": "PUSH",
											"source": 2,
											"value": "DFE1681"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1775,
											"end": 1804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "D21220A7"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1841,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1821,
											"end": 1841,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1841,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1821,
											"end": 1841,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1841,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1841,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1821,
											"end": 1865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1865,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1821,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "496E76616C696420746F6B656E73000000000000000000000000000000000000"
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1813,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1976,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1986,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1963,
											"end": 1986,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1986,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1963,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2078,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2061,
											"end": 2085,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2085,
											"name": "PUSH",
											"source": 2,
											"value": "3850C7BD"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2170,
											"end": 2174,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2142,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2142,
											"end": 2175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2175,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2142,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2283,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2327,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2339,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2342,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2344,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2302,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2302,
											"end": 2351,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2351,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2302,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2283,
											"end": 2351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2283,
											"end": 2351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2379,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2368,
											"end": 2428,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2368,
											"end": 2428,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2368,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2423,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2383,
											"end": 2424,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2383,
											"end": 2424,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2383,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2368,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2360,
											"end": 2428,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 2360,
											"end": 2428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2548,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2542,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2537,
											"end": 2564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2564,
											"name": "INVALID",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2564,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2537,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2564,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2529,
											"end": 2564,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 2529,
											"end": 2564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "tag",
											"source": 24,
											"value": "21"
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1425,
											"end": 1445,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1472,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1482,
											"end": 1483,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1479,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "SIGNEXTEND",
											"source": 24
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "SLT",
											"source": 24
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "63"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1526,
											"end": 1530,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "SIGNEXTEND",
											"source": 24
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "64"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "tag",
											"source": 24,
											"value": "63"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1502,
											"end": 1506,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "SIGNEXTEND",
											"source": 24
										},
										{
											"begin": 1494,
											"end": 1507,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1507,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "tag",
											"source": 24,
											"value": "64"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1457,
											"end": 1532,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1457,
											"end": 1532,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 484,
											"end": 491,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 644,
											"end": 653,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 653,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1561,
											"end": 1578,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 1561,
											"end": 1578,
											"name": "SIGNEXTEND",
											"source": 24
										},
										{
											"begin": 1550,
											"end": 1557,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1550,
											"end": 1578,
											"name": "GT",
											"source": 24
										},
										{
											"begin": 1550,
											"end": 1578,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "65"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 24,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 24,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MLOAD",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SUB",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "REVERT",
											"source": 24
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "tag",
											"source": 24,
											"value": "65"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 1621,
											"end": 1624,
											"name": "PUSH",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 1611,
											"end": 1618,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1611,
											"end": 1624,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1611,
											"end": 1629,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 1611,
											"end": 1629,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "66"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1669,
											"end": 1704,
											"name": "PUSH",
											"source": 24,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "67"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "tag",
											"source": 24,
											"value": "66"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1632,
											"end": 1666,
											"name": "PUSH",
											"source": 24,
											"value": "FFFCB933BD6FAD37AA2D162D1A594001"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "tag",
											"source": 24,
											"value": "67"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1731,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1718,
											"end": 1731,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "68"
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1794,
											"end": 1797,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 1755,
											"end": 1789,
											"name": "PUSH",
											"source": 24,
											"value": "FFF97272373D413259A46990580E213A"
										},
										{
											"begin": 1747,
											"end": 1752,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 1746,
											"end": 1797,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1746,
											"end": 1797,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 1738,
											"end": 1797,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1738,
											"end": 1797,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "tag",
											"source": 24,
											"value": "68"
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1824,
											"name": "PUSH",
											"source": 24,
											"value": "4"
										},
										{
											"begin": 1811,
											"end": 1818,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "69"
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 1848,
											"end": 1882,
											"name": "PUSH",
											"source": 24,
											"value": "FFF2E50F5F656932EF12357CF3C7FDCC"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1840,
											"end": 1882,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "tag",
											"source": 24,
											"value": "69"
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 1921,
											"end": 1922,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "PUSH",
											"source": 24,
											"value": "8"
										},
										{
											"begin": 1904,
											"end": 1911,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1904,
											"end": 1917,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1904,
											"end": 1922,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "70"
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 1980,
											"end": 1983,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 1941,
											"end": 1975,
											"name": "PUSH",
											"source": 24,
											"value": "FFE5CACA7E10E4E61C3624EAA0941CD0"
										},
										{
											"begin": 1933,
											"end": 1938,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 1933,
											"end": 1975,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 1932,
											"end": 1983,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1932,
											"end": 1983,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 1924,
											"end": 1983,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1924,
											"end": 1983,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "tag",
											"source": 24,
											"value": "70"
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2011,
											"name": "PUSH",
											"source": 24,
											"value": "10"
										},
										{
											"begin": 1997,
											"end": 2004,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 1997,
											"end": 2011,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "71"
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2074,
											"end": 2077,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2035,
											"end": 2069,
											"name": "PUSH",
											"source": 24,
											"value": "FFCB9843D60F6159C9DB58835C926644"
										},
										{
											"begin": 2027,
											"end": 2032,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2027,
											"end": 2069,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 2026,
											"end": 2077,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2026,
											"end": 2077,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 2018,
											"end": 2077,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2018,
											"end": 2077,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "tag",
											"source": 24,
											"value": "71"
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2109,
											"end": 2110,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2098,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2091,
											"end": 2105,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "72"
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2168,
											"end": 2171,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2129,
											"end": 2163,
											"name": "PUSH",
											"source": 24,
											"value": "FF973B41FA98C081472E6896DFB254C0"
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2121,
											"end": 2163,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 2120,
											"end": 2171,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2120,
											"end": 2171,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 2112,
											"end": 2171,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2112,
											"end": 2171,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "tag",
											"source": 24,
											"value": "72"
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2199,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2192,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2185,
											"end": 2204,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "73"
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "PUSH",
											"source": 24,
											"value": "FF2EA16466C96A3843EC78B326B52861"
										},
										{
											"begin": 2215,
											"end": 2220,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2215,
											"end": 2257,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 2214,
											"end": 2265,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2214,
											"end": 2265,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 2206,
											"end": 2265,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2206,
											"end": 2265,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "tag",
											"source": 24,
											"value": "73"
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2297,
											"end": 2298,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2279,
											"end": 2286,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2279,
											"end": 2293,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2279,
											"end": 2298,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "74"
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2356,
											"end": 2359,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2317,
											"end": 2351,
											"name": "PUSH",
											"source": 24,
											"value": "FE5DEE046A99A2A811C461F1969C3053"
										},
										{
											"begin": 2309,
											"end": 2314,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2309,
											"end": 2351,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 2308,
											"end": 2359,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2308,
											"end": 2359,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 2300,
											"end": 2359,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2300,
											"end": 2359,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "tag",
											"source": 24,
											"value": "74"
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "PUSH",
											"source": 24,
											"value": "100"
										},
										{
											"begin": 2373,
											"end": 2380,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2373,
											"end": 2388,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2373,
											"end": 2393,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "75"
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2451,
											"end": 2454,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "PUSH",
											"source": 24,
											"value": "FCBE86C7900A88AEDCFFC83B479AA3A4"
										},
										{
											"begin": 2404,
											"end": 2409,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2404,
											"end": 2446,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 2403,
											"end": 2454,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2403,
											"end": 2454,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 2395,
											"end": 2454,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2395,
											"end": 2454,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "tag",
											"source": 24,
											"value": "75"
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2483,
											"name": "PUSH",
											"source": 24,
											"value": "200"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2468,
											"end": 2483,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2468,
											"end": 2488,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "76"
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH",
											"source": 24,
											"value": "F987A7253AC413176F2B074CF7815E54"
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2499,
											"end": 2541,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 2498,
											"end": 2549,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2498,
											"end": 2549,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "tag",
											"source": 24,
											"value": "76"
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "PUSH",
											"source": 24,
											"value": "400"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "77"
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2641,
											"end": 2644,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2602,
											"end": 2636,
											"name": "PUSH",
											"source": 24,
											"value": "F3392B0822B70005940C7A398E4B70F3"
										},
										{
											"begin": 2594,
											"end": 2599,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2594,
											"end": 2636,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 2585,
											"end": 2644,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2585,
											"end": 2644,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "tag",
											"source": 24,
											"value": "77"
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "PUSH",
											"source": 24,
											"value": "800"
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2658,
											"end": 2673,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "78"
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2736,
											"end": 2739,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2697,
											"end": 2731,
											"name": "PUSH",
											"source": 24,
											"value": "E7159475A2C29B7443B29C7FA6E889D9"
										},
										{
											"begin": 2689,
											"end": 2694,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2689,
											"end": 2731,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 2688,
											"end": 2739,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2688,
											"end": 2739,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 2680,
											"end": 2739,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2680,
											"end": 2739,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "tag",
											"source": 24,
											"value": "78"
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 24,
											"value": "1000"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2753,
											"end": 2769,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2753,
											"end": 2774,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "79"
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2832,
											"end": 2835,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2793,
											"end": 2827,
											"name": "PUSH",
											"source": 24,
											"value": "D097F3BDFD2022B8845AD8F792AA5825"
										},
										{
											"begin": 2785,
											"end": 2790,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2785,
											"end": 2827,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 2784,
											"end": 2835,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2784,
											"end": 2835,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 2776,
											"end": 2835,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2776,
											"end": 2835,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "tag",
											"source": 24,
											"value": "79"
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "PUSH",
											"source": 24,
											"value": "2000"
										},
										{
											"begin": 2849,
											"end": 2856,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2849,
											"end": 2865,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 2928,
											"end": 2931,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "PUSH",
											"source": 24,
											"value": "A9F746462D870FDF8A65DC1F90E061E5"
										},
										{
											"begin": 2881,
											"end": 2886,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2881,
											"end": 2923,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 2872,
											"end": 2931,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2872,
											"end": 2931,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "tag",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "PUSH",
											"source": 24,
											"value": "4000"
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 2945,
											"end": 2961,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 2945,
											"end": 2966,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "81"
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 2985,
											"end": 3019,
											"name": "PUSH",
											"source": 24,
											"value": "70D869A156D2A1B890BB3DF62BAF32F7"
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 2977,
											"end": 3019,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 2968,
											"end": 3027,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 2968,
											"end": 3027,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "tag",
											"source": 24,
											"value": "81"
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3061,
											"end": 3062,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3057,
											"name": "PUSH",
											"source": 24,
											"value": "8000"
										},
										{
											"begin": 3041,
											"end": 3048,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 3041,
											"end": 3057,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 3041,
											"end": 3062,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "82"
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3120,
											"end": 3123,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "PUSH",
											"source": 24,
											"value": "31BE135F97D08FD981231505542FCFA6"
										},
										{
											"begin": 3073,
											"end": 3078,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3073,
											"end": 3115,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 3072,
											"end": 3123,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3072,
											"end": 3123,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "tag",
											"source": 24,
											"value": "82"
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3158,
											"end": 3159,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3154,
											"name": "PUSH",
											"source": 24,
											"value": "10000"
										},
										{
											"begin": 3137,
											"end": 3144,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 3137,
											"end": 3154,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 3137,
											"end": 3159,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "83"
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 3178,
											"end": 3211,
											"name": "PUSH",
											"source": 24,
											"value": "9AA508B5B7A84E1C677DE54F3E99BC9"
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3170,
											"end": 3211,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 3169,
											"end": 3219,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3169,
											"end": 3219,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 3161,
											"end": 3219,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3161,
											"end": 3219,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "tag",
											"source": 24,
											"value": "83"
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3250,
											"name": "PUSH",
											"source": 24,
											"value": "20000"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 3233,
											"end": 3250,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 3233,
											"end": 3255,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "84"
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3311,
											"end": 3314,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 3274,
											"end": 3306,
											"name": "PUSH",
											"source": 24,
											"value": "5D6AF8DEDB81196699C329225EE604"
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3266,
											"end": 3306,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 3265,
											"end": 3314,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3265,
											"end": 3314,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 3257,
											"end": 3314,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3257,
											"end": 3314,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "tag",
											"source": 24,
											"value": "84"
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "PUSH",
											"source": 24,
											"value": "40000"
										},
										{
											"begin": 3328,
											"end": 3335,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 3328,
											"end": 3345,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "85"
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3404,
											"end": 3407,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 3369,
											"end": 3399,
											"name": "PUSH",
											"source": 24,
											"value": "2216E584F5FA1EA926041BEDFE98"
										},
										{
											"begin": 3361,
											"end": 3366,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3361,
											"end": 3399,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 3360,
											"end": 3407,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3360,
											"end": 3407,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 3352,
											"end": 3407,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3352,
											"end": 3407,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "tag",
											"source": 24,
											"value": "85"
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3438,
											"name": "PUSH",
											"source": 24,
											"value": "80000"
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "DUP4",
											"source": 24
										},
										{
											"begin": 3421,
											"end": 3438,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 3421,
											"end": 3443,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "86"
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "PUSH",
											"source": 24,
											"value": "48A170391F7DC42444E8FA2"
										},
										{
											"begin": 3454,
											"end": 3459,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3454,
											"end": 3487,
											"name": "MUL",
											"source": 24
										},
										{
											"begin": 3453,
											"end": 3495,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3453,
											"end": 3495,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 3445,
											"end": 3495,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3445,
											"end": 3495,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "tag",
											"source": 24,
											"value": "86"
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3514,
											"name": "DUP5",
											"source": 24
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "PUSH",
											"source": 24,
											"value": "2"
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "SIGNEXTEND",
											"source": 24
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "SGT",
											"source": 24
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "ISZERO",
											"source": 24
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "87"
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "PUSH",
											"source": 24,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "88"
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "INVALID",
											"source": 24
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "tag",
											"source": 24,
											"value": "88"
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "DIV",
											"source": 24
										},
										{
											"begin": 3520,
											"end": 3553,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3520,
											"end": 3553,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "tag",
											"source": 24,
											"value": "87"
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3919,
											"name": "PUSH",
											"source": 24,
											"value": "100000000"
										},
										{
											"begin": 3903,
											"end": 3908,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "DUP2",
											"source": 24
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "89"
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "INVALID",
											"source": 24
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "tag",
											"source": 24,
											"value": "89"
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "MOD",
											"source": 24
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "90"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPI",
											"source": 24
										},
										{
											"begin": 3932,
											"end": 3933,
											"name": "PUSH",
											"source": 24,
											"value": "1"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 24,
											"value": "91"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMP",
											"source": 24
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "tag",
											"source": 24,
											"value": "90"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3928,
											"end": 3929,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "tag",
											"source": 24,
											"value": "91"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 24
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "PUSH",
											"source": 24,
											"value": "FF"
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "AND",
											"source": 24
										},
										{
											"begin": 3896,
											"end": 3898,
											"name": "PUSH",
											"source": 24,
											"value": "20"
										},
										{
											"begin": 3887,
											"end": 3892,
											"name": "DUP3",
											"source": 24
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SHR",
											"source": 24
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "ADD",
											"source": 24
										},
										{
											"begin": 3863,
											"end": 3935,
											"name": "SWAP3",
											"source": 24
										},
										{
											"begin": 3863,
											"end": 3935,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "SWAP2",
											"source": 24
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "SWAP1",
											"source": 24
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 24
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "JUMP",
											"source": 24,
											"value": "[out]"
										},
										{
											"begin": 1083,
											"end": 1564,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 1083,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1228,
											"end": 1245,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1267,
											"end": 1296,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1267,
											"end": 1296,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1267,
											"end": 1280,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1267,
											"end": 1296,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1267,
											"end": 1296,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1267,
											"end": 1296,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1263,
											"end": 1361,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1263,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 1263,
											"end": 1361,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1347,
											"end": 1360,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1298,
											"end": 1361,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1298,
											"end": 1361,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 1298,
											"end": 1361,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1298,
											"end": 1361,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1298,
											"end": 1361,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 1298,
											"end": 1361,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1298,
											"end": 1361,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1298,
											"end": 1361,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1263,
											"end": 1361,
											"name": "tag",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 1263,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1372,
											"end": 1392,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 1411,
											"end": 1424,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1439,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 349,
											"end": 376,
											"name": "PUSH",
											"source": 13,
											"value": "1000000000000000000000000"
										},
										{
											"begin": 1395,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "tag",
											"source": 15,
											"value": "94"
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1372,
											"end": 1458,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1372,
											"end": 1458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1476,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 1486,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 1502,
											"end": 1509,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1541,
											"end": 1554,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1525,
											"end": 1538,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 1525,
											"end": 1554,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1486,
											"end": 1555,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1486,
											"end": 1555,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1486,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 1486,
											"end": 1555,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1486,
											"end": 1555,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 1486,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1476,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 1476,
											"end": 1556,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 1476,
											"end": 1556,
											"name": "tag",
											"source": 15,
											"value": "95"
										},
										{
											"begin": 1476,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1556,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1469,
											"end": 1556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1083,
											"end": 1564,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 1083,
											"end": 1564,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1083,
											"end": 1564,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1083,
											"end": 1564,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1083,
											"end": 1564,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1083,
											"end": 1564,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 831,
											"end": 845,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1173,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1228,
											"end": 1241,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1346,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1338,
											"end": 1339,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "MULMOD",
											"source": 14
										},
										{
											"begin": 1377,
											"end": 1378,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1374,
											"end": 1375,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1361,
											"end": 1379,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1433,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1434,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1409,
											"end": 1411,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1405,
											"end": 1419,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1401,
											"end": 1435,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1392,
											"end": 1435,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1304,
											"end": 1445,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1526,
											"end": 1527,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1522,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1517,
											"end": 1527,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1692,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 1513,
											"end": 1692,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1565,
											"end": 1566,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1562,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1551,
											"end": 1566,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "tag",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1543,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1622,
											"end": 1627,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1618,
											"end": 1641,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1608,
											"end": 1641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1692,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 1513,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1824,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1816,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1824,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2189,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2175,
											"end": 2176,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2172,
											"end": 2173,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2165,
											"end": 2190,
											"name": "MULMOD",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2190,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2190,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2321,
											"end": 2326,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2319,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2300,
											"end": 2305,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2296,
											"end": 2328,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2287,
											"end": 2328,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2287,
											"end": 2328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2361,
											"end": 2370,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2354,
											"end": 2359,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2350,
											"end": 2371,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2341,
											"end": 2371,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2341,
											"end": 2371,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2542,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2571,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2546,
											"end": 2557,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2545,
											"end": 2557,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2557,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2545,
											"end": 2571,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2571,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2571,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2682,
											"end": 2686,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2669,
											"end": 2680,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2665,
											"end": 2687,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2687,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2687,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2804,
											"end": 2808,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2797,
											"end": 2802,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2793,
											"end": 2809,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 2784,
											"end": 2809,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2784,
											"end": 2809,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3058,
											"end": 3059,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3051,
											"end": 3055,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3044,
											"end": 3048,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3041,
											"end": 3042,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3049,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3033,
											"end": 3056,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3029,
											"end": 3060,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3021,
											"end": 3060,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3021,
											"end": 3060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3096,
											"end": 3100,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3088,
											"end": 3093,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3100,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3100,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3100,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3079,
											"end": 3100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3434,
											"end": 3445,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3453,
											"end": 3464,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3449,
											"end": 3450,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3449,
											"end": 3464,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3448,
											"end": 3469,
											"name": "XOR",
											"source": 14
										},
										{
											"begin": 3434,
											"end": 3469,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3434,
											"end": 3469,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3709,
											"end": 3712,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3695,
											"end": 3706,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3695,
											"end": 3712,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3691,
											"end": 3712,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3684,
											"end": 3712,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3684,
											"end": 3712,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3684,
											"end": 3712,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3684,
											"end": 3712,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3767,
											"end": 3770,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 3764,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 3770,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3749,
											"end": 3750,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3749,
											"end": 3770,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3742,
											"end": 3770,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3742,
											"end": 3770,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3742,
											"end": 3770,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3742,
											"end": 3770,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3826,
											"end": 3829,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3812,
											"end": 3823,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3812,
											"end": 3829,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3808,
											"end": 3809,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3808,
											"end": 3829,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3829,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3829,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3829,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3829,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3885,
											"end": 3888,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3871,
											"end": 3882,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3871,
											"end": 3888,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3867,
											"end": 3888,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3860,
											"end": 3888,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3944,
											"end": 3947,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3930,
											"end": 3941,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3930,
											"end": 3947,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3926,
											"end": 3927,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3926,
											"end": 3947,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3947,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3947,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3947,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 3947,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4004,
											"end": 4007,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4007,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3986,
											"end": 4007,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3979,
											"end": 4007,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3979,
											"end": 4007,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3979,
											"end": 4007,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3979,
											"end": 4007,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4462,
											"end": 4465,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4454,
											"end": 4459,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4454,
											"end": 4465,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4445,
											"end": 4465,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4475,
											"end": 4488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4475,
											"end": 4488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4475,
											"end": 4488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4475,
											"end": 4488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4475,
											"end": 4488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "tag",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 749,
											"end": 4495,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 495,
											"end": 607,
											"name": "tag",
											"source": 15,
											"value": "97"
										},
										{
											"begin": 495,
											"end": 607,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 547,
											"end": 556,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 590,
											"end": 591,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 578,
											"end": 592,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 578,
											"end": 592,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 578,
											"end": 592,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 577,
											"end": 598,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 598,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 577,
											"end": 598,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 569,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 569,
											"end": 599,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 569,
											"end": 599,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 599,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 569,
											"end": 599,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 569,
											"end": 599,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 569,
											"end": 599,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 495,
											"end": 607,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 495,
											"end": 607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 495,
											"end": 607,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 495,
											"end": 607,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"GetPrice(address)": "f29d0040",
							"V3Pool()": "11ea5441",
							"addLiquidity(uint256)": "51c6590a",
							"getTicks(address)": "802036f5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"GetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"V3Pool\",\"outputs\":[{\"internalType\":\"contract ICLPoolDerivedState\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0ToMint\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getTicks\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"lowTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"highTick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/VeloOracle.sol\":\"VeloOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/IERC721.sol\":{\"keccak256\":\"0xa5d0054dd7767bd5a6b897102ce1ec058a8d36b0c34f49a394e2b9d302f4700d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://852f1c467f89daa70d729231e543b11c47e2f125202ed123fe9ac9410868fd64\",\"dweb:/ipfs/QmeaFw32FQ9QAXen9EKZkafK4jfXogcEGex4R446DQjJ5i\"]},\"contracts/core/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xfe7d9ee66050cd945f09f5a54bada3d8eb3b024aedc37b9c521703c61e3ac892\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f5d4cc3b9d41b44b2419a72bc3cd27bc0608e0b488196348b4a2e342d2114467\",\"dweb:/ipfs/QmYKKT5uccPQQSBT54wN2yZV5phs4kPYr76WvUerYiKbWp\"]},\"contracts/core/VeloOracle.sol\":{\"keccak256\":\"0x1a589d5383b69c688bdd1c5b8f0826d2504c74db97343a1f35f9aacda0a51ced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef6fe1c1a88baa95a2f0ad8ea3ee810fa31799a33d4c0e6095f717cca8f6e1c\",\"dweb:/ipfs/QmUumubXMYHmBZ4v88ebdPSMTbKpc3gSS8f1LVByTwP9ED\"]},\"contracts/core/interfaces/ICLPool.sol\":{\"keccak256\":\"0x0a11e1392c4b5ef4e47a3415a9b1a2118e9370d52a253dbd1c910bbbb615e91f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0c04e689e0589f3d67961fd5febcdc0f39c0700aeebef2537ccfb29ddba29de1\",\"dweb:/ipfs/QmbuthGhVJsx45dpgF7p71VSuLshREAsaLJu34HQNgRJoz\"]},\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]},\"contracts/core/interfaces/pool/ICLPoolActions.sol\":{\"keccak256\":\"0x7699f31261ab40982e34febe16128f1edfdad39075969195301352ea66bcac40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://074f1c470e11f30d0fae8b95b963c9d19dcbd2c5bd17ad4ebba95c5f0f073044\",\"dweb:/ipfs/QmdDWMUspgBXfLhcxqESez9rSwA8JYNRycmhkhuKoDCWqJ\"]},\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":{\"keccak256\":\"0xfad00d4ca1a40ef27d9614a98483ca67c4491b6f19e376901745c57a6949b512\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5ea522565efb803d146673ff9e37aa090a5abff334fea587da62f4fb5d6647\",\"dweb:/ipfs/QmVRPscHFVjYFvRbJf41zVLtA2jVLbEUH66KGtEzspXnWS\"]},\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]},\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":{\"keccak256\":\"0x32fbcac8952f1c5c44b466b0e1c28634ce71372c0f65242aa0d821cebdddcc2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f22382292967f97640f84a7edfa01cf7deb303bf882344b9985007f1dcbef2\",\"dweb:/ipfs/Qmej7vWwun9fRBCrcvzPHdZP1jtLSCxJtjTSdkVTcgWeAE\"]},\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":{\"keccak256\":\"0xeafd14ae3e15c9f663507e004c599618bfd5d2a90d58b3b450f9372f9e3f54f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49472c8cf06dc7084e22fc57ffdce860aa7a9ff77f12e4bef0c13a078bbc5831\",\"dweb:/ipfs/Qmd29vWULezsJJzhw3wZxsU6Hsng5949v2TiVCbdga4Vqe\"]},\"contracts/core/interfaces/pool/ICLPoolState.sol\":{\"keccak256\":\"0xe57d65825a097d6f0ab55d7ae39b528695b3df65320ed524124fbb55949bfcf9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b63b25beebe612acfd564f40b0d95b3844ee71bf969a3357419e7a54f1ece961\",\"dweb:/ipfs/Qmdk3mNLz3cSZscbXFsJp69gjgxFcBv6K5mdc6tjnmtFSR\"]},\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0xae7f7b0bbbd864bc1761ec5eac62ec761f2ef168d32ef9e914e337b077ebba4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b57b2f04997cd6055404801982f57083f8e9242935b3ebf3bbed032f5035f2f1\",\"dweb:/ipfs/QmdxHVMQEA32jnyroWZG2sk4NPtQFWXPfkDDYvRtK2APFA\"]},\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/Oracle.sol\":{\"keccak256\":\"0x4c6e24eafb2d339d1848003d20e31a042f0fc1517a5e8649ceb0eea178a4f650\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://81914d71910b5778da85f5724ac1abd9ac4b40caf42af0a34e10247338f8c662\",\"dweb:/ipfs/QmVnmo3atEWw82VaC74Pyi9UBPf3P2NpXQzuSPTnd33gyc\"]},\"contracts/core/libraries/Position.sol\":{\"keccak256\":\"0xcf1e701e3fae35be8b77ff1217cfdd23d33eb16fd3cec70be8ea6888f87af285\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8c89746dd30e76cc029d4e090e402b28aae0659cc71800758b99137dfe85f55\",\"dweb:/ipfs/QmY4Ft1YBLqzqwTgNdpCyRd7WrY78zKgg4Ddv2zqZiBEiE\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xefd51a282ca9fbc89394776e7f5c6f96fa084ca26b71d99727780332c87d1843\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f09b719eff523f65d0d11fc476b9735e1390018d5ff585991d0fc644e913ecf\",\"dweb:/ipfs/QmNiZxxQhqteYgJdhCQ3cZ4S7bTQf2AQRUJqMVvPY3doot\"]},\"contracts/core/libraries/Tick.sol\":{\"keccak256\":\"0xb5ebd80c667f4501dba65f4e39e51ff36e5334480849e0ed8604222d20b4ed1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://246f590513441ac0f307170f5099e4a0c0b1f579406fc30b909b249858dbd099\",\"dweb:/ipfs/QmaA5uC3eck7nMqyJbpSPEhmXmAXaKLNBSS1Lfnzzzjc95\"]},\"contracts/core/libraries/TickBitmap.sol\":{\"keccak256\":\"0xd829fadfca3f8f5870c877c7eeceb4a692603c16b711174526129987e8745f5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d2cbf3802f7e611708a45bc390ee9307d947e49b348294591659444b9989c05\",\"dweb:/ipfs/Qmcny7JNyVYCtcZG3b1BL4ThuKREmAkE9ZKaC3i32pnt7X\"]},\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]},\"contracts/core/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3bbe07a0684d98efe73f7012e446873494e74983e1f75a16d42c25b956d61651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78ac9659c70ba3253a6e526ba5a144994fb3d32df2e9537787eeb45aae320aec\",\"dweb:/ipfs/QmbaZRbPP2wFZ9coJd2iyPM37hm3kXzPLuRtL6KKr1MCSL\"]},\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 418,
								"contract": "contracts/core/VeloOracle.sol:VeloOracle",
								"label": "V3Pool",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ICLPoolDerivedState)994"
							},
							{
								"astId": 599,
								"contract": "contracts/core/VeloOracle.sol:VeloOracle",
								"label": "_pool",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ICLPoolDerivedState)994": {
								"encoding": "inplace",
								"label": "contract ICLPoolDerivedState",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/ICLPool.sol": {
				"ICLPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectFees",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collectFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gauge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gaugeFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint256",
									"name": "_rewardGrowthGlobalX128",
									"type": "uint256"
								}
							],
							"name": "getRewardGrowthInside",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rewardGrowthInsideX128",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "_tickSpacing",
									"type": "int24"
								},
								{
									"internalType": "address",
									"name": "_factoryRegistry",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "_sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdated",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardGrowthGlobalX128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardReserve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rollover",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gauge",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nft",
									"type": "address"
								}
							],
							"name": "setGaugeAndPositionManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int128",
									"name": "stakedLiquidityDelta",
									"type": "int128"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "bool",
									"name": "positionUpdate",
									"type": "bool"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardReserve",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "periodFinish",
									"type": "uint256"
								}
							],
							"name": "syncReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "int128",
									"name": "stakedLiquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardGrowthOutsideX128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakedFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateRewardsGrowthGlobal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"burn(int24,int24,uint128,address)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"owner": "Owner of the position in the pool (nft manager or gauge)",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collect(address,int24,int24,uint128,uint128,address)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"owner": "Owner of the position in the pool (nft manager or gauge)",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectFees()": {
								"returns": {
									"amount0": "The gauge fee collected in token0",
									"amount1": "The gauge fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"factoryRegistry()": {
								"returns": {
									"_0": "The factory registry contract address"
								}
							},
							"fee()": {
								"details": "Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.",
								"returns": {
									"_0": "The swap & flash fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"gauge()": {
								"returns": {
									"_0": "The gauge contract address"
								}
							},
							"gaugeFees()": {
								"details": "Gauge fees will never exceed uint128 max in either token"
							},
							"getRewardGrowthInside(int24,int24,uint256)": {
								"details": "Used in gauge reward/earned calculations",
								"params": {
									"_rewardGrowthGlobalX128": "a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)",
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"rewardGrowthInsideX128": "The reward growth in the range"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(address,address,address,int24,address,uint160)": {
								"details": "Can be called once only Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valuenot locked because it initializes unlocked",
								"params": {
									"_factory": "The CL factory contract address",
									"_factoryRegistry": "The address of the factory registry managing the pool factory",
									"_sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"_tickSpacing": "The pool tick spacing",
									"_token0": "The first token of the pool by address sort order",
									"_token1": "The second token of the pool by address sort order"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticksThis value includes staked liquidity"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"nft()": {
								"returns": {
									"_0": "The nft manager contract address"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"rewardGrowthGlobalX128()": {
								"details": "This value can overflow the uint256"
							},
							"rollover()": {
								"details": "rollover will always be smaller than the rewards distributed that epoch"
							},
							"setGaugeAndPositionManager(address,address)": {
								"details": "Callable only once, by the gauge factory",
								"params": {
									"_gauge": "The gauge corresponding to this pool",
									"_nft": "The position manager used for position management"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"stake(int128,int24,int24,bool)": {
								"params": {
									"positionUpdate": "If the nft and gauge position should be updated",
									"stakedLiquidityDelta": "The amount by which to increase or decrease the staked liquidity",
									"tickLower": "The lower tick of the position for which to stake liquidity",
									"tickUpper": "The upper tick of the position for which to stake liquidity"
								}
							},
							"stakedLiquidity()": {
								"details": "This value has no relationship to the total staked liquidity across all ticks"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"syncReward(uint256,uint256,uint256)": {
								"params": {
									"periodFinish": "the end of the current period of rewards, updated once per epoch",
									"rewardRate": "the rate rewards being distributed during the epoch",
									"rewardReserve": "the available rewards to be distributed during the epoch"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"unstakedFee()": {
								"details": "Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.",
								"returns": {
									"_0": "The unstaked fee"
								}
							}
						},
						"title": "The interface for a CL Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"burn(int24,int24,uint128,address)": "6f89244c",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collect(address,int24,int24,uint128,uint128,address)": "31338374",
							"collectFees()": "c8796572",
							"factory()": "c45a0155",
							"factoryRegistry()": "3bf0c9fb",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"gauge()": "a6f19c84",
							"gaugeFees()": "293833ba",
							"getRewardGrowthInside(int24,int24,uint256)": "a16368c9",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(address,address,address,int24,address,uint160)": "2071d884",
							"lastUpdated()": "d0b06f5d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"nft()": "47ccca02",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"periodFinish()": "ebe2b12b",
							"positions(bytes32)": "514ea4bf",
							"rewardGrowthGlobalX128()": "57806ada",
							"rewardRate()": "7b0a47ee",
							"rewardReserve()": "cab64bcd",
							"rollover()": "b056b49a",
							"setGaugeAndPositionManager(address,address)": "1f7c3568",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"stake(int128,int24,int24,bool)": "4ed6210f",
							"stakedLiquidity()": "3ab04b20",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"syncReward(uint256,uint256,uint256)": "60a73f9b",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"unstakedFee()": "b64cc67b",
							"updateRewardsGrowthGlobal()": "1b410960"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gaugeFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"_rewardGrowthGlobalX128\",\"type\":\"uint256\"}],\"name\":\"getRewardGrowthInside\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardGrowthInsideX128\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"_tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"address\",\"name\":\"_factoryRegistry\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"_sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardGrowthGlobalX128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"setGaugeAndPositionManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"stakedLiquidityDelta\",\"type\":\"int128\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"positionUpdate\",\"type\":\"bool\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodFinish\",\"type\":\"uint256\"}],\"name\":\"syncReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"stakedLiquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardGrowthOutsideX128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakedFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateRewardsGrowthGlobal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"burn(int24,int24,uint128,address)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"owner\":\"Owner of the position in the pool (nft manager or gauge)\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collect(address,int24,int24,uint128,uint128,address)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"owner\":\"Owner of the position in the pool (nft manager or gauge)\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectFees()\":{\"returns\":{\"amount0\":\"The gauge fee collected in token0\",\"amount1\":\"The gauge fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"factoryRegistry()\":{\"returns\":{\"_0\":\"The factory registry contract address\"}},\"fee()\":{\"details\":\"Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\",\"returns\":{\"_0\":\"The swap & flash fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"gauge()\":{\"returns\":{\"_0\":\"The gauge contract address\"}},\"gaugeFees()\":{\"details\":\"Gauge fees will never exceed uint128 max in either token\"},\"getRewardGrowthInside(int24,int24,uint256)\":{\"details\":\"Used in gauge reward/earned calculations\",\"params\":{\"_rewardGrowthGlobalX128\":\"a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)\",\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"rewardGrowthInsideX128\":\"The reward growth in the range\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(address,address,address,int24,address,uint160)\":{\"details\":\"Can be called once only Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valuenot locked because it initializes unlocked\",\"params\":{\"_factory\":\"The CL factory contract address\",\"_factoryRegistry\":\"The address of the factory registry managing the pool factory\",\"_sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"_tickSpacing\":\"The pool tick spacing\",\"_token0\":\"The first token of the pool by address sort order\",\"_token1\":\"The second token of the pool by address sort order\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticksThis value includes staked liquidity\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"nft()\":{\"returns\":{\"_0\":\"The nft manager contract address\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"rewardGrowthGlobalX128()\":{\"details\":\"This value can overflow the uint256\"},\"rollover()\":{\"details\":\"rollover will always be smaller than the rewards distributed that epoch\"},\"setGaugeAndPositionManager(address,address)\":{\"details\":\"Callable only once, by the gauge factory\",\"params\":{\"_gauge\":\"The gauge corresponding to this pool\",\"_nft\":\"The position manager used for position management\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"stake(int128,int24,int24,bool)\":{\"params\":{\"positionUpdate\":\"If the nft and gauge position should be updated\",\"stakedLiquidityDelta\":\"The amount by which to increase or decrease the staked liquidity\",\"tickLower\":\"The lower tick of the position for which to stake liquidity\",\"tickUpper\":\"The upper tick of the position for which to stake liquidity\"}},\"stakedLiquidity()\":{\"details\":\"This value has no relationship to the total staked liquidity across all ticks\"},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"syncReward(uint256,uint256,uint256)\":{\"params\":{\"periodFinish\":\"the end of the current period of rewards, updated once per epoch\",\"rewardRate\":\"the rate rewards being distributed during the epoch\",\"rewardReserve\":\"the available rewards to be distributed during the epoch\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"unstakedFee()\":{\"details\":\"Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\",\"returns\":{\"_0\":\"The unstaked fee\"}}},\"title\":\"The interface for a CL Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectFees(address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the gauge\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"burn(int24,int24,uint128,address)\":{\"notice\":\"Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collect(address,int24,int24,uint128,uint128,address)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectFees()\":{\"notice\":\"Collect the gauge fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the ICLFactory interface\"},\"factoryRegistry()\":{\"notice\":\"The factory registry that manages pool <> gauge <> reward factory relationships\"},\"fee()\":{\"notice\":\"The pool's swap & flash fee in pips, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"gauge()\":{\"notice\":\"The gauge corresponding to this pool\"},\"gaugeFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the gauge\"},\"getRewardGrowthInside(int24,int24,uint256)\":{\"notice\":\"Returns data about reward growth within a tick range. RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations.\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(address,address,address,int24,address,uint160)\":{\"notice\":\"Initialize function used in proxy deployment\"},\"lastUpdated()\":{\"notice\":\"last time the rewardReserve and rewardRate were updated\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"nft()\":{\"notice\":\"The nft manager\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"periodFinish()\":{\"notice\":\"timestamp of the end of the current epoch's rewards\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"rewardGrowthGlobalX128()\":{\"notice\":\"The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool\"},\"rewardRate()\":{\"notice\":\"the emission rate of time-based farming\"},\"rewardReserve()\":{\"notice\":\"acts as a virtual reserve that holds information on how many rewards are yet to be distributed\"},\"rollover()\":{\"notice\":\"tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinishthis amount is rolled over on the next call to notifyRewardAmount\"},\"setGaugeAndPositionManager(address,address)\":{\"notice\":\"Initialize gauge and nft manager\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"stake(int128,int24,int24,bool)\":{\"notice\":\"Convert existing liquidity into staked liquidityOnly callable by the gauge associated with this pool\"},\"stakedLiquidity()\":{\"notice\":\"The currently in range staked liquidity available to the pool\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"syncReward(uint256,uint256,uint256)\":{\"notice\":\"Syncs rewards with gauge\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"},\"unstakedFee()\":{\"notice\":\"The pool's unstaked fee in pips, i.e. 1e-6\"},\"updateRewardsGrowthGlobal()\":{\"notice\":\"Updates rewardGrowthGlobalX128 every time when any tick is crossed, or when any position is staked/unstaked from the gauge\"}},\"notice\":\"A CL pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/ICLPool.sol\":\"ICLPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/ICLPool.sol\":{\"keccak256\":\"0x0a11e1392c4b5ef4e47a3415a9b1a2118e9370d52a253dbd1c910bbbb615e91f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0c04e689e0589f3d67961fd5febcdc0f39c0700aeebef2537ccfb29ddba29de1\",\"dweb:/ipfs/QmbuthGhVJsx45dpgF7p71VSuLshREAsaLJu34HQNgRJoz\"]},\"contracts/core/interfaces/pool/ICLPoolActions.sol\":{\"keccak256\":\"0x7699f31261ab40982e34febe16128f1edfdad39075969195301352ea66bcac40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://074f1c470e11f30d0fae8b95b963c9d19dcbd2c5bd17ad4ebba95c5f0f073044\",\"dweb:/ipfs/QmdDWMUspgBXfLhcxqESez9rSwA8JYNRycmhkhuKoDCWqJ\"]},\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":{\"keccak256\":\"0xfad00d4ca1a40ef27d9614a98483ca67c4491b6f19e376901745c57a6949b512\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5ea522565efb803d146673ff9e37aa090a5abff334fea587da62f4fb5d6647\",\"dweb:/ipfs/QmVRPscHFVjYFvRbJf41zVLtA2jVLbEUH66KGtEzspXnWS\"]},\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]},\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":{\"keccak256\":\"0x32fbcac8952f1c5c44b466b0e1c28634ce71372c0f65242aa0d821cebdddcc2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f22382292967f97640f84a7edfa01cf7deb303bf882344b9985007f1dcbef2\",\"dweb:/ipfs/Qmej7vWwun9fRBCrcvzPHdZP1jtLSCxJtjTSdkVTcgWeAE\"]},\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":{\"keccak256\":\"0xeafd14ae3e15c9f663507e004c599618bfd5d2a90d58b3b450f9372f9e3f54f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49472c8cf06dc7084e22fc57ffdce860aa7a9ff77f12e4bef0c13a078bbc5831\",\"dweb:/ipfs/Qmd29vWULezsJJzhw3wZxsU6Hsng5949v2TiVCbdga4Vqe\"]},\"contracts/core/interfaces/pool/ICLPoolState.sol\":{\"keccak256\":\"0xe57d65825a097d6f0ab55d7ae39b528695b3df65320ed524124fbb55949bfcf9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b63b25beebe612acfd564f40b0d95b3844ee71bf969a3357419e7a54f1ece961\",\"dweb:/ipfs/Qmdk3mNLz3cSZscbXFsJp69gjgxFcBv6K5mdc6tjnmtFSR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectFees(address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the gauge"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"burn(int24,int24,uint128,address)": {
								"notice": "Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collect(address,int24,int24,uint128,uint128,address)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectFees()": {
								"notice": "Collect the gauge fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the ICLFactory interface"
							},
							"factoryRegistry()": {
								"notice": "The factory registry that manages pool <> gauge <> reward factory relationships"
							},
							"fee()": {
								"notice": "The pool's swap & flash fee in pips, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"gauge()": {
								"notice": "The gauge corresponding to this pool"
							},
							"gaugeFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the gauge"
							},
							"getRewardGrowthInside(int24,int24,uint256)": {
								"notice": "Returns data about reward growth within a tick range. RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations."
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(address,address,address,int24,address,uint160)": {
								"notice": "Initialize function used in proxy deployment"
							},
							"lastUpdated()": {
								"notice": "last time the rewardReserve and rewardRate were updated"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"nft()": {
								"notice": "The nft manager"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"periodFinish()": {
								"notice": "timestamp of the end of the current epoch's rewards"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"rewardGrowthGlobalX128()": {
								"notice": "The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool"
							},
							"rewardRate()": {
								"notice": "the emission rate of time-based farming"
							},
							"rewardReserve()": {
								"notice": "acts as a virtual reserve that holds information on how many rewards are yet to be distributed"
							},
							"rollover()": {
								"notice": "tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinishthis amount is rolled over on the next call to notifyRewardAmount"
							},
							"setGaugeAndPositionManager(address,address)": {
								"notice": "Initialize gauge and nft manager"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"stake(int128,int24,int24,bool)": {
								"notice": "Convert existing liquidity into staked liquidityOnly callable by the gauge associated with this pool"
							},
							"stakedLiquidity()": {
								"notice": "The currently in range staked liquidity available to the pool"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"syncReward(uint256,uint256,uint256)": {
								"notice": "Syncs rewards with gauge"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							},
							"unstakedFee()": {
								"notice": "The pool's unstaked fee in pips, i.e. 1e-6"
							},
							"updateRewardsGrowthGlobal()": {
								"notice": "Updates rewardGrowthGlobalX128 every time when any tick is crossed, or when any position is staked/unstaked from the gauge"
							}
						},
						"notice": "A CL pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/IERC20Minimal.sol": {
				"IERC20Minimal": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"title": "Minimal ERC20 interface for CL",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for CL\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in CL\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/IERC20Minimal.sol\":\"IERC20Minimal\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"notice": "Contains a subset of the full ERC20 interface that is used in CL",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolActions.sol": {
				"ICLPoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "_tickSpacing",
									"type": "int24"
								},
								{
									"internalType": "address",
									"name": "_factoryRegistry",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "_sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gauge",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nft",
									"type": "address"
								}
							],
							"name": "setGaugeAndPositionManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int128",
									"name": "stakedLiquidityDelta",
									"type": "int128"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "bool",
									"name": "positionUpdate",
									"type": "bool"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardReserve",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "periodFinish",
									"type": "uint256"
								}
							],
							"name": "syncReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateRewardsGrowthGlobal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"burn(int24,int24,uint128,address)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"owner": "Owner of the position in the pool (nft manager or gauge)",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collect(address,int24,int24,uint128,uint128,address)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"owner": "Owner of the position in the pool (nft manager or gauge)",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(address,address,address,int24,address,uint160)": {
								"details": "Can be called once only Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valuenot locked because it initializes unlocked",
								"params": {
									"_factory": "The CL factory contract address",
									"_factoryRegistry": "The address of the factory registry managing the pool factory",
									"_sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"_tickSpacing": "The pool tick spacing",
									"_token0": "The first token of the pool by address sort order",
									"_token1": "The second token of the pool by address sort order"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"setGaugeAndPositionManager(address,address)": {
								"details": "Callable only once, by the gauge factory",
								"params": {
									"_gauge": "The gauge corresponding to this pool",
									"_nft": "The position manager used for position management"
								}
							},
							"stake(int128,int24,int24,bool)": {
								"params": {
									"positionUpdate": "If the nft and gauge position should be updated",
									"stakedLiquidityDelta": "The amount by which to increase or decrease the staked liquidity",
									"tickLower": "The lower tick of the position for which to stake liquidity",
									"tickUpper": "The upper tick of the position for which to stake liquidity"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"syncReward(uint256,uint256,uint256)": {
								"params": {
									"periodFinish": "the end of the current period of rewards, updated once per epoch",
									"rewardRate": "the rate rewards being distributed during the epoch",
									"rewardReserve": "the available rewards to be distributed during the epoch"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"burn(int24,int24,uint128,address)": "6f89244c",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collect(address,int24,int24,uint128,uint128,address)": "31338374",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(address,address,address,int24,address,uint160)": "2071d884",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"setGaugeAndPositionManager(address,address)": "1f7c3568",
							"stake(int128,int24,int24,bool)": "4ed6210f",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"syncReward(uint256,uint256,uint256)": "60a73f9b",
							"updateRewardsGrowthGlobal()": "1b410960"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"_tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"address\",\"name\":\"_factoryRegistry\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"_sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"setGaugeAndPositionManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"stakedLiquidityDelta\",\"type\":\"int128\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"positionUpdate\",\"type\":\"bool\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodFinish\",\"type\":\"uint256\"}],\"name\":\"syncReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateRewardsGrowthGlobal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"burn(int24,int24,uint128,address)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"owner\":\"Owner of the position in the pool (nft manager or gauge)\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collect(address,int24,int24,uint128,uint128,address)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"owner\":\"Owner of the position in the pool (nft manager or gauge)\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(address,address,address,int24,address,uint160)\":{\"details\":\"Can be called once only Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valuenot locked because it initializes unlocked\",\"params\":{\"_factory\":\"The CL factory contract address\",\"_factoryRegistry\":\"The address of the factory registry managing the pool factory\",\"_sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"_tickSpacing\":\"The pool tick spacing\",\"_token0\":\"The first token of the pool by address sort order\",\"_token1\":\"The second token of the pool by address sort order\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"setGaugeAndPositionManager(address,address)\":{\"details\":\"Callable only once, by the gauge factory\",\"params\":{\"_gauge\":\"The gauge corresponding to this pool\",\"_nft\":\"The position manager used for position management\"}},\"stake(int128,int24,int24,bool)\":{\"params\":{\"positionUpdate\":\"If the nft and gauge position should be updated\",\"stakedLiquidityDelta\":\"The amount by which to increase or decrease the staked liquidity\",\"tickLower\":\"The lower tick of the position for which to stake liquidity\",\"tickUpper\":\"The upper tick of the position for which to stake liquidity\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"syncReward(uint256,uint256,uint256)\":{\"params\":{\"periodFinish\":\"the end of the current period of rewards, updated once per epoch\",\"rewardRate\":\"the rate rewards being distributed during the epoch\",\"rewardReserve\":\"the available rewards to be distributed during the epoch\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"burn(int24,int24,uint128,address)\":{\"notice\":\"Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collect(address,int24,int24,uint128,uint128,address)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(address,address,address,int24,address,uint160)\":{\"notice\":\"Initialize function used in proxy deployment\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"setGaugeAndPositionManager(address,address)\":{\"notice\":\"Initialize gauge and nft manager\"},\"stake(int128,int24,int24,bool)\":{\"notice\":\"Convert existing liquidity into staked liquidityOnly callable by the gauge associated with this pool\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"syncReward(uint256,uint256,uint256)\":{\"notice\":\"Syncs rewards with gauge\"},\"updateRewardsGrowthGlobal()\":{\"notice\":\"Updates rewardGrowthGlobalX128 every time when any tick is crossed, or when any position is staked/unstaked from the gauge\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolActions.sol\":\"ICLPoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolActions.sol\":{\"keccak256\":\"0x7699f31261ab40982e34febe16128f1edfdad39075969195301352ea66bcac40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://074f1c470e11f30d0fae8b95b963c9d19dcbd2c5bd17ad4ebba95c5f0f073044\",\"dweb:/ipfs/QmdDWMUspgBXfLhcxqESez9rSwA8JYNRycmhkhuKoDCWqJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"burn(int24,int24,uint128,address)": {
								"notice": "Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collect(address,int24,int24,uint128,uint128,address)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(address,address,address,int24,address,uint160)": {
								"notice": "Initialize function used in proxy deployment"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"setGaugeAndPositionManager(address,address)": {
								"notice": "Initialize gauge and nft manager"
							},
							"stake(int128,int24,int24,bool)": {
								"notice": "Convert existing liquidity into staked liquidityOnly callable by the gauge associated with this pool"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"syncReward(uint256,uint256,uint256)": {
								"notice": "Syncs rewards with gauge"
							},
							"updateRewardsGrowthGlobal()": {
								"notice": "Updates rewardGrowthGlobalX128 every time when any tick is crossed, or when any position is staked/unstaked from the gauge"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolConstants.sol": {
				"ICLPoolConstants": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gauge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"factoryRegistry()": {
								"returns": {
									"_0": "The factory registry contract address"
								}
							},
							"gauge()": {
								"returns": {
									"_0": "The gauge contract address"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"nft()": {
								"returns": {
									"_0": "The nft manager contract address"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"factoryRegistry()": "3bf0c9fb",
							"gauge()": "a6f19c84",
							"maxLiquidityPerTick()": "70cf754a",
							"nft()": "47ccca02",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"factoryRegistry()\":{\"returns\":{\"_0\":\"The factory registry contract address\"}},\"gauge()\":{\"returns\":{\"_0\":\"The gauge contract address\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"nft()\":{\"returns\":{\"_0\":\"The nft manager contract address\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the ICLFactory interface\"},\"factoryRegistry()\":{\"notice\":\"The factory registry that manages pool <> gauge <> reward factory relationships\"},\"gauge()\":{\"notice\":\"The gauge corresponding to this pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"nft()\":{\"notice\":\"The nft manager\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are not defined as immutable (due to proxy pattern) but are effectively immutable.i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":\"ICLPoolConstants\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":{\"keccak256\":\"0xfad00d4ca1a40ef27d9614a98483ca67c4491b6f19e376901745c57a6949b512\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5ea522565efb803d146673ff9e37aa090a5abff334fea587da62f4fb5d6647\",\"dweb:/ipfs/QmVRPscHFVjYFvRbJf41zVLtA2jVLbEUH66KGtEzspXnWS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the ICLFactory interface"
							},
							"factoryRegistry()": {
								"notice": "The factory registry that manages pool <> gauge <> reward factory relationships"
							},
							"gauge()": {
								"notice": "The gauge corresponding to this pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"nft()": {
								"notice": "The nft manager"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are not defined as immutable (due to proxy pattern) but are effectively immutable.i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolDerivedState.sol": {
				"ICLPoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":\"ICLPoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolEvents.sol": {
				"ICLPoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectFees",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectFees(address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectFees(address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectFees(address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the gauge\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":\"ICLPoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":{\"keccak256\":\"0x32fbcac8952f1c5c44b466b0e1c28634ce71372c0f65242aa0d821cebdddcc2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f22382292967f97640f84a7edfa01cf7deb303bf882344b9985007f1dcbef2\",\"dweb:/ipfs/Qmej7vWwun9fRBCrcvzPHdZP1jtLSCxJtjTSdkVTcgWeAE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectFees(address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the gauge"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol": {
				"ICLPoolOwnerActions": {
					"abi": [
						{
							"inputs": [],
							"name": "collectFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectFees()": {
								"returns": {
									"amount0": "The gauge fee collected in token0",
									"amount1": "The gauge fee collected in token1"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectFees()": "c8796572"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"collectFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectFees()\":{\"returns\":{\"amount0\":\"The gauge fee collected in token0\",\"amount1\":\"The gauge fee collected in token1\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectFees()\":{\"notice\":\"Collect the gauge fee accrued to the pool\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":\"ICLPoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":{\"keccak256\":\"0xeafd14ae3e15c9f663507e004c599618bfd5d2a90d58b3b450f9372f9e3f54f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49472c8cf06dc7084e22fc57ffdce860aa7a9ff77f12e4bef0c13a078bbc5831\",\"dweb:/ipfs/Qmd29vWULezsJJzhw3wZxsU6Hsng5949v2TiVCbdga4Vqe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectFees()": {
								"notice": "Collect the gauge fee accrued to the pool"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolState.sol": {
				"ICLPoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gaugeFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint256",
									"name": "_rewardGrowthGlobalX128",
									"type": "uint256"
								}
							],
							"name": "getRewardGrowthInside",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rewardGrowthInsideX128",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdated",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardGrowthGlobalX128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardReserve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rollover",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "int128",
									"name": "stakedLiquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardGrowthOutsideX128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakedFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"fee()": {
								"details": "Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.",
								"returns": {
									"_0": "The swap & flash fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"gaugeFees()": {
								"details": "Gauge fees will never exceed uint128 max in either token"
							},
							"getRewardGrowthInside(int24,int24,uint256)": {
								"details": "Used in gauge reward/earned calculations",
								"params": {
									"_rewardGrowthGlobalX128": "a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)",
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"rewardGrowthInsideX128": "The reward growth in the range"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticksThis value includes staked liquidity"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"rewardGrowthGlobalX128()": {
								"details": "This value can overflow the uint256"
							},
							"rollover()": {
								"details": "rollover will always be smaller than the rewards distributed that epoch"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"stakedLiquidity()": {
								"details": "This value has no relationship to the total staked liquidity across all ticks"
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"unstakedFee()": {
								"details": "Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.",
								"returns": {
									"_0": "The unstaked fee"
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"gaugeFees()": "293833ba",
							"getRewardGrowthInside(int24,int24,uint256)": "a16368c9",
							"lastUpdated()": "d0b06f5d",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"periodFinish()": "ebe2b12b",
							"positions(bytes32)": "514ea4bf",
							"rewardGrowthGlobalX128()": "57806ada",
							"rewardRate()": "7b0a47ee",
							"rewardReserve()": "cab64bcd",
							"rollover()": "b056b49a",
							"slot0()": "3850c7bd",
							"stakedLiquidity()": "3ab04b20",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93",
							"unstakedFee()": "b64cc67b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gaugeFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"_rewardGrowthGlobalX128\",\"type\":\"uint256\"}],\"name\":\"getRewardGrowthInside\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardGrowthInsideX128\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardGrowthGlobalX128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"stakedLiquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardGrowthOutsideX128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakedFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fee()\":{\"details\":\"Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\",\"returns\":{\"_0\":\"The swap & flash fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"gaugeFees()\":{\"details\":\"Gauge fees will never exceed uint128 max in either token\"},\"getRewardGrowthInside(int24,int24,uint256)\":{\"details\":\"Used in gauge reward/earned calculations\",\"params\":{\"_rewardGrowthGlobalX128\":\"a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)\",\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"rewardGrowthInsideX128\":\"The reward growth in the range\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticksThis value includes staked liquidity\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"rewardGrowthGlobalX128()\":{\"details\":\"This value can overflow the uint256\"},\"rollover()\":{\"details\":\"rollover will always be smaller than the rewards distributed that epoch\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. unlocked Whether the pool is currently locked to reentrancy\"}},\"stakedLiquidity()\":{\"details\":\"This value has no relationship to the total staked liquidity across all ticks\"},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"unstakedFee()\":{\"details\":\"Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\",\"returns\":{\"_0\":\"The unstaked fee\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fee()\":{\"notice\":\"The pool's swap & flash fee in pips, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"gaugeFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the gauge\"},\"getRewardGrowthInside(int24,int24,uint256)\":{\"notice\":\"Returns data about reward growth within a tick range. RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations.\"},\"lastUpdated()\":{\"notice\":\"last time the rewardReserve and rewardRate were updated\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"periodFinish()\":{\"notice\":\"timestamp of the end of the current epoch's rewards\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"rewardGrowthGlobalX128()\":{\"notice\":\"The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool\"},\"rewardRate()\":{\"notice\":\"the emission rate of time-based farming\"},\"rewardReserve()\":{\"notice\":\"acts as a virtual reserve that holds information on how many rewards are yet to be distributed\"},\"rollover()\":{\"notice\":\"tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinishthis amount is rolled over on the next call to notifyRewardAmount\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"stakedLiquidity()\":{\"notice\":\"The currently in range staked liquidity available to the pool\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"unstakedFee()\":{\"notice\":\"The pool's unstaked fee in pips, i.e. 1e-6\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolState.sol\":\"ICLPoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolState.sol\":{\"keccak256\":\"0xe57d65825a097d6f0ab55d7ae39b528695b3df65320ed524124fbb55949bfcf9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b63b25beebe612acfd564f40b0d95b3844ee71bf969a3357419e7a54f1ece961\",\"dweb:/ipfs/Qmdk3mNLz3cSZscbXFsJp69gjgxFcBv6K5mdc6tjnmtFSR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"fee()": {
								"notice": "The pool's swap & flash fee in pips, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"gaugeFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the gauge"
							},
							"getRewardGrowthInside(int24,int24,uint256)": {
								"notice": "Returns data about reward growth within a tick range. RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations."
							},
							"lastUpdated()": {
								"notice": "last time the rewardReserve and rewardRate were updated"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"periodFinish()": {
								"notice": "timestamp of the end of the current epoch's rewards"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"rewardGrowthGlobalX128()": {
								"notice": "The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool"
							},
							"rewardRate()": {
								"notice": "the emission rate of time-based farming"
							},
							"rewardReserve()": {
								"notice": "acts as a virtual reserve that holds information on how many rewards are yet to be distributed"
							},
							"rollover()": {
								"notice": "tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinishthis amount is rolled over on the next call to notifyRewardAmount"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"stakedLiquidity()": {
								"notice": "The currently in range staked liquidity available to the pool"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"unstakedFee()": {
								"notice": "The pool's unstaked fee in pips, i.e. 1e-6"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/BitMath.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"details": "This library provides functionality for computing bit properties of an unsigned integer",
						"kind": "dev",
						"methods": {},
						"title": "BitMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/BitMath.sol\":187:2789  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/BitMath.sol\":187:2789  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206b0fef7cc70636e1ac30d92a7e29525347e7ae1d1a94aa785124f02fec58e91664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b0fef7cc70636e1ac30d92a7e29525347e7ae1d1a94aa785124f02fec58e91664736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFEF7CC70636E1AC30D92A7E 0x29 MSTORE MSTORE8 SELFBALANCE 0xE7 0xAE SAR BYTE SWAP5 0xAA PUSH25 0x5124F02FEC58E91664736F6C63430007060033000000000000 ",
							"sourceMap": "187:2602:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b0fef7cc70636e1ac30d92a7e29525347e7ae1d1a94aa785124f02fec58e91664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xFEF7CC70636E1AC30D92A7E 0x29 MSTORE MSTORE8 SELFBALANCE 0xE7 0xAE SAR BYTE SWAP5 0xAA PUSH25 0x5124F02FEC58E91664736F6C63430007060033000000000000 ",
							"sourceMap": "187:2602:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b0fef7cc70636e1ac30d92a7e29525347e7ae1d1a94aa785124f02fec58e91664736f6c63430007060033",
									".code": [
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/libraries/FixedPoint128.sol": {
				"FixedPoint128": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "FixedPoint128",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/FixedPoint128.sol\":211:310  library FixedPoint128 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/FixedPoint128.sol\":211:310  library FixedPoint128 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cb557b273d4b27843887cfaa4a3bd758ae0130d33b28a1ae5fa3039fecb84df864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb557b273d4b27843887cfaa4a3bd758ae0130d33b28a1ae5fa3039fecb84df864736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SSTORE PUSH28 0x273D4B27843887CFAA4A3BD758AE0130D33B28A1AE5FA3039FECB84D 0xF8 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "211:99:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb557b273d4b27843887cfaa4a3bd758ae0130d33b28a1ae5fa3039fecb84df864736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SSTORE PUSH28 0x273D4B27843887CFAA4A3BD758AE0130D33B28A1AE5FA3039FECB84D 0xF8 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "211:99:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "INVALID",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 211,
									"end": 310,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb557b273d4b27843887cfaa4a3bd758ae0130d33b28a1ae5fa3039fecb84df864736f6c63430007060033",
									".code": [
										{
											"begin": 211,
											"end": 310,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 211,
											"end": 310,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 211,
											"end": 310,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 211,
											"end": 310,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 310,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 310,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 211,
											"end": 310,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 310,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 211,
											"end": 310,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint128\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/FixedPoint128.sol\":\"FixedPoint128\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/FixedPoint96.sol": {
				"FixedPoint96": {
					"abi": [],
					"devdoc": {
						"details": "Used in SqrtPriceMath.sol",
						"kind": "dev",
						"methods": {},
						"title": "FixedPoint96",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/FixedPoint96.sol\":245:379  library FixedPoint96 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/FixedPoint96.sol\":245:379  library FixedPoint96 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122079d9ef375c964db01eb6de7c2407c7f91a2c3b3b1091affa9983a1b8d35bfa7264736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122079d9ef375c964db01eb6de7c2407c7f91a2c3b3b1091affa9983a1b8d35bfa7264736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD9EF375C964DB01EB6DE7C2407C7F91A2C3B3B1091AFFA9983A1 0xB8 0xD3 JUMPDEST STATICCALL PUSH19 0x64736F6C634300070600330000000000000000 ",
							"sourceMap": "245:134:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122079d9ef375c964db01eb6de7c2407c7f91a2c3b3b1091affa9983a1b8d35bfa7264736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD9EF375C964DB01EB6DE7C2407C7F91A2C3B3B1091AFFA9983A1 0xB8 0xD3 JUMPDEST STATICCALL PUSH19 0x64736F6C634300070600330000000000000000 ",
							"sourceMap": "245:134:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "INVALID",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 245,
									"end": 379,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079d9ef375c964db01eb6de7c2407c7f91a2c3b3b1091affa9983a1b8d35bfa7264736f6c63430007060033",
									".code": [
										{
											"begin": 245,
											"end": 379,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 245,
											"end": 379,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 245,
											"end": 379,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 245,
											"end": 379,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Used in SqrtPriceMath.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint96\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/FixedPoint96.sol\":\"FixedPoint96\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/FullMath.sol": {
				"FullMath": {
					"abi": [],
					"devdoc": {
						"details": "Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits",
						"kind": "dev",
						"methods": {},
						"title": "Contains 512-bit math functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/FullMath.sol\":362:5064  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/FullMath.sol\":362:5064  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093520f78a750499b7f6cc1c2aa86db5b07f0863ba8f5012c5e27c30653cb219764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093520f78a750499b7f6cc1c2aa86db5b07f0863ba8f5012c5e27c30653cb219764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 MSTORE 0xF PUSH25 0xA750499B7F6CC1C2AA86DB5B07F0863BA8F5012C5E27C30653 0xCB 0x21 SWAP8 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "362:4702:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093520f78a750499b7f6cc1c2aa86db5b07f0863ba8f5012c5e27c30653cb219764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 MSTORE 0xF PUSH25 0xA750499B7F6CC1C2AA86DB5B07F0863BA8F5012C5E27C30653 0xCB 0x21 SWAP8 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "362:4702:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "INVALID",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093520f78a750499b7f6cc1c2aa86db5b07f0863ba8f5012c5e27c30653cb219764736f6c63430007060033",
									".code": [
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/LiquidityAmounts.sol": {
				"LiquidityAmounts": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Liquidity amount functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/LiquidityAmounts.sol\":311:6863  library LiquidityAmounts {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":311:6863  library LiquidityAmounts {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122074435b979627eed342fe3124744196ecb98468b63f9a5aee199ffff6f6ae70c564736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122074435b979627eed342fe3124744196ecb98468b63f9a5aee199ffff6f6ae70c564736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x435B979627EED342FE3124744196ECB98468B63F9A GAS 0xEE NOT SWAP16 SELFDESTRUCT 0xF6 0xF6 0xAE PUSH17 0xC564736F6C634300070600330000000000 ",
							"sourceMap": "311:6552:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122074435b979627eed342fe3124744196ecb98468b63f9a5aee199ffff6f6ae70c564736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x435B979627EED342FE3124744196ECB98468B63F9A GAS 0xEE NOT SWAP16 SELFDESTRUCT 0xF6 0xF6 0xAE PUSH17 0xC564736F6C634300070600330000000000 ",
							"sourceMap": "311:6552:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAmount0ForLiquidity(uint160,uint160,uint128)": "infinite",
								"getAmount1ForLiquidity(uint160,uint160,uint128)": "infinite",
								"getAmountsForLiquidity(uint160,uint160,uint160,uint128)": "infinite",
								"getLiquidityForAmount0(uint160,uint160,uint256)": "infinite",
								"getLiquidityForAmount1(uint160,uint160,uint256)": "infinite",
								"getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)": "infinite",
								"toUint128(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "INVALID",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074435b979627eed342fe3124744196ecb98468b63f9a5aee199ffff6f6ae70c564736f6c63430007060033",
									".code": [
										{
											"begin": 311,
											"end": 6863,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity amount functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions for computing liquidity amounts from token amounts and prices\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/LiquidityAmounts.sol\":\"LiquidityAmounts\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0xae7f7b0bbbd864bc1761ec5eac62ec761f2ef168d32ef9e914e337b077ebba4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b57b2f04997cd6055404801982f57083f8e9242935b3ebf3bbed032f5035f2f1\",\"dweb:/ipfs/QmdxHVMQEA32jnyroWZG2sk4NPtQFWXPfkDDYvRtK2APFA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides functions for computing liquidity amounts from token amounts and prices",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/LiquidityMath.sol": {
				"LiquidityMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Math library for liquidity",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122031cf29465bc2c1d261ead529786de1c5a24f280a89bd5cf19dd8d911b48374a464736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122031cf29465bc2c1d261ead529786de1c5a24f280a89bd5cf19dd8d911b48374a464736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xCF 0x29 CHAINID JUMPDEST 0xC2 0xC1 0xD2 PUSH2 0xEAD5 0x29 PUSH25 0x6DE1C5A24F280A89BD5CF19DD8D911B48374A464736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "109:512:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122031cf29465bc2c1d261ead529786de1c5a24f280a89bd5cf19dd8d911b48374a464736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE 0xCF 0x29 CHAINID JUMPDEST 0xC2 0xC1 0xD2 PUSH2 0xEAD5 0x29 PUSH25 0x6DE1C5A24F280A89BD5CF19DD8D911B48374A464736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "109:512:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"addDelta(uint128,int128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "INVALID",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 109,
									"end": 621,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031cf29465bc2c1d261ead529786de1c5a24f280a89bd5cf19dd8d911b48374a464736f6c63430007060033",
									".code": [
										{
											"begin": 109,
											"end": 621,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 109,
											"end": 621,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 109,
											"end": 621,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 109,
											"end": 621,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math library for liquidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/LiquidityMath.sol\":\"LiquidityMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/libraries/LowGasSafeMath.sol": {
				"LowGasSafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Optimized overflow and underflow safe math operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/LowGasSafeMath.sol\":249:1695  library LowGasSafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/LowGasSafeMath.sol\":249:1695  library LowGasSafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a1874cc327f632323795bce211cb098f092763f58410a152a475f0a2148c012d64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1874cc327f632323795bce211cb098f092763f58410a152a475f0a2148c012d64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 DUP8 0x4C 0xC3 0x27 0xF6 ORIGIN ORIGIN CALLDATACOPY SWAP6 0xBC 0xE2 GT 0xCB MULMOD DUP16 MULMOD 0x27 PUSH4 0xF58410A1 MSTORE LOG4 PUSH22 0xF0A2148C012D64736F6C634300070600330000000000 ",
							"sourceMap": "249:1446:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a1874cc327f632323795bce211cb098f092763f58410a152a475f0a2148c012d64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 DUP8 0x4C 0xC3 0x27 0xF6 ORIGIN ORIGIN CALLDATACOPY SWAP6 0xBC 0xE2 GT 0xCB MULMOD DUP16 MULMOD 0x27 PUSH4 0xF58410A1 MSTORE LOG4 PUSH22 0xF0A2148C012D64736F6C634300070600330000000000 ",
							"sourceMap": "249:1446:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(int256,int256)": "infinite",
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(int256,int256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "INVALID",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1874cc327f632323795bce211cb098f092763f58410a152a475f0a2148c012d64736f6c63430007060033",
									".code": [
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/LowGasSafeMath.sol\":\"LowGasSafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/Oracle.sol": {
				"Oracle": {
					"abi": [],
					"devdoc": {
						"details": "Instances of stored oracle data, \"observations\", are collected in the oracle array Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the maximum length of the oracle array. New slots will be added when the array is fully populated. Observations are overwritten when the full length of the oracle array is populated. The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()",
						"kind": "dev",
						"methods": {},
						"title": "Oracle",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/Oracle.sol\":691:16258  library Oracle {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/Oracle.sol\":691:16258  library Oracle {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a47d5ca4fddb6c0ba60b6872d47013a01520db771da04d749615c0753ee85dd264736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a47d5ca4fddb6c0ba60b6872d47013a01520db771da04d749615c0753ee85dd264736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH30 0x5CA4FDDB6C0BA60B6872D47013A01520DB771DA04D749615C0753EE85DD2 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "691:15567:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a47d5ca4fddb6c0ba60b6872d47013a01520db771da04d749615c0753ee85dd264736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH30 0x5CA4FDDB6C0BA60B6872D47013A01520DB771DA04D749615C0753EE85DD2 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "691:15567:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"binarySearch(struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,uint16,uint16)": "infinite",
								"getSurroundingObservations(struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16)": "infinite",
								"grow(struct Oracle.Observation storage ref[65535] storage pointer,uint16,uint16)": "infinite",
								"initialize(struct Oracle.Observation storage ref[65535] storage pointer,uint32)": "infinite",
								"lte(uint32,uint32,uint32)": "infinite",
								"observe(struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32[] memory,int24,uint16,uint128,uint16)": "infinite",
								"observeSingle(struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16)": "infinite",
								"transform(struct Oracle.Observation memory,uint32,int24,uint128)": "infinite",
								"write(struct Oracle.Observation storage ref[65535] storage pointer,uint16,uint32,int24,uint128,uint16,uint16)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "INVALID",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 691,
									"end": 16258,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a47d5ca4fddb6c0ba60b6872d47013a01520db771da04d749615c0753ee85dd264736f6c63430007060033",
									".code": [
										{
											"begin": 691,
											"end": 16258,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 691,
											"end": 16258,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Instances of stored oracle data, \\\"observations\\\", are collected in the oracle array Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the maximum length of the oracle array. New slots will be added when the array is fully populated. Observations are overwritten when the full length of the oracle array is populated. The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Oracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides price and liquidity data useful for a wide variety of system designs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/Oracle.sol\":\"Oracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/Oracle.sol\":{\"keccak256\":\"0x4c6e24eafb2d339d1848003d20e31a042f0fc1517a5e8649ceb0eea178a4f650\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://81914d71910b5778da85f5724ac1abd9ac4b40caf42af0a34e10247338f8c662\",\"dweb:/ipfs/QmVnmo3atEWw82VaC74Pyi9UBPf3P2NpXQzuSPTnd33gyc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides price and liquidity data useful for a wide variety of system designs",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/Position.sol": {
				"Position": {
					"abi": [],
					"devdoc": {
						"details": "Positions store additional state for tracking fees owed to the position",
						"kind": "dev",
						"methods": {},
						"title": "Position",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/Position.sol\":365:3661  library Position {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/Position.sol\":365:3661  library Position {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bcd805de2a73ca5377558ae1f7b8241da507da08b86f4fa3ba92b335c555fc0964736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcd805de2a73ca5377558ae1f7b8241da507da08b86f4fa3ba92b335c555fc0964736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xD8 SDIV 0xDE 0x2A PUSH20 0xCA5377558AE1F7B8241DA507DA08B86F4FA3BA92 0xB3 CALLDATALOAD 0xC5 SSTORE 0xFC MULMOD PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "365:3296:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bcd805de2a73ca5377558ae1f7b8241da507da08b86f4fa3ba92b335c555fc0964736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0xD8 SDIV 0xDE 0x2A PUSH20 0xCA5377558AE1F7B8241DA507DA08B86F4FA3BA92 0xB3 CALLDATALOAD 0xC5 SSTORE 0xFC MULMOD PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "365:3296:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"get(mapping(bytes32 => struct Position.Info storage ref),address,int24,int24)": "infinite",
								"update(struct Position.Info storage pointer,int128,uint256,uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "INVALID",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bcd805de2a73ca5377558ae1f7b8241da507da08b86f4fa3ba92b335c555fc0964736f6c63430007060033",
									".code": [
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Positions store additional state for tracking fees owed to the position\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Position\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Positions represent an owner address' liquidity between a lower and upper tick boundary\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/Position.sol\":\"Position\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/Position.sol\":{\"keccak256\":\"0xcf1e701e3fae35be8b77ff1217cfdd23d33eb16fd3cec70be8ea6888f87af285\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8c89746dd30e76cc029d4e090e402b28aae0659cc71800758b99137dfe85f55\",\"dweb:/ipfs/QmY4Ft1YBLqzqwTgNdpCyRd7WrY78zKgg4Ddv2zqZiBEiE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Positions represent an owner address' liquidity between a lower and upper tick boundary",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Safe casting methods",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/SafeCast.sol\":165:1049  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/SafeCast.sol\":165:1049  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bed88a080fd35d07153482538b8c2efa3e8a00ec567efef302aaefb9b25bbdb364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bed88a080fd35d07153482538b8c2efa3e8a00ec567efef302aaefb9b25bbdb364736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xD8 DUP11 ADDMOD 0xF 0xD3 0x5D SMOD ISZERO CALLVALUE DUP3 MSTORE8 DUP12 DUP13 0x2E STATICCALL RETURNDATACOPY DUP11 STOP 0xEC JUMP PUSH31 0xFEF302AAEFB9B25BBDB364736F6C6343000706003300000000000000000000 ",
							"sourceMap": "165:884:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bed88a080fd35d07153482538b8c2efa3e8a00ec567efef302aaefb9b25bbdb364736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xD8 DUP11 ADDMOD 0xF 0xD3 0x5D SMOD ISZERO CALLVALUE DUP3 MSTORE8 DUP12 DUP13 0x2E STATICCALL RETURNDATACOPY DUP11 STOP 0xEC JUMP PUSH31 0xFEF302AAEFB9B25BBDB364736F6C6343000706003300000000000000000000 ",
							"sourceMap": "165:884:20:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toUint160(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "BYTE",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "INVALID",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "ADDRESS",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "MSTORE8",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bed88a080fd35d07153482538b8c2efa3e8a00ec567efef302aaefb9b25bbdb364736f6c63430007060033",
									".code": [
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSHDEPLOYADDRESS",
											"source": 20
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe casting methods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for safely casting between types",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/SqrtPriceMath.sol": {
				"SqrtPriceMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Functions based on Q64.96 sqrt price and liquidity",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/SqrtPriceMath.sol\":377:10495  library SqrtPriceMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/SqrtPriceMath.sol\":377:10495  library SqrtPriceMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122083f3d9768710f301d230471ef9b2f3302939daf1d667d69d715e90fb6d57dac164736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122083f3d9768710f301d230471ef9b2f3302939daf1d667d69d715e90fb6d57dac164736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 RETURN 0xD9 PUSH23 0x8710F301D230471EF9B2F3302939DAF1D667D69D715E90 0xFB PUSH14 0x57DAC164736F6C63430007060033 ",
							"sourceMap": "377:10118:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122083f3d9768710f301d230471ef9b2f3302939daf1d667d69d715e90fb6d57dac164736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 RETURN 0xD9 PUSH23 0x8710F301D230471EF9B2F3302939DAF1D667D69D715E90 0xFB PUSH14 0x57DAC164736F6C63430007060033 ",
							"sourceMap": "377:10118:21:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAmount0Delta(uint160,uint160,int128)": "infinite",
								"getAmount0Delta(uint160,uint160,uint128,bool)": "infinite",
								"getAmount1Delta(uint160,uint160,int128)": "infinite",
								"getAmount1Delta(uint160,uint160,uint128,bool)": "infinite",
								"getNextSqrtPriceFromAmount0RoundingUp(uint160,uint128,uint256,bool)": "infinite",
								"getNextSqrtPriceFromAmount1RoundingDown(uint160,uint128,uint256,bool)": "infinite",
								"getNextSqrtPriceFromInput(uint160,uint128,uint256,bool)": "infinite",
								"getNextSqrtPriceFromOutput(uint160,uint128,uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH #[$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH [$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 21,
									"value": "B"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "CODECOPY",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "BYTE",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "EQ",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "INVALID",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "tag",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "ADDRESS",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "MSTORE8",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "RETURN",
									"source": 21
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083f3d9768710f301d230471ef9b2f3302939daf1d667d69d715e90fb6d57dac164736f6c63430007060033",
									".code": [
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSHDEPLOYADDRESS",
											"source": 21
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "ADDRESS",
											"source": 21
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "REVERT",
											"source": 21
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Functions based on Q64.96 sqrt price and liquidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/SqrtPriceMath.sol\":\"SqrtPriceMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xefd51a282ca9fbc89394776e7f5c6f96fa084ca26b71d99727780332c87d1843\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f09b719eff523f65d0d11fc476b9735e1390018d5ff585991d0fc644e913ecf\",\"dweb:/ipfs/QmNiZxxQhqteYgJdhCQ3cZ4S7bTQf2AQRUJqMVvPY3doot\"]},\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/Tick.sol": {
				"Tick": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Tick",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/Tick.sol\":292:13071  library Tick {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/Tick.sol\":292:13071  library Tick {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c43db4fb42b407d27a55085c1fe1cb281bf8e1bc04a6075ec2f30fa7db36e75664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c43db4fb42b407d27a55085c1fe1cb281bf8e1bc04a6075ec2f30fa7db36e75664736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 RETURNDATASIZE 0xB4 0xFB TIMESTAMP 0xB4 SMOD 0xD2 PUSH27 0x55085C1FE1CB281BF8E1BC04A6075EC2F30FA7DB36E75664736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "292:12779:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c43db4fb42b407d27a55085c1fe1cb281bf8e1bc04a6075ec2f30fa7db36e75664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 RETURNDATASIZE 0xB4 0xFB TIMESTAMP 0xB4 SMOD 0xD2 PUSH27 0x55085C1FE1CB281BF8E1BC04A6075EC2F30FA7DB36E75664736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "292:12779:22:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"clear(mapping(int24 => struct Tick.Info storage ref),int24)": "infinite",
								"cross(mapping(int24 => struct Tick.Info storage ref),int24,uint256,uint256,uint160,int56,uint32,uint256)": "infinite",
								"getFeeGrowthInside(mapping(int24 => struct Tick.Info storage ref),int24,int24,int24,uint256,uint256)": "infinite",
								"getRewardGrowthInside(mapping(int24 => struct Tick.Info storage ref),int24,int24,int24,uint256)": "infinite",
								"tickSpacingToMaxLiquidityPerTick(int24)": "infinite",
								"update(mapping(int24 => struct Tick.Info storage ref),int24,int24,int128,uint256,uint256,uint256,uint160,int56,uint32,bool,uint128)": "infinite",
								"updateStake(mapping(int24 => struct Tick.Info storage ref),int24,int128,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH #[$]",
									"source": 22,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH [$]",
									"source": 22,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 22,
									"value": "B"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "CODECOPY",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP1",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "MLOAD",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "BYTE",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 22,
									"value": "73"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "EQ",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "INVALID",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "tag",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "ADDRESS",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 22,
									"value": "73"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "MSTORE8",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "RETURN",
									"source": 22
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c43db4fb42b407d27a55085c1fe1cb281bf8e1bc04a6075ec2f30fa7db36e75664736f6c63430007060033",
									".code": [
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSHDEPLOYADDRESS",
											"source": 22
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "ADDRESS",
											"source": 22
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "REVERT",
											"source": 22
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Tick\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains functions for managing tick processes and relevant calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/Tick.sol\":\"Tick\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/Tick.sol\":{\"keccak256\":\"0xb5ebd80c667f4501dba65f4e39e51ff36e5334480849e0ed8604222d20b4ed1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://246f590513441ac0f307170f5099e4a0c0b1f579406fc30b909b249858dbd099\",\"dweb:/ipfs/QmaA5uC3eck7nMqyJbpSPEhmXmAXaKLNBSS1Lfnzzzjc95\"]},\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains functions for managing tick processes and relevant calculations",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/TickBitmap.sol": {
				"TickBitmap": {
					"abi": [],
					"devdoc": {
						"details": "The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.",
						"kind": "dev",
						"methods": {},
						"title": "Packed tick initialized state library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/TickBitmap.sol\":339:4089  library TickBitmap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/TickBitmap.sol\":339:4089  library TickBitmap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208db30deaa3b422a9b259bf24de98ea10b12f47dc5014597b215a337d1047629964736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208db30deaa3b422a9b259bf24de98ea10b12f47dc5014597b215a337d1047629964736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xB3 0xD 0xEA LOG3 0xB4 0x22 0xA9 0xB2 MSIZE 0xBF 0x24 0xDE SWAP9 0xEA LT 0xB1 0x2F SELFBALANCE 0xDC POP EQ MSIZE PUSH28 0x215A337D1047629964736F6C63430007060033000000000000000000 ",
							"sourceMap": "339:3750:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208db30deaa3b422a9b259bf24de98ea10b12f47dc5014597b215a337d1047629964736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xB3 0xD 0xEA LOG3 0xB4 0x22 0xA9 0xB2 MSIZE 0xBF 0x24 0xDE SWAP9 0xEA LT 0xB1 0x2F SELFBALANCE 0xDC POP EQ MSIZE PUSH28 0x215A337D1047629964736F6C63430007060033000000000000000000 ",
							"sourceMap": "339:3750:23:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"flipTick(mapping(int16 => uint256),int24,int24)": "infinite",
								"nextInitializedTickWithinOneWord(mapping(int16 => uint256),int24,int24,bool)": "infinite",
								"position(int24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH #[$]",
									"source": 23,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH [$]",
									"source": 23,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 23,
									"value": "B"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "CODECOPY",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "BYTE",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 23,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "INVALID",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "tag",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "ADDRESS",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 23,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "MSTORE8",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "RETURN",
									"source": 23
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208db30deaa3b422a9b259bf24de98ea10b12f47dc5014597b215a337d1047629964736f6c63430007060033",
									".code": [
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSHDEPLOYADDRESS",
											"source": 23
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "ADDRESS",
											"source": 23
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "REVERT",
											"source": 23
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/TickBitmap.sol\":\"TickBitmap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"contracts/core/libraries/TickBitmap.sol\":{\"keccak256\":\"0xd829fadfca3f8f5870c877c7eeceb4a692603c16b711174526129987e8745f5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d2cbf3802f7e611708a45bc390ee9307d947e49b348294591659444b9989c05\",\"dweb:/ipfs/Qmcny7JNyVYCtcZG3b1BL4ThuKREmAkE9ZKaC3i32pnt7X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Stores a packed mapping of tick index to its initialized state",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/TickMath.sol\":313:8644  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/TickMath.sol\":313:8644  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201f7d5a2b64a83eb632ae3e9a4f9322d37ce6aa9a61a7570c2bcce32bbf42c0c064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201f7d5a2b64a83eb632ae3e9a4f9322d37ce6aa9a61a7570c2bcce32bbf42c0c064736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F PUSH30 0x5A2B64A83EB632AE3E9A4F9322D37CE6AA9A61A7570C2BCCE32BBF42C0C0 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "313:8331:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201f7d5a2b64a83eb632ae3e9a4f9322d37ce6aa9a61a7570c2bcce32bbf42c0c064736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F PUSH30 0x5A2B64A83EB632AE3E9A4F9322D37CE6AA9A61A7570C2BCCE32BBF42C0C0 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "313:8331:24:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH #[$]",
									"source": 24,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [$]",
									"source": 24,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 24,
									"value": "B"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "CODECOPY",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "BYTE",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 24,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "EQ",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "INVALID",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "tag",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "ADDRESS",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 24,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE8",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "RETURN",
									"source": 24
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f7d5a2b64a83eb632ae3e9a4f9322d37ce6aa9a61a7570c2bcce32bbf42c0c064736f6c63430007060033",
									".code": [
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 24
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "ADDRESS",
											"source": 24
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "REVERT",
											"source": 24
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "TransferHelper",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/TransferHelper.sol\":253:902  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/TransferHelper.sol\":253:902  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f39afd2e5ed9dd7d8976314522093658e4fad3d2e5ccbd5036831d04500eb53364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f39afd2e5ed9dd7d8976314522093658e4fad3d2e5ccbd5036831d04500eb53364736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SWAP11 REVERT 0x2E 0x5E 0xD9 0xDD PUSH30 0x8976314522093658E4FAD3D2E5CCBD5036831D04500EB53364736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "253:649:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f39afd2e5ed9dd7d8976314522093658e4fad3d2e5ccbd5036831d04500eb53364736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN SWAP11 REVERT 0x2E 0x5E 0xD9 0xDD PUSH30 0x8976314522093658E4FAD3D2E5CCBD5036831D04500EB53364736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "253:649:25:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH #[$]",
									"source": 25,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH [$]",
									"source": 25,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 25,
									"value": "B"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "CODECOPY",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP1",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "MLOAD",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 25,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "BYTE",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 25,
									"value": "73"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "EQ",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "JUMPI",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "INVALID",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "tag",
									"source": 25,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "ADDRESS",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 25,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "MSTORE",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 25,
									"value": "73"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP2",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "MSTORE8",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP2",
									"source": 25
								},
								{
									"begin": 253,
									"end": 902,
									"name": "RETURN",
									"source": 25
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f39afd2e5ed9dd7d8976314522093658e4fad3d2e5ccbd5036831d04500eb53364736f6c63430007060033",
									".code": [
										{
											"begin": 253,
											"end": 902,
											"name": "PUSHDEPLOYADDRESS",
											"source": 25
										},
										{
											"begin": 253,
											"end": 902,
											"name": "ADDRESS",
											"source": 25
										},
										{
											"begin": 253,
											"end": 902,
											"name": "EQ",
											"source": 25
										},
										{
											"begin": 253,
											"end": 902,
											"name": "PUSH",
											"source": 25,
											"value": "80"
										},
										{
											"begin": 253,
											"end": 902,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 902,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 253,
											"end": 902,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 902,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 253,
											"end": 902,
											"name": "REVERT",
											"source": 25
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"TransferHelper\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]},\"contracts/core/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3bbe07a0684d98efe73f7012e446873494e74983e1f75a16d42c25b956d61651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78ac9659c70ba3253a6e526ba5a144994fb3d32df2e9537787eeb45aae320aec\",\"dweb:/ipfs/QmbaZRbPP2wFZ9coJd2iyPM37hm3kXzPLuRtL6KKr1MCSL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/UnsafeMath.sol": {
				"UnsafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Math functions that do not check inputs or outputs",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/UnsafeMath.sol\":244:659  library UnsafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/UnsafeMath.sol\":244:659  library UnsafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e196994e8a82e1db244230199d85b8a863b6723c6e115053df1cbf87994f527c64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e196994e8a82e1db244230199d85b8a863b6723c6e115053df1cbf87994f527c64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 SWAP7 SWAP10 0x4E DUP11 DUP3 0xE1 0xDB 0x24 TIMESTAMP ADDRESS NOT SWAP14 DUP6 0xB8 0xA8 PUSH4 0xB6723C6E GT POP MSTORE8 0xDF SHR 0xBF DUP8 SWAP10 0x4F MSTORE PUSH29 0x64736F6C63430007060033000000000000000000000000000000000000 ",
							"sourceMap": "244:415:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e196994e8a82e1db244230199d85b8a863b6723c6e115053df1cbf87994f527c64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 SWAP7 SWAP10 0x4E DUP11 DUP3 0xE1 0xDB 0x24 TIMESTAMP ADDRESS NOT SWAP14 DUP6 0xB8 0xA8 PUSH4 0xB6723C6E GT POP MSTORE8 0xDF SHR 0xBF DUP8 SWAP10 0x4F MSTORE PUSH29 0x64736F6C63430007060033000000000000000000000000000000000000 ",
							"sourceMap": "244:415:26:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"divRoundingUp(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH #[$]",
									"source": 26,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH [$]",
									"source": 26,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 26,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "CODECOPY",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP1",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "MLOAD",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "BYTE",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 26,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "EQ",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH [tag]",
									"source": 26,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "JUMPI",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "INVALID",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "tag",
									"source": 26,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "JUMPDEST",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "ADDRESS",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "MSTORE",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 26,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP2",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "MSTORE8",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP2",
									"source": 26
								},
								{
									"begin": 244,
									"end": 659,
									"name": "RETURN",
									"source": 26
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e196994e8a82e1db244230199d85b8a863b6723c6e115053df1cbf87994f527c64736f6c63430007060033",
									".code": [
										{
											"begin": 244,
											"end": 659,
											"name": "PUSHDEPLOYADDRESS",
											"source": 26
										},
										{
											"begin": 244,
											"end": 659,
											"name": "ADDRESS",
											"source": 26
										},
										{
											"begin": 244,
											"end": 659,
											"name": "EQ",
											"source": 26
										},
										{
											"begin": 244,
											"end": 659,
											"name": "PUSH",
											"source": 26,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 659,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 659,
											"name": "MSTORE",
											"source": 26
										},
										{
											"begin": 244,
											"end": 659,
											"name": "PUSH",
											"source": 26,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 659,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 244,
											"end": 659,
											"name": "REVERT",
											"source": 26
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math functions that do not check inputs or outputs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods that perform common math functions but do not do any overflow or underflow checks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/UnsafeMath.sol\":\"UnsafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods that perform common math functions but do not do any overflow or underflow checks",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/core/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/core/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"id": 2,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "58:19:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 112,
							"linearizedBaseContracts": [
								112
							],
							"name": "IERC721",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "106:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 11,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "217:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "239:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "259:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:67:0"
									},
									"src": "202:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "292:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 20,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "409:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "432:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "458:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:74:0"
									},
									"src": "394:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "491:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 29,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "637:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "660:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "686:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 26,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "686:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:64:0"
									},
									"src": "616:85:0"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "709:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "812:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:15:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "850:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:0"
									},
									"scope": 112,
									"src": "793:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "875:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 45,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1035:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:17:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1075:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:15:0"
									},
									"scope": 112,
									"src": "1018:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1098:578:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1708:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1722:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1734:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1751:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 53,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1751:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:64:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1780:0:0"
									},
									"scope": 112,
									"src": "1682:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1789:721:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2542:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2556:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2568:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2541:43:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2593:0:0"
									},
									"scope": 112,
									"src": "2516:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2602:748:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "3378:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "3392:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "3404:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:43:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3429:0:0"
									},
									"scope": 112,
									"src": "3356:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "3438:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 85,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3925:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "3937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3924:29:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3962:0:0"
									},
									"scope": 112,
									"src": "3908:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "3971:324:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "4328:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "4346:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 89,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4346:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:33:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4369:0:0"
									},
									"scope": 112,
									"src": "4301:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "4378:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4550:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:17:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4590:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4590:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4589:18:0"
									},
									"scope": 112,
									"src": "4529:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4616:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4790:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4805:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4789:33:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4846:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4846:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4845:6:0"
									},
									"scope": 112,
									"src": "4764:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 113,
							"src": "81:4774:0"
						}
					],
					"src": "33:4824:0"
				},
				"id": 0
			},
			"contracts/core/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "contracts/core/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"INonfungiblePositionManager": [
							324
						]
					},
					"id": 325,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:1"
						},
						{
							"id": 115,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "72:19:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "97:172:1",
								"text": "@title Non-fungible token for positions\n @notice Wraps CL positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 324,
							"linearizedBaseContracts": [
								324
							],
							"name": "INonfungiblePositionManager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "315:463:1",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"id": 127,
									"name": "IncreaseLiquidity",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "808:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "833:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 120,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "852:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "869:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:78:1"
									},
									"src": "784:102:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "892:423:1",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"id": 138,
									"name": "DecreaseLiquidity",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1345:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1370:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 131,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1389:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1406:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:78:1"
									},
									"src": "1321:102:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "1429:527:1",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"id": 149,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1976:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2001:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2020:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2020:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2037:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:78:1"
									},
									"src": "1962:92:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "2060:122:1",
										"text": "@notice Emitted when a new Token Descriptor is set\n @param tokenDescriptor Address of the new Token Descriptor"
									},
									"id": 154,
									"name": "TokenDescriptorChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenDescriptor",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2217:31:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2216:33:1"
									},
									"src": "2188:62:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2256:90:1",
										"text": "@notice Emitted when a new Owner is set\n @param owner Address of the new Owner"
									},
									"id": 159,
									"name": "TransferOwnership",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2376:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2376:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:23:1"
									},
									"src": "2352:47:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "2407:1188:1",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return tickSpacing The tick spacing associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3620:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3620:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3619:17:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3701:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 164,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3701:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3728:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3728:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3759:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3788:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3788:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3817:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 172,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3817:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3849:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 174,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3849:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3879:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 176,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3879:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3909:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 178,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3941:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3988:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3988:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4035:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 184,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4035:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "4069:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 186,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3686:413:1"
									},
									"scope": 324,
									"src": "3601:499:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "4108:105:1",
										"text": "@notice Returns the address of the Token Descriptor, that handles generating token URIs for Positions"
									},
									"functionSelector": "5a9d7a68",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenDescriptor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4243:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4269:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4268:9:1"
									},
									"scope": 324,
									"src": "4219:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "4286:90:1",
										"text": "@notice Returns the address of the Owner, that is allowed to set a new TokenDescriptor"
									},
									"functionSelector": "8da5cb5b",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4396:2:1"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4422:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4422:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:9:1"
									},
									"scope": 324,
									"src": "4382:49:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 226,
									"members": [
										{
											"constant": false,
											"id": 203,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4468:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 202,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4468:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 205,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4493:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 204,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4493:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 207,
											"mutability": "mutable",
											"name": "tickSpacing",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4518:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 206,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4518:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 209,
											"mutability": "mutable",
											"name": "tickLower",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4546:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 208,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4546:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 211,
											"mutability": "mutable",
											"name": "tickUpper",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4572:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 210,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4572:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 213,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4598:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 212,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4598:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 215,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4631:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 214,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4631:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 217,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4664:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 216,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4664:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 219,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4693:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 218,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4693:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 221,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4722:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 220,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4722:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 223,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4750:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 222,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4750:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 225,
											"mutability": "mutable",
											"name": "sqrtPriceX96",
											"nodeType": "VariableDeclaration",
											"scope": 226,
											"src": "4777:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 224,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "4777:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nodeType": "StructDefinition",
									"scope": 324,
									"src": "4439:366:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "4813:593:1",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "b5007d1f",
									"id": 240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5426:26:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$226_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 228,
													"name": "MintParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 226,
													"src": "5426:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$226_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5425:28:1"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5507:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5524:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 233,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5524:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5543:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5543:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5560:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5506:70:1"
									},
									"scope": 324,
									"src": "5412:165:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 253,
									"members": [
										{
											"constant": false,
											"id": 242,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 253,
											"src": "5627:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 241,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5627:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 244,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nodeType": "VariableDeclaration",
											"scope": 253,
											"src": "5653:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 243,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5653:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 246,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nodeType": "VariableDeclaration",
											"scope": 253,
											"src": "5686:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 245,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5686:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 248,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 253,
											"src": "5719:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 247,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5719:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 250,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 253,
											"src": "5748:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 249,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5748:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 252,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 253,
											"src": "5777:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 251,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5777:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nodeType": "StructDefinition",
									"scope": 324,
									"src": "5585:216:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "5809:830:1",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6672:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$253_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 255,
													"name": "IncreaseLiquidityParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 253,
													"src": "6672:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$253_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6671:41:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6766:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 258,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6766:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6785:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6802:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6765:53:1"
									},
									"scope": 324,
									"src": "6645:174:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 276,
									"members": [
										{
											"constant": false,
											"id": 267,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "6869:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 266,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6869:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 269,
											"mutability": "mutable",
											"name": "liquidity",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "6895:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 268,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6895:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 271,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "6923:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 270,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6923:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 273,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "6952:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 272,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6952:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 275,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 276,
											"src": "6981:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 274,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6981:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nodeType": "StructDefinition",
									"scope": 324,
									"src": "6827:178:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "7013:1005:1",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed\n @dev The use of this function can cause a loss to users of the NonfungiblePositionManager\n @dev for tokens that have very high decimals.\n @dev The amount of tokens necessary for the loss is: 3.4028237e+38.\n @dev This is equivalent to 1e20 value with 18 decimals."
									},
									"functionSelector": "0c49ccbe",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "8051:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$276_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 278,
													"name": "DecreaseLiquidityParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 276,
													"src": "8051:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$276_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8050:41:1"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "8145:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8145:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "8162:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8162:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8144:34:1"
									},
									"scope": 324,
									"src": "8024:155:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 295,
									"members": [
										{
											"constant": false,
											"id": 288,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 295,
											"src": "8219:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 287,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8219:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 290,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 295,
											"src": "8245:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 289,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8245:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 292,
											"mutability": "mutable",
											"name": "amount0Max",
											"nodeType": "VariableDeclaration",
											"scope": 295,
											"src": "8273:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 291,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "8273:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 294,
											"mutability": "mutable",
											"name": "amount1Max",
											"nodeType": "VariableDeclaration",
											"scope": 295,
											"src": "8302:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 293,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "8302:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nodeType": "StructDefinition",
									"scope": 324,
									"src": "8187:141:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "8336:572:1",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @notice Used to update staked positions before deposit and withdraw\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "8931:29:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$295_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 297,
													"name": "CollectParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 295,
													"src": "8931:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$295_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8930:31:1"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "8988:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8988:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "9005:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8987:34:1"
									},
									"scope": 324,
									"src": "8914:108:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "9030:215:1",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "9265:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9264:17:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9298:0:1"
									},
									"scope": 324,
									"src": "9251:48:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "9307:121:1",
										"text": "@notice Sets a new Token Descriptor\n @param _tokenDescriptor Address of the new Token Descriptor to be chosen"
									},
									"functionSelector": "b6dc7ea3",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenDescriptor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "_tokenDescriptor",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "9462:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9462:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9461:26:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9496:0:1"
									},
									"scope": 324,
									"src": "9434:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "9505:97:1",
										"text": "@notice Sets a new Owner address\n @param _owner Address of the new Owner to be chosen"
									},
									"functionSelector": "13af4035",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "9626:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9626:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9625:16:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9650:0:1"
									},
									"scope": 324,
									"src": "9608:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 325,
							"src": "269:9385:1"
						}
					],
					"src": "46:9610:1"
				},
				"id": 1
			},
			"contracts/core/VeloOracle.sol": {
				"ast": {
					"absolutePath": "contracts/core/VeloOracle.sol",
					"exportedSymbols": {
						"BitMath": [
							1578
						],
						"FixedPoint128": [
							1585
						],
						"FixedPoint96": [
							1595
						],
						"FullMath": [
							1768
						],
						"ICLPool": [
							663
						],
						"ICLPoolActions": [
							911
						],
						"ICLPoolConstants": [
							963
						],
						"ICLPoolDerivedState": [
							994
						],
						"ICLPoolEvents": [
							1111
						],
						"ICLPoolOwnerActions": [
							1123
						],
						"ICLPoolState": [
							1299
						],
						"IERC20": [
							416
						],
						"IERC20Minimal": [
							735
						],
						"IERC721": [
							112
						],
						"INonfungiblePositionManager": [
							324
						],
						"LiquidityAmounts": [
							2108
						],
						"LiquidityMath": [
							2160
						],
						"LowGasSafeMath": [
							2290
						],
						"Oracle": [
							3026
						],
						"Position": [
							3211
						],
						"SafeCast": [
							3281
						],
						"SqrtPriceMath": [
							3798
						],
						"Tick": [
							4417
						],
						"TickBitmap": [
							4673
						],
						"TickMath": [
							5208
						],
						"TransferHelper": [
							5259
						],
						"UnsafeMath": [
							5275
						],
						"VeloOracle": [
							641
						]
					},
					"id": 642,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 326,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolDerivedState.sol",
							"file": "./interfaces/pool/ICLPoolDerivedState.sol",
							"id": 327,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 995,
							"src": "61:51:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
							"file": "./libraries/LowGasSafeMath.sol",
							"id": 328,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 2291,
							"src": "114:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SafeCast.sol",
							"file": "./libraries/SafeCast.sol",
							"id": 329,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 3282,
							"src": "156:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/Tick.sol",
							"file": "./libraries/Tick.sol",
							"id": 330,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 4418,
							"src": "192:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TickBitmap.sol",
							"file": "./libraries/TickBitmap.sol",
							"id": 331,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 4674,
							"src": "224:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/Position.sol",
							"file": "./libraries/Position.sol",
							"id": 332,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 3212,
							"src": "262:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/Oracle.sol",
							"file": "./libraries/Oracle.sol",
							"id": 333,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 3027,
							"src": "298:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/ICLPool.sol",
							"file": "./interfaces/ICLPool.sol",
							"id": 334,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 664,
							"src": "332:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FullMath.sol",
							"file": "./libraries/FullMath.sol",
							"id": 335,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 1769,
							"src": "368:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FixedPoint128.sol",
							"file": "./libraries/FixedPoint128.sol",
							"id": 336,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 1586,
							"src": "404:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TransferHelper.sol",
							"file": "./libraries/TransferHelper.sol",
							"id": 337,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 5260,
							"src": "445:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TickMath.sol",
							"file": "./libraries/TickMath.sol",
							"id": 338,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 5209,
							"src": "487:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
							"file": "./libraries/LiquidityMath.sol",
							"id": 339,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 2161,
							"src": "523:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LiquidityAmounts.sol",
							"file": "./libraries/LiquidityAmounts.sol",
							"id": 340,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 2109,
							"src": "564:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SqrtPriceMath.sol",
							"file": "./libraries/SqrtPriceMath.sol",
							"id": 341,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 3799,
							"src": "608:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 342,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 113,
							"src": "649:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/INonfungiblePositionManager.sol",
							"file": "./INonfungiblePositionManager.sol",
							"id": 343,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 325,
							"src": "674:43:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/ICLPool.sol",
							"file": "./interfaces/ICLPool.sol",
							"id": 344,
							"nodeType": "ImportDirective",
							"scope": 642,
							"sourceUnit": 664,
							"src": "719:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 416,
							"linearizedBaseContracts": [
								416
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 352,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "798:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "820:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "840:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:57:2"
									},
									"src": "783:72:2"
								},
								{
									"anonymous": false,
									"id": 360,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "876:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "899:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "924:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:63:2"
									},
									"src": "861:78:2"
								},
								{
									"functionSelector": "18160ddd",
									"id": 365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "965:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "991:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:9:2"
									},
									"scope": 416,
									"src": "945:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:17:2"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1065:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1064:9:2"
									},
									"scope": 416,
									"src": "1006:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1098:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1110:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1097:27:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1143:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1143:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1142:6:2"
									},
									"scope": 416,
									"src": "1080:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1174:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1189:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:32:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1229:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:9:2"
									},
									"scope": 416,
									"src": "1155:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1261:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1278:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:32:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1311:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1311:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:6:2"
									},
									"scope": 416,
									"src": "1244:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1345:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1359:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1371:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:41:2"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1404:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 407,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1404:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:6:2"
									},
									"scope": 416,
									"src": "1323:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1433:2:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "1459:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 412,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1459:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:7:2"
									},
									"scope": 416,
									"src": "1416:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 642,
							"src": "759:710:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 641,
							"linearizedBaseContracts": [
								641
							],
							"name": "VeloOracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "11ea5441",
									"id": 418,
									"mutability": "mutable",
									"name": "V3Pool",
									"nodeType": "VariableDeclaration",
									"scope": 641,
									"src": "1498:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ICLPoolDerivedState_$994",
										"typeString": "contract ICLPoolDerivedState"
									},
									"typeName": {
										"id": 417,
										"name": "ICLPoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 994,
										"src": "1498:19:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolDerivedState_$994",
											"typeString": "contract ICLPoolDerivedState"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "1606:985:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "1621:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1637:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1629:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 427,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1629:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1629:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1621:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706f6f6c2061646472657373",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1641:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7e060f1e5ee73f3c2beb76a55480adf5ff315d0e0edd965836493e574235ec6",
																"typeString": "literal_string \"Invalid pool address\""
															},
															"value": "Invalid pool address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7e060f1e5ee73f3c2beb76a55480adf5ff315d0e0edd965836493e574235ec6",
																"typeString": "literal_string \"Invalid pool address\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1613:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1613:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1613:51:2"
											},
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1703:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 435,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1703:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 438,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "1737:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 437,
																"name": "ICLPoolConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "1720:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICLPoolConstants_$963_$",
																	"typeString": "type(contract ICLPoolConstants)"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1720:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICLPoolConstants_$963",
																"typeString": "contract ICLPoolConstants"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 926,
														"src": "1720:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1720:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1703:48:2"
											},
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "token1",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1758:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 443,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1758:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 450,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 446,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "1792:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 445,
																"name": "ICLPoolConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "1775:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICLPoolConstants_$963_$",
																	"typeString": "type(contract ICLPoolConstants)"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1775:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICLPoolConstants_$963",
																"typeString": "contract ICLPoolConstants"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "1775:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1775:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1758:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 452,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "1821:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1831:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 453,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1831:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1831:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "1821:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 458,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "1845:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1863:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1855:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 459,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1855:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1855:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "1845:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1821:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e73",
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1867:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3",
																"typeString": "literal_string \"Invalid tokens\""
															},
															"value": "Invalid tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18c8654bb6ae760fb2877e79fd627dbf13e3a26400e2732e171cf45a387d53e3",
																"typeString": "literal_string \"Invalid tokens\""
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1813:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1813:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "1813:71:2"
											},
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "dec0",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "1950:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 468,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 471,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "1970:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 470,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "1963:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$416_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1963:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$416",
																"typeString": "contract IERC20"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 415,
														"src": "1963:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1950:38:2"
											},
											{
												"assignments": [
													null,
													477,
													null,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "tick",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "2039:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 476,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2039:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null
												],
												"id": 483,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 479,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "2074:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 478,
																"name": "ICLPoolState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "2061:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICLPoolState_$1299_$",
																	"typeString": "type(contract ICLPoolState)"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2061:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICLPoolState_$1299",
																"typeString": "contract ICLPoolState"
															}
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1142,
														"src": "2061:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,bool)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2036:51:2"
											},
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "sqrtRatioX96",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "2119:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 484,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2119:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 490,
												"initialValue": {
													"arguments": [
														{
															"id": 488,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "2170:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 486,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5208,
															"src": "2142:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$5208_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5068,
														"src": "2142:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2119:56:2"
											},
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"mutability": "mutable",
														"name": "sqrtPrice",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "2182:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 491,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2182:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 497,
												"initialValue": {
													"arguments": [
														{
															"id": 495,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "2210:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2202:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2202:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2202:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2182:41:2"
											},
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "priceRaw",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "2283:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 498,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2283:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 510,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 502,
																"name": "sqrtPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "2318:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 503,
																"name": "sqrtPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "2330:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2318:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																"typeString": "int_const 6277...(50 digits omitted)...2896"
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2344:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "313932",
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2347:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_192_by_1",
																	"typeString": "int_const 192"
																},
																"value": "192"
															},
															"src": "2344:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																"typeString": "int_const 6277...(50 digits omitted)...2896"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																"typeString": "int_const 6277...(50 digits omitted)...2896"
															}
														],
														"expression": {
															"id": 500,
															"name": "FullMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "2302:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																"typeString": "type(library FullMath)"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1724,
														"src": "2302:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2283:68:2"
											},
											{
												"expression": {
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2360:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 512,
																"name": "priceRaw",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "2368:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2379:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2368:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "30",
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2427:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "2368:60:2",
														"trueExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2399:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2403:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "2399:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2407:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2411:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "2407:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																{
																	"id": 523,
																	"name": "priceRaw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "2415:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 515,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "2383:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1724,
																"src": "2383:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2383:41:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2360:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "2360:68:2"
											},
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 529,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "2529:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 530,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "2537:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2546:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 532,
																					"name": "dec0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 469,
																					"src": "2553:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "3132",
																					"id": 533,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2560:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_12_by_1",
																						"typeString": "int_const 12"
																					},
																					"value": "12"
																				},
																				"src": "2553:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 535,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2552:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2546:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2545:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2537:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2529:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "2529:35:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 541,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "2581:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 542,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2580:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 543,
												"nodeType": "Return",
												"src": "2573:14:2"
											}
										]
									},
									"functionSelector": "f29d0040",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1556:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:14:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "price",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "1591:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:15:2"
									},
									"scope": 641,
									"src": "1538:1053:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "2679:339:2",
										"statements": [
											{
												"assignments": [
													555
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "tickSpacing",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "2690:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 554,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2690:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 557,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "2727:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 556,
																"name": "ICLPoolConstants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "2710:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICLPoolConstants_$963_$",
																	"typeString": "type(contract ICLPoolConstants)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICLPoolConstants_$963",
																"typeString": "contract ICLPoolConstants"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tickSpacing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 956,
														"src": "2710:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
															"typeString": "function () view external returns (int24)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2710:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2690:56:2"
											},
											{
												"assignments": [
													null,
													563,
													null,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "currentTick",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "2760:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 562,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2760:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null
												],
												"id": 569,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 565,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "2797:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 564,
																"name": "ICLPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "2789:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICLPool_$663_$",
																	"typeString": "type(contract ICLPool)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2789:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICLPool_$663",
																"typeString": "contract ICLPool"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1142,
														"src": "2789:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,bool)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2789:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2757:53:2"
											},
											{
												"expression": {
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 570,
														"name": "currentTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "2821:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 571,
																		"name": "currentTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "2836:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 572,
																		"name": "tickSpacing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "2850:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"src": "2836:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																}
															],
															"id": 574,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2835:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 575,
															"name": "tickSpacing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "2865:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"src": "2835:41:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2821:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "2821:55:2"
											},
											{
												"expression": {
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 579,
														"name": "lowTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "2887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 580,
															"name": "currentTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "2897:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 581,
															"name": "tickSpacing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "2911:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"src": "2897:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2887:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "2887:35:2"
											},
											{
												"expression": {
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 585,
														"name": "highTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "2933:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 586,
															"name": "currentTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "2944:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 587,
															"name": "tickSpacing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "2958:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"src": "2944:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2933:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "2933:36:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 591,
															"name": "lowTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "2988:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 592,
															"name": "highTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "2997:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"id": 593,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2987:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
														"typeString": "tuple(int24,int24)"
													}
												},
												"functionReturnParameters": 553,
												"id": 594,
												"nodeType": "Return",
												"src": "2980:26:2"
											}
										]
									},
									"functionSelector": "802036f5",
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTicks",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2614:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2613:14:2"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "lowTick",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2649:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 549,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2649:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "highTick",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2664:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 551,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2664:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:31:2"
									},
									"scope": 641,
									"src": "2595:423:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 599,
									"mutability": "mutable",
									"name": "_pool",
									"nodeType": "VariableDeclaration",
									"scope": 641,
									"src": "3022:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 597,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3022:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837636663324461336261353938656634446536393239303566654463413332353635414238333645",
										"id": 598,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3038:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x7cfc2Da3ba598ef4De692905feDcA32565AB836E"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3158:385:2",
										"statements": [
											{
												"assignments": [
													607,
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "tickLower",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3203:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 606,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "3203:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "tickUpper",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3219:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 608,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "3219:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"arguments": [
														{
															"id": 611,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "3247:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 610,
														"name": "getTicks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "3238:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_int24_$_t_int24_$",
															"typeString": "function (address) view returns (int24,int24)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3238:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
														"typeString": "tuple(int24,int24)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3202:51:2"
											},
											{
												"assignments": [
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "sqrtPriceLower",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3262:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 614,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "3262:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 618,
															"name": "tickLower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "3315:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 616,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5208,
															"src": "3287:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$5208_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5068,
														"src": "3287:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3287:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3262:63:2"
											},
											{
												"assignments": [
													622
												],
												"declarations": [
													{
														"constant": false,
														"id": 622,
														"mutability": "mutable",
														"name": "sqrtPriceUpper",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3332:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 621,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "3332:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"initialValue": {
													"arguments": [
														{
															"id": 625,
															"name": "tickUpper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "3385:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 623,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5208,
															"src": "3357:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$5208_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5068,
														"src": "3357:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3357:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3332:63:2"
											},
											{
												"assignments": [
													629
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "liquidity",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3408:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 628,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3408:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 636,
												"initialValue": {
													"arguments": [
														{
															"id": 632,
															"name": "sqrtPriceLower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "3468:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 633,
															"name": "sqrtPriceUpper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "3484:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 634,
															"name": "amount0ToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "3500:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 630,
															"name": "LiquidityAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "3428:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$2108_$",
																"typeString": "type(library LiquidityAmounts)"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getLiquidityForAmount0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1840,
														"src": "3428:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
															"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3428:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3408:106:2"
											},
											{
												"expression": {
													"id": 637,
													"name": "liquidity",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 629,
													"src": "3530:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 605,
												"id": 638,
												"nodeType": "Return",
												"src": "3523:16:2"
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "amount0ToMint",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3105:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3104:23:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3149:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 603,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:9:2"
									},
									"scope": 641,
									"src": "3083:460:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 642,
							"src": "1473:2073:2"
						}
					],
					"src": "33:3513:2"
				},
				"id": 2
			},
			"contracts/core/interfaces/ICLPool.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/ICLPool.sol",
					"exportedSymbols": {
						"ICLPool": [
							663
						],
						"ICLPoolActions": [
							911
						],
						"ICLPoolConstants": [
							963
						],
						"ICLPoolDerivedState": [
							994
						],
						"ICLPoolEvents": [
							1111
						],
						"ICLPoolOwnerActions": [
							1123
						],
						"ICLPoolState": [
							1299
						]
					},
					"id": 664,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 643,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolConstants.sol",
							"file": "./pool/ICLPoolConstants.sol",
							"id": 644,
							"nodeType": "ImportDirective",
							"scope": 664,
							"sourceUnit": 964,
							"src": "71:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolState.sol",
							"file": "./pool/ICLPoolState.sol",
							"id": 645,
							"nodeType": "ImportDirective",
							"scope": 664,
							"sourceUnit": 1300,
							"src": "109:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolDerivedState.sol",
							"file": "./pool/ICLPoolDerivedState.sol",
							"id": 646,
							"nodeType": "ImportDirective",
							"scope": 664,
							"sourceUnit": 995,
							"src": "143:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolActions.sol",
							"file": "./pool/ICLPoolActions.sol",
							"id": 647,
							"nodeType": "ImportDirective",
							"scope": 664,
							"sourceUnit": 912,
							"src": "184:35:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolOwnerActions.sol",
							"file": "./pool/ICLPoolOwnerActions.sol",
							"id": 648,
							"nodeType": "ImportDirective",
							"scope": 664,
							"sourceUnit": 1124,
							"src": "220:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolEvents.sol",
							"file": "./pool/ICLPoolEvents.sol",
							"id": 649,
							"nodeType": "ImportDirective",
							"scope": 664,
							"sourceUnit": 1112,
							"src": "261:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 651,
										"name": "ICLPoolConstants",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 963,
										"src": "574:16:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolConstants_$963",
											"typeString": "contract ICLPoolConstants"
										}
									},
									"id": 652,
									"nodeType": "InheritanceSpecifier",
									"src": "574:16:3"
								},
								{
									"baseName": {
										"id": 653,
										"name": "ICLPoolState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1299,
										"src": "596:12:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolState_$1299",
											"typeString": "contract ICLPoolState"
										}
									},
									"id": 654,
									"nodeType": "InheritanceSpecifier",
									"src": "596:12:3"
								},
								{
									"baseName": {
										"id": 655,
										"name": "ICLPoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 994,
										"src": "614:19:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolDerivedState_$994",
											"typeString": "contract ICLPoolDerivedState"
										}
									},
									"id": 656,
									"nodeType": "InheritanceSpecifier",
									"src": "614:19:3"
								},
								{
									"baseName": {
										"id": 657,
										"name": "ICLPoolActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 911,
										"src": "639:14:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolActions_$911",
											"typeString": "contract ICLPoolActions"
										}
									},
									"id": 658,
									"nodeType": "InheritanceSpecifier",
									"src": "639:14:3"
								},
								{
									"baseName": {
										"id": 659,
										"name": "ICLPoolEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1111,
										"src": "659:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolEvents_$1111",
											"typeString": "contract ICLPoolEvents"
										}
									},
									"id": 660,
									"nodeType": "InheritanceSpecifier",
									"src": "659:13:3"
								},
								{
									"baseName": {
										"id": 661,
										"name": "ICLPoolOwnerActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1123,
										"src": "678:19:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolOwnerActions_$1123",
											"typeString": "contract ICLPoolOwnerActions"
										}
									},
									"id": 662,
									"nodeType": "InheritanceSpecifier",
									"src": "678:19:3"
								}
							],
							"contractDependencies": [
								911,
								963,
								994,
								1111,
								1123,
								1299
							],
							"contractKind": "interface",
							"documentation": {
								"id": 650,
								"nodeType": "StructuredDocumentation",
								"src": "297:252:3",
								"text": "@title The interface for a CL Pool\n @notice A CL pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663,
								1123,
								1111,
								911,
								994,
								1299,
								963
							],
							"name": "ICLPool",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 664,
							"src": "549:151:3"
						}
					],
					"src": "45:656:3"
				},
				"id": 3
			},
			"contracts/core/interfaces/IERC20Minimal.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/IERC20Minimal.sol",
					"exportedSymbols": {
						"IERC20Minimal": [
							735
						]
					},
					"id": 736,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 666,
								"nodeType": "StructuredDocumentation",
								"src": "71:119:4",
								"text": "@title Minimal ERC20 interface for CL\n @notice Contains a subset of the full ERC20 interface that is used in CL"
							},
							"fullyImplemented": false,
							"id": 735,
							"linearizedBaseContracts": [
								735
							],
							"name": "IERC20Minimal",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "220:201:4",
										"text": "@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
									},
									"functionSelector": "70a08231",
									"id": 674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "445:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:17:4"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "485:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:9:4"
									},
									"scope": 735,
									"src": "426:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "500:333:4",
										"text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
									},
									"functionSelector": "a9059cbb",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "856:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "875:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:35:4"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "909:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "909:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:6:4"
									},
									"scope": 735,
									"src": "838:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "921:250:4",
										"text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
									},
									"functionSelector": "dd62ed3e",
									"id": 694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1195:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1210:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:32:4"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "1250:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1249:9:4"
									},
									"scope": 735,
									"src": "1176:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "1265:343:4",
										"text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
									},
									"functionSelector": "095ea7b3",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1630:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1647:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:33:4"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "1681:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 701,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1681:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:6:4"
									},
									"scope": 735,
									"src": "1613:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "1693:371:4",
										"text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
									},
									"functionSelector": "23b872dd",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2091:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2107:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2126:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:51:4"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2160:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2160:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:6:4"
									},
									"scope": 735,
									"src": "2069:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2172:369:4",
										"text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
									},
									"id": 725,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "2561:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "2583:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "2603:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:57:4"
									},
									"src": "2546:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "2624:321:4",
										"text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
									},
									"id": 734,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2965:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2988:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "3013:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:63:4"
									},
									"src": "2950:78:4"
								}
							],
							"scope": 736,
							"src": "190:2840:4"
						}
					],
					"src": "45:2986:4"
				},
				"id": 4
			},
			"contracts/core/interfaces/pool/ICLPoolActions.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolActions.sol",
					"exportedSymbols": {
						"ICLPoolActions": [
							911
						]
					},
					"id": 912,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 737,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 738,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:5",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 911,
							"linearizedBaseContracts": [
								911
							],
							"name": "ICLPoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "204:652:5",
										"text": "@notice Initialize function used in proxy deployment\n @dev Can be called once only\n Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @dev not locked because it initializes unlocked\n @param _factory The CL factory contract address\n @param _token0 The first token of the pool by address sort order\n @param _token1 The second token of the pool by address sort order\n @param _tickSpacing The pool tick spacing\n @param _factoryRegistry The address of the factory registry managing the pool factory\n @param _sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96"
									},
									"functionSelector": "2071d884",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "_factory",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "890:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "_token0",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "916:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "_token1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "941:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "_tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "966:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 746,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "966:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "_factoryRegistry",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "994:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "_sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1028:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 750,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:175:5"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:0:5"
									},
									"scope": 911,
									"src": "861:204:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1071:227:5",
										"text": "@notice Initialize gauge and nft manager\n @dev Callable only once, by the gauge factory\n @param _gauge The gauge corresponding to this pool\n @param _nft The position manager used for position management"
									},
									"functionSelector": "1f7c3568",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setGaugeAndPositionManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "_gauge",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1339:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "_nft",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1355:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1338:30:5"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:0:5"
									},
									"scope": 911,
									"src": "1303:75:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "1384:1022:5",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2425:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2444:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 766,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2444:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2461:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 768,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2461:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2478:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 770,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2494:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2494:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:90:5"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2549:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2566:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2548:34:5"
									},
									"scope": 911,
									"src": "2411:172:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "2589:1053:5",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "3673:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3673:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "3700:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 784,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3700:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "3725:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 786,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3725:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "3750:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 788,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "3784:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 790,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3784:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3663:151:5"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "3833:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 793,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "3850:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 795,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3850:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:34:5"
									},
									"scope": 911,
									"src": "3647:220:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "3873:1131:5",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @param owner Owner of the position in the pool (nft manager or gauge)\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "31338374",
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5035:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5035:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5062:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 802,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5062:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5087:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 804,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5087:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5112:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 806,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5146:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 808,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5180:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5025:174:5"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5218:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 813,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "5235:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 815,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5217:34:5"
									},
									"scope": 911,
									"src": "5009:243:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "5258:631:5",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "5908:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 820,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5908:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "5925:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 822,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5925:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "5942:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 824,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5942:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5907:50:5"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "5992:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "6009:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6009:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:34:5"
									},
									"scope": 911,
									"src": "5894:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "6032:717:5",
										"text": "@notice Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @param owner Owner of the position in the pool (nft manager or gauge)\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "6f89244c",
									"id": 848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "6768:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 834,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "6785:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 836,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "6785:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "6802:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 838,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "6818:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6818:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:65:5"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "6867:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "6884:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6884:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6866:34:5"
									},
									"scope": 911,
									"src": "6754:147:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "6907:478:5",
										"text": "@notice Convert existing liquidity into staked liquidity\n @notice Only callable by the gauge associated with this pool\n @param stakedLiquidityDelta The amount by which to increase or decrease the staked liquidity\n @param tickLower The lower tick of the position for which to stake liquidity\n @param tickUpper The upper tick of the position for which to stake liquidity\n @param positionUpdate If the nft and gauge position should be updated"
									},
									"functionSelector": "4ed6210f",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "stakedLiquidityDelta",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "7405:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 850,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "7405:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "7434:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 852,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "7434:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "7451:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 854,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "7451:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "positionUpdate",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "7468:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7468:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7404:84:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7497:0:5"
									},
									"scope": 911,
									"src": "7390:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "7504:1008:5",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "8540:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8540:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "8567:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8567:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "8592:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 866,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8592:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "8624:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 868,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8624:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "8659:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 870,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8659:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8530:154:5"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "8703:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 873,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8703:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "8719:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 875,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8719:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8702:32:5"
									},
									"scope": 911,
									"src": "8517:218:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "8741:650:5",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "9411:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9411:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "9430:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9430:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "9447:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "9464:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 886,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9464:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9410:74:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9493:0:5"
									},
									"scope": 911,
									"src": "9396:98:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "9500:367:5",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "9916:33:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 892,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9916:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9915:35:5"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9959:0:5"
									},
									"scope": 911,
									"src": "9872:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "9966:142:5",
										"text": "@notice Updates rewardGrowthGlobalX128 every time when any tick is crossed,\n or when any position is staked/unstaked from the gauge"
									},
									"functionSelector": "1b410960",
									"id": 900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRewardsGrowthGlobal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10147:2:5"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10158:0:5"
									},
									"scope": 911,
									"src": "10113:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10165:293:5",
										"text": "@notice Syncs rewards with gauge\n @param rewardRate the rate rewards being distributed during the epoch\n @param rewardReserve the available rewards to be distributed during the epoch\n @param periodFinish the end of the current period of rewards, updated once per epoch"
									},
									"functionSelector": "60a73f9b",
									"id": 910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "syncReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "rewardRate",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "10483:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10483:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "rewardReserve",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "10503:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "periodFinish",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "10526:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10526:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10482:65:5"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10556:0:5"
									},
									"scope": 911,
									"src": "10463:94:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 912,
							"src": "173:10386:5"
						}
					],
					"src": "45:10515:5"
				},
				"id": 5
			},
			"contracts/core/interfaces/pool/ICLPoolConstants.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolConstants.sol",
					"exportedSymbols": {
						"ICLPoolConstants": [
							963
						]
					},
					"id": 964,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 913,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 914,
								"nodeType": "StructuredDocumentation",
								"src": "71:218:6",
								"text": "@title Pool state that never changes\n @notice These parameters are not defined as immutable (due to proxy pattern) but are effectively immutable.\n @notice i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 963,
							"linearizedBaseContracts": [
								963
							],
							"name": "ICLPoolConstants",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "322:131:6",
										"text": "@notice The contract that deployed the pool, which must adhere to the ICLFactory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:6"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "500:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:9:6"
									},
									"scope": 963,
									"src": "458:51:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "515:113:6",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "674:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:9:6"
									},
									"scope": 963,
									"src": "633:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "689:114:6",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:2:6"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "849:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:9:6"
									},
									"scope": 963,
									"src": "808:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "864:91:6",
										"text": "@notice The gauge corresponding to this pool\n @return The gauge contract address"
									},
									"functionSelector": "a6f19c84",
									"id": 938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gauge",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "974:2:6"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1000:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:9:6"
									},
									"scope": 963,
									"src": "960:49:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "1015:76:6",
										"text": "@notice The nft manager\n @return The nft manager contract address"
									},
									"functionSelector": "47ccca02",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nft",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:6"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1134:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:6"
									},
									"scope": 963,
									"src": "1096:47:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "1149:145:6",
										"text": "@notice The factory registry that manages pool <> gauge <> reward factory relationships\n @return The factory registry contract address"
									},
									"functionSelector": "3bf0c9fb",
									"id": 950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryRegistry",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1323:2:6"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1349:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1348:9:6"
									},
									"scope": 963,
									"src": "1299:59:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "1364:358:6",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 956,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:6"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1773:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 953,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1773:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:7:6"
									},
									"scope": 963,
									"src": "1727:53:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "1786:363:6",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2182:2:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2208:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 959,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:9:6"
									},
									"scope": 963,
									"src": "2154:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 964,
							"src": "289:1930:6"
						}
					],
					"src": "45:2175:6"
				},
				"id": 6
			},
			"contracts/core/interfaces/pool/ICLPoolDerivedState.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolDerivedState.sol",
					"exportedSymbols": {
						"ICLPoolDerivedState": [
							994
						]
					},
					"id": 995,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 965,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 966,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:7",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 994,
							"linearizedBaseContracts": [
								994
							],
							"name": "ICLPoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "329:1045:7",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1396:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 968,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1396:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 969,
													"nodeType": "ArrayTypeName",
													"src": "1396:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1395:31:7"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1474:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 972,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1474:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 973,
													"nodeType": "ArrayTypeName",
													"src": "1474:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1506:51:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 975,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1506:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 976,
													"nodeType": "ArrayTypeName",
													"src": "1506:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1473:85:7"
									},
									"scope": 994,
									"src": "1379:180:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "1565:771:7",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "2376:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 981,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2376:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "2393:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 983,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2393:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:34:7"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "2457:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 986,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2457:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "2485:37:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 988,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2485:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "2524:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 990,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2524:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:89:7"
									},
									"scope": 994,
									"src": "2341:205:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 995,
							"src": "293:2255:7"
						}
					],
					"src": "45:2504:7"
				},
				"id": 7
			},
			"contracts/core/interfaces/pool/ICLPoolEvents.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolEvents.sol",
					"exportedSymbols": {
						"ICLPoolEvents": [
							1111
						]
					},
					"id": 1112,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 996,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 997,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:8",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1111,
							"linearizedBaseContracts": [
								1111
							],
							"name": "ICLPoolEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "189:344:8",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"id": 1004,
									"name": "Initialize",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "555:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 999,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "577:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1001,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "577:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:34:8"
									},
									"src": "538:51:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "595:551:8",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"id": 1021,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1171:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1195:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1226:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1010,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1226:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1259:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1012,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1259:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1292:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1014,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1316:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1341:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:201:8"
									},
									"src": "1151:212:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "1369:493:8",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"id": 1036,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1890:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1890:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1921:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1948:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1027,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1948:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "1981:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1029,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1981:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "2014:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1031,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "2039:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1033,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:180:8"
									},
									"src": "1867:194:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "2067:523:8",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"id": 1051,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "2615:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "2646:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1040,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2646:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "2679:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1042,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2679:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "2712:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1044,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "2736:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "2761:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2605:177:8"
									},
									"src": "2595:188:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "2789:600:8",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"id": 1068,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3414:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3446:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3481:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1057,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3481:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3505:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1059,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3505:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3529:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1061,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3529:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3559:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1063,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "3586:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1065,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3586:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3404:198:8"
									},
									"src": "3394:209:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "3609:562:8",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"id": 1083,
									"name": "Flash",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4197:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4229:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4229:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4264:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4264:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4289:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4289:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4337:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4337:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4187:169:8"
									},
									"src": "4176:181:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "4363:451:8",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"id": 1090,
									"name": "IncreaseObservationCardinalityNext",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "4869:36:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1085,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4869:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "4907:36:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1087,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4907:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:90:8"
									},
									"src": "4819:131:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "4956:370:8",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"id": 1101,
									"name": "SetFeeProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5352:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1092,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5375:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1094,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5375:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5398:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1096,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5398:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5421:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1098,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5421:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5351:92:8"
									},
									"src": "5331:113:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "5450:310:8",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the gauge\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"id": 1110,
									"name": "CollectFees",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "5783:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5783:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "5810:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1105,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5810:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "5827:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1107,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5782:61:8"
									},
									"src": "5765:79:8"
								}
							],
							"scope": 1112,
							"src": "159:5687:8"
						}
					],
					"src": "45:5802:8"
				},
				"id": 8
			},
			"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolOwnerActions.sol",
					"exportedSymbols": {
						"ICLPoolOwnerActions": [
							1123
						]
					},
					"id": 1124,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1113,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1114,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:9",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1123,
							"linearizedBaseContracts": [
								1123
							],
							"name": "ICLPoolOwnerActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "223:169:9",
										"text": "@notice Collect the gauge fee accrued to the pool\n @return amount0 The gauge fee collected in token0\n @return amount1 The gauge fee collected in token1"
									},
									"functionSelector": "c8796572",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:9"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "438:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1117,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "455:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1119,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:34:9"
									},
									"scope": 1123,
									"src": "397:75:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1124,
							"src": "187:287:9"
						}
					],
					"src": "45:430:9"
				},
				"id": 9
			},
			"contracts/core/interfaces/pool/ICLPoolState.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolState.sol",
					"exportedSymbols": {
						"ICLPoolState": [
							1299
						]
					},
					"id": 1300,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1125,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1126,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:10",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 1299,
							"linearizedBaseContracts": [
								1299
							],
							"name": "ICLPoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "269:835:10",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:10"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1186:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1129,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1220:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1131,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1220:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1244:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1133,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1244:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1281:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1135,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1281:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1324:33:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1137,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1324:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1371:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1371:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:222:10"
									},
									"scope": 1299,
									"src": "1109:286:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "1401:182:10",
										"text": "@notice The pool's swap & flash fee in pips, i.e. 1e-6\n @dev Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\n @return The swap & flash fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1600:2:10"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "1626:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1145,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1626:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:8:10"
									},
									"scope": 1299,
									"src": "1588:46:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "1640:174:10",
										"text": "@notice The pool's unstaked fee in pips, i.e. 1e-6\n @dev Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\n @return The unstaked fee"
									},
									"functionSelector": "b64cc67b",
									"id": 1154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstakedFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1839:2:10"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "1865:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1151,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1865:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1864:8:10"
									},
									"scope": 1299,
									"src": "1819:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "1879:168:10",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:2:10"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "2107:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:9:10"
									},
									"scope": 1299,
									"src": "2052:64:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "2122:168:10",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2324:2:10"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "2350:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:9:10"
									},
									"scope": 1299,
									"src": "2295:64:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "2365:176:10",
										"text": "@notice The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "57806ada",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardGrowthGlobalX128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2577:2:10"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "2603:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:9:10"
									},
									"scope": 1299,
									"src": "2546:66:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "2618:141:10",
										"text": "@notice The amounts of token0 and token1 that are owed to the gauge\n @dev Gauge fees will never exceed uint128 max in either token"
									},
									"functionSelector": "293833ba",
									"id": 1180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gaugeFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:2:10"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "2808:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1175,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "2824:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1177,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2807:32:10"
									},
									"scope": 1299,
									"src": "2764:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "2846:51:10",
										"text": "@notice the emission rate of time-based farming"
									},
									"functionSelector": "7b0a47ee",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardRate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:10"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2947:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2947:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2946:9:10"
									},
									"scope": 1299,
									"src": "2902:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "2962:106:10",
										"text": "@notice acts as a virtual reserve that holds information on how many rewards are yet to be distributed"
									},
									"functionSelector": "cab64bcd",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardReserve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3095:2:10"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "3121:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:9:10"
									},
									"scope": 1299,
									"src": "3073:57:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "3136:63:10",
										"text": "@notice timestamp of the end of the current epoch's rewards"
									},
									"functionSelector": "ebe2b12b",
									"id": 1198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "periodFinish",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3225:2:10"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "3251:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3250:9:10"
									},
									"scope": 1299,
									"src": "3204:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "3266:67:10",
										"text": "@notice last time the rewardReserve and rewardRate were updated"
									},
									"functionSelector": "d0b06f5d",
									"id": 1204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastUpdated",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3358:2:10"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3384:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1201,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3384:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:8:10"
									},
									"scope": 1299,
									"src": "3338:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "3398:284:10",
										"text": "@notice tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinish\n @notice this amount is rolled over on the next call to notifyRewardAmount\n @dev rollover will always be smaller than the rewards distributed that epoch"
									},
									"functionSelector": "b056b49a",
									"id": 1210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rollover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:2:10"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3730:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3730:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3729:9:10"
									},
									"scope": 1299,
									"src": "3687:52:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "3745:200:10",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks\n @dev This value includes staked liquidity"
									},
									"functionSelector": "1a686502",
									"id": 1216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3968:2:10"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3994:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1213,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:9:10"
									},
									"scope": 1299,
									"src": "3950:53:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "4009:164:10",
										"text": "@notice The currently in range staked liquidity available to the pool\n @dev This value has no relationship to the total staked liquidity across all ticks"
									},
									"functionSelector": "3ab04b20",
									"id": 1222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakedLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4202:2:10"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "4228:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1219,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4228:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:9:10"
									},
									"scope": 1299,
									"src": "4178:59:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "4243:1463:10",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "5726:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1224,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5726:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5725:12:10"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "5798:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1227,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "5834:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1229,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "5834:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "stakedLiquidityNet",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "5867:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1231,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "5867:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "5906:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "5949:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5949:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "rewardGrowthOutsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "5992:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "6037:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1239,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6037:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "6078:38:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1241,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "6130:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1243,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6130:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "6165:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6165:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5784:407:10"
									},
									"scope": 1299,
									"src": "5711:481:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "6198:99:10",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 1256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "wordPosition",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "6322:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1250,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "6322:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6321:20:10"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "6365:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6365:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6364:9:10"
									},
									"scope": 1299,
									"src": "6302:72:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "6380:700:10",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 1272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "7104:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7104:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7103:13:10"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "_liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "7177:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1261,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "7209:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7209:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "7255:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7255:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "7301:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1267,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7301:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "7334:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1269,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7163:200:10"
									},
									"scope": 1299,
									"src": "7085:279:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "7370:749:10",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 1286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8146:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8146:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8145:15:10"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8221:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1277,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8221:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8256:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1279,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "8256:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8290:41:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1281,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8290:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8345:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8345:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8207:164:10"
									},
									"scope": 1299,
									"src": "8124:248:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "8378:541:10",
										"text": "@notice Returns data about reward growth within a tick range.\n RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations.\n @dev Used in gauge reward/earned calculations\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @param _rewardGrowthGlobalX128 a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)\n @return rewardGrowthInsideX128 The reward growth in the range"
									},
									"functionSelector": "a16368c9",
									"id": 1298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardGrowthInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "8955:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1288,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "8972:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1290,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "8972:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "_rewardGrowthGlobalX128",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "8989:31:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8989:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8954:67:10"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "rewardGrowthInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "9069:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9068:32:10"
									},
									"scope": 1299,
									"src": "8924:177:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1300,
							"src": "240:8863:10"
						}
					],
					"src": "45:9059:10"
				},
				"id": 10
			},
			"contracts/core/libraries/BitMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/BitMath.sol",
					"exportedSymbols": {
						"BitMath": [
							1578
						]
					},
					"id": 1579,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1301,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1302,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:11",
								"text": "@title BitMath\n @dev This library provides functionality for computing bit properties of an unsigned integer"
							},
							"fullyImplemented": true,
							"id": 1578,
							"linearizedBaseContracts": [
								1578
							],
							"name": "BitMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "742:660:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1311,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "760:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "764:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "760:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "752:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "752:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "752:14:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1316,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "781:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "781:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1328,
												"nodeType": "IfStatement",
												"src": "777:102:11",
												"trueBody": {
													"id": 1327,
													"nodeType": "Block",
													"src": "823:56:11",
													"statements": [
														{
															"expression": {
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1319,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "837:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "837:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1322,
															"nodeType": "ExpressionStatement",
															"src": "837:9:11"
														},
														{
															"expression": {
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1323,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "860:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "865:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "860:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1326,
															"nodeType": "ExpressionStatement",
															"src": "860:8:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1329,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "892:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "897:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "892:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1341,
												"nodeType": "IfStatement",
												"src": "888:84:11",
												"trueBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "918:54:11",
													"statements": [
														{
															"expression": {
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1332,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "932:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "938:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "932:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1335,
															"nodeType": "ExpressionStatement",
															"src": "932:8:11"
														},
														{
															"expression": {
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1336,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "954:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "959:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "954:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1339,
															"nodeType": "ExpressionStatement",
															"src": "954:7:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1342,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "985:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "990:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "985:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "981:76:11",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "1003:54:11",
													"statements": [
														{
															"expression": {
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1345,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "1017:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1023:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1017:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1348,
															"nodeType": "ExpressionStatement",
															"src": "1017:8:11"
														},
														{
															"expression": {
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1349,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "1039:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1044:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1039:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1352,
															"nodeType": "ExpressionStatement",
															"src": "1039:7:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1355,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "1070:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1075:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "1070:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1367,
												"nodeType": "IfStatement",
												"src": "1066:72:11",
												"trueBody": {
													"id": 1366,
													"nodeType": "Block",
													"src": "1084:54:11",
													"statements": [
														{
															"expression": {
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1358,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "1098:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1104:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1098:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1361,
															"nodeType": "ExpressionStatement",
															"src": "1098:8:11"
														},
														{
															"expression": {
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1362,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "1120:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1125:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1120:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1365,
															"nodeType": "ExpressionStatement",
															"src": "1120:7:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1368,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "1151:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1156:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "1151:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1380,
												"nodeType": "IfStatement",
												"src": "1147:68:11",
												"trueBody": {
													"id": 1379,
													"nodeType": "Block",
													"src": "1163:52:11",
													"statements": [
														{
															"expression": {
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1371,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "1177:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1183:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1177:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1374,
															"nodeType": "ExpressionStatement",
															"src": "1177:7:11"
														},
														{
															"expression": {
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1375,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "1198:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1203:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1198:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1378,
															"nodeType": "ExpressionStatement",
															"src": "1198:6:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1381,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "1228:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "1228:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1393,
												"nodeType": "IfStatement",
												"src": "1224:67:11",
												"trueBody": {
													"id": 1392,
													"nodeType": "Block",
													"src": "1239:52:11",
													"statements": [
														{
															"expression": {
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1384,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "1253:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1259:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1253:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1387,
															"nodeType": "ExpressionStatement",
															"src": "1253:7:11"
														},
														{
															"expression": {
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1388,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "1274:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1279:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1274:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1391,
															"nodeType": "ExpressionStatement",
															"src": "1274:6:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1394,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "1304:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307834",
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1309:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "0x4"
													},
													"src": "1304:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1406,
												"nodeType": "IfStatement",
												"src": "1300:66:11",
												"trueBody": {
													"id": 1405,
													"nodeType": "Block",
													"src": "1314:52:11",
													"statements": [
														{
															"expression": {
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1397,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "1328:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1334:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1328:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1400,
															"nodeType": "ExpressionStatement",
															"src": "1328:7:11"
														},
														{
															"expression": {
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1401,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "1349:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1354:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1349:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1404,
															"nodeType": "ExpressionStatement",
															"src": "1349:6:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1407,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "1379:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307832",
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1384:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "0x2"
													},
													"src": "1379:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "1375:20:11",
												"trueBody": {
													"expression": {
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1410,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "1389:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1389:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1413,
													"nodeType": "ExpressionStatement",
													"src": "1389:6:11"
												}
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "209:457:11",
										"text": "@notice Returns the index of the most significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n @param x the value for which to compute the most significant bit, must be greater than 0\n @return r the index of the most significant bit"
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "699:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:11:11"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "733:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1307,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "733:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:9:11"
									},
									"scope": 1578,
									"src": "671:731:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "1965:822:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1425,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "1983:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1987:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1983:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1975:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "1975:14:11"
											},
											{
												"expression": {
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1430,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "2000:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323535",
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2004:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "2000:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "2000:7:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1434,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "2021:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2030:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1436,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2030:7:11",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 1435,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2025:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2025:13:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2025:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "2021:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2045:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2021:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1452,
													"nodeType": "Block",
													"src": "2087:34:11",
													"statements": [
														{
															"expression": {
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1448,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "2101:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2101:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1451,
															"nodeType": "ExpressionStatement",
															"src": "2101:9:11"
														}
													]
												},
												"id": 1453,
												"nodeType": "IfStatement",
												"src": "2017:104:11",
												"trueBody": {
													"id": 1447,
													"nodeType": "Block",
													"src": "2048:33:11",
													"statements": [
														{
															"expression": {
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1443,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "2062:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2067:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2062:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1446,
															"nodeType": "ExpressionStatement",
															"src": "2062:8:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1454,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "2134:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2143:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 1456,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "2143:6:11",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		}
																	],
																	"id": 1455,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2138:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2138:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint64",
																	"typeString": "type(uint64)"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2138:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "2134:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2157:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2134:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1472,
													"nodeType": "Block",
													"src": "2198:33:11",
													"statements": [
														{
															"expression": {
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1468,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "2212:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2218:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2212:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1471,
															"nodeType": "ExpressionStatement",
															"src": "2212:8:11"
														}
													]
												},
												"id": 1473,
												"nodeType": "IfStatement",
												"src": "2130:101:11",
												"trueBody": {
													"id": 1467,
													"nodeType": "Block",
													"src": "2160:32:11",
													"statements": [
														{
															"expression": {
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1463,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "2174:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2179:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2174:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1466,
															"nodeType": "ExpressionStatement",
															"src": "2174:7:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1474,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "2244:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2253:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 1476,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2253:6:11",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 1475,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2248:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2248:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "2244:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2267:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2244:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1492,
													"nodeType": "Block",
													"src": "2308:33:11",
													"statements": [
														{
															"expression": {
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1488,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "2322:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2328:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2322:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1491,
															"nodeType": "ExpressionStatement",
															"src": "2322:8:11"
														}
													]
												},
												"id": 1493,
												"nodeType": "IfStatement",
												"src": "2240:101:11",
												"trueBody": {
													"id": 1487,
													"nodeType": "Block",
													"src": "2270:32:11",
													"statements": [
														{
															"expression": {
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1483,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "2284:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2289:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2284:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1486,
															"nodeType": "ExpressionStatement",
															"src": "2284:7:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1494,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "2354:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2363:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1496,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "2363:6:11",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		}
																	],
																	"id": 1495,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2358:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2358:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint16",
																	"typeString": "type(uint16)"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2358:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "2354:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2354:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1512,
													"nodeType": "Block",
													"src": "2418:33:11",
													"statements": [
														{
															"expression": {
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1508,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "2432:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2438:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2432:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1511,
															"nodeType": "ExpressionStatement",
															"src": "2432:8:11"
														}
													]
												},
												"id": 1513,
												"nodeType": "IfStatement",
												"src": "2350:101:11",
												"trueBody": {
													"id": 1507,
													"nodeType": "Block",
													"src": "2380:32:11",
													"statements": [
														{
															"expression": {
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1503,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "2394:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2399:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2394:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1506,
															"nodeType": "ExpressionStatement",
															"src": "2394:7:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1514,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "2464:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2473:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 1516,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "2473:5:11",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 1515,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2468:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2468:11:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2468:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2464:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2486:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2464:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1532,
													"nodeType": "Block",
													"src": "2526:32:11",
													"statements": [
														{
															"expression": {
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1528,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "2540:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2546:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2540:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1531,
															"nodeType": "ExpressionStatement",
															"src": "2540:7:11"
														}
													]
												},
												"id": 1533,
												"nodeType": "IfStatement",
												"src": "2460:98:11",
												"trueBody": {
													"id": 1527,
													"nodeType": "Block",
													"src": "2489:31:11",
													"statements": [
														{
															"expression": {
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1523,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "2503:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2508:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2503:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1526,
															"nodeType": "ExpressionStatement",
															"src": "2503:6:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1534,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "2571:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307866",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2575:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "0xf"
														},
														"src": "2571:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2581:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2571:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1548,
													"nodeType": "Block",
													"src": "2621:32:11",
													"statements": [
														{
															"expression": {
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1544,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "2635:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2641:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2635:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1547,
															"nodeType": "ExpressionStatement",
															"src": "2635:7:11"
														}
													]
												},
												"id": 1549,
												"nodeType": "IfStatement",
												"src": "2567:86:11",
												"trueBody": {
													"id": 1543,
													"nodeType": "Block",
													"src": "2584:31:11",
													"statements": [
														{
															"expression": {
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1539,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "2598:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2603:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2598:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1542,
															"nodeType": "ExpressionStatement",
															"src": "2598:6:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1550,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "2666:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307833",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2670:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "0x3"
														},
														"src": "2666:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2676:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2666:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1564,
													"nodeType": "Block",
													"src": "2716:32:11",
													"statements": [
														{
															"expression": {
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1560,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "2730:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2736:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2730:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1563,
															"nodeType": "ExpressionStatement",
															"src": "2730:7:11"
														}
													]
												},
												"id": 1565,
												"nodeType": "IfStatement",
												"src": "2662:86:11",
												"trueBody": {
													"id": 1559,
													"nodeType": "Block",
													"src": "2679:31:11",
													"statements": [
														{
															"expression": {
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1555,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "2693:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2698:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2693:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1558,
															"nodeType": "ExpressionStatement",
															"src": "2693:6:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1566,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "2761:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831",
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2765:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x1"
														},
														"src": "2761:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2771:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2761:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1575,
												"nodeType": "IfStatement",
												"src": "2757:23:11",
												"trueBody": {
													"expression": {
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1571,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "2774:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2779:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2774:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1574,
													"nodeType": "ExpressionStatement",
													"src": "2774:6:11"
												}
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "1408:480:11",
										"text": "@notice Returns the index of the least significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n @param x the value for which to compute the least significant bit, must be greater than 0\n @return r the index of the least significant bit"
									},
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "1922:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:11:11"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "1956:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1421,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1956:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:9:11"
									},
									"scope": 1578,
									"src": "1893:894:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1579,
							"src": "187:2602:11"
						}
					],
					"src": "45:2745:11"
				},
				"id": 11
			},
			"contracts/core/libraries/FixedPoint128.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/FixedPoint128.sol",
					"exportedSymbols": {
						"FixedPoint128": [
							1585
						]
					},
					"id": 1586,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1580,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1581,
								"nodeType": "StructuredDocumentation",
								"src": "71:140:12",
								"text": "@title FixedPoint128\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)"
							},
							"fullyImplemented": true,
							"id": 1585,
							"linearizedBaseContracts": [
								1585
							],
							"name": "FixedPoint128",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1584,
									"mutability": "constant",
									"name": "Q128",
									"nodeType": "VariableDeclaration",
									"scope": 1585,
									"src": "239:68:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1582,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "239:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
										"id": 1583,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "272:35:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										},
										"value": "0x100000000000000000000000000000000"
									},
									"visibility": "internal"
								}
							],
							"scope": 1586,
							"src": "211:99:12"
						}
					],
					"src": "45:266:12"
				},
				"id": 12
			},
			"contracts/core/libraries/FixedPoint96.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/FixedPoint96.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							1595
						]
					},
					"id": 1596,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1587,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1588,
								"nodeType": "StructuredDocumentation",
								"src": "71:174:13",
								"text": "@title FixedPoint96\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n @dev Used in SqrtPriceMath.sol"
							},
							"fullyImplemented": true,
							"id": 1595,
							"linearizedBaseContracts": [
								1595
							],
							"name": "FixedPoint96",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1591,
									"mutability": "constant",
									"name": "RESOLUTION",
									"nodeType": "VariableDeclaration",
									"scope": 1595,
									"src": "272:39:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1589,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "272:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3936",
										"id": 1590,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "309:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96_by_1",
											"typeString": "int_const 96"
										},
										"value": "96"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1594,
									"mutability": "constant",
									"name": "Q96",
									"nodeType": "VariableDeclaration",
									"scope": 1595,
									"src": "317:59:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307831303030303030303030303030303030303030303030303030",
										"id": 1593,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "349:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
											"typeString": "int_const 79228162514264337593543950336"
										},
										"value": "0x1000000000000000000000000"
									},
									"visibility": "internal"
								}
							],
							"scope": 1596,
							"src": "245:134:13"
						}
					],
					"src": "45:335:13"
				},
				"id": 13
			},
			"contracts/core/libraries/FullMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/FullMath.sol",
					"exportedSymbols": {
						"FullMath": [
							1768
						]
					},
					"id": 1769,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1597,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1598,
								"nodeType": "StructuredDocumentation",
								"src": "65:297:14",
								"text": "@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"
							},
							"fullyImplemented": true,
							"id": 1768,
							"linearizedBaseContracts": [
								1768
							],
							"name": "FullMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "847:3648:14",
										"statements": [
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "prod0",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1160:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1610,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1160:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"nodeType": "VariableDeclarationStatement",
												"src": "1160:13:14"
											},
											{
												"assignments": [
													1614
												],
												"declarations": [
													{
														"constant": false,
														"id": 1614,
														"mutability": "mutable",
														"name": "prod1",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "1228:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1613,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1228:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1615,
												"nodeType": "VariableDeclarationStatement",
												"src": "1228:13:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1304:141:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1318:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1335:1:14"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1338:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1345:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1341:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1341:6:14"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:20:14"
															},
															"variables": [
																{
																	"name": "mm",
																	"nodeType": "YulTypedName",
																	"src": "1322:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1361:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1374:1:14"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1377:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1370:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:9:14"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "1361:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1392:43:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1409:2:14"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1424:2:14"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1428:5:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1421:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:13:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1401:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:34:14"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "1392:5:14"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1601,
														"isOffset": false,
														"isSlot": false,
														"src": "1335:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1601,
														"isOffset": false,
														"isSlot": false,
														"src": "1374:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1603,
														"isOffset": false,
														"isSlot": false,
														"src": "1338:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1603,
														"isOffset": false,
														"isSlot": false,
														"src": "1377:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "1361:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "1413:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "1428:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1614,
														"isOffset": false,
														"isSlot": false,
														"src": "1392:5:14",
														"valueSize": 1
													}
												],
												"id": 1616,
												"nodeType": "InlineAssembly",
												"src": "1295:150:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1617,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "1517:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1526:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1517:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1630,
												"nodeType": "IfStatement",
												"src": "1513:179:14",
												"trueBody": {
													"id": 1629,
													"nodeType": "Block",
													"src": "1529:163:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1621,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1605,
																			"src": "1551:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1565:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1551:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1620,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1543:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1543:24:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1625,
															"nodeType": "ExpressionStatement",
															"src": "1543:24:14"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1590:65:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1608:33:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod0",
																					"nodeType": "YulIdentifier",
																					"src": "1622:5:14"
																				},
																				{
																					"name": "denominator",
																					"nodeType": "YulIdentifier",
																					"src": "1629:11:14"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "1618:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1618:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:14"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1605,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1629:11:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1611,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1622:5:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1608,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1608:6:14",
																	"valueSize": 1
																}
															],
															"id": 1626,
															"nodeType": "InlineAssembly",
															"src": "1581:74:14"
														},
														{
															"expression": {
																"id": 1627,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1608,
																"src": "1675:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1609,
															"id": 1628,
															"nodeType": "Return",
															"src": "1668:13:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1632,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "1805:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1633,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "1819:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1805:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1797:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:28:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "1797:28:14"
											},
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "remainder",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "2102:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2102:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1639,
												"nodeType": "VariableDeclarationStatement",
												"src": "2102:17:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2138:62:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2152:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2172:1:14"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2175:1:14"
																	},
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2178:11:14"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:25:14"
															},
															"variableNames": [
																{
																	"name": "remainder",
																	"nodeType": "YulIdentifier",
																	"src": "2152:9:14"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1601,
														"isOffset": false,
														"isSlot": false,
														"src": "2172:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1603,
														"isOffset": false,
														"isSlot": false,
														"src": "2175:1:14",
														"valueSize": 1
													},
													{
														"declaration": 1605,
														"isOffset": false,
														"isSlot": false,
														"src": "2178:11:14",
														"valueSize": 1
													},
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": false,
														"src": "2152:9:14",
														"valueSize": 1
													}
												],
												"id": 1640,
												"nodeType": "InlineAssembly",
												"src": "2129:71:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2273:108:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2287:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "prod1",
																		"nodeType": "YulIdentifier",
																		"src": "2300:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "2310:9:14"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "2321:5:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2307:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:32:14"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "2287:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2341:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2354:5:14"
																	},
																	{
																		"name": "remainder",
																		"nodeType": "YulIdentifier",
																		"src": "2361:9:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2350:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2350:21:14"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2341:5:14"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "2321:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "2341:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "2354:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1614,
														"isOffset": false,
														"isSlot": false,
														"src": "2287:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1614,
														"isOffset": false,
														"isSlot": false,
														"src": "2300:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": false,
														"src": "2310:9:14",
														"valueSize": 1
													},
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": false,
														"src": "2361:9:14",
														"valueSize": 1
													}
												],
												"id": 1641,
												"nodeType": "InlineAssembly",
												"src": "2264:117:14"
											},
											{
												"assignments": [
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "twos",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "2530:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2530:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1648,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "2545:12:14",
														"subExpression": {
															"id": 1644,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "2546:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1646,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "2560:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2545:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2530:41:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2636:61:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2650:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2669:11:14"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2682:4:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2665:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2665:22:14"
															},
															"variableNames": [
																{
																	"name": "denominator",
																	"nodeType": "YulIdentifier",
																	"src": "2650:11:14"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1605,
														"isOffset": false,
														"isSlot": false,
														"src": "2650:11:14",
														"valueSize": 1
													},
													{
														"declaration": 1605,
														"isOffset": false,
														"isSlot": false,
														"src": "2669:11:14",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "2682:4:14",
														"valueSize": 1
													}
												],
												"id": 1649,
												"nodeType": "InlineAssembly",
												"src": "2627:70:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2770:49:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2784:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2797:5:14"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2804:4:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2793:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2793:16:14"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2784:5:14"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "2784:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1611,
														"isOffset": false,
														"isSlot": false,
														"src": "2797:5:14",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "2804:4:14",
														"valueSize": 1
													}
												],
												"id": 1650,
												"nodeType": "InlineAssembly",
												"src": "2761:58:14"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3007:63:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3021:39:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3041:1:14",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "3044:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3037:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3037:12:14"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3051:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3033:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3058:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3029:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:31:14"
															},
															"variableNames": [
																{
																	"name": "twos",
																	"nodeType": "YulIdentifier",
																	"src": "3021:4:14"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "3021:4:14",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "3044:4:14",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "3051:4:14",
														"valueSize": 1
													}
												],
												"id": 1651,
												"nodeType": "InlineAssembly",
												"src": "2998:72:14"
											},
											{
												"expression": {
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1652,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "3079:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1653,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "3088:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1654,
															"name": "twos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "3096:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3088:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3079:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "3079:21:14"
											},
											{
												"assignments": [
													1659
												],
												"declarations": [
													{
														"constant": false,
														"id": 1659,
														"mutability": "mutable",
														"name": "inv",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "3434:11:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3434:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1666,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "33",
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3449:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1661,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "3453:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3449:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1663,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3448:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "^",
													"rightExpression": {
														"hexValue": "32",
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3468:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3448:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3434:35:14"
											},
											{
												"expression": {
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1667,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "3684:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3691:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1669,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "3695:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1670,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "3709:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3695:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3691:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3684:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "3684:28:14"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1675,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "3742:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3749:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1677,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "3753:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1678,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "3767:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3753:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3749:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3742:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "3742:28:14"
											},
											{
												"expression": {
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1683,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "3801:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1685,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "3812:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1686,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "3826:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3812:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3808:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3801:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "3801:28:14"
											},
											{
												"expression": {
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1691,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "3860:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3867:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1693,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "3871:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1694,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "3885:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3871:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3867:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3860:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "3860:28:14"
											},
											{
												"expression": {
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1699,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "3919:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3926:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1701,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "3930:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1702,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "3944:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3930:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3926:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3919:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "3919:28:14"
											},
											{
												"expression": {
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1707,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "3979:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3986:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1709,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "3990:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1710,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "4004:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3990:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3986:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3979:28:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "3979:28:14"
											},
											{
												"expression": {
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1715,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "4445:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1716,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "4454:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1717,
															"name": "inv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "4462:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4454:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4445:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "4445:20:14"
											},
											{
												"expression": {
													"id": 1721,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1608,
													"src": "4482:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1722,
												"nodeType": "Return",
												"src": "4475:13:14"
											}
										]
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "385:359:14",
										"text": "@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "765:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "776:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "787:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:43:14"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "831:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:16:14"
									},
									"scope": 1768,
									"src": "749:3746:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "4885:177:14",
										"statements": [
											{
												"expression": {
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1736,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "4895:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1738,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "4911:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1739,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "4914:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1740,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "4917:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1737,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "4904:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4904:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4895:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "4895:34:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1745,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "4950:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1746,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "4953:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1747,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "4956:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1744,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967280,
															"src": "4943:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4943:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4971:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4943:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1765,
												"nodeType": "IfStatement",
												"src": "4939:117:14",
												"trueBody": {
													"id": 1764,
													"nodeType": "Block",
													"src": "4974:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1752,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "4996:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1755,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5010:7:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1754,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "5010:7:14",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 1753,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "5005:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5005:13:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 1757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "5005:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4996:26:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1751,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4988:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4988:35:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1760,
															"nodeType": "ExpressionStatement",
															"src": "4988:35:14"
														},
														{
															"expression": {
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5037:8:14",
																"subExpression": {
																	"id": 1761,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "5037:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1763,
															"nodeType": "ExpressionStatement",
															"src": "5037:8:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "4501:271:14",
										"text": "@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "4803:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "4814:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4814:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "4825:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4825:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:43:14"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "4869:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4869:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4868:16:14"
									},
									"scope": 1768,
									"src": "4777:285:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1769,
							"src": "362:4702:14"
						}
					],
					"src": "32:5033:14"
				},
				"id": 14
			},
			"contracts/core/libraries/LiquidityAmounts.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/LiquidityAmounts.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							1595
						],
						"FullMath": [
							1768
						],
						"LiquidityAmounts": [
							2108
						]
					},
					"id": 2109,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1770,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:15"
						},
						{
							"absolutePath": "contracts/core/libraries/FullMath.sol",
							"file": "contracts/core/libraries/FullMath.sol",
							"id": 1771,
							"nodeType": "ImportDirective",
							"scope": 2109,
							"sourceUnit": 1769,
							"src": "74:47:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FixedPoint96.sol",
							"file": "contracts/core/libraries/FixedPoint96.sol",
							"id": 1772,
							"nodeType": "ImportDirective",
							"scope": 2109,
							"sourceUnit": 1596,
							"src": "123:51:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1773,
								"nodeType": "StructuredDocumentation",
								"src": "178:133:15",
								"text": "@title Liquidity amount functions\n @notice Provides functions for computing liquidity amounts from token amounts and prices"
							},
							"fullyImplemented": true,
							"id": 2108,
							"linearizedBaseContracts": [
								2108
							],
							"name": "LiquidityAmounts",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "558:49:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 1787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1782,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1779,
																			"src": "578:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1785,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1776,
																					"src": "590:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "582:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint128_$",
																					"typeString": "type(uint128)"
																				},
																				"typeName": {
																					"id": 1783,
																					"name": "uint128",
																					"nodeType": "ElementaryTypeName",
																					"src": "582:7:15",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "582:10:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "578:14:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"id": 1788,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "577:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1789,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "597:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "577:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "569:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "569:30:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "569:30:15"
											}
										]
									},
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "343:146:15",
										"text": "@notice Downcasts uint256 to uint128\n @param x The uint258 to be downcasted\n @return y The passed value, downcasted to uint128"
									},
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "514:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:11:15"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "547:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1778,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:11:15"
									},
									"scope": 2108,
									"src": "495:112:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "1252:312:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1806,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "1267:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1807,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "1283:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1267:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1817,
												"nodeType": "IfStatement",
												"src": "1263:98:15",
												"trueBody": {
													"expression": {
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1809,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1797,
																	"src": "1299:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1810,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "1314:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1811,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "1298:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1812,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "1332:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1813,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1797,
																	"src": "1347:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1814,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1331:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "1298:63:15",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1816,
													"nodeType": "ExpressionStatement",
													"src": "1298:63:15"
												}
											},
											{
												"assignments": [
													1819
												],
												"declarations": [
													{
														"constant": false,
														"id": 1819,
														"mutability": "mutable",
														"name": "intermediate",
														"nodeType": "VariableDeclaration",
														"scope": 1839,
														"src": "1372:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1818,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1372:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1827,
												"initialValue": {
													"arguments": [
														{
															"id": 1822,
															"name": "sqrtRatioAX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "1411:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 1823,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "1426:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"expression": {
																"id": 1824,
																"name": "FixedPoint96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "1441:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																	"typeString": "type(library FixedPoint96)"
																}
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Q96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1594,
															"src": "1441:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1820,
															"name": "FullMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "1395:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																"typeString": "type(library FullMath)"
															}
														},
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1724,
														"src": "1395:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1395:63:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1372:86:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1831,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "1502:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1832,
																	"name": "intermediate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "1511:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1833,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1799,
																		"src": "1525:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1834,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1797,
																		"src": "1541:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"src": "1525:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"expression": {
																	"id": 1829,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "1486:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1724,
																"src": "1486:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1486:69:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1828,
														"name": "toUint128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "1476:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
															"typeString": "function (uint256) pure returns (uint128)"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1476:80:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1805,
												"id": 1838,
												"nodeType": "Return",
												"src": "1469:87:15"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "615:462:15",
										"text": "@notice Computes the amount of liquidity received for a given amount of token0 and price range\n @dev Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount0 The amount0 being sent in\n @return liquidity The amount of returned liquidity"
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmount0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1115:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1796,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1138:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1798,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1161:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1114:63:15"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1228:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1803,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:19:15"
									},
									"scope": 2108,
									"src": "1083:481:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "2180:219:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1852,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "2195:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1853,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "2211:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "2195:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1863,
												"nodeType": "IfStatement",
												"src": "2191:98:15",
												"trueBody": {
													"expression": {
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1855,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "2227:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1856,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1845,
																	"src": "2242:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1857,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "2226:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1858,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1845,
																	"src": "2260:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1859,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "2275:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1860,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2259:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "2226:63:15",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1862,
													"nodeType": "ExpressionStatement",
													"src": "2226:63:15"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1867,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "2333:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1868,
																		"name": "FixedPoint96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "2342:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																			"typeString": "type(library FixedPoint96)"
																		}
																	},
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "Q96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1594,
																	"src": "2342:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1870,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "2360:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1871,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1843,
																		"src": "2376:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"src": "2360:29:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"expression": {
																	"id": 1865,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "2317:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1724,
																"src": "2317:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:73:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1864,
														"name": "toUint128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "2307:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
															"typeString": "function (uint256) pure returns (uint128)"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2307:84:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1851,
												"id": 1875,
												"nodeType": "Return",
												"src": "2300:91:15"
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "1572:433:15",
										"text": "@notice Computes the amount of liquidity received for a given amount of token1 and price range\n @dev Calculates amount1 / (sqrt(upper) - sqrt(lower)).\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount1 The amount1 being sent in\n @return liquidity The amount of returned liquidity"
									},
									"id": 1877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmount1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "2043:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1842,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "2066:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1844,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "2089:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:63:15"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "2156:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1849,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2155:19:15"
									},
									"scope": 2108,
									"src": "2011:388:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1957,
										"nodeType": "Block",
										"src": "3237:692:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1893,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "3252:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1894,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "3268:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3252:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1904,
												"nodeType": "IfStatement",
												"src": "3248:98:15",
												"trueBody": {
													"expression": {
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1896,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "3284:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1897,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1884,
																	"src": "3299:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1898,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "3283:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1899,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1884,
																	"src": "3317:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1900,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "3332:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1901,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3316:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "3283:63:15",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1903,
													"nodeType": "ExpressionStatement",
													"src": "3283:63:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1905,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "3363:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1906,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "3379:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3363:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1917,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "3504:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1918,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "3519:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "3504:28:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1954,
														"nodeType": "Block",
														"src": "3822:100:15",
														"statements": [
															{
																"expression": {
																	"id": 1952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1946,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "3837:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1948,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1882,
																				"src": "3872:13:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 1949,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1884,
																				"src": "3887:13:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 1950,
																				"name": "amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1888,
																				"src": "3902:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1947,
																			"name": "getLiquidityForAmount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1877,
																			"src": "3849:22:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																				"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																			}
																		},
																		"id": 1951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3849:61:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "3837:73:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"id": 1953,
																"nodeType": "ExpressionStatement",
																"src": "3837:73:15"
															}
														]
													},
													"id": 1955,
													"nodeType": "IfStatement",
													"src": "3500:422:15",
													"trueBody": {
														"id": 1945,
														"nodeType": "Block",
														"src": "3534:282:15",
														"statements": [
															{
																"assignments": [
																	1921
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1921,
																		"mutability": "mutable",
																		"name": "liquidity0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1945,
																		"src": "3549:18:15",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 1920,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "3549:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1927,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 1923,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1880,
																			"src": "3593:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 1924,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "3607:13:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 1925,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1886,
																			"src": "3622:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1922,
																		"name": "getLiquidityForAmount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "3570:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3570:60:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3549:81:15"
															},
															{
																"assignments": [
																	1929
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1929,
																		"mutability": "mutable",
																		"name": "liquidity1",
																		"nodeType": "VariableDeclaration",
																		"scope": 1945,
																		"src": "3645:18:15",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 1928,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "3645:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1935,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 1931,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1882,
																			"src": "3689:13:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 1932,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1880,
																			"src": "3704:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 1933,
																			"name": "amount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1888,
																			"src": "3718:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1930,
																		"name": "getLiquidityForAmount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1877,
																		"src": "3666:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3666:60:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3645:81:15"
															},
															{
																"expression": {
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1936,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "3743:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			"id": 1939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1937,
																				"name": "liquidity0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1921,
																				"src": "3755:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1938,
																				"name": "liquidity1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1929,
																				"src": "3768:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "3755:23:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"id": 1941,
																			"name": "liquidity1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1929,
																			"src": "3794:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"id": 1942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "3755:49:15",
																		"trueExpression": {
																			"id": 1940,
																			"name": "liquidity0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "3781:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "3743:61:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"id": 1944,
																"nodeType": "ExpressionStatement",
																"src": "3743:61:15"
															}
														]
													}
												},
												"id": 1956,
												"nodeType": "IfStatement",
												"src": "3359:563:15",
												"trueBody": {
													"id": 1916,
													"nodeType": "Block",
													"src": "3394:100:15",
													"statements": [
														{
															"expression": {
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1908,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "3409:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1910,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1882,
																			"src": "3444:13:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 1911,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "3459:13:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 1912,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1886,
																			"src": "3474:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1909,
																		"name": "getLiquidityForAmount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "3421:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3421:61:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3409:73:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 1915,
															"nodeType": "ExpressionStatement",
															"src": "3409:73:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "2407:596:15",
										"text": "@notice Computes the maximum amount of liquidity received for a given amount of token0, token1, the current\n pool prices and the prices at the tick boundaries\n @param sqrtRatioX96 A sqrt price representing the current pool prices\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount0 The amount of token0 being sent in\n @param amount1 The amount of token1 being sent in\n @return liquidity The maximum amount of liquidity received"
									},
									"id": 1958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmounts",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "sqrtRatioX96",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "3051:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1879,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3051:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "3082:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1881,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "3114:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1883,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "3146:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "3172:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3040:154:15"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "3218:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1890,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:19:15"
									},
									"scope": 2108,
									"src": "3009:920:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1999,
										"nodeType": "Block",
										"src": "4463:285:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1970,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "4478:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1971,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "4494:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "4478:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1981,
												"nodeType": "IfStatement",
												"src": "4474:98:15",
												"trueBody": {
													"expression": {
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1973,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1961,
																	"src": "4510:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1974,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "4525:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1975,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "4509:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1976,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "4543:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1977,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1961,
																	"src": "4558:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1978,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4542:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "4509:63:15",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1980,
													"nodeType": "ExpressionStatement",
													"src": "4509:63:15"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1986,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1965,
																			"src": "4630:9:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		],
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4622:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1984,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4622:7:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4622:18:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"expression": {
																		"id": 1988,
																		"name": "FixedPoint96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "4644:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																			"typeString": "type(library FixedPoint96)"
																		}
																	},
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "RESOLUTION",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1591,
																	"src": "4644:23:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4622:45:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1991,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "4669:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1992,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1961,
																	"src": "4685:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4669:29:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1994,
																"name": "sqrtRatioBX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "4700:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"expression": {
																"id": 1982,
																"name": "FullMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "4592:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																	"typeString": "type(library FullMath)"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1724,
															"src": "4592:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4592:132:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1996,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "4727:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "4592:148:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1998,
												"nodeType": "Return",
												"src": "4585:155:15"
											}
										]
									},
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "3937:351:15",
										"text": "@notice Computes the amount of token0 for a given amount of liquidity and a price range\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount0 The amount of token0"
									},
									"id": 2000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount0ForLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "4326:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1960,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4326:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "4349:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1962,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4349:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "4372:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1964,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4372:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4325:65:15"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "4441:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4441:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4440:17:15"
									},
									"scope": 2108,
									"src": "4294:454:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2034,
										"nodeType": "Block",
										"src": "5282:212:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2012,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "5297:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2013,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "5313:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "5297:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2023,
												"nodeType": "IfStatement",
												"src": "5293:98:15",
												"trueBody": {
													"expression": {
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2015,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "5329:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2016,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2005,
																	"src": "5344:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2017,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "5328:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2018,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2005,
																	"src": "5362:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2019,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "5377:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2020,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5361:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "5328:63:15",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2022,
													"nodeType": "ExpressionStatement",
													"src": "5328:63:15"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2026,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2007,
															"src": "5427:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2027,
																"name": "sqrtRatioBX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2005,
																"src": "5438:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2028,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2003,
																"src": "5454:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "5438:29:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"expression": {
																"id": 2030,
																"name": "FixedPoint96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "5469:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																	"typeString": "type(library FixedPoint96)"
																}
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Q96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1594,
															"src": "5469:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2024,
															"name": "FullMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "5411:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																"typeString": "type(library FullMath)"
															}
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1724,
														"src": "5411:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5411:75:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2011,
												"id": 2033,
												"nodeType": "Return",
												"src": "5404:82:15"
											}
										]
									},
									"documentation": {
										"id": 2001,
										"nodeType": "StructuredDocumentation",
										"src": "4756:351:15",
										"text": "@notice Computes the amount of token1 for a given amount of liquidity and a price range\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount1 The amount of token1"
									},
									"id": 2035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount1ForLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "5145:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2002,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "5168:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2004,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5168:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "5191:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2006,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5191:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5144:65:15"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "5260:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5260:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5259:17:15"
									},
									"scope": 2108,
									"src": "5113:381:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "6264:596:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2051,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2040,
														"src": "6279:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2052,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "6295:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "6279:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2062,
												"nodeType": "IfStatement",
												"src": "6275:98:15",
												"trueBody": {
													"expression": {
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2054,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2040,
																	"src": "6311:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2055,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2042,
																	"src": "6326:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2056,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "6310:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2057,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2042,
																	"src": "6344:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2058,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2040,
																	"src": "6359:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2059,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6343:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "6310:63:15",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2061,
													"nodeType": "ExpressionStatement",
													"src": "6310:63:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2063,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "6390:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2064,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2040,
														"src": "6406:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "6390:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 2077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2075,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "6531:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2076,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "6546:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "6531:28:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2103,
														"nodeType": "Block",
														"src": "6753:100:15",
														"statements": [
															{
																"expression": {
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2095,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "6768:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2097,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2040,
																				"src": "6801:13:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2098,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2042,
																				"src": "6816:13:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2099,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2044,
																				"src": "6831:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2096,
																			"name": "getAmount1ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2035,
																			"src": "6778:22:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6778:63:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6768:73:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2102,
																"nodeType": "ExpressionStatement",
																"src": "6768:73:15"
															}
														]
													},
													"id": 2104,
													"nodeType": "IfStatement",
													"src": "6527:326:15",
													"trueBody": {
														"id": 2094,
														"nodeType": "Block",
														"src": "6561:186:15",
														"statements": [
															{
																"expression": {
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2078,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2047,
																		"src": "6576:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2080,
																				"name": "sqrtRatioX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2038,
																				"src": "6609:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2081,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2042,
																				"src": "6623:13:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2082,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2044,
																				"src": "6638:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2079,
																			"name": "getAmount0ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2000,
																			"src": "6586:22:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6586:62:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6576:72:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2085,
																"nodeType": "ExpressionStatement",
																"src": "6576:72:15"
															},
															{
																"expression": {
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2086,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "6663:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2088,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2040,
																				"src": "6696:13:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2089,
																				"name": "sqrtRatioX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2038,
																				"src": "6711:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2090,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2044,
																				"src": "6725:9:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2087,
																			"name": "getAmount1ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2035,
																			"src": "6673:22:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6673:62:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6663:72:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2093,
																"nodeType": "ExpressionStatement",
																"src": "6663:72:15"
															}
														]
													}
												},
												"id": 2105,
												"nodeType": "IfStatement",
												"src": "6386:467:15",
												"trueBody": {
													"id": 2074,
													"nodeType": "Block",
													"src": "6421:100:15",
													"statements": [
														{
															"expression": {
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2066,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "6436:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2068,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2040,
																			"src": "6469:13:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2069,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2042,
																			"src": "6484:13:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2070,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2044,
																			"src": "6499:9:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		],
																		"id": 2067,
																		"name": "getAmount0ForLiquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2000,
																		"src": "6446:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																		}
																	},
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6446:63:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6436:73:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2073,
															"nodeType": "ExpressionStatement",
															"src": "6436:73:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2036,
										"nodeType": "StructuredDocumentation",
										"src": "5502:537:15",
										"text": "@notice Computes the token0 and token1 value for a given amount of liquidity, the current\n pool prices and the prices at the tick boundaries\n @param sqrtRatioX96 A sqrt price representing the current pool prices\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsForLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "sqrtRatioX96",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "6087:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2037,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6087:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "6118:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2039,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "6150:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2041,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6150:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "6182:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2043,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6182:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6076:130:15"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "6230:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6230:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "6247:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6247:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6229:34:15"
									},
									"scope": 2108,
									"src": "6045:815:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2109,
							"src": "311:6552:15"
						}
					],
					"src": "46:6819:15"
				},
				"id": 15
			},
			"contracts/core/libraries/LiquidityMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
					"exportedSymbols": {
						"LiquidityMath": [
							2160
						]
					},
					"id": 2161,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2110,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2111,
								"nodeType": "StructuredDocumentation",
								"src": "71:38:16",
								"text": "@title Math library for liquidity"
							},
							"fullyImplemented": true,
							"id": 2160,
							"linearizedBaseContracts": [
								2160
							],
							"name": "LiquidityMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "456:163:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2121,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "470:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "470:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2156,
													"nodeType": "Block",
													"src": "548:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"id": 2149,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2142,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2119,
																						"src": "571:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 2148,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2143,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2114,
																							"src": "575:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 2146,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2116,
																									"src": "587:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 2145,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "579:7:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 2144,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "579:7:16",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2147,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "579:10:16",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "575:14:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "571:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 2150,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "570:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2151,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2114,
																			"src": "594:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "570:25:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c41",
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "597:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		},
																		"value": "LA"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		}
																	],
																	"id": 2141,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "562:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "562:40:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2155,
															"nodeType": "ExpressionStatement",
															"src": "562:40:16"
														}
													]
												},
												"id": 2157,
												"nodeType": "IfStatement",
												"src": "466:147:16",
												"trueBody": {
													"id": 2140,
													"nodeType": "Block",
													"src": "477:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"id": 2133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2125,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2119,
																						"src": "500:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 2132,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2126,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2114,
																							"src": "504:1:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 2130,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "-",
																									"prefix": true,
																									"src": "516:2:16",
																									"subExpression": {
																										"id": 2129,
																										"name": "y",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2116,
																										"src": "517:1:16",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int128",
																											"typeString": "int128"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 2128,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "508:7:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 2127,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "508:7:16",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2131,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "508:11:16",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "504:15:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "500:19:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 2134,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "499:21:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2135,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2114,
																			"src": "523:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "499:25:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c53",
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "526:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		},
																		"value": "LS"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		}
																	],
																	"id": 2124,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "491:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "491:40:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2139,
															"nodeType": "ExpressionStatement",
															"src": "491:40:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "137:241:16",
										"text": "@notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n @param x The liquidity before change\n @param y The delta by which liquidity should be changed\n @return z The liquidity delta"
									},
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addDelta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "401:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2113,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "412:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2115,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "412:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:21:16"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "445:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2118,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:11:16"
									},
									"scope": 2160,
									"src": "383:236:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2161,
							"src": "109:512:16"
						}
					],
					"src": "45:577:16"
				},
				"id": 16
			},
			"contracts/core/libraries/LowGasSafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
					"exportedSymbols": {
						"LowGasSafeMath": [
							2290
						]
					},
					"id": 2291,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2162,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2163,
								"nodeType": "StructuredDocumentation",
								"src": "71:178:17",
								"text": "@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost"
							},
							"fullyImplemented": true,
							"id": 2290,
							"linearizedBaseContracts": [
								2290
							],
							"name": "LowGasSafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2184,
										"nodeType": "Block",
										"src": "504:42:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2174,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2171,
																			"src": "523:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2175,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2166,
																				"src": "527:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2176,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2168,
																				"src": "531:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "527:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "523:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2179,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "522:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2180,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "537:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "522:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "514:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "514:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "514:25:17"
											}
										]
									},
									"documentation": {
										"id": 2164,
										"nodeType": "StructuredDocumentation",
										"src": "278:152:17",
										"text": "@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 2185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "448:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "459:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:22:17"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "493:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:11:17"
									},
									"scope": 2290,
									"src": "435:111:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "779:42:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2196,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2193,
																			"src": "798:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2197,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2188,
																				"src": "802:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2198,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2190,
																				"src": "806:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "802:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "798:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2201,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "797:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2202,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "812:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "797:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "789:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "789:25:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2205,
												"nodeType": "ExpressionStatement",
												"src": "789:25:17"
											}
										]
									},
									"documentation": {
										"id": 2186,
										"nodeType": "StructuredDocumentation",
										"src": "552:153:17",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "723:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "734:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:22:17"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "768:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:11:17"
									},
									"scope": 2290,
									"src": "710:111:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "1055:56:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2218,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "1073:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1078:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1073:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 2225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2221,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2215,
																					"src": "1084:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2224,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2222,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2210,
																						"src": "1088:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2223,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2212,
																						"src": "1092:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1088:5:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1084:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2226,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1083:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2227,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2210,
																		"src": "1097:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1083:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2229,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "1102:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1083:20:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1073:30:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1065:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:39:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2233,
												"nodeType": "ExpressionStatement",
												"src": "1065:39:17"
											}
										]
									},
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "827:154:17",
										"text": "@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"
									},
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "999:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "1010:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:22:17"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "1044:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:11:17"
									},
									"scope": 2290,
									"src": "986:125:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2261,
										"nodeType": "Block",
										"src": "1342:54:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 2250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2246,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2243,
																				"src": "1361:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2247,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2238,
																					"src": "1365:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 2248,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2240,
																					"src": "1369:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1365:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1361:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2251,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1360:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2252,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2238,
																	"src": "1375:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1360:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2254,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "1381:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1386:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1381:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2257,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1380:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1360:28:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1352:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:37:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2260,
												"nodeType": "ExpressionStatement",
												"src": "1352:37:17"
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "1117:154:17",
										"text": "@notice Returns x + y, reverts if overflows or underflows\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 2262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "1289:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2237,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "1299:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2239,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:20:17"
									},
									"returnParameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "1332:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2242,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:10:17"
									},
									"scope": 2290,
									"src": "1276:120:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2288,
										"nodeType": "Block",
										"src": "1639:54:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2273,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2270,
																				"src": "1658:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2274,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2265,
																					"src": "1662:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2275,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2267,
																					"src": "1666:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1662:5:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1658:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2278,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1657:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2279,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2265,
																	"src": "1672:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1657:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2281,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2267,
																			"src": "1678:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1683:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1678:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2284,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1677:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1657:28:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1649:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:37:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2287,
												"nodeType": "ExpressionStatement",
												"src": "1649:37:17"
											}
										]
									},
									"documentation": {
										"id": 2263,
										"nodeType": "StructuredDocumentation",
										"src": "1402:166:17",
										"text": "@notice Returns x - y, reverts if overflows or underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 2289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "1586:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2264,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "1596:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2266,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1596:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:20:17"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "1629:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2269,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:10:17"
									},
									"scope": 2290,
									"src": "1573:120:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2291,
							"src": "249:1446:17"
						}
					],
					"src": "45:1651:17"
				},
				"id": 17
			},
			"contracts/core/libraries/Oracle.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/Oracle.sol",
					"exportedSymbols": {
						"Oracle": [
							3026
						]
					},
					"id": 3027,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2292,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2293,
								"nodeType": "StructuredDocumentation",
								"src": "78:613:18",
								"text": "@title Oracle\n @notice Provides price and liquidity data useful for a wide variety of system designs\n @dev Instances of stored oracle data, \"observations\", are collected in the oracle array\n Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the\n maximum length of the oracle array. New slots will be added when the array is fully populated.\n Observations are overwritten when the full length of the oracle array is populated.\n The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()"
							},
							"fullyImplemented": true,
							"id": 3026,
							"linearizedBaseContracts": [
								3026
							],
							"name": "Oracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Oracle.Observation",
									"id": 2302,
									"members": [
										{
											"constant": false,
											"id": 2295,
											"mutability": "mutable",
											"name": "blockTimestamp",
											"nodeType": "VariableDeclaration",
											"scope": 2302,
											"src": "791:21:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2294,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "791:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2297,
											"mutability": "mutable",
											"name": "tickCumulative",
											"nodeType": "VariableDeclaration",
											"scope": 2302,
											"src": "917:20:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int56",
												"typeString": "int56"
											},
											"typeName": {
												"id": 2296,
												"name": "int56",
												"nodeType": "ElementaryTypeName",
												"src": "917:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2299,
											"mutability": "mutable",
											"name": "secondsPerLiquidityCumulativeX128",
											"nodeType": "VariableDeclaration",
											"scope": 2302,
											"src": "1063:41:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 2298,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1063:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2301,
											"mutability": "mutable",
											"name": "initialized",
											"nodeType": "VariableDeclaration",
											"scope": 2302,
											"src": "1171:16:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2300,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1171:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Observation",
									"nodeType": "StructDefinition",
									"scope": 3026,
									"src": "712:482:18",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "1987:419:18",
										"statements": [
											{
												"assignments": [
													2317
												],
												"declarations": [
													{
														"constant": false,
														"id": 2317,
														"mutability": "mutable",
														"name": "delta",
														"nodeType": "VariableDeclaration",
														"scope": 2356,
														"src": "1997:12:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2316,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "1997:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2322,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2318,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "2012:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 2319,
															"name": "last",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2305,
															"src": "2029:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																"typeString": "struct Oracle.Observation memory"
															}
														},
														"id": 2320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "blockTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2295,
														"src": "2029:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2012:36:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1997:51:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2324,
															"name": "blockTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2307,
															"src": "2107:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2325,
																	"name": "last",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2305,
																	"src": "2151:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																		"typeString": "struct Oracle.Observation memory"
																	}
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tickCumulative",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2297,
																"src": "2151:19:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2329,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2309,
																			"src": "2179:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2173:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int56_$",
																			"typeString": "type(int56)"
																		},
																		"typeName": {
																			"id": 2327,
																			"name": "int56",
																			"nodeType": "ElementaryTypeName",
																			"src": "2173:5:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2173:11:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2331,
																	"name": "delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "2187:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "2173:19:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															},
															"src": "2151:41:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2334,
																	"name": "last",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2305,
																	"src": "2241:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																		"typeString": "struct Oracle.Observation memory"
																	}
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "secondsPerLiquidityCumulativeX128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2299,
																"src": "2241:38:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 2341,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 2338,
																								"name": "delta",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2317,
																								"src": "2308:5:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							],
																							"id": 2337,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2300:7:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							},
																							"typeName": {
																								"id": 2336,
																								"name": "uint160",
																								"nodeType": "ElementaryTypeName",
																								"src": "2300:7:18",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2339,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2300:14:18",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"hexValue": "313238",
																						"id": 2340,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2318:3:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_128_by_1",
																							"typeString": "int_const 128"
																						},
																						"value": "128"
																					},
																					"src": "2300:21:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"id": 2342,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2299:23:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"components": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 2345,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2343,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2311,
																							"src": "2326:9:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 2344,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2338:1:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "2326:13:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseExpression": {
																						"hexValue": "31",
																						"id": 2347,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2354:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"id": 2348,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "Conditional",
																					"src": "2326:29:18",
																					"trueExpression": {
																						"id": 2346,
																						"name": "liquidity",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2311,
																						"src": "2342:9:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 2349,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2325:31:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "2299:57:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 2351,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2298:59:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "2241:116:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2384:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2323,
														"name": "Observation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "2065:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Observation_$2302_storage_ptr_$",
															"typeString": "type(struct Oracle.Observation storage pointer)"
														}
													},
													"id": 2354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"blockTimestamp",
														"tickCumulative",
														"secondsPerLiquidityCumulativeX128",
														"initialized"
													],
													"nodeType": "FunctionCall",
													"src": "2065:334:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
														"typeString": "struct Oracle.Observation memory"
													}
												},
												"functionReturnParameters": 2315,
												"id": 2355,
												"nodeType": "Return",
												"src": "2058:341:18"
											}
										]
									},
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "1200:614:18",
										"text": "@notice Transforms a previous observation into a new observation, given the passage of time and the current tick and liquidity values\n @dev blockTimestamp _must_ be chronologically equal to or greater than last.blockTimestamp, safe for 0 or 1 overflows\n @param last The specified observation to be transformed\n @param blockTimestamp The timestamp of the new observation\n @param tick The active tick at the time of the new observation\n @param liquidity The total in-range liquidity at the time of the new observation\n @return Observation The newly populated observation"
									},
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transform",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "last",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "1838:23:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 2304,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2302,
													"src": "1838:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "1863:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2306,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1863:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "1886:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2308,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1886:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "1898:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2310,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1837:79:18"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "1963:18:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 2313,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2302,
													"src": "1963:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:20:18"
									},
									"scope": 3026,
									"src": "1819:587:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "3005:219:18",
										"statements": [
											{
												"expression": {
													"id": 2380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2371,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2362,
															"src": "3015:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														"id": 2373,
														"indexExpression": {
															"hexValue": "30",
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3020:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3015:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_storage",
															"typeString": "struct Oracle.Observation storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2375,
																"name": "time",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2364,
																"src": "3067:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"hexValue": "30",
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3101:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 2377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3151:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "74727565",
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3179:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2374,
															"name": "Observation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "3025:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Observation_$2302_storage_ptr_$",
																"typeString": "type(struct Oracle.Observation storage pointer)"
															}
														},
														"id": 2379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"blockTimestamp",
															"tickCumulative",
															"secondsPerLiquidityCumulativeX128",
															"initialized"
														],
														"nodeType": "FunctionCall",
														"src": "3025:169:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
															"typeString": "struct Oracle.Observation memory"
														}
													},
													"src": "3015:179:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_storage",
														"typeString": "struct Oracle.Observation storage ref"
													}
												},
												"id": 2381,
												"nodeType": "ExpressionStatement",
												"src": "3015:179:18"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "31",
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3212:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "31",
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3215:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"id": 2384,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3211:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$",
														"typeString": "tuple(int_const 1,int_const 1)"
													}
												},
												"functionReturnParameters": 2370,
												"id": 2385,
												"nodeType": "Return",
												"src": "3204:13:18"
											}
										]
									},
									"documentation": {
										"id": 2358,
										"nodeType": "StructuredDocumentation",
										"src": "2412:440:18",
										"text": "@notice Initialize the oracle array by writing the first slot. Called once for the lifecycle of the observations array\n @param self The stored oracle array\n @param time The time of the oracle initialization, via block.timestamp truncated to uint32\n @return cardinality The number of populated elements in the oracle array\n @return cardinalityNext The new length of the oracle array, independent of population"
									},
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "2877:31:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 2359,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2302,
														"src": "2877:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 2361,
													"length": {
														"hexValue": "3635353335",
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2889:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "2877:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "2910:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2363,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2910:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:46:18"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "2957:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2366,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2957:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "cardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "2977:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2368,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2977:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:44:18"
									},
									"scope": 3026,
									"src": "2857:367:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2467,
										"nodeType": "Block",
										"src": "4689:614:18",
										"statements": [
											{
												"assignments": [
													2412
												],
												"declarations": [
													{
														"constant": false,
														"id": 2412,
														"mutability": "mutable",
														"name": "last",
														"nodeType": "VariableDeclaration",
														"scope": 2467,
														"src": "4699:23:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
															"typeString": "struct Oracle.Observation"
														},
														"typeName": {
															"id": 2411,
															"name": "Observation",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2302,
															"src": "4699:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
																"typeString": "struct Oracle.Observation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2416,
												"initialValue": {
													"baseExpression": {
														"id": 2413,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2392,
														"src": "4725:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
															"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
														}
													},
													"id": 2415,
													"indexExpression": {
														"id": 2414,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2394,
														"src": "4730:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4725:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_storage",
														"typeString": "struct Oracle.Observation storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4699:37:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2417,
															"name": "last",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "4826:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																"typeString": "struct Oracle.Observation memory"
															}
														},
														"id": 2418,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "blockTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2295,
														"src": "4826:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2419,
														"name": "blockTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2396,
														"src": "4849:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "4826:37:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2425,
												"nodeType": "IfStatement",
												"src": "4822:70:18",
												"trueBody": {
													"expression": {
														"components": [
															{
																"id": 2421,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "4873:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 2422,
																"name": "cardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "4880:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"id": 2423,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4872:20:18",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint16_$_t_uint16_$",
															"typeString": "tuple(uint16,uint16)"
														}
													},
													"functionReturnParameters": 2410,
													"id": 2424,
													"nodeType": "Return",
													"src": "4865:27:18"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2426,
															"name": "cardinalityNext",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "4975:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2427,
															"name": "cardinality",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "4993:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "4975:29:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2429,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2394,
															"src": "5008:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2430,
																		"name": "cardinality",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2402,
																		"src": "5018:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5032:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5018:15:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"id": 2433,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5017:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "5008:26:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4975:59:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2445,
													"nodeType": "Block",
													"src": "5103:57:18",
													"statements": [
														{
															"expression": {
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2441,
																	"name": "cardinalityUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "5117:18:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2442,
																	"name": "cardinality",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "5138:11:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5117:32:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 2444,
															"nodeType": "ExpressionStatement",
															"src": "5117:32:18"
														}
													]
												},
												"id": 2446,
												"nodeType": "IfStatement",
												"src": "4971:189:18",
												"trueBody": {
													"id": 2440,
													"nodeType": "Block",
													"src": "5036:61:18",
													"statements": [
														{
															"expression": {
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2436,
																	"name": "cardinalityUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "5050:18:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2437,
																	"name": "cardinalityNext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2404,
																	"src": "5071:15:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "5050:36:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 2439,
															"nodeType": "ExpressionStatement",
															"src": "5050:36:18"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2447,
														"name": "indexUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2407,
														"src": "5170:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 2453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2448,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "5186:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5194:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5186:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"id": 2451,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5185:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"id": 2452,
															"name": "cardinalityUpdated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2409,
															"src": "5199:18:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "5185:32:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "5170:47:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2455,
												"nodeType": "ExpressionStatement",
												"src": "5170:47:18"
											},
											{
												"expression": {
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2456,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "5227:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														"id": 2458,
														"indexExpression": {
															"id": 2457,
															"name": "indexUpdated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "5232:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5227:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_storage",
															"typeString": "struct Oracle.Observation storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2460,
																"name": "last",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "5258:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																}
															},
															{
																"id": 2461,
																"name": "blockTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2396,
																"src": "5264:14:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"id": 2462,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2398,
																"src": "5280:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"id": 2463,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2400,
																"src": "5286:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 2459,
															"name": "transform",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "5248:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_Observation_$2302_memory_ptr_$_t_uint32_$_t_int24_$_t_uint128_$returns$_t_struct$_Observation_$2302_memory_ptr_$",
																"typeString": "function (struct Oracle.Observation memory,uint32,int24,uint128) pure returns (struct Oracle.Observation memory)"
															}
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5248:48:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
															"typeString": "struct Oracle.Observation memory"
														}
													},
													"src": "5227:69:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_storage",
														"typeString": "struct Oracle.Observation storage ref"
													}
												},
												"id": 2466,
												"nodeType": "ExpressionStatement",
												"src": "5227:69:18"
											}
										]
									},
									"documentation": {
										"id": 2388,
										"nodeType": "StructuredDocumentation",
										"src": "3230:1166:18",
										"text": "@notice Writes an oracle observation to the array\n @dev Writable at most once per block. Index represents the most recently written element. cardinality and index must be tracked externally.\n If the index is at the end of the allowable array length (according to cardinality), and the next cardinality\n is greater than the current one, cardinality may be increased. This restriction is created to preserve ordering.\n @param self The stored oracle array\n @param index The index of the observation that was most recently written to the observations array\n @param blockTimestamp The timestamp of the new observation\n @param tick The active tick at the time of the new observation\n @param liquidity The total in-range liquidity at the time of the new observation\n @param cardinality The number of populated elements in the oracle array\n @param cardinalityNext The new length of the oracle array, independent of population\n @return indexUpdated The new index of the most recently written element in the oracle array\n @return cardinalityUpdated The new cardinality of the oracle array"
									},
									"id": 2468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "write",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "4425:31:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 2389,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2302,
														"src": "4425:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 2391,
													"length": {
														"hexValue": "3635353335",
														"id": 2390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4437:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "4425:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "4466:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2393,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4466:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "4488:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2395,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4488:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "4519:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2397,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4519:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "4539:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2399,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4539:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "4566:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2401,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4566:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "cardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "4594:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2403,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4594:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4415:207:18"
									},
									"returnParameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "indexUpdated",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "4641:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2406,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4641:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "cardinalityUpdated",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "4662:25:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2408,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4662:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4640:48:18"
									},
									"scope": 3026,
									"src": "4401:902:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2516,
										"nodeType": "Block",
										"src": "5784:441:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2483,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2475,
																"src": "5802:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5812:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5802:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49",
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5815:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															},
															"value": "I"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															}
														],
														"id": 2482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5794:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5794:25:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2488,
												"nodeType": "ExpressionStatement",
												"src": "5794:25:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2489,
														"name": "next",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2477,
														"src": "5917:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2490,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2475,
														"src": "5925:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "5917:15:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2494,
												"nodeType": "IfStatement",
												"src": "5913:35:18",
												"trueBody": {
													"expression": {
														"id": 2492,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2475,
														"src": "5941:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"functionReturnParameters": 2481,
													"id": 2493,
													"nodeType": "Return",
													"src": "5934:14:18"
												}
											},
											{
												"body": {
													"id": 2512,
													"nodeType": "Block",
													"src": "6147:51:18",
													"statements": [
														{
															"expression": {
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2505,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "6161:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																				"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																			}
																		},
																		"id": 2507,
																		"indexExpression": {
																			"id": 2506,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2496,
																			"src": "6166:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6161:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$2302_storage",
																			"typeString": "struct Oracle.Observation storage ref"
																		}
																	},
																	"id": 2508,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "blockTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2295,
																	"src": "6161:22:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6186:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6161:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 2511,
															"nodeType": "ExpressionStatement",
															"src": "6161:26:18"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2499,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2496,
														"src": "6132:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2500,
														"name": "next",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2477,
														"src": "6136:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "6132:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2513,
												"initializationExpression": {
													"assignments": [
														2496
													],
													"declarations": [
														{
															"constant": false,
															"id": 2496,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2513,
															"src": "6112:8:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"typeName": {
																"id": 2495,
																"name": "uint16",
																"nodeType": "ElementaryTypeName",
																"src": "6112:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2498,
													"initialValue": {
														"id": 2497,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2475,
														"src": "6123:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6112:18:18"
												},
												"loopExpression": {
													"expression": {
														"id": 2503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6142:3:18",
														"subExpression": {
															"id": 2502,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2496,
															"src": "6142:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 2504,
													"nodeType": "ExpressionStatement",
													"src": "6142:3:18"
												},
												"nodeType": "ForStatement",
												"src": "6107:91:18"
											},
											{
												"expression": {
													"id": 2514,
													"name": "next",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2477,
													"src": "6214:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 2481,
												"id": 2515,
												"nodeType": "Return",
												"src": "6207:11:18"
											}
										]
									},
									"documentation": {
										"id": 2469,
										"nodeType": "StructuredDocumentation",
										"src": "5309:368:18",
										"text": "@notice Prepares the oracle array to store up to `next` observations\n @param self The stored oracle array\n @param current The current next cardinality of the oracle array\n @param next The proposed next cardinality which will be populated in the oracle array\n @return next The next cardinality which will be populated in the oracle array"
									},
									"id": 2517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grow",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "5696:31:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 2470,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2302,
														"src": "5696:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 2472,
													"length": {
														"hexValue": "3635353335",
														"id": 2471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5708:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "5696:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "current",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "5729:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2474,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5729:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "next",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "5745:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2476,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5745:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5695:62:18"
									},
									"returnParameters": {
										"id": 2481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "5776:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2479,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5776:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:8:18"
									},
									"scope": 3026,
									"src": "5682:543:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2571,
										"nodeType": "Block",
										"src": "6733:271:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2529,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "6807:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 2530,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2520,
															"src": "6812:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "6807:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2532,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "6820:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 2533,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2520,
															"src": "6825:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "6820:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6807:22:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2540,
												"nodeType": "IfStatement",
												"src": "6803:41:18",
												"trueBody": {
													"expression": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2536,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "6838:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 2537,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "6843:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "6838:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"functionReturnParameters": 2528,
													"id": 2539,
													"nodeType": "Return",
													"src": "6831:13:18"
												}
											},
											{
												"assignments": [
													2542
												],
												"declarations": [
													{
														"constant": false,
														"id": 2542,
														"mutability": "mutable",
														"name": "aAdjusted",
														"nodeType": "VariableDeclaration",
														"scope": 2571,
														"src": "6855:17:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6855:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2553,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2543,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "6875:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2544,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2520,
															"src": "6879:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "6875:8:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														},
														"id": 2551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2547,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "6890:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_4294967296_by_1",
																"typeString": "int_const 4294967296"
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6894:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3332",
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6899:2:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "6894:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4294967296_by_1",
																"typeString": "int_const 4294967296"
															}
														},
														"src": "6890:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"id": 2552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6875:26:18",
													"trueExpression": {
														"id": 2546,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2522,
														"src": "6886:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6855:46:18"
											},
											{
												"assignments": [
													2555
												],
												"declarations": [
													{
														"constant": false,
														"id": 2555,
														"mutability": "mutable",
														"name": "bAdjusted",
														"nodeType": "VariableDeclaration",
														"scope": 2571,
														"src": "6911:17:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6911:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2566,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2556,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "6931:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2557,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2520,
															"src": "6935:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "6931:8:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														},
														"id": 2564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2560,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "6946:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_4294967296_by_1",
																"typeString": "int_const 4294967296"
															},
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6950:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3332",
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6955:2:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "6950:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4294967296_by_1",
																"typeString": "int_const 4294967296"
															}
														},
														"src": "6946:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"id": 2565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6931:26:18",
													"trueExpression": {
														"id": 2559,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2524,
														"src": "6942:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6911:46:18"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2567,
														"name": "aAdjusted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2542,
														"src": "6975:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2568,
														"name": "bAdjusted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2555,
														"src": "6988:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6975:22:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2528,
												"id": 2570,
												"nodeType": "Return",
												"src": "6968:29:18"
											}
										]
									},
									"documentation": {
										"id": 2518,
										"nodeType": "StructuredDocumentation",
										"src": "6231:423:18",
										"text": "@notice comparator for 32-bit timestamps\n @dev safe for 0 or 1 overflows, a and b _must_ be chronologically before or equal to time\n @param time A timestamp truncated to 32 bits\n @param a A comparison timestamp from which to determine the relative position of `time`\n @param b From which to determine the relative position of `time`\n @return bool Whether `a` is chronologically <= `b`"
									},
									"id": 2572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lte",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "6672:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2519,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6672:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "6685:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2521,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6685:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "6695:8:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2523,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6695:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6671:33:18"
									},
									"returnParameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "6727:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6727:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6726:6:18"
									},
									"scope": 3026,
									"src": "6659:345:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2689,
										"nodeType": "Block",
										"src": "8187:818:18",
										"statements": [
											{
												"assignments": [
													2593
												],
												"declarations": [
													{
														"constant": false,
														"id": 2593,
														"mutability": "mutable",
														"name": "l",
														"nodeType": "VariableDeclaration",
														"scope": 2689,
														"src": "8197:9:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2592,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8197:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2600,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2594,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2583,
																	"src": "8210:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8218:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8210:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"id": 2597,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8209:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2598,
														"name": "cardinality",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2585,
														"src": "8223:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "8209:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8197:37:18"
											},
											{
												"assignments": [
													2602
												],
												"declarations": [
													{
														"constant": false,
														"id": 2602,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 2689,
														"src": "8266:9:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8266:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2608,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2603,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "8278:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2604,
															"name": "cardinality",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2585,
															"src": "8282:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "8278:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 2606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8296:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8278:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8266:31:18"
											},
											{
												"assignments": [
													2610
												],
												"declarations": [
													{
														"constant": false,
														"id": 2610,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 2689,
														"src": "8329:9:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2609,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8329:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2611,
												"nodeType": "VariableDeclarationStatement",
												"src": "8329:9:18"
											},
											{
												"body": {
													"id": 2687,
													"nodeType": "Block",
													"src": "8361:638:18",
													"statements": [
														{
															"expression": {
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2613,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2610,
																	"src": "8375:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2616,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2614,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2593,
																					"src": "8380:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 2615,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2602,
																					"src": "8384:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8380:5:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2617,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8379:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 2618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8389:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "8379:11:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8375:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2621,
															"nodeType": "ExpressionStatement",
															"src": "8375:15:18"
														},
														{
															"expression": {
																"id": 2628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2622,
																	"name": "beforeOrAt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "8405:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																		"typeString": "struct Oracle.Observation memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2623,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2577,
																		"src": "8418:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																			"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																		}
																	},
																	"id": 2627,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2624,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2610,
																			"src": "8423:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 2625,
																			"name": "cardinality",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2585,
																			"src": "8427:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "8423:15:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8418:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$2302_storage",
																		"typeString": "struct Oracle.Observation storage ref"
																	}
																},
																"src": "8405:34:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																}
															},
															"id": 2629,
															"nodeType": "ExpressionStatement",
															"src": "8405:34:18"
														},
														{
															"condition": {
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8550:23:18",
																"subExpression": {
																	"expression": {
																		"id": 2630,
																		"name": "beforeOrAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2588,
																		"src": "8551:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2301,
																	"src": "8551:22:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2641,
															"nodeType": "IfStatement",
															"src": "8546:97:18",
															"trueBody": {
																"id": 2640,
																"nodeType": "Block",
																"src": "8575:68:18",
																"statements": [
																	{
																		"expression": {
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2633,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2593,
																				"src": "8593:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2634,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2610,
																					"src": "8597:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2635,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8601:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "8597:5:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8593:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2638,
																		"nodeType": "ExpressionStatement",
																		"src": "8593:9:18"
																	},
																	{
																		"id": 2639,
																		"nodeType": "Continue",
																		"src": "8620:8:18"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2642,
																	"name": "atOrAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "8657:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																		"typeString": "struct Oracle.Observation memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2643,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2577,
																		"src": "8669:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																			"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																		}
																	},
																	"id": 2650,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2646,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2644,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2610,
																						"src": "8675:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2645,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8679:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "8675:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2647,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8674:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 2648,
																			"name": "cardinality",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2585,
																			"src": "8684:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "8674:21:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8669:27:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$2302_storage",
																		"typeString": "struct Oracle.Observation storage ref"
																	}
																},
																"src": "8657:39:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																}
															},
															"id": 2652,
															"nodeType": "ExpressionStatement",
															"src": "8657:39:18"
														},
														{
															"assignments": [
																2654
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2654,
																	"mutability": "mutable",
																	"name": "targetAtOrAfter",
																	"nodeType": "VariableDeclaration",
																	"scope": 2687,
																	"src": "8711:20:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2653,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "8711:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2661,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2656,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2579,
																		"src": "8738:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"expression": {
																			"id": 2657,
																			"name": "beforeOrAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "8744:10:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "blockTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2295,
																		"src": "8744:25:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"id": 2659,
																		"name": "target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2581,
																		"src": "8771:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 2655,
																	"name": "lte",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2572,
																	"src": "8734:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$",
																		"typeString": "function (uint32,uint32,uint32) pure returns (bool)"
																	}
																},
																"id": 2660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8734:44:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8711:67:18"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2662,
																	"name": "targetAtOrAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2654,
																	"src": "8845:15:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2664,
																			"name": "time",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2579,
																			"src": "8868:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"id": 2665,
																			"name": "target",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2581,
																			"src": "8874:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"expression": {
																				"id": 2666,
																				"name": "atOrAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2590,
																				"src": "8882:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																					"typeString": "struct Oracle.Observation memory"
																				}
																			},
																			"id": 2667,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "blockTimestamp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2295,
																			"src": "8882:24:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		],
																		"id": 2663,
																		"name": "lte",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2572,
																		"src": "8864:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$",
																			"typeString": "function (uint32,uint32,uint32) pure returns (bool)"
																		}
																	},
																	"id": 2668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8864:43:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8845:62:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2671,
															"nodeType": "IfStatement",
															"src": "8841:73:18",
															"trueBody": {
																"id": 2670,
																"nodeType": "Break",
																"src": "8909:5:18"
															}
														},
														{
															"condition": {
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8933:16:18",
																"subExpression": {
																	"id": 2672,
																	"name": "targetAtOrAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2654,
																	"src": "8934:15:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"id": 2684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2680,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2593,
																		"src": "8979:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2681,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2610,
																			"src": "8983:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8987:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8983:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8979:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2685,
																"nodeType": "ExpressionStatement",
																"src": "8979:9:18"
															},
															"id": 2686,
															"nodeType": "IfStatement",
															"src": "8929:59:18",
															"trueBody": {
																"expression": {
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2674,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2602,
																		"src": "8951:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2675,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2610,
																			"src": "8955:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8959:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8955:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8951:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2679,
																"nodeType": "ExpressionStatement",
																"src": "8951:9:18"
															}
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 2612,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8355:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 2688,
												"nodeType": "WhileStatement",
												"src": "8348:651:18"
											}
										]
									},
									"documentation": {
										"id": 2573,
										"nodeType": "StructuredDocumentation",
										"src": "7010:944:18",
										"text": "@notice Fetches the observations beforeOrAt and atOrAfter a target, i.e. where [beforeOrAt, atOrAfter] is satisfied.\n The result may be the same observation, or adjacent observations.\n @dev The answer must be contained in the array, used when the target is located within the stored observation\n boundaries: older than the most recent observation and younger, or the same age as, the oldest observation\n @param self The stored oracle array\n @param time The current block.timestamp\n @param target The timestamp at which the reserved observation should be for\n @param index The index of the observation that was most recently written to the observations array\n @param cardinality The number of populated elements in the oracle array\n @return beforeOrAt The observation recorded before, or at, the target\n @return atOrAfter The observation recorded at, or after, the target"
									},
									"id": 2690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "binarySearch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "7981:31:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 2574,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2302,
														"src": "7981:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 2576,
													"length": {
														"hexValue": "3635353335",
														"id": 2575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7993:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "7981:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "8014:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2578,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8014:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "8027:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2580,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8027:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "8042:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2582,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8042:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "8056:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2584,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8056:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7980:95:18"
									},
									"returnParameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "beforeOrAt",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "8122:29:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 2587,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2302,
													"src": "8122:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "atOrAfter",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "8153:28:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 2589,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2302,
													"src": "8153:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8121:61:18"
									},
									"scope": 3026,
									"src": "7959:1046:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2787,
										"nodeType": "Block",
										"src": "10336:1118:18",
										"statements": [
											{
												"expression": {
													"id": 2718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2714,
														"name": "beforeOrAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2710,
														"src": "10409:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
															"typeString": "struct Oracle.Observation memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 2715,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2695,
															"src": "10422:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														"id": 2717,
														"indexExpression": {
															"id": 2716,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2703,
															"src": "10427:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10422:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_storage",
															"typeString": "struct Oracle.Observation storage ref"
														}
													},
													"src": "10409:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
														"typeString": "struct Oracle.Observation memory"
													}
												},
												"id": 2719,
												"nodeType": "ExpressionStatement",
												"src": "10409:24:18"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 2721,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2697,
															"src": "10552:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"expression": {
																"id": 2722,
																"name": "beforeOrAt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "10558:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																}
															},
															"id": 2723,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "blockTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2295,
															"src": "10558:25:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2724,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "10585:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														],
														"id": 2720,
														"name": "lte",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2572,
														"src": "10548:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$",
															"typeString": "function (uint32,uint32,uint32) pure returns (bool)"
														}
													},
													"id": 2725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10548:44:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2747,
												"nodeType": "IfStatement",
												"src": "10544:443:18",
												"trueBody": {
													"id": 2746,
													"nodeType": "Block",
													"src": "10594:393:18",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2726,
																		"name": "beforeOrAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2710,
																		"src": "10612:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "blockTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2295,
																	"src": "10612:25:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2728,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "10641:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "10612:35:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2744,
																"nodeType": "Block",
																"src": "10826:151:18",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 2735,
																					"name": "beforeOrAt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2710,
																					"src": "10903:10:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 2737,
																							"name": "beforeOrAt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2710,
																							"src": "10925:10:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																								"typeString": "struct Oracle.Observation memory"
																							}
																						},
																						{
																							"id": 2738,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2699,
																							"src": "10937:6:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						{
																							"id": 2739,
																							"name": "tick",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2701,
																							"src": "10945:4:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						{
																							"id": 2740,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2705,
																							"src": "10951:9:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																								"typeString": "struct Oracle.Observation memory"
																							},
																							{
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							},
																							{
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							},
																							{
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						],
																						"id": 2736,
																						"name": "transform",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2357,
																						"src": "10915:9:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_struct$_Observation_$2302_memory_ptr_$_t_uint32_$_t_int24_$_t_uint128_$returns$_t_struct$_Observation_$2302_memory_ptr_$",
																							"typeString": "function (struct Oracle.Observation memory,uint32,int24,uint128) pure returns (struct Oracle.Observation memory)"
																						}
																					},
																					"id": 2741,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10915:46:18",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				}
																			],
																			"id": 2742,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "10902:60:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_struct$_Observation_$2302_memory_ptr_$_t_struct$_Observation_$2302_memory_ptr_$",
																				"typeString": "tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"
																			}
																		},
																		"functionReturnParameters": 2713,
																		"id": 2743,
																		"nodeType": "Return",
																		"src": "10895:67:18"
																	}
																]
															},
															"id": 2745,
															"nodeType": "IfStatement",
															"src": "10608:369:18",
															"trueBody": {
																"id": 2734,
																"nodeType": "Block",
																"src": "10649:171:18",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 2730,
																					"name": "beforeOrAt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2710,
																					"src": "10783:10:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				},
																				{
																					"id": 2731,
																					"name": "atOrAfter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2712,
																					"src": "10795:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				}
																			],
																			"id": 2732,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "10782:23:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_struct$_Observation_$2302_memory_ptr_$_t_struct$_Observation_$2302_memory_ptr_$",
																				"typeString": "tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"
																			}
																		},
																		"functionReturnParameters": 2713,
																		"id": 2733,
																		"nodeType": "Return",
																		"src": "10775:30:18"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2748,
														"name": "beforeOrAt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2710,
														"src": "11050:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
															"typeString": "struct Oracle.Observation memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 2749,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2695,
															"src": "11063:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														"id": 2756,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		"id": 2752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2750,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2703,
																			"src": "11069:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11077:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11069:9:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"id": 2753,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11068:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2754,
																"name": "cardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2707,
																"src": "11082:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "11068:25:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11063:31:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_storage",
															"typeString": "struct Oracle.Observation storage ref"
														}
													},
													"src": "11050:44:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
														"typeString": "struct Oracle.Observation memory"
													}
												},
												"id": 2758,
												"nodeType": "ExpressionStatement",
												"src": "11050:44:18"
											},
											{
												"condition": {
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11108:23:18",
													"subExpression": {
														"expression": {
															"id": 2759,
															"name": "beforeOrAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2710,
															"src": "11109:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																"typeString": "struct Oracle.Observation memory"
															}
														},
														"id": 2760,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2301,
														"src": "11109:22:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2768,
												"nodeType": "IfStatement",
												"src": "11104:49:18",
												"trueBody": {
													"expression": {
														"id": 2766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2762,
															"name": "beforeOrAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2710,
															"src": "11133:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																"typeString": "struct Oracle.Observation memory"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"baseExpression": {
																"id": 2763,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2695,
																"src": "11146:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																	"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																}
															},
															"id": 2765,
															"indexExpression": {
																"hexValue": "30",
																"id": 2764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11151:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11146:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$2302_storage",
																"typeString": "struct Oracle.Observation storage ref"
															}
														},
														"src": "11133:20:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
															"typeString": "struct Oracle.Observation memory"
														}
													},
													"id": 2767,
													"nodeType": "ExpressionStatement",
													"src": "11133:20:18"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2771,
																	"name": "time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2697,
																	"src": "11264:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"expression": {
																		"id": 2772,
																		"name": "beforeOrAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2710,
																		"src": "11270:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"id": 2773,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "blockTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2295,
																	"src": "11270:25:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"id": 2774,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "11297:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																],
																"id": 2770,
																"name": "lte",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2572,
																"src": "11260:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$",
																	"typeString": "function (uint32,uint32,uint32) pure returns (bool)"
																}
															},
															"id": 2775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11260:44:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f4c44",
															"id": 2776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11306:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d30c0d219016dd7e5cf2b2c30c4d7c091820fc329f335b57cab26b9ff3384a9e",
																"typeString": "literal_string \"OLD\""
															},
															"value": "OLD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d30c0d219016dd7e5cf2b2c30c4d7c091820fc329f335b57cab26b9ff3384a9e",
																"typeString": "literal_string \"OLD\""
															}
														],
														"id": 2769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11252:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11252:60:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2778,
												"nodeType": "ExpressionStatement",
												"src": "11252:60:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2780,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2695,
															"src": "11408:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														{
															"id": 2781,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2697,
															"src": "11414:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2782,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "11420:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2783,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2703,
															"src": "11428:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2784,
															"name": "cardinality",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "11435:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2779,
														"name": "binarySearch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2690,
														"src": "11395:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_uint16_$_t_uint16_$returns$_t_struct$_Observation_$2302_memory_ptr_$_t_struct$_Observation_$2302_memory_ptr_$",
															"typeString": "function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,uint16,uint16) view returns (struct Oracle.Observation memory,struct Oracle.Observation memory)"
														}
													},
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11395:52:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_struct$_Observation_$2302_memory_ptr_$_t_struct$_Observation_$2302_memory_ptr_$",
														"typeString": "tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"
													}
												},
												"functionReturnParameters": 2713,
												"id": 2786,
												"nodeType": "Return",
												"src": "11388:59:18"
											}
										]
									},
									"documentation": {
										"id": 2691,
										"nodeType": "StructuredDocumentation",
										"src": "9011:1013:18",
										"text": "@notice Fetches the observations beforeOrAt and atOrAfter a given target, i.e. where [beforeOrAt, atOrAfter] is satisfied\n @dev Assumes there is at least 1 initialized observation.\n Used by observeSingle() to compute the counterfactual accumulator values as of a given block timestamp.\n @param self The stored oracle array\n @param time The current block.timestamp\n @param target The timestamp at which the reserved observation should be for\n @param tick The active tick at the time of the returned or simulated observation\n @param index The index of the observation that was most recently written to the observations array\n @param liquidity The total pool liquidity at the time of the call\n @param cardinality The number of populated elements in the oracle array\n @return beforeOrAt The observation which occurred at, or before, the given timestamp\n @return atOrAfter The observation which occurred at, or after, the given timestamp"
									},
									"id": 2788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSurroundingObservations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "10074:31:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 2692,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2302,
														"src": "10074:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 2694,
													"length": {
														"hexValue": "3635353335",
														"id": 2693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10086:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "10074:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "10115:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2696,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "10115:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "10136:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2698,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "10136:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "10159:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2700,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10159:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "10179:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2702,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10179:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "10201:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2704,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "10201:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "10228:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2706,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10228:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10064:188:18"
									},
									"returnParameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "beforeOrAt",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "10275:29:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 2709,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2302,
													"src": "10275:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "atOrAfter",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "10306:28:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
													"typeString": "struct Oracle.Observation"
												},
												"typeName": {
													"id": 2711,
													"name": "Observation",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2302,
													"src": "10306:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
														"typeString": "struct Oracle.Observation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10274:61:18"
									},
									"scope": 3026,
									"src": "10029:1425:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2938,
										"nodeType": "Block",
										"src": "12868:1682:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2812,
														"name": "secondsAgo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2797,
														"src": "12882:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12896:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12882:15:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2842,
												"nodeType": "IfStatement",
												"src": "12878:257:18",
												"trueBody": {
													"id": 2841,
													"nodeType": "Block",
													"src": "12899:236:18",
													"statements": [
														{
															"assignments": [
																2816
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2816,
																	"mutability": "mutable",
																	"name": "last",
																	"nodeType": "VariableDeclaration",
																	"scope": 2841,
																	"src": "12913:23:18",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																		"typeString": "struct Oracle.Observation"
																	},
																	"typeName": {
																		"id": 2815,
																		"name": "Observation",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 2302,
																		"src": "12913:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
																			"typeString": "struct Oracle.Observation"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2820,
															"initialValue": {
																"baseExpression": {
																	"id": 2817,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2793,
																	"src": "12939:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																		"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																	}
																},
																"id": 2819,
																"indexExpression": {
																	"id": 2818,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2801,
																	"src": "12944:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12939:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$2302_storage",
																	"typeString": "struct Oracle.Observation storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12913:37:18"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 2824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2821,
																		"name": "last",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2816,
																		"src": "12968:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"id": 2822,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "blockTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2295,
																	"src": "12968:19:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2823,
																	"name": "time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2795,
																	"src": "12991:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "12968:27:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2834,
															"nodeType": "IfStatement",
															"src": "12964:78:18",
															"trueBody": {
																"expression": {
																	"id": 2832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2825,
																		"name": "last",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2816,
																		"src": "12997:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2827,
																				"name": "last",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2816,
																				"src": "13014:4:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																					"typeString": "struct Oracle.Observation memory"
																				}
																			},
																			{
																				"id": 2828,
																				"name": "time",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2795,
																				"src": "13020:4:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			{
																				"id": 2829,
																				"name": "tick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2799,
																				"src": "13026:4:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			{
																				"id": 2830,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2803,
																				"src": "13032:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																					"typeString": "struct Oracle.Observation memory"
																				},
																				{
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				},
																				{
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2826,
																			"name": "transform",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2357,
																			"src": "13004:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_struct$_Observation_$2302_memory_ptr_$_t_uint32_$_t_int24_$_t_uint128_$returns$_t_struct$_Observation_$2302_memory_ptr_$",
																				"typeString": "function (struct Oracle.Observation memory,uint32,int24,uint128) pure returns (struct Oracle.Observation memory)"
																			}
																		},
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13004:38:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																			"typeString": "struct Oracle.Observation memory"
																		}
																	},
																	"src": "12997:45:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																		"typeString": "struct Oracle.Observation memory"
																	}
																},
																"id": 2833,
																"nodeType": "ExpressionStatement",
																"src": "12997:45:18"
															}
														},
														{
															"expression": {
																"components": [
																	{
																		"expression": {
																			"id": 2835,
																			"name": "last",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2816,
																			"src": "13064:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 2836,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tickCumulative",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2297,
																		"src": "13064:19:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int56",
																			"typeString": "int56"
																		}
																	},
																	{
																		"expression": {
																			"id": 2837,
																			"name": "last",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2816,
																			"src": "13085:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 2838,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "secondsPerLiquidityCumulativeX128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2299,
																		"src": "13085:38:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 2839,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13063:61:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																	"typeString": "tuple(int56,uint160)"
																}
															},
															"functionReturnParameters": 2811,
															"id": 2840,
															"nodeType": "Return",
															"src": "13056:68:18"
														}
													]
												}
											},
											{
												"assignments": [
													2844
												],
												"declarations": [
													{
														"constant": false,
														"id": 2844,
														"mutability": "mutable",
														"name": "target",
														"nodeType": "VariableDeclaration",
														"scope": 2938,
														"src": "13145:13:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 2843,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "13145:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2848,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 2847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2845,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2795,
														"src": "13161:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2846,
														"name": "secondsAgo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2797,
														"src": "13168:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "13161:17:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13145:33:18"
											},
											{
												"assignments": [
													2850,
													2852
												],
												"declarations": [
													{
														"constant": false,
														"id": 2850,
														"mutability": "mutable",
														"name": "beforeOrAt",
														"nodeType": "VariableDeclaration",
														"scope": 2938,
														"src": "13190:29:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
															"typeString": "struct Oracle.Observation"
														},
														"typeName": {
															"id": 2849,
															"name": "Observation",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2302,
															"src": "13190:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
																"typeString": "struct Oracle.Observation"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2852,
														"mutability": "mutable",
														"name": "atOrAfter",
														"nodeType": "VariableDeclaration",
														"scope": 2938,
														"src": "13221:28:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
															"typeString": "struct Oracle.Observation"
														},
														"typeName": {
															"id": 2851,
															"name": "Observation",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2302,
															"src": "13221:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
																"typeString": "struct Oracle.Observation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2862,
												"initialValue": {
													"arguments": [
														{
															"id": 2854,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2793,
															"src": "13292:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															}
														},
														{
															"id": 2855,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2795,
															"src": "13298:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2856,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2844,
															"src": "13304:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2857,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2799,
															"src": "13312:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 2858,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2801,
															"src": "13318:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2859,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2803,
															"src": "13325:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 2860,
															"name": "cardinality",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2805,
															"src": "13336:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2853,
														"name": "getSurroundingObservations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2788,
														"src": "13265:26:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_int24_$_t_uint16_$_t_uint128_$_t_uint16_$returns$_t_struct$_Observation_$2302_memory_ptr_$_t_struct$_Observation_$2302_memory_ptr_$",
															"typeString": "function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16) view returns (struct Oracle.Observation memory,struct Oracle.Observation memory)"
														}
													},
													"id": 2861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13265:83:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_struct$_Observation_$2302_memory_ptr_$_t_struct$_Observation_$2302_memory_ptr_$",
														"typeString": "tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13189:159:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													},
													"id": 2866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2863,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2844,
														"src": "13363:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2864,
															"name": "beforeOrAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2850,
															"src": "13373:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																"typeString": "struct Oracle.Observation memory"
															}
														},
														"id": 2865,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "blockTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2295,
														"src": "13373:25:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "13363:35:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2874,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2844,
															"src": "13557:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2875,
																"name": "atOrAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2852,
																"src": "13567:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																	"typeString": "struct Oracle.Observation memory"
																}
															},
															"id": 2876,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "blockTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2295,
															"src": "13567:24:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "13557:34:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2935,
														"nodeType": "Block",
														"src": "13745:799:18",
														"statements": [
															{
																"assignments": [
																	2886
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2886,
																		"mutability": "mutable",
																		"name": "observationTimeDelta",
																		"nodeType": "VariableDeclaration",
																		"scope": 2935,
																		"src": "13794:27:18",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"typeName": {
																			"id": 2885,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "13794:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2892,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 2891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2887,
																			"name": "atOrAfter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2852,
																			"src": "13824:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 2888,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "blockTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2295,
																		"src": "13824:24:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 2889,
																			"name": "beforeOrAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2850,
																			"src": "13851:10:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 2890,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "blockTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2295,
																		"src": "13851:25:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "13824:52:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "13794:82:18"
															},
															{
																"assignments": [
																	2894
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2894,
																		"mutability": "mutable",
																		"name": "targetDelta",
																		"nodeType": "VariableDeclaration",
																		"scope": 2935,
																		"src": "13890:18:18",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"typeName": {
																			"id": 2893,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "13890:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2899,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"id": 2898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2895,
																		"name": "target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2844,
																		"src": "13911:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 2896,
																			"name": "beforeOrAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2850,
																			"src": "13920:10:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "blockTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2295,
																		"src": "13920:25:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "13911:34:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "13890:55:18"
															},
															{
																"expression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			},
																			"id": 2913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2900,
																					"name": "beforeOrAt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2850,
																					"src": "13984:10:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				},
																				"id": 2901,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "tickCumulative",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2297,
																				"src": "13984:25:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				},
																				"id": 2912,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_int56",
																								"typeString": "int56"
																							},
																							"id": 2909,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_int56",
																											"typeString": "int56"
																										},
																										"id": 2906,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 2902,
																												"name": "atOrAfter",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2852,
																												"src": "14034:9:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																													"typeString": "struct Oracle.Observation memory"
																												}
																											},
																											"id": 2903,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "tickCumulative",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2297,
																											"src": "14034:24:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_int56",
																												"typeString": "int56"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"expression": {
																												"id": 2904,
																												"name": "beforeOrAt",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2850,
																												"src": "14061:10:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																													"typeString": "struct Oracle.Observation memory"
																												}
																											},
																											"id": 2905,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "tickCumulative",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 2297,
																											"src": "14061:25:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_int56",
																												"typeString": "int56"
																											}
																										},
																										"src": "14034:52:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int56",
																											"typeString": "int56"
																										}
																									}
																								],
																								"id": 2907,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "14033:54:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int56",
																									"typeString": "int56"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 2908,
																								"name": "observationTimeDelta",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2886,
																								"src": "14090:20:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"src": "14033:77:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int56",
																								"typeString": "int56"
																							}
																						}
																					],
																					"id": 2910,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "14032:79:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int56",
																						"typeString": "int56"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2911,
																					"name": "targetDelta",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2894,
																					"src": "14114:11:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				},
																				"src": "14032:93:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"src": "13984:141:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2914,
																					"name": "beforeOrAt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2850,
																					"src": "14143:10:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																						"typeString": "struct Oracle.Observation memory"
																					}
																				},
																				"id": 2915,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "secondsPerLiquidityCumulativeX128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2299,
																				"src": "14143:44:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2930,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2927,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"arguments": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint160",
																													"typeString": "uint160"
																												},
																												"id": 2924,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"expression": {
																														"id": 2920,
																														"name": "atOrAfter",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2852,
																														"src": "14314:9:18",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																															"typeString": "struct Oracle.Observation memory"
																														}
																													},
																													"id": 2921,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "secondsPerLiquidityCumulativeX128",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 2299,
																													"src": "14314:43:18",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint160",
																														"typeString": "uint160"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "-",
																												"rightExpression": {
																													"expression": {
																														"id": 2922,
																														"name": "beforeOrAt",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2850,
																														"src": "14360:10:18",
																														"typeDescriptions": {
																															"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																															"typeString": "struct Oracle.Observation memory"
																														}
																													},
																													"id": 2923,
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "secondsPerLiquidityCumulativeX128",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 2299,
																													"src": "14360:44:18",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint160",
																														"typeString": "uint160"
																													}
																												},
																												"src": "14314:90:18",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint160",
																													"typeString": "uint160"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint160",
																													"typeString": "uint160"
																												}
																											],
																											"id": 2919,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "14273:7:18",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_uint256_$",
																												"typeString": "type(uint256)"
																											},
																											"typeName": {
																												"id": 2918,
																												"name": "uint256",
																												"nodeType": "ElementaryTypeName",
																												"src": "14273:7:18",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 2925,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "14273:161:18",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"id": 2926,
																										"name": "targetDelta",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2894,
																										"src": "14437:11:18",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint32",
																											"typeString": "uint32"
																										}
																									},
																									"src": "14273:175:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 2928,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "14243:231:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"id": 2929,
																							"name": "observationTimeDelta",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2886,
																							"src": "14477:20:18",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint32",
																								"typeString": "uint32"
																							}
																						},
																						"src": "14243:254:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2917,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "14210:7:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint160_$",
																						"typeString": "type(uint160)"
																					},
																					"typeName": {
																						"id": 2916,
																						"name": "uint160",
																						"nodeType": "ElementaryTypeName",
																						"src": "14210:7:18",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2931,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14210:309:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "14143:376:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 2933,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13966:567:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																		"typeString": "tuple(int56,uint160)"
																	}
																},
																"functionReturnParameters": 2811,
																"id": 2934,
																"nodeType": "Return",
																"src": "13959:574:18"
															}
														]
													},
													"id": 2936,
													"nodeType": "IfStatement",
													"src": "13553:991:18",
													"trueBody": {
														"id": 2884,
														"nodeType": "Block",
														"src": "13593:146:18",
														"statements": [
															{
																"expression": {
																	"components": [
																		{
																			"expression": {
																				"id": 2878,
																				"name": "atOrAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2852,
																				"src": "13658:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																					"typeString": "struct Oracle.Observation memory"
																				}
																			},
																			"id": 2879,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "tickCumulative",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2297,
																			"src": "13658:24:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			}
																		},
																		{
																			"expression": {
																				"id": 2880,
																				"name": "atOrAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2852,
																				"src": "13684:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																					"typeString": "struct Oracle.Observation memory"
																				}
																			},
																			"id": 2881,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "secondsPerLiquidityCumulativeX128",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2299,
																			"src": "13684:43:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 2882,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13657:71:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																		"typeString": "tuple(int56,uint160)"
																	}
																},
																"functionReturnParameters": 2811,
																"id": 2883,
																"nodeType": "Return",
																"src": "13650:78:18"
															}
														]
													}
												},
												"id": 2937,
												"nodeType": "IfStatement",
												"src": "13359:1185:18",
												"trueBody": {
													"id": 2873,
													"nodeType": "Block",
													"src": "13400:147:18",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"expression": {
																			"id": 2867,
																			"name": "beforeOrAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2850,
																			"src": "13464:10:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tickCumulative",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2297,
																		"src": "13464:25:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int56",
																			"typeString": "int56"
																		}
																	},
																	{
																		"expression": {
																			"id": 2869,
																			"name": "beforeOrAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2850,
																			"src": "13491:10:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Observation_$2302_memory_ptr",
																				"typeString": "struct Oracle.Observation memory"
																			}
																		},
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "secondsPerLiquidityCumulativeX128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2299,
																		"src": "13491:44:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 2871,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13463:73:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																	"typeString": "tuple(int56,uint160)"
																}
															},
															"functionReturnParameters": 2811,
															"id": 2872,
															"nodeType": "Return",
															"src": "13456:80:18"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2789,
										"nodeType": "StructuredDocumentation",
										"src": "11460:1100:18",
										"text": "@dev Reverts if an observation at or before the desired observation timestamp does not exist.\n 0 may be passed as `secondsAgo' to return the current cumulative values.\n If called with a timestamp falling between two observations, returns the counterfactual accumulator values\n at exactly the timestamp between the two observations.\n @param self The stored oracle array\n @param time The current block timestamp\n @param secondsAgo The amount of time to look back, in seconds, at which point to return an observation\n @param tick The current tick\n @param index The index of the observation that was most recently written to the observations array\n @param liquidity The current in-range pool liquidity\n @param cardinality The number of populated elements in the oracle array\n @return tickCumulative The tick * time elapsed since the pool was first initialized, as of `secondsAgo`\n @return secondsPerLiquidityCumulativeX128 The time elapsed / max(1, liquidity) since the pool was first initialized, as of `secondsAgo`"
									},
									"id": 2939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "observeSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "12597:31:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 2790,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2302,
														"src": "12597:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 2792,
													"length": {
														"hexValue": "3635353335",
														"id": 2791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12609:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "12597:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "12638:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2794,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "12638:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "secondsAgo",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "12659:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2796,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "12659:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "12686:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2798,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "12686:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "12706:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2800,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12706:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "12728:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2802,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "12728:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "12755:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2804,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12755:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12587:192:18"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "12803:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2807,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "12803:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "12825:41:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2809,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "12825:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12802:65:18"
									},
									"scope": 3026,
									"src": "12565:1985:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3024,
										"nodeType": "Block",
										"src": "15831:425:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 2969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2967,
																"name": "cardinality",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2957,
																"src": "15849:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15863:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15849:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49",
															"id": 2970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15866:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															},
															"value": "I"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															}
														],
														"id": 2966,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15841:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15841:29:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2972,
												"nodeType": "ExpressionStatement",
												"src": "15841:29:18"
											},
											{
												"expression": {
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2973,
														"name": "tickCumulatives",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2961,
														"src": "15881:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
															"typeString": "int56[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2977,
																	"name": "secondsAgos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2949,
																	"src": "15911:11:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																		"typeString": "uint32[] memory"
																	}
																},
																"id": 2978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15911:18:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "15899:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_int56_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (int56[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2974,
																	"name": "int56",
																	"nodeType": "ElementaryTypeName",
																	"src": "15903:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"id": 2975,
																"nodeType": "ArrayTypeName",
																"src": "15903:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
																	"typeString": "int56[]"
																}
															}
														},
														"id": 2979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15899:31:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
															"typeString": "int56[] memory"
														}
													},
													"src": "15881:49:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
														"typeString": "int56[] memory"
													}
												},
												"id": 2981,
												"nodeType": "ExpressionStatement",
												"src": "15881:49:18"
											},
											{
												"expression": {
													"id": 2989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2982,
														"name": "secondsPerLiquidityCumulativeX128s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2964,
														"src": "15940:34:18",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2986,
																	"name": "secondsAgos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2949,
																	"src": "15991:11:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																		"typeString": "uint32[] memory"
																	}
																},
																"id": 2987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15991:18:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "15977:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint160_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint160[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2983,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "15981:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"id": 2984,
																"nodeType": "ArrayTypeName",
																"src": "15981:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
																	"typeString": "uint160[]"
																}
															}
														},
														"id": 2988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15977:33:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"src": "15940:70:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
														"typeString": "uint160[] memory"
													}
												},
												"id": 2990,
												"nodeType": "ExpressionStatement",
												"src": "15940:70:18"
											},
											{
												"body": {
													"id": 3022,
													"nodeType": "Block",
													"src": "16069:181:18",
													"statements": [
														{
															"expression": {
																"id": 3020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"baseExpression": {
																				"id": 3002,
																				"name": "tickCumulatives",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2961,
																				"src": "16084:15:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
																					"typeString": "int56[] memory"
																				}
																			},
																			"id": 3004,
																			"indexExpression": {
																				"id": 3003,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2992,
																				"src": "16100:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "16084:18:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 3005,
																				"name": "secondsPerLiquidityCumulativeX128s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2964,
																				"src": "16104:34:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																					"typeString": "uint160[] memory"
																				}
																			},
																			"id": 3007,
																			"indexExpression": {
																				"id": 3006,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2992,
																				"src": "16139:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "16104:37:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 3008,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "16083:59:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																		"typeString": "tuple(int56,uint160)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3010,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2944,
																			"src": "16175:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																				"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																			}
																		},
																		{
																			"id": 3011,
																			"name": "time",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2946,
																			"src": "16181:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 3012,
																				"name": "secondsAgos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2949,
																				"src": "16187:11:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																					"typeString": "uint32[] memory"
																				}
																			},
																			"id": 3014,
																			"indexExpression": {
																				"id": 3013,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2992,
																				"src": "16199:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16187:14:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		{
																			"id": 3015,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2951,
																			"src": "16203:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		{
																			"id": 3016,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2953,
																			"src": "16209:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		{
																			"id": 3017,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2955,
																			"src": "16216:9:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"id": 3018,
																			"name": "cardinality",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "16227:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
																				"typeString": "struct Oracle.Observation storage ref[65535] storage pointer"
																			},
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"id": 3009,
																		"name": "observeSingle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2939,
																		"src": "16161:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_int24_$_t_uint16_$_t_uint128_$_t_uint16_$returns$_t_int56_$_t_uint160_$",
																			"typeString": "function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16) view returns (int56,uint160)"
																		}
																	},
																	"id": 3019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16161:78:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_int56_$_t_uint160_$",
																		"typeString": "tuple(int56,uint160)"
																	}
																},
																"src": "16083:156:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3021,
															"nodeType": "ExpressionStatement",
															"src": "16083:156:18"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2995,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2992,
														"src": "16040:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2996,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2949,
															"src": "16044:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 2997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16044:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16040:22:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3023,
												"initializationExpression": {
													"assignments": [
														2992
													],
													"declarations": [
														{
															"constant": false,
															"id": 2992,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3023,
															"src": "16025:9:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2991,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16025:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2994,
													"initialValue": {
														"hexValue": "30",
														"id": 2993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16037:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "16025:13:18"
												},
												"loopExpression": {
													"expression": {
														"id": 3000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "16064:3:18",
														"subExpression": {
															"id": 2999,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2992,
															"src": "16064:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3001,
													"nodeType": "ExpressionStatement",
													"src": "16064:3:18"
												},
												"nodeType": "ForStatement",
												"src": "16020:230:18"
											}
										]
									},
									"documentation": {
										"id": 2940,
										"nodeType": "StructuredDocumentation",
										"src": "14556:943:18",
										"text": "@notice Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`\n @dev Reverts if `secondsAgos` > oldest observation\n @param self The stored oracle array\n @param time The current block.timestamp\n @param secondsAgos Each amount of time to look back, in seconds, at which point to return an observation\n @param tick The current tick\n @param index The index of the observation that was most recently written to the observations array\n @param liquidity The current in-range pool liquidity\n @param cardinality The number of populated elements in the oracle array\n @return tickCumulatives The tick * time elapsed since the pool was first initialized, as of each `secondsAgo`\n @return secondsPerLiquidityCumulativeX128s The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of each `secondsAgo`"
									},
									"id": 3025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "15530:31:18",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
													"typeString": "struct Oracle.Observation[65535]"
												},
												"typeName": {
													"baseType": {
														"id": 2941,
														"name": "Observation",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2302,
														"src": "15530:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Observation_$2302_storage_ptr",
															"typeString": "struct Oracle.Observation"
														}
													},
													"id": 2943,
													"length": {
														"hexValue": "3635353335",
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15542:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65535_by_1",
															"typeString": "int_const 65535"
														},
														"value": "65535"
													},
													"nodeType": "ArrayTypeName",
													"src": "15530:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Observation_$2302_storage_$65535_storage_ptr",
														"typeString": "struct Oracle.Observation[65535]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "15571:11:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2945,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15571:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "15592:27:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2947,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "15592:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 2948,
													"nodeType": "ArrayTypeName",
													"src": "15592:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "15629:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2950,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "15629:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "15649:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2952,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "15649:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "15671:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2954,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "15671:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "cardinality",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "15698:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2956,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "15698:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15520:202:18"
									},
									"returnParameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "15746:30:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 2959,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "15746:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 2960,
													"nodeType": "ArrayTypeName",
													"src": "15746:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"scope": 3025,
												"src": "15778:51:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 2962,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "15778:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 2963,
													"nodeType": "ArrayTypeName",
													"src": "15778:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15745:85:18"
									},
									"scope": 3026,
									"src": "15504:752:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3027,
							"src": "691:15567:18"
						}
					],
					"src": "45:16214:18"
				},
				"id": 18
			},
			"contracts/core/libraries/Position.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/Position.sol",
					"exportedSymbols": {
						"FixedPoint128": [
							1585
						],
						"FullMath": [
							1768
						],
						"LiquidityMath": [
							2160
						],
						"Position": [
							3211
						]
					},
					"id": 3212,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3028,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:19"
						},
						{
							"absolutePath": "contracts/core/libraries/FullMath.sol",
							"file": "./FullMath.sol",
							"id": 3029,
							"nodeType": "ImportDirective",
							"scope": 3212,
							"sourceUnit": 1769,
							"src": "78:24:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FixedPoint128.sol",
							"file": "./FixedPoint128.sol",
							"id": 3030,
							"nodeType": "ImportDirective",
							"scope": 3212,
							"sourceUnit": 1586,
							"src": "103:29:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
							"file": "./LiquidityMath.sol",
							"id": 3031,
							"nodeType": "ImportDirective",
							"scope": 3212,
							"sourceUnit": 2161,
							"src": "133:29:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3032,
								"nodeType": "StructuredDocumentation",
								"src": "164:201:19",
								"text": "@title Position\n @notice Positions represent an owner address' liquidity between a lower and upper tick boundary\n @dev Positions store additional state for tracking fees owed to the position"
							},
							"fullyImplemented": true,
							"id": 3211,
							"linearizedBaseContracts": [
								3211
							],
							"name": "Position",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Position.Info",
									"id": 3043,
									"members": [
										{
											"constant": false,
											"id": 3034,
											"mutability": "mutable",
											"name": "liquidity",
											"nodeType": "VariableDeclaration",
											"scope": 3043,
											"src": "512:17:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 3033,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "512:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3036,
											"mutability": "mutable",
											"name": "feeGrowthInside0LastX128",
											"nodeType": "VariableDeclaration",
											"scope": 3043,
											"src": "631:32:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3035,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "631:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3038,
											"mutability": "mutable",
											"name": "feeGrowthInside1LastX128",
											"nodeType": "VariableDeclaration",
											"scope": 3043,
											"src": "673:32:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3037,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "673:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3040,
											"mutability": "mutable",
											"name": "tokensOwed0",
											"nodeType": "VariableDeclaration",
											"scope": 3043,
											"src": "779:19:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 3039,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "779:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3042,
											"mutability": "mutable",
											"name": "tokensOwed1",
											"nodeType": "VariableDeclaration",
											"scope": 3043,
											"src": "808:19:19",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 3041,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "808:7:19",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nodeType": "StructDefinition",
									"scope": 3211,
									"src": "432:402:19",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3072,
										"nodeType": "Block",
										"src": "1445:90:19",
										"statements": [
											{
												"expression": {
													"id": 3070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3059,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3057,
														"src": "1455:8:19",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
															"typeString": "struct Position.Info storage pointer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 3060,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3048,
															"src": "1466:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$3043_storage_$",
																"typeString": "mapping(bytes32 => struct Position.Info storage ref)"
															}
														},
														"id": 3069,
														"indexExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3064,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3050,
																			"src": "1498:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 3065,
																			"name": "tickLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3052,
																			"src": "1505:9:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		{
																			"id": 3066,
																			"name": "tickUpper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3054,
																			"src": "1516:9:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"expression": {
																			"id": 3062,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1481:3:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 3063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1481:16:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 3067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1481:45:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 3061,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1471:9:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 3068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1471:56:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1466:62:19",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3043_storage",
															"typeString": "struct Position.Info storage ref"
														}
													},
													"src": "1455:73:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"id": 3071,
												"nodeType": "ExpressionStatement",
												"src": "1455:73:19"
											}
										]
									},
									"documentation": {
										"id": 3044,
										"nodeType": "StructuredDocumentation",
										"src": "840:416:19",
										"text": "@notice Returns the Info struct of a position, given an owner and position boundaries\n @param self The mapping containing all user positions\n @param owner The address of the position owner\n @param tickLower The lower tick boundary of the position\n @param tickUpper The upper tick boundary of the position\n @return position The position info struct of the given owners' position"
									},
									"id": 3073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3048,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "1274:37:19",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$3043_storage_$",
													"typeString": "mapping(bytes32 => struct Position.Info)"
												},
												"typeName": {
													"id": 3047,
													"keyType": {
														"id": 3045,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1282:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Mapping",
													"src": "1274:24:19",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$3043_storage_$",
														"typeString": "mapping(bytes32 => struct Position.Info)"
													},
													"valueType": {
														"id": 3046,
														"name": "Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3043,
														"src": "1293:4:19",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
															"typeString": "struct Position.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3050,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "1313:13:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:19",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3052,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "1328:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3051,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1328:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3054,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "1345:15:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3053,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1345:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:88:19"
									},
									"returnParameters": {
										"id": 3058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3057,
												"mutability": "mutable",
												"name": "position",
												"nodeType": "VariableDeclaration",
												"scope": 3073,
												"src": "1409:30:19",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 3056,
													"name": "Position.Info",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3043,
													"src": "1409:13:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:32:19"
									},
									"scope": 3211,
									"src": "1261:274:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3209,
										"nodeType": "Block",
										"src": "2279:1380:19",
										"statements": [
											{
												"assignments": [
													3088
												],
												"declarations": [
													{
														"constant": false,
														"id": 3088,
														"mutability": "mutable",
														"name": "_self",
														"nodeType": "VariableDeclaration",
														"scope": 3209,
														"src": "2289:17:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3043_memory_ptr",
															"typeString": "struct Position.Info"
														},
														"typeName": {
															"id": 3087,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3043,
															"src": "2289:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
																"typeString": "struct Position.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3090,
												"initialValue": {
													"id": 3089,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3076,
													"src": "2309:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2289:24:19"
											},
											{
												"assignments": [
													3092
												],
												"declarations": [
													{
														"constant": false,
														"id": 3092,
														"mutability": "mutable",
														"name": "liquidityNext",
														"nodeType": "VariableDeclaration",
														"scope": 3209,
														"src": "2324:21:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 3091,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2324:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3093,
												"nodeType": "VariableDeclarationStatement",
												"src": "2324:21:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 3096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3094,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3078,
														"src": "2359:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2359:19:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3120,
													"nodeType": "Block",
													"src": "2534:96:19",
													"statements": [
														{
															"expression": {
																"id": 3118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3111,
																	"name": "liquidityNext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3092,
																	"src": "2548:13:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 3114,
																				"name": "_self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3088,
																				"src": "2587:5:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Info_$3043_memory_ptr",
																					"typeString": "struct Position.Info memory"
																				}
																			},
																			"id": 3115,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "liquidity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3034,
																			"src": "2587:15:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"id": 3116,
																			"name": "liquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3078,
																			"src": "2604:14:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"id": 3112,
																			"name": "LiquidityMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "2564:13:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_LiquidityMath_$2160_$",
																				"typeString": "type(library LiquidityMath)"
																			}
																		},
																		"id": 3113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "addDelta",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2159,
																		"src": "2564:22:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_int128_$returns$_t_uint128_$",
																			"typeString": "function (uint128,int128) pure returns (uint128)"
																		}
																	},
																	"id": 3117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2564:55:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2548:71:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3119,
															"nodeType": "ExpressionStatement",
															"src": "2548:71:19"
														}
													]
												},
												"id": 3121,
												"nodeType": "IfStatement",
												"src": "2355:275:19",
												"trueBody": {
													"id": 3110,
													"nodeType": "Block",
													"src": "2380:148:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 3101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3098,
																				"name": "_self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3088,
																				"src": "2402:5:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Info_$3043_memory_ptr",
																					"typeString": "struct Position.Info memory"
																				}
																			},
																			"id": 3099,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "liquidity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3034,
																			"src": "2402:15:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2420:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2402:19:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e50",
																		"id": 3102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2423:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
																			"typeString": "literal_string \"NP\""
																		},
																		"value": "NP"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
																			"typeString": "literal_string \"NP\""
																		}
																	],
																	"id": 3097,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2394:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2394:34:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3104,
															"nodeType": "ExpressionStatement",
															"src": "2394:34:19"
														},
														{
															"expression": {
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3105,
																	"name": "liquidityNext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3092,
																	"src": "2486:13:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3106,
																		"name": "_self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3088,
																		"src": "2502:5:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3043_memory_ptr",
																			"typeString": "struct Position.Info memory"
																		}
																	},
																	"id": 3107,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "liquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3034,
																	"src": "2502:15:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2486:31:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3109,
															"nodeType": "ExpressionStatement",
															"src": "2486:31:19"
														}
													]
												}
											},
											{
												"assignments": [
													3123
												],
												"declarations": [
													{
														"constant": false,
														"id": 3123,
														"mutability": "mutable",
														"name": "tokensOwed0",
														"nodeType": "VariableDeclaration",
														"scope": 3209,
														"src": "2640:19:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 3122,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2640:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3124,
												"nodeType": "VariableDeclarationStatement",
												"src": "2640:19:19"
											},
											{
												"assignments": [
													3126
												],
												"declarations": [
													{
														"constant": false,
														"id": 3126,
														"mutability": "mutable",
														"name": "tokensOwed1",
														"nodeType": "VariableDeclaration",
														"scope": 3209,
														"src": "2669:19:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 3125,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2669:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3127,
												"nodeType": "VariableDeclarationStatement",
												"src": "2669:19:19"
											},
											{
												"condition": {
													"id": 3129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2702:7:19",
													"subExpression": {
														"id": 3128,
														"name": "staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3084,
														"src": "2703:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3165,
												"nodeType": "IfStatement",
												"src": "2698:490:19",
												"trueBody": {
													"id": 3164,
													"nodeType": "Block",
													"src": "2711:477:19",
													"statements": [
														{
															"expression": {
																"id": 3145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3130,
																	"name": "tokensOwed0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3123,
																	"src": "2767:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3138,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3135,
																						"name": "feeGrowthInside0X128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3080,
																						"src": "2843:20:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 3136,
																							"name": "_self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3088,
																							"src": "2866:5:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Info_$3043_memory_ptr",
																								"typeString": "struct Position.Info memory"
																							}
																						},
																						"id": 3137,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "feeGrowthInside0LastX128",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3036,
																						"src": "2866:30:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2843:53:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 3139,
																						"name": "_self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3088,
																						"src": "2898:5:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$3043_memory_ptr",
																							"typeString": "struct Position.Info memory"
																						}
																					},
																					"id": 3140,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3034,
																					"src": "2898:15:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				{
																					"expression": {
																						"id": 3141,
																						"name": "FixedPoint128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1585,
																						"src": "2915:13:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint128_$1585_$",
																							"typeString": "type(library FixedPoint128)"
																						}
																					},
																					"id": 3142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q128",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1584,
																					"src": "2915:18:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3133,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1768,
																					"src": "2806:8:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 3134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDiv",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1724,
																				"src": "2806:15:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2806:145:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2781:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 3131,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2781:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2781:184:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2767:198:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3146,
															"nodeType": "ExpressionStatement",
															"src": "2767:198:19"
														},
														{
															"expression": {
																"id": 3162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3147,
																	"name": "tokensOwed1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3126,
																	"src": "2979:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3152,
																						"name": "feeGrowthInside1X128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3082,
																						"src": "3055:20:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 3153,
																							"name": "_self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3088,
																							"src": "3078:5:19",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Info_$3043_memory_ptr",
																								"typeString": "struct Position.Info memory"
																							}
																						},
																						"id": 3154,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "feeGrowthInside1LastX128",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3038,
																						"src": "3078:30:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3055:53:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 3156,
																						"name": "_self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3088,
																						"src": "3110:5:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$3043_memory_ptr",
																							"typeString": "struct Position.Info memory"
																						}
																					},
																					"id": 3157,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3034,
																					"src": "3110:15:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				{
																					"expression": {
																						"id": 3158,
																						"name": "FixedPoint128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1585,
																						"src": "3127:13:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint128_$1585_$",
																							"typeString": "type(library FixedPoint128)"
																						}
																					},
																					"id": 3159,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q128",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1584,
																					"src": "3127:18:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3150,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1768,
																					"src": "3018:8:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 3151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDiv",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1724,
																				"src": "3018:15:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3018:145:19",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2993:7:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 3148,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2993:7:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2993:184:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2979:198:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3163,
															"nodeType": "ExpressionStatement",
															"src": "2979:198:19"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 3168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3166,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3078,
														"src": "3233:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3251:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:19:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3175,
												"nodeType": "IfStatement",
												"src": "3229:55:19",
												"trueBody": {
													"expression": {
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"id": 3169,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3076,
																"src": "3254:4:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
																	"typeString": "struct Position.Info storage pointer"
																}
															},
															"id": 3171,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3034,
															"src": "3254:14:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 3172,
															"name": "liquidityNext",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3092,
															"src": "3271:13:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "3254:30:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"id": 3174,
													"nodeType": "ExpressionStatement",
													"src": "3254:30:19"
												}
											},
											{
												"expression": {
													"id": 3180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3176,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3076,
															"src": "3294:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 3178,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthInside0LastX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3036,
														"src": "3294:29:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3179,
														"name": "feeGrowthInside0X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3080,
														"src": "3326:20:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3294:52:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3181,
												"nodeType": "ExpressionStatement",
												"src": "3294:52:19"
											},
											{
												"expression": {
													"id": 3186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3182,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3076,
															"src": "3356:4:19",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 3184,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthInside1LastX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3038,
														"src": "3356:29:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3185,
														"name": "feeGrowthInside1X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3082,
														"src": "3388:20:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:52:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3187,
												"nodeType": "ExpressionStatement",
												"src": "3356:52:19"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"id": 3190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3188,
															"name": "tokensOwed0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3123,
															"src": "3422:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3436:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3422:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"id": 3193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3191,
															"name": "tokensOwed1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "3441:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3455:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3441:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3422:34:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3208,
												"nodeType": "IfStatement",
												"src": "3418:235:19",
												"trueBody": {
													"id": 3207,
													"nodeType": "Block",
													"src": "3458:195:19",
													"statements": [
														{
															"expression": {
																"id": 3199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3195,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3076,
																		"src": "3566:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
																			"typeString": "struct Position.Info storage pointer"
																		}
																	},
																	"id": 3197,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tokensOwed0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3040,
																	"src": "3566:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 3198,
																	"name": "tokensOwed0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3123,
																	"src": "3586:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3566:31:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3200,
															"nodeType": "ExpressionStatement",
															"src": "3566:31:19"
														},
														{
															"expression": {
																"id": 3205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3201,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3076,
																		"src": "3611:4:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
																			"typeString": "struct Position.Info storage pointer"
																		}
																	},
																	"id": 3203,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tokensOwed1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3042,
																	"src": "3611:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 3204,
																	"name": "tokensOwed1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3126,
																	"src": "3631:11:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3611:31:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3206,
															"nodeType": "ExpressionStatement",
															"src": "3611:31:19"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3074,
										"nodeType": "StructuredDocumentation",
										"src": "1541:547:19",
										"text": "@notice Credits accumulated fees to a user's position\n @param self The individual position to update\n @param liquidityDelta The change in pool liquidity as a result of the position update\n @param feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n @param feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries\n @param staked Signifies if the position is staked in the gauge or not"
									},
									"id": 3210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 3210,
												"src": "2118:17:19",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 3075,
													"name": "Info",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3043,
													"src": "2118:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3043_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nodeType": "VariableDeclaration",
												"scope": 3210,
												"src": "2145:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3077,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2145:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "feeGrowthInside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 3210,
												"src": "2176:28:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3082,
												"mutability": "mutable",
												"name": "feeGrowthInside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 3210,
												"src": "2214:28:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3084,
												"mutability": "mutable",
												"name": "staked",
												"nodeType": "VariableDeclaration",
												"scope": 3210,
												"src": "2252:11:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3083,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2252:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2108:161:19"
									},
									"returnParameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2279:0:19"
									},
									"scope": 3211,
									"src": "2093:1566:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3212,
							"src": "365:3296:19"
						}
					],
					"src": "45:3617:19"
				},
				"id": 19
			},
			"contracts/core/libraries/SafeCast.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							3281
						]
					},
					"id": 3282,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3213,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3214,
								"nodeType": "StructuredDocumentation",
								"src": "71:94:20",
								"text": "@title Safe casting methods\n @notice Contains methods for safely casting between types"
							},
							"fullyImplemented": true,
							"id": 3281,
							"linearizedBaseContracts": [
								3281
							],
							"name": "SafeCast",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3234,
										"nodeType": "Block",
										"src": "421:47:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 3228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3223,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3220,
																			"src": "440:1:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 3226,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3217,
																					"src": "452:1:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "444:7:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3224,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "444:7:20",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "444:10:20",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "440:14:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 3229,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "439:16:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3230,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3217,
																"src": "459:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "439:21:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "431:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "431:30:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3233,
												"nodeType": "ExpressionStatement",
												"src": "431:30:20"
											}
										]
									},
									"documentation": {
										"id": 3215,
										"nodeType": "StructuredDocumentation",
										"src": "188:164:20",
										"text": "@notice Cast a uint256 to a uint160, revert on overflow\n @param y The uint256 to be downcasted\n @return z The downcasted integer, now type uint160"
									},
									"id": 3235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3217,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3235,
												"src": "376:9:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:11:20"
									},
									"returnParameters": {
										"id": 3221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3220,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3235,
												"src": "410:9:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3219,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:11:20"
									},
									"scope": 3281,
									"src": "357:111:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3255,
										"nodeType": "Block",
										"src": "713:46:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 3249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3244,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3241,
																			"src": "732:1:20",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 3247,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3238,
																					"src": "743:1:20",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 3246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "736:6:20",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 3245,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "736:6:20",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "736:9:20",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "732:13:20",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"id": 3250,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "731:15:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3251,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3238,
																"src": "750:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "731:20:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "723:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "723:29:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3254,
												"nodeType": "ExpressionStatement",
												"src": "723:29:20"
											}
										]
									},
									"documentation": {
										"id": 3236,
										"nodeType": "StructuredDocumentation",
										"src": "474:173:20",
										"text": "@notice Cast a int256 to a int128, revert on overflow or underflow\n @param y The int256 to be downcasted\n @return z The downcasted integer, now type int128"
									},
									"id": 3256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3238,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3256,
												"src": "670:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3237,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "670:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:10:20"
									},
									"returnParameters": {
										"id": 3242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3241,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3256,
												"src": "703:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3240,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "703:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:10:20"
									},
									"scope": 3281,
									"src": "652:107:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3279,
										"nodeType": "Block",
										"src": "986:61:20",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3265,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3259,
																"src": "1004:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																},
																"id": 3268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1008:1:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "323535",
																	"id": 3267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1013:3:20",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "255"
																},
																"src": "1008:8:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																}
															},
															"src": "1004:12:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "996:7:20",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:21:20",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3271,
												"nodeType": "ExpressionStatement",
												"src": "996:21:20"
											},
											{
												"expression": {
													"id": 3277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3272,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3262,
														"src": "1027:1:20",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3275,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3259,
																"src": "1038:1:20",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1031:6:20",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 3273,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1031:6:20",
																"typeDescriptions": {}
															}
														},
														"id": 3276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1031:9:20",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1027:13:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3278,
												"nodeType": "ExpressionStatement",
												"src": "1027:13:20"
											}
										]
									},
									"documentation": {
										"id": 3257,
										"nodeType": "StructuredDocumentation",
										"src": "765:154:20",
										"text": "@notice Cast a uint256 to a int256, revert on overflow\n @param y The uint256 to be casted\n @return z The casted integer, now type int256"
									},
									"id": 3280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3259,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3280,
												"src": "942:9:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:11:20"
									},
									"returnParameters": {
										"id": 3263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3262,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3280,
												"src": "976:8:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3261,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:10:20"
									},
									"scope": 3281,
									"src": "924:123:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3282,
							"src": "165:884:20"
						}
					],
					"src": "45:1005:20"
				},
				"id": 20
			},
			"contracts/core/libraries/SqrtPriceMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/SqrtPriceMath.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							1595
						],
						"FullMath": [
							1768
						],
						"LowGasSafeMath": [
							2290
						],
						"SafeCast": [
							3281
						],
						"SqrtPriceMath": [
							3798
						],
						"UnsafeMath": [
							5275
						]
					},
					"id": 3799,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3283,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:21"
						},
						{
							"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
							"file": "./LowGasSafeMath.sol",
							"id": 3284,
							"nodeType": "ImportDirective",
							"scope": 3799,
							"sourceUnit": 2291,
							"src": "71:30:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 3285,
							"nodeType": "ImportDirective",
							"scope": 3799,
							"sourceUnit": 3282,
							"src": "102:24:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FullMath.sol",
							"file": "./FullMath.sol",
							"id": 3286,
							"nodeType": "ImportDirective",
							"scope": 3799,
							"sourceUnit": 1769,
							"src": "128:24:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/UnsafeMath.sol",
							"file": "./UnsafeMath.sol",
							"id": 3287,
							"nodeType": "ImportDirective",
							"scope": 3799,
							"sourceUnit": 5276,
							"src": "153:26:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FixedPoint96.sol",
							"file": "./FixedPoint96.sol",
							"id": 3288,
							"nodeType": "ImportDirective",
							"scope": 3799,
							"sourceUnit": 1596,
							"src": "180:28:21",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3289,
								"nodeType": "StructuredDocumentation",
								"src": "210:167:21",
								"text": "@title Functions based on Q64.96 sqrt price and liquidity\n @notice Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas"
							},
							"fullyImplemented": true,
							"id": 3798,
							"linearizedBaseContracts": [
								3798
							],
							"name": "SqrtPriceMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3292,
									"libraryName": {
										"id": 3290,
										"name": "LowGasSafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2290,
										"src": "411:14:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LowGasSafeMath_$2290",
											"typeString": "library LowGasSafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "405:33:21",
									"typeName": {
										"id": 3291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "430:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 3295,
									"libraryName": {
										"id": 3293,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3281,
										"src": "449:8:21",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$3281",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "443:27:21",
									"typeName": {
										"id": 3294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:21",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 3415,
										"nodeType": "Block",
										"src": "1583:1206:21",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3309,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3302,
														"src": "1709:6:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1719:1:21",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1709:11:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3314,
												"nodeType": "IfStatement",
												"src": "1705:32:21",
												"trueBody": {
													"expression": {
														"id": 3312,
														"name": "sqrtPX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3298,
														"src": "1729:8:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"functionReturnParameters": 3308,
													"id": 3313,
													"nodeType": "Return",
													"src": "1722:15:21"
												}
											},
											{
												"assignments": [
													3316
												],
												"declarations": [
													{
														"constant": false,
														"id": 3316,
														"mutability": "mutable",
														"name": "numerator1",
														"nodeType": "VariableDeclaration",
														"scope": 3415,
														"src": "1747:18:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3315,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1747:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3324,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3319,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3300,
																"src": "1776:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 3318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1768:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3317,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1768:7:21",
																"typeDescriptions": {}
															}
														},
														"id": 3320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1768:18:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"expression": {
															"id": 3321,
															"name": "FixedPoint96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "1790:12:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																"typeString": "type(library FixedPoint96)"
															}
														},
														"id": 3322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "RESOLUTION",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1591,
														"src": "1790:23:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1768:45:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1747:66:21"
											},
											{
												"condition": {
													"id": 3325,
													"name": "add",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3304,
													"src": "1828:3:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3413,
													"nodeType": "Block",
													"src": "2339:444:21",
													"statements": [
														{
															"assignments": [
																3379
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3379,
																	"mutability": "mutable",
																	"name": "product",
																	"nodeType": "VariableDeclaration",
																	"scope": 3413,
																	"src": "2353:15:21",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3378,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2353:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3380,
															"nodeType": "VariableDeclarationStatement",
															"src": "2353:15:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3389,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"id": 3386,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 3382,
																								"name": "product",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3379,
																								"src": "2549:7:21",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3385,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3383,
																									"name": "amount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3302,
																									"src": "2559:6:21",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"id": 3384,
																									"name": "sqrtPX96",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3298,
																									"src": "2568:8:21",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint160",
																										"typeString": "uint160"
																									}
																								},
																								"src": "2559:17:21",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2549:27:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3387,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2548:29:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3388,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3302,
																					"src": "2580:6:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2548:38:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 3390,
																				"name": "sqrtPX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3298,
																				"src": "2590:8:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "2548:50:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3392,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3316,
																				"src": "2602:10:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 3393,
																				"name": "product",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3379,
																				"src": "2615:7:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2602:20:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2548:74:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 3381,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2540:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 3396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2540:83:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3397,
															"nodeType": "ExpressionStatement",
															"src": "2540:83:21"
														},
														{
															"assignments": [
																3399
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3399,
																	"mutability": "mutable",
																	"name": "denominator",
																	"nodeType": "VariableDeclaration",
																	"scope": 3413,
																	"src": "2637:19:21",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3398,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2637:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3403,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3400,
																	"name": "numerator1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3316,
																	"src": "2659:10:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 3401,
																	"name": "product",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3379,
																	"src": "2672:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2659:20:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2637:42:21"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3406,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3316,
																				"src": "2726:10:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 3407,
																				"name": "sqrtPX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3298,
																				"src": "2738:8:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 3408,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3399,
																				"src": "2748:11:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 3404,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "2700:8:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 3405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDivRoundingUp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1767,
																			"src": "2700:25:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2700:60:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toUint160",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3235,
																	"src": "2700:70:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint160)"
																	}
																},
																"id": 3411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2700:72:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 3308,
															"id": 3412,
															"nodeType": "Return",
															"src": "2693:79:21"
														}
													]
												},
												"id": 3414,
												"nodeType": "IfStatement",
												"src": "1824:959:21",
												"trueBody": {
													"id": 3377,
													"nodeType": "Block",
													"src": "1833:500:21",
													"statements": [
														{
															"assignments": [
																3327
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3327,
																	"mutability": "mutable",
																	"name": "product",
																	"nodeType": "VariableDeclaration",
																	"scope": 3377,
																	"src": "1847:15:21",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3326,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1847:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3328,
															"nodeType": "VariableDeclarationStatement",
															"src": "1847:15:21"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 3333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 3329,
																					"name": "product",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3327,
																					"src": "1881:7:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3332,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3330,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3302,
																						"src": "1891:6:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3331,
																						"name": "sqrtPX96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3298,
																						"src": "1900:8:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"src": "1891:17:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1881:27:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 3334,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1880:29:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3335,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3302,
																		"src": "1912:6:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1880:38:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3337,
																	"name": "sqrtPX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3298,
																	"src": "1922:8:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "1880:50:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3361,
															"nodeType": "IfStatement",
															"src": "1876:343:21",
															"trueBody": {
																"id": 3360,
																"nodeType": "Block",
																"src": "1932:287:21",
																"statements": [
																	{
																		"assignments": [
																			3340
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3340,
																				"mutability": "mutable",
																				"name": "denominator",
																				"nodeType": "VariableDeclaration",
																				"scope": 3360,
																				"src": "1950:19:21",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 3339,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1950:7:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3344,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3341,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3316,
																				"src": "1972:10:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 3342,
																				"name": "product",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3327,
																				"src": "1985:7:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1972:20:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1950:42:21"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3345,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3340,
																				"src": "2014:11:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 3346,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3316,
																				"src": "2029:10:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2014:25:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3359,
																		"nodeType": "IfStatement",
																		"src": "2010:195:21",
																		"trueBody": {
																			"id": 3358,
																			"nodeType": "Block",
																			"src": "2041:164:21",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 3352,
																										"name": "numerator1",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3316,
																										"src": "2151:10:21",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 3353,
																										"name": "sqrtPX96",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3298,
																										"src": "2163:8:21",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint160",
																											"typeString": "uint160"
																										}
																									},
																									{
																										"id": 3354,
																										"name": "denominator",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3340,
																										"src": "2173:11:21",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint160",
																											"typeString": "uint160"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 3350,
																										"name": "FullMath",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1768,
																										"src": "2125:8:21",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																											"typeString": "type(library FullMath)"
																										}
																									},
																									"id": 3351,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mulDivRoundingUp",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1767,
																									"src": "2125:25:21",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 3355,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2125:60:21",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 3349,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2117:7:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							},
																							"typeName": {
																								"id": 3348,
																								"name": "uint160",
																								"nodeType": "ElementaryTypeName",
																								"src": "2117:7:21",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 3356,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2117:69:21",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"functionReturnParameters": 3308,
																					"id": 3357,
																					"nodeType": "Return",
																					"src": "2110:76:21"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3366,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3316,
																				"src": "2273:10:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 3372,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3302,
																						"src": "2313:6:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3369,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3367,
																									"name": "numerator1",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3316,
																									"src": "2286:10:21",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 3368,
																									"name": "sqrtPX96",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3298,
																									"src": "2299:8:21",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint160",
																										"typeString": "uint160"
																									}
																								},
																								"src": "2286:21:21",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3370,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2285:23:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2185,
																					"src": "2285:27:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2285:35:21",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 3364,
																				"name": "UnsafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5275,
																				"src": "2248:10:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_UnsafeMath_$5275_$",
																					"typeString": "type(library UnsafeMath)"
																				}
																			},
																			"id": 3365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "divRoundingUp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 5274,
																			"src": "2248:24:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2248:73:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2240:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 3362,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "2240:7:21",
																		"typeDescriptions": {}
																	}
																},
																"id": 3375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2240:82:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 3308,
															"id": 3376,
															"nodeType": "Return",
															"src": "2233:89:21"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3296,
										"nodeType": "StructuredDocumentation",
										"src": "476:932:21",
										"text": "@notice Gets the next sqrt price given a delta of token0\n @dev Always rounds up, because in the exact output case (increasing price) we need to move the price at least\n far enough to get the desired output amount, and in the exact input case (decreasing price) we need to move the\n price less in order to not send too much output.\n The most precise formula for this is liquidity * sqrtPX96 / (liquidity +- amount * sqrtPX96),\n if this is impossible because of overflow, we calculate liquidity / (liquidity / sqrtPX96 +- amount).\n @param sqrtPX96 The starting price, i.e. before accounting for the token0 delta\n @param liquidity The amount of usable liquidity\n @param amount How much of token0 to add or remove from virtual reserves\n @param add Whether to add or remove the amount of token0\n @return The price after adding or removing amount, depending on add"
									},
									"id": 3416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromAmount0RoundingUp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3298,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "1460:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3297,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3300,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "1478:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3299,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3302,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "1497:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "add",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "1513:8:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3303,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1513:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:63:21"
									},
									"returnParameters": {
										"id": 3308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "1570:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3306,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1570:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1569:9:21"
									},
									"scope": 3798,
									"src": "1413:1376:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3510,
										"nodeType": "Block",
										"src": "3787:907:21",
										"statements": [
											{
												"condition": {
													"id": 3430,
													"name": "add",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3425,
													"src": "3955:3:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3508,
													"nodeType": "Block",
													"src": "4279:409:21",
													"statements": [
														{
															"assignments": [
																3469
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3469,
																	"mutability": "mutable",
																	"name": "quotient",
																	"nodeType": "VariableDeclaration",
																	"scope": 3508,
																	"src": "4293:16:21",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3468,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4293:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3494,
															"initialValue": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3470,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3423,
																				"src": "4330:6:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 3473,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4345:7:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							},
																							"typeName": {
																								"id": 3472,
																								"name": "uint160",
																								"nodeType": "ElementaryTypeName",
																								"src": "4345:7:21",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							}
																						],
																						"id": 3471,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967269,
																						"src": "4340:4:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 3474,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4340:13:21",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint160",
																						"typeString": "type(uint160)"
																					}
																				},
																				"id": 3475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"src": "4340:17:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "4330:27:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"arguments": [
																				{
																					"id": 3487,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3423,
																					"src": "4499:6:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 3488,
																						"name": "FixedPoint96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "4507:12:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																							"typeString": "type(library FixedPoint96)"
																						}
																					},
																					"id": 3489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q96",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1594,
																					"src": "4507:16:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3490,
																					"name": "liquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3421,
																					"src": "4525:9:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"expression": {
																					"id": 3485,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1768,
																					"src": "4473:8:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 3486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDivRoundingUp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1767,
																				"src": "4473:25:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4473:62:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "4330:205:21",
																		"trueExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3479,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3423,
																						"src": "4405:6:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"expression": {
																							"id": 3480,
																							"name": "FixedPoint96",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1595,
																							"src": "4415:12:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																								"typeString": "type(library FixedPoint96)"
																							}
																						},
																						"id": 3481,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "RESOLUTION",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1591,
																						"src": "4415:23:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "4405:33:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3483,
																					"name": "liquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3421,
																					"src": "4440:9:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"expression": {
																					"id": 3477,
																					"name": "UnsafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5275,
																					"src": "4380:10:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_UnsafeMath_$5275_$",
																						"typeString": "type(library UnsafeMath)"
																					}
																				},
																				"id": 3478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "divRoundingUp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5274,
																				"src": "4380:24:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4380:70:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3493,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4312:237:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4293:256:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3496,
																			"name": "sqrtPX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3419,
																			"src": "4572:8:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 3497,
																			"name": "quotient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3469,
																			"src": "4583:8:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4572:19:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 3495,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4564:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 3499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4564:28:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3500,
															"nodeType": "ExpressionStatement",
															"src": "4564:28:21"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3503,
																			"name": "sqrtPX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3419,
																			"src": "4657:8:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 3504,
																			"name": "quotient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3469,
																			"src": "4668:8:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4657:19:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4649:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 3501,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "4649:7:21",
																		"typeDescriptions": {}
																	}
																},
																"id": 3506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4649:28:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 3429,
															"id": 3507,
															"nodeType": "Return",
															"src": "4642:35:21"
														}
													]
												},
												"id": 3509,
												"nodeType": "IfStatement",
												"src": "3951:737:21",
												"trueBody": {
													"id": 3467,
													"nodeType": "Block",
													"src": "3960:313:21",
													"statements": [
														{
															"assignments": [
																3432
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3432,
																	"mutability": "mutable",
																	"name": "quotient",
																	"nodeType": "VariableDeclaration",
																	"scope": 3467,
																	"src": "3974:16:21",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3431,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3974:7:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3456,
															"initialValue": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3433,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3423,
																				"src": "4011:6:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 3436,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4026:7:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							},
																							"typeName": {
																								"id": 3435,
																								"name": "uint160",
																								"nodeType": "ElementaryTypeName",
																								"src": "4026:7:21",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							}
																						],
																						"id": 3434,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967269,
																						"src": "4021:4:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 3437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4021:13:21",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint160",
																						"typeString": "type(uint160)"
																					}
																				},
																				"id": 3438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"src": "4021:17:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "4011:27:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"arguments": [
																				{
																					"id": 3449,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3423,
																					"src": "4147:6:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 3450,
																						"name": "FixedPoint96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "4155:12:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																							"typeString": "type(library FixedPoint96)"
																						}
																					},
																					"id": 3451,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q96",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1594,
																					"src": "4155:16:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3452,
																					"name": "liquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3421,
																					"src": "4173:9:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"expression": {
																					"id": 3447,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1768,
																					"src": "4131:8:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 3448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDiv",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1724,
																				"src": "4131:15:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4131:52:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "4011:172:21",
																		"trueExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3443,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3440,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3423,
																							"src": "4062:6:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"expression": {
																								"id": 3441,
																								"name": "FixedPoint96",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1595,
																								"src": "4072:12:21",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																									"typeString": "type(library FixedPoint96)"
																								}
																							},
																							"id": 3442,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "RESOLUTION",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1591,
																							"src": "4072:23:21",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "4062:33:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3444,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4061:35:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3445,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3421,
																				"src": "4099:9:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "4061:47:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3455,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3993:204:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3974:223:21"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3462,
																				"name": "quotient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3432,
																				"src": "4241:8:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 3459,
																						"name": "sqrtPX96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3419,
																						"src": "4227:8:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					],
																					"id": 3458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4219:7:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3457,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "4219:7:21",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4219:17:21",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2185,
																			"src": "4219:21:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4219:31:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toUint160",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3235,
																	"src": "4219:41:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint160)"
																	}
																},
																"id": 3465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4219:43:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 3429,
															"id": 3466,
															"nodeType": "Return",
															"src": "4212:50:21"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3417,
										"nodeType": "StructuredDocumentation",
										"src": "2795:815:21",
										"text": "@notice Gets the next sqrt price given a delta of token1\n @dev Always rounds down, because in the exact output case (decreasing price) we need to move the price at least\n far enough to get the desired output amount, and in the exact input case (increasing price) we need to move the\n price less in order to not send too much output.\n The formula we compute is within <1 wei of the lossless version: sqrtPX96 +- amount / liquidity\n @param sqrtPX96 The starting price, i.e., before accounting for the token1 delta\n @param liquidity The amount of usable liquidity\n @param amount How much of token1 to add, or remove, from virtual reserves\n @param add Whether to add, or remove, the amount of token1\n @return The price after adding or removing `amount`"
									},
									"id": 3511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromAmount1RoundingDown",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3419,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "3664:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3418,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3664:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3421,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "3682:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3420,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3423,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "3701:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3701:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3425,
												"mutability": "mutable",
												"name": "add",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "3717:8:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3717:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3663:63:21"
									},
									"returnParameters": {
										"id": 3429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3428,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "3774:7:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3427,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:21"
									},
									"scope": 3798,
									"src": "3615:1079:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3552,
										"nodeType": "Block",
										"src": "5419:344:21",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 3528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3526,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3514,
																"src": "5437:8:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5448:1:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5437:12:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5429:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5429:21:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3530,
												"nodeType": "ExpressionStatement",
												"src": "5429:21:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 3534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3532,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3516,
																"src": "5468:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5480:1:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5468:13:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5460:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5460:22:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3536,
												"nodeType": "ExpressionStatement",
												"src": "5460:22:21"
											},
											{
												"expression": {
													"condition": {
														"id": 3537,
														"name": "zeroForOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3520,
														"src": "5566:10:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 3545,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3514,
																"src": "5720:8:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 3546,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3516,
																"src": "5730:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 3547,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3518,
																"src": "5741:8:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 3548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5751:4:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3544,
															"name": "getNextSqrtPriceFromAmount1RoundingDown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3511,
															"src": "5680:39:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 3549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5680:76:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 3550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5566:190:21",
													"trueExpression": {
														"arguments": [
															{
																"id": 3539,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3514,
																"src": "5629:8:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 3540,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3516,
																"src": "5639:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 3541,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3518,
																"src": "5650:8:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 3542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5660:4:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3538,
															"name": "getNextSqrtPriceFromAmount0RoundingUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3416,
															"src": "5591:37:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 3543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5591:74:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 3524,
												"id": 3551,
												"nodeType": "Return",
												"src": "5559:197:21"
											}
										]
									},
									"documentation": {
										"id": 3512,
										"nodeType": "StructuredDocumentation",
										"src": "4700:538:21",
										"text": "@notice Gets the next sqrt price given an input amount of token0 or token1\n @dev Throws if price or liquidity are 0, or if the next price is out of bounds\n @param sqrtPX96 The starting price, i.e., before accounting for the input amount\n @param liquidity The amount of usable liquidity\n @param amountIn How much of token0, or token1, is being swapped in\n @param zeroForOne Whether the amount in is token0 or token1\n @return sqrtQX96 The price after adding the input amount to token0 or token1"
									},
									"id": 3553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3514,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "5278:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3513,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3516,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "5296:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3515,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5296:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3518,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "5315:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5315:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3520,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "5333:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5333:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5277:72:21"
									},
									"returnParameters": {
										"id": 3524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3523,
												"mutability": "mutable",
												"name": "sqrtQX96",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "5397:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3522,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5397:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5396:18:21"
									},
									"scope": 3798,
									"src": "5243:520:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3594,
										"nodeType": "Block",
										"src": "6487:342:21",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 3570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3568,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3556,
																"src": "6505:8:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6516:1:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6505:12:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6497:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6497:21:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3572,
												"nodeType": "ExpressionStatement",
												"src": "6497:21:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 3576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3574,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3558,
																"src": "6536:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6548:1:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6536:13:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6528:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6528:22:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3578,
												"nodeType": "ExpressionStatement",
												"src": "6528:22:21"
											},
											{
												"expression": {
													"condition": {
														"id": 3579,
														"name": "zeroForOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3562,
														"src": "6628:10:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 3587,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3556,
																"src": "6784:8:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 3588,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3558,
																"src": "6794:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 3589,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3560,
																"src": "6805:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 3590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6816:5:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3586,
															"name": "getNextSqrtPriceFromAmount0RoundingUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3416,
															"src": "6746:37:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 3591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6746:76:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 3592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6628:194:21",
													"trueExpression": {
														"arguments": [
															{
																"id": 3581,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3556,
																"src": "6693:8:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 3582,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3558,
																"src": "6703:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 3583,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3560,
																"src": "6714:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 3584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6725:5:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3580,
															"name": "getNextSqrtPriceFromAmount1RoundingDown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3511,
															"src": "6653:39:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 3585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:78:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 3566,
												"id": 3593,
												"nodeType": "Return",
												"src": "6621:201:21"
											}
										]
									},
									"documentation": {
										"id": 3554,
										"nodeType": "StructuredDocumentation",
										"src": "5769:535:21",
										"text": "@notice Gets the next sqrt price given an output amount of token0 or token1\n @dev Throws if price or liquidity are 0 or the next price is out of bounds\n @param sqrtPX96 The starting price before accounting for the output amount\n @param liquidity The amount of usable liquidity\n @param amountOut How much of token0, or token1, is being swapped out\n @param zeroForOne Whether the amount out is token0 or token1\n @return sqrtQX96 The price after removing the output amount of token0 or token1"
									},
									"id": 3595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3556,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "6345:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3555,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6345:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3558,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "6363:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3557,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6363:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3560,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "6382:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6382:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3562,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "6401:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6401:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6344:73:21"
									},
									"returnParameters": {
										"id": 3566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3565,
												"mutability": "mutable",
												"name": "sqrtQX96",
												"nodeType": "VariableDeclaration",
												"scope": 3595,
												"src": "6465:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3564,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6465:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6464:18:21"
									},
									"scope": 3798,
									"src": "6309:520:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3664,
										"nodeType": "Block",
										"src": "7549:519:21",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 3611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3609,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3598,
														"src": "7563:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3610,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3600,
														"src": "7579:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7563:29:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3620,
												"nodeType": "IfStatement",
												"src": "7559:98:21",
												"trueBody": {
													"expression": {
														"id": 3618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 3612,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3598,
																	"src": "7595:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 3613,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3600,
																	"src": "7610:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 3614,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "7594:30:21",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 3615,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3600,
																	"src": "7628:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 3616,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3598,
																	"src": "7643:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 3617,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7627:30:21",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "7594:63:21",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3619,
													"nodeType": "ExpressionStatement",
													"src": "7594:63:21"
												}
											},
											{
												"assignments": [
													3622
												],
												"declarations": [
													{
														"constant": false,
														"id": 3622,
														"mutability": "mutable",
														"name": "numerator1",
														"nodeType": "VariableDeclaration",
														"scope": 3664,
														"src": "7668:18:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7668:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3630,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3625,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3602,
																"src": "7697:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 3624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7689:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3623,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7689:7:21",
																"typeDescriptions": {}
															}
														},
														"id": 3626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7689:18:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"expression": {
															"id": 3627,
															"name": "FixedPoint96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "7711:12:21",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																"typeString": "type(library FixedPoint96)"
															}
														},
														"id": 3628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "RESOLUTION",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1591,
														"src": "7711:23:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7689:45:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7668:66:21"
											},
											{
												"assignments": [
													3632
												],
												"declarations": [
													{
														"constant": false,
														"id": 3632,
														"mutability": "mutable",
														"name": "numerator2",
														"nodeType": "VariableDeclaration",
														"scope": 3664,
														"src": "7744:18:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7744:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3636,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 3635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3633,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3600,
														"src": "7765:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3634,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3598,
														"src": "7781:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7765:29:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7744:50:21"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 3640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3638,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3598,
																"src": "7813:13:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7829:1:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7813:17:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7805:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7805:26:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3642,
												"nodeType": "ExpressionStatement",
												"src": "7805:26:21"
											},
											{
												"expression": {
													"condition": {
														"id": 3643,
														"name": "roundUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3604,
														"src": "7849:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3656,
																	"name": "numerator1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3622,
																	"src": "8007:10:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3657,
																	"name": "numerator2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3632,
																	"src": "8019:10:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3658,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3600,
																	"src": "8031:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"expression": {
																	"id": 3654,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "7991:8:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 3655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1724,
																"src": "7991:15:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7991:54:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 3660,
															"name": "sqrtRatioAX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3598,
															"src": "8048:13:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "7991:70:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7849:212:21",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3648,
																		"name": "numerator1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3622,
																		"src": "7922:10:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3649,
																		"name": "numerator2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3632,
																		"src": "7934:10:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3650,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3600,
																		"src": "7946:13:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"expression": {
																		"id": 3646,
																		"name": "FullMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "7896:8:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																			"typeString": "type(library FullMath)"
																		}
																	},
																	"id": 3647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mulDivRoundingUp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1767,
																	"src": "7896:25:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7896:64:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3652,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3598,
																"src": "7962:13:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"expression": {
																"id": 3644,
																"name": "UnsafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5275,
																"src": "7871:10:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_UnsafeMath_$5275_$",
																	"typeString": "type(library UnsafeMath)"
																}
															},
															"id": 3645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "divRoundingUp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5274,
															"src": "7871:24:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7871:105:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3608,
												"id": 3663,
												"nodeType": "Return",
												"src": "7842:219:21"
											}
										]
									},
									"documentation": {
										"id": 3596,
										"nodeType": "StructuredDocumentation",
										"src": "6835:537:21",
										"text": "@notice Gets the amount0 delta between two prices\n @dev Calculates liquidity / sqrt(lower) - liquidity / sqrt(upper),\n i.e. liquidity * (sqrt(upper) - sqrt(lower)) / (sqrt(upper) * sqrt(lower))\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The amount of usable liquidity\n @param roundUp Whether to round the amount up or down\n @return amount0 Amount of token0 required to cover a position of size liquidity between the two passed prices"
									},
									"id": 3665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount0Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3598,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 3665,
												"src": "7402:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3597,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7402:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3600,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 3665,
												"src": "7425:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3599,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7425:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3602,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3665,
												"src": "7448:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3601,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7448:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3604,
												"mutability": "mutable",
												"name": "roundUp",
												"nodeType": "VariableDeclaration",
												"scope": 3665,
												"src": "7467:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3603,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7467:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7401:79:21"
									},
									"returnParameters": {
										"id": 3608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3607,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 3665,
												"src": "7528:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7528:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7527:17:21"
									},
									"scope": 3798,
									"src": "7377:691:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3712,
										"nodeType": "Block",
										"src": "8695:330:21",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 3681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3679,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3668,
														"src": "8709:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3680,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3670,
														"src": "8725:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "8709:29:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3690,
												"nodeType": "IfStatement",
												"src": "8705:98:21",
												"trueBody": {
													"expression": {
														"id": 3688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 3682,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3668,
																	"src": "8741:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 3683,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3670,
																	"src": "8756:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 3684,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "8740:30:21",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 3685,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3670,
																	"src": "8774:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 3686,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3668,
																	"src": "8789:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 3687,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8773:30:21",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "8740:63:21",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3689,
													"nodeType": "ExpressionStatement",
													"src": "8740:63:21"
												}
											},
											{
												"expression": {
													"condition": {
														"id": 3691,
														"name": "roundUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3674,
														"src": "8821:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 3703,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3672,
																"src": "8959:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3704,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3670,
																	"src": "8970:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 3705,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3668,
																	"src": "8986:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8970:29:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"expression": {
																	"id": 3707,
																	"name": "FixedPoint96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "9001:12:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																		"typeString": "type(library FixedPoint96)"
																	}
																},
																"id": 3708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Q96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1594,
																"src": "9001:16:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3701,
																"name": "FullMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "8943:8:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																	"typeString": "type(library FullMath)"
																}
															},
															"id": 3702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1724,
															"src": "8943:15:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8943:75:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8821:197:21",
													"trueExpression": {
														"arguments": [
															{
																"id": 3694,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3672,
																"src": "8869:9:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3695,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3670,
																	"src": "8880:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 3696,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3668,
																	"src": "8896:13:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8880:29:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"expression": {
																	"id": 3698,
																	"name": "FixedPoint96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "8911:12:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1595_$",
																		"typeString": "type(library FixedPoint96)"
																	}
																},
																"id": 3699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Q96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1594,
																"src": "8911:16:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3692,
																"name": "FullMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "8843:8:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FullMath_$1768_$",
																	"typeString": "type(library FullMath)"
																}
															},
															"id": 3693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mulDivRoundingUp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1767,
															"src": "8843:25:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8843:85:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3678,
												"id": 3711,
												"nodeType": "Return",
												"src": "8814:204:21"
											}
										]
									},
									"documentation": {
										"id": 3666,
										"nodeType": "StructuredDocumentation",
										"src": "8074:444:21",
										"text": "@notice Gets the amount1 delta between two prices\n @dev Calculates liquidity * (sqrt(upper) - sqrt(lower))\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The amount of usable liquidity\n @param roundUp Whether to round the amount up, or down\n @return amount1 Amount of token1 required to cover a position of size liquidity between the two passed prices"
									},
									"id": 3713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount1Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3668,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 3713,
												"src": "8548:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3667,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8548:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3670,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 3713,
												"src": "8571:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3669,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8571:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3672,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3713,
												"src": "8594:17:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3671,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8594:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3674,
												"mutability": "mutable",
												"name": "roundUp",
												"nodeType": "VariableDeclaration",
												"scope": 3713,
												"src": "8613:12:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8613:4:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8547:79:21"
									},
									"returnParameters": {
										"id": 3678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3677,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 3713,
												"src": "8674:15:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8673:17:21"
									},
									"scope": 3798,
									"src": "8523:502:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3754,
										"nodeType": "Block",
										"src": "9525:234:21",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														},
														"id": 3727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3725,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3720,
															"src": "9542:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 3726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9554:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9542:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 3742,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3716,
																		"src": "9686:13:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 3743,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3718,
																		"src": "9701:13:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3746,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3720,
																				"src": "9724:9:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 3745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9716:7:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 3744,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "9716:7:21",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9716:18:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 3748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9736:4:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 3741,
																	"name": "getAmount0Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3665,
																		3755
																	],
																	"referencedDeclaration": 3665,
																	"src": "9670:15:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																	}
																},
																"id": 3749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9670:71:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toInt256",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3280,
															"src": "9670:80:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (int256)"
															}
														},
														"id": 3751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9670:82:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9542:210:21",
													"trueExpression": {
														"id": 3740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "9570:85:21",
														"subExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 3729,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3716,
																			"src": "9587:13:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 3730,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3718,
																			"src": "9602:13:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 3734,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "9625:10:21",
																					"subExpression": {
																						"id": 3733,
																						"name": "liquidity",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3720,
																						"src": "9626:9:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 3732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9617:7:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint128_$",
																					"typeString": "type(uint128)"
																				},
																				"typeName": {
																					"id": 3731,
																					"name": "uint128",
																					"nodeType": "ElementaryTypeName",
																					"src": "9617:7:21",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9617:19:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"hexValue": "66616c7365",
																			"id": 3736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9638:5:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 3728,
																		"name": "getAmount0Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3665,
																			3755
																		],
																		"referencedDeclaration": 3665,
																		"src": "9571:15:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																		}
																	},
																	"id": 3737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9571:73:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt256",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3280,
																"src": "9571:82:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (int256)"
																}
															},
															"id": 3739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9571:84:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3724,
												"id": 3753,
												"nodeType": "Return",
												"src": "9535:217:21"
											}
										]
									},
									"documentation": {
										"id": 3714,
										"nodeType": "StructuredDocumentation",
										"src": "9031:333:21",
										"text": "@notice Helper that gets signed token0 delta\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The change in liquidity for which to compute the amount0 delta\n @return amount0 Amount of token0 corresponding to the passed liquidityDelta between the two prices"
									},
									"id": 3755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount0Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3716,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 3755,
												"src": "9394:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3715,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "9394:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3718,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 3755,
												"src": "9417:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3717,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "9417:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3720,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3755,
												"src": "9440:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3719,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "9440:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9393:64:21"
									},
									"returnParameters": {
										"id": 3724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3723,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 3755,
												"src": "9505:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3722,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "9505:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9504:16:21"
									},
									"scope": 3798,
									"src": "9369:390:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3796,
										"nodeType": "Block",
										"src": "10259:234:21",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														},
														"id": 3769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3767,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3762,
															"src": "10276:9:21",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 3768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10288:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10276:13:21",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 3784,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3758,
																		"src": "10420:13:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 3785,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3760,
																		"src": "10435:13:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3788,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3762,
																				"src": "10458:9:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 3787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10450:7:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 3786,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "10450:7:21",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10450:18:21",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 3790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10470:4:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 3783,
																	"name": "getAmount1Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3713,
																		3797
																	],
																	"referencedDeclaration": 3713,
																	"src": "10404:15:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																	}
																},
																"id": 3791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10404:71:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toInt256",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3280,
															"src": "10404:80:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (int256)"
															}
														},
														"id": 3793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10404:82:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10276:210:21",
													"trueExpression": {
														"id": 3782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "10304:85:21",
														"subExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 3771,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3758,
																			"src": "10321:13:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 3772,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3760,
																			"src": "10336:13:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 3776,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "10359:10:21",
																					"subExpression": {
																						"id": 3775,
																						"name": "liquidity",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3762,
																						"src": "10360:9:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 3774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10351:7:21",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint128_$",
																					"typeString": "type(uint128)"
																				},
																				"typeName": {
																					"id": 3773,
																					"name": "uint128",
																					"nodeType": "ElementaryTypeName",
																					"src": "10351:7:21",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10351:19:21",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"hexValue": "66616c7365",
																			"id": 3778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10372:5:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 3770,
																		"name": "getAmount1Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3713,
																			3797
																		],
																		"referencedDeclaration": 3713,
																		"src": "10305:15:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																		}
																	},
																	"id": 3779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10305:73:21",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt256",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3280,
																"src": "10305:82:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (int256)"
																}
															},
															"id": 3781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10305:84:21",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3766,
												"id": 3795,
												"nodeType": "Return",
												"src": "10269:217:21"
											}
										]
									},
									"documentation": {
										"id": 3756,
										"nodeType": "StructuredDocumentation",
										"src": "9765:333:21",
										"text": "@notice Helper that gets signed token1 delta\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The change in liquidity for which to compute the amount1 delta\n @return amount1 Amount of token1 corresponding to the passed liquidityDelta between the two prices"
									},
									"id": 3797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount1Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3758,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 3797,
												"src": "10128:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3757,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "10128:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3760,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 3797,
												"src": "10151:21:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3759,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "10151:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3762,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3797,
												"src": "10174:16:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3761,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10174:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:64:21"
									},
									"returnParameters": {
										"id": 3766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3765,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 3797,
												"src": "10239:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3764,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10239:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10238:16:21"
									},
									"scope": 3798,
									"src": "10103:390:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3799,
							"src": "377:10118:21"
						}
					],
					"src": "45:10451:21"
				},
				"id": 21
			},
			"contracts/core/libraries/Tick.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/Tick.sol",
					"exportedSymbols": {
						"LiquidityMath": [
							2160
						],
						"LowGasSafeMath": [
							2290
						],
						"SafeCast": [
							3281
						],
						"Tick": [
							4417
						],
						"TickMath": [
							5208
						]
					},
					"id": 4418,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3800,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:22"
						},
						{
							"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
							"file": "./LowGasSafeMath.sol",
							"id": 3801,
							"nodeType": "ImportDirective",
							"scope": 4418,
							"sourceUnit": 2291,
							"src": "78:30:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 3802,
							"nodeType": "ImportDirective",
							"scope": 4418,
							"sourceUnit": 3282,
							"src": "109:24:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TickMath.sol",
							"file": "./TickMath.sol",
							"id": 3803,
							"nodeType": "ImportDirective",
							"scope": 4418,
							"sourceUnit": 5209,
							"src": "135:24:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
							"file": "./LiquidityMath.sol",
							"id": 3804,
							"nodeType": "ImportDirective",
							"scope": 4418,
							"sourceUnit": 2161,
							"src": "160:29:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3805,
								"nodeType": "StructuredDocumentation",
								"src": "191:101:22",
								"text": "@title Tick\n @notice Contains functions for managing tick processes and relevant calculations"
							},
							"fullyImplemented": true,
							"id": 4417,
							"linearizedBaseContracts": [
								4417
							],
							"name": "Tick",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3808,
									"libraryName": {
										"id": 3806,
										"name": "LowGasSafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2290,
										"src": "317:14:22",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LowGasSafeMath_$2290",
											"typeString": "library LowGasSafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "311:32:22",
									"typeName": {
										"id": 3807,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "336:6:22",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"id": 3811,
									"libraryName": {
										"id": 3809,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3281,
										"src": "354:8:22",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$3281",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "348:26:22",
									"typeName": {
										"id": 3810,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "367:6:22",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"canonicalName": "Tick.Info",
									"id": 3832,
									"members": [
										{
											"constant": false,
											"id": 3813,
											"mutability": "mutable",
											"name": "liquidityGross",
											"nodeType": "VariableDeclaration",
											"scope": 3832,
											"src": "579:22:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 3812,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "579:7:22",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3815,
											"mutability": "mutable",
											"name": "liquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 3832,
											"src": "776:19:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 3814,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "776:6:22",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3817,
											"mutability": "mutable",
											"name": "stakedLiquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 3832,
											"src": "922:25:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 3816,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "922:6:22",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3819,
											"mutability": "mutable",
											"name": "feeGrowthOutside0X128",
											"nodeType": "VariableDeclaration",
											"scope": 3832,
											"src": "1170:29:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3818,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1170:7:22",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3821,
											"mutability": "mutable",
											"name": "feeGrowthOutside1X128",
											"nodeType": "VariableDeclaration",
											"scope": 3832,
											"src": "1209:29:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3820,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1209:7:22",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3823,
											"mutability": "mutable",
											"name": "rewardGrowthOutsideX128",
											"nodeType": "VariableDeclaration",
											"scope": 3832,
											"src": "1464:31:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3822,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1464:7:22",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3825,
											"mutability": "mutable",
											"name": "tickCumulativeOutside",
											"nodeType": "VariableDeclaration",
											"scope": 3832,
											"src": "1572:27:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int56",
												"typeString": "int56"
											},
											"typeName": {
												"id": 3824,
												"name": "int56",
												"nodeType": "ElementaryTypeName",
												"src": "1572:5:22",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3827,
											"mutability": "mutable",
											"name": "secondsPerLiquidityOutsideX128",
											"nodeType": "VariableDeclaration",
											"scope": 3832,
											"src": "1823:38:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 3826,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1823:7:22",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3829,
											"mutability": "mutable",
											"name": "secondsOutside",
											"nodeType": "VariableDeclaration",
											"scope": 3832,
											"src": "2066:21:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3828,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2066:6:22",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3831,
											"mutability": "mutable",
											"name": "initialized",
											"nodeType": "VariableDeclaration",
											"scope": 3832,
											"src": "2312:16:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3830,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2312:4:22",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nodeType": "StructDefinition",
									"scope": 4417,
									"src": "436:1899:22",
									"visibility": "public"
								},
								{
									"canonicalName": "Tick.LiquidityNets",
									"id": 3837,
									"members": [
										{
											"constant": false,
											"id": 3834,
											"mutability": "mutable",
											"name": "liquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 3837,
											"src": "2372:19:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 3833,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "2372:6:22",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3836,
											"mutability": "mutable",
											"name": "stakedLiquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 3837,
											"src": "2401:25:22",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 3835,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "2401:6:22",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LiquidityNets",
									"nodeType": "StructDefinition",
									"scope": 4417,
									"src": "2341:92:22",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3887,
										"nodeType": "Block",
										"src": "2919:271:22",
										"statements": [
											{
												"assignments": [
													3846
												],
												"declarations": [
													{
														"constant": false,
														"id": 3846,
														"mutability": "mutable",
														"name": "minTick",
														"nodeType": "VariableDeclaration",
														"scope": 3887,
														"src": "2929:13:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 3845,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2929:5:22",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3854,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 3850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3847,
																		"name": "TickMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5208,
																		"src": "2946:8:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TickMath_$5208_$",
																			"typeString": "type(library TickMath)"
																		}
																	},
																	"id": 3848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "MIN_TICK",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4681,
																	"src": "2946:17:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3849,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3840,
																	"src": "2966:11:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "2946:31:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"id": 3851,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2945:33:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3852,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3840,
														"src": "2981:11:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2945:47:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2929:63:22"
											},
											{
												"assignments": [
													3856
												],
												"declarations": [
													{
														"constant": false,
														"id": 3856,
														"mutability": "mutable",
														"name": "maxTick",
														"nodeType": "VariableDeclaration",
														"scope": 3887,
														"src": "3002:13:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 3855,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "3002:5:22",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3864,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 3860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3857,
																		"name": "TickMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5208,
																		"src": "3019:8:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TickMath_$5208_$",
																			"typeString": "type(library TickMath)"
																		}
																	},
																	"id": 3858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "MAX_TICK",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4686,
																	"src": "3019:17:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3859,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3840,
																	"src": "3039:11:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3019:31:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"id": 3861,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3018:33:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3862,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3840,
														"src": "3054:11:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "3018:47:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3002:63:22"
											},
											{
												"assignments": [
													3866
												],
												"declarations": [
													{
														"constant": false,
														"id": 3866,
														"mutability": "mutable",
														"name": "numTicks",
														"nodeType": "VariableDeclaration",
														"scope": 3887,
														"src": "3075:15:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 3865,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "3075:6:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3878,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													},
													"id": 3877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 3874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			"id": 3871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3869,
																				"name": "maxTick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3856,
																				"src": "3101:7:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 3870,
																				"name": "minTick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3846,
																				"src": "3111:7:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"src": "3101:17:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"id": 3872,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3100:19:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3873,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3840,
																	"src": "3122:11:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3100:33:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 3868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3093:6:22",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 3867,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "3093:6:22",
																"typeDescriptions": {}
															}
														},
														"id": 3875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3093:41:22",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 3876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3137:1:22",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3093:45:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3075:63:22"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 3885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3160:7:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3880,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "3160:7:22",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 3879,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3155:4:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3155:13:22",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 3883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3155:17:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3884,
														"name": "numTicks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3866,
														"src": "3175:8:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "3155:28:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 3844,
												"id": 3886,
												"nodeType": "Return",
												"src": "3148:35:22"
											}
										]
									},
									"documentation": {
										"id": 3838,
										"nodeType": "StructuredDocumentation",
										"src": "2439:382:22",
										"text": "@notice Derives max liquidity per tick from given tick spacing\n @dev Executed within the pool constructor\n @param tickSpacing The amount of required tick separation, realized in multiples of `tickSpacing`\n     e.g., a tickSpacing of 3 requires ticks to be initialized every 3rd tick i.e., ..., -6, -3, 0, 3, 6, ...\n @return The max liquidity per tick"
									},
									"id": 3888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacingToMaxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3840,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 3888,
												"src": "2868:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3839,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2868:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2867:19:22"
									},
									"returnParameters": {
										"id": 3844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3843,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3888,
												"src": "2910:7:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3842,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2910:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2909:9:22"
									},
									"scope": 4417,
									"src": "2826:364:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4010,
										"nodeType": "Block",
										"src": "4286:1249:22",
										"statements": [
											{
												"assignments": [
													3911
												],
												"declarations": [
													{
														"constant": false,
														"id": 3911,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 4010,
														"src": "4296:18:22",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 3910,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3832,
															"src": "4296:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3915,
												"initialValue": {
													"baseExpression": {
														"id": 3912,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3893,
														"src": "4317:4:22",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 3914,
													"indexExpression": {
														"id": 3913,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3895,
														"src": "4322:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4317:15:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3832_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4296:36:22"
											},
											{
												"assignments": [
													3917
												],
												"declarations": [
													{
														"constant": false,
														"id": 3917,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 4010,
														"src": "4342:18:22",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 3916,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3832,
															"src": "4342:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3921,
												"initialValue": {
													"baseExpression": {
														"id": 3918,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3893,
														"src": "4363:4:22",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 3920,
													"indexExpression": {
														"id": 3919,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3897,
														"src": "4368:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4363:15:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3832_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4342:36:22"
											},
											{
												"assignments": [
													3923
												],
												"declarations": [
													{
														"constant": false,
														"id": 3923,
														"mutability": "mutable",
														"name": "feeGrowthBelow0X128",
														"nodeType": "VariableDeclaration",
														"scope": 4010,
														"src": "4427:27:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3922,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4427:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3924,
												"nodeType": "VariableDeclarationStatement",
												"src": "4427:27:22"
											},
											{
												"assignments": [
													3926
												],
												"declarations": [
													{
														"constant": false,
														"id": 3926,
														"mutability": "mutable",
														"name": "feeGrowthBelow1X128",
														"nodeType": "VariableDeclaration",
														"scope": 4010,
														"src": "4464:27:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3925,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4464:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3927,
												"nodeType": "VariableDeclarationStatement",
												"src": "4464:27:22"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3928,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3899,
														"src": "4505:11:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3929,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3895,
														"src": "4520:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "4505:24:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3956,
													"nodeType": "Block",
													"src": "4674:183:22",
													"statements": [
														{
															"expression": {
																"id": 3947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3942,
																	"name": "feeGrowthBelow0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3923,
																	"src": "4688:19:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3943,
																		"name": "feeGrowthGlobal0X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3901,
																		"src": "4710:20:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3944,
																			"name": "lower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3911,
																			"src": "4733:5:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 3945,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside0X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3819,
																		"src": "4733:27:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4710:50:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4688:72:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3948,
															"nodeType": "ExpressionStatement",
															"src": "4688:72:22"
														},
														{
															"expression": {
																"id": 3954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3949,
																	"name": "feeGrowthBelow1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3926,
																	"src": "4774:19:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3950,
																		"name": "feeGrowthGlobal1X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3903,
																		"src": "4796:20:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3951,
																			"name": "lower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3911,
																			"src": "4819:5:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 3952,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside1X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3821,
																		"src": "4819:27:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4796:50:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4774:72:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3955,
															"nodeType": "ExpressionStatement",
															"src": "4774:72:22"
														}
													]
												},
												"id": 3957,
												"nodeType": "IfStatement",
												"src": "4501:356:22",
												"trueBody": {
													"id": 3941,
													"nodeType": "Block",
													"src": "4531:137:22",
													"statements": [
														{
															"expression": {
																"id": 3934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3931,
																	"name": "feeGrowthBelow0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3923,
																	"src": "4545:19:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3932,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3911,
																		"src": "4567:5:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 3933,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside0X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3819,
																	"src": "4567:27:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4545:49:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3935,
															"nodeType": "ExpressionStatement",
															"src": "4545:49:22"
														},
														{
															"expression": {
																"id": 3939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3936,
																	"name": "feeGrowthBelow1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3926,
																	"src": "4608:19:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3937,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3911,
																		"src": "4630:5:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 3938,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside1X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3821,
																	"src": "4630:27:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4608:49:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3940,
															"nodeType": "ExpressionStatement",
															"src": "4608:49:22"
														}
													]
												}
											},
											{
												"assignments": [
													3959
												],
												"declarations": [
													{
														"constant": false,
														"id": 3959,
														"mutability": "mutable",
														"name": "feeGrowthAbove0X128",
														"nodeType": "VariableDeclaration",
														"scope": 4010,
														"src": "4905:27:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3958,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4905:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3960,
												"nodeType": "VariableDeclarationStatement",
												"src": "4905:27:22"
											},
											{
												"assignments": [
													3962
												],
												"declarations": [
													{
														"constant": false,
														"id": 3962,
														"mutability": "mutable",
														"name": "feeGrowthAbove1X128",
														"nodeType": "VariableDeclaration",
														"scope": 4010,
														"src": "4942:27:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3961,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4942:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3963,
												"nodeType": "VariableDeclarationStatement",
												"src": "4942:27:22"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3964,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3899,
														"src": "4983:11:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3965,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3897,
														"src": "4997:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "4983:23:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3992,
													"nodeType": "Block",
													"src": "5151:183:22",
													"statements": [
														{
															"expression": {
																"id": 3983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3978,
																	"name": "feeGrowthAbove0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3959,
																	"src": "5165:19:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3979,
																		"name": "feeGrowthGlobal0X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3901,
																		"src": "5187:20:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3980,
																			"name": "upper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3917,
																			"src": "5210:5:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 3981,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside0X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3819,
																		"src": "5210:27:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5187:50:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5165:72:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3984,
															"nodeType": "ExpressionStatement",
															"src": "5165:72:22"
														},
														{
															"expression": {
																"id": 3990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3985,
																	"name": "feeGrowthAbove1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3962,
																	"src": "5251:19:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3986,
																		"name": "feeGrowthGlobal1X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3903,
																		"src": "5273:20:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3987,
																			"name": "upper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3917,
																			"src": "5296:5:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 3988,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside1X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3821,
																		"src": "5296:27:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5273:50:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5251:72:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3991,
															"nodeType": "ExpressionStatement",
															"src": "5251:72:22"
														}
													]
												},
												"id": 3993,
												"nodeType": "IfStatement",
												"src": "4979:355:22",
												"trueBody": {
													"id": 3977,
													"nodeType": "Block",
													"src": "5008:137:22",
													"statements": [
														{
															"expression": {
																"id": 3970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3967,
																	"name": "feeGrowthAbove0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3959,
																	"src": "5022:19:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3968,
																		"name": "upper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3917,
																		"src": "5044:5:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 3969,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside0X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3819,
																	"src": "5044:27:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5022:49:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3971,
															"nodeType": "ExpressionStatement",
															"src": "5022:49:22"
														},
														{
															"expression": {
																"id": 3975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3972,
																	"name": "feeGrowthAbove1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3962,
																	"src": "5085:19:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3973,
																		"name": "upper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3917,
																		"src": "5107:5:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 3974,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside1X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3821,
																	"src": "5107:27:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5085:49:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3976,
															"nodeType": "ExpressionStatement",
															"src": "5085:49:22"
														}
													]
												}
											},
											{
												"expression": {
													"id": 4000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3994,
														"name": "feeGrowthInside0X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3906,
														"src": "5344:20:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3995,
																"name": "feeGrowthGlobal0X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3901,
																"src": "5367:20:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3996,
																"name": "feeGrowthBelow0X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3923,
																"src": "5390:19:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5367:42:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 3998,
															"name": "feeGrowthAbove0X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3959,
															"src": "5412:19:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5367:64:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5344:87:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4001,
												"nodeType": "ExpressionStatement",
												"src": "5344:87:22"
											},
											{
												"expression": {
													"id": 4008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4002,
														"name": "feeGrowthInside1X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3908,
														"src": "5441:20:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4003,
																"name": "feeGrowthGlobal1X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3903,
																"src": "5464:20:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 4004,
																"name": "feeGrowthBelow1X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3926,
																"src": "5487:19:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5464:42:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 4006,
															"name": "feeGrowthAbove1X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3962,
															"src": "5509:19:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5464:64:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5441:87:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4009,
												"nodeType": "ExpressionStatement",
												"src": "5441:87:22"
											}
										]
									},
									"documentation": {
										"id": 3889,
										"nodeType": "StructuredDocumentation",
										"src": "3196:765:22",
										"text": "@notice Retrieves fee growth data\n @param self The mapping containing all tick information for initialized ticks\n @param tickLower The lower tick boundary of the position\n @param tickUpper The upper tick boundary of the position\n @param tickCurrent The current tick\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @return feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n @return feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries"
									},
									"id": 4011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeGrowthInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3893,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4011,
												"src": "4003:40:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 3892,
													"keyType": {
														"id": 3890,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "4011:5:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "4003:27:22",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 3891,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3832,
														"src": "4020:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3895,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 4011,
												"src": "4053:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3894,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4053:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3897,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 4011,
												"src": "4078:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3896,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4078:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3899,
												"mutability": "mutable",
												"name": "tickCurrent",
												"nodeType": "VariableDeclaration",
												"scope": 4011,
												"src": "4103:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3898,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4103:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3901,
												"mutability": "mutable",
												"name": "feeGrowthGlobal0X128",
												"nodeType": "VariableDeclaration",
												"scope": 4011,
												"src": "4130:28:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3903,
												"mutability": "mutable",
												"name": "feeGrowthGlobal1X128",
												"nodeType": "VariableDeclaration",
												"scope": 4011,
												"src": "4168:28:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:209:22"
									},
									"returnParameters": {
										"id": 3909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3906,
												"mutability": "mutable",
												"name": "feeGrowthInside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 4011,
												"src": "4226:28:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4226:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3908,
												"mutability": "mutable",
												"name": "feeGrowthInside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 4011,
												"src": "4256:28:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4256:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4225:60:22"
									},
									"scope": 4417,
									"src": "3966:1569:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4090,
										"nodeType": "Block",
										"src": "5800:818:22",
										"statements": [
											{
												"assignments": [
													4029
												],
												"declarations": [
													{
														"constant": false,
														"id": 4029,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 4090,
														"src": "5810:18:22",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 4028,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3832,
															"src": "5810:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4033,
												"initialValue": {
													"baseExpression": {
														"id": 4030,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4015,
														"src": "5831:4:22",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 4032,
													"indexExpression": {
														"id": 4031,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4017,
														"src": "5836:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5831:15:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3832_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5810:36:22"
											},
											{
												"assignments": [
													4035
												],
												"declarations": [
													{
														"constant": false,
														"id": 4035,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 4090,
														"src": "5856:18:22",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 4034,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3832,
															"src": "5856:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4039,
												"initialValue": {
													"baseExpression": {
														"id": 4036,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4015,
														"src": "5877:4:22",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 4038,
													"indexExpression": {
														"id": 4037,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4019,
														"src": "5882:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5877:15:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3832_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5856:36:22"
											},
											{
												"assignments": [
													4041
												],
												"declarations": [
													{
														"constant": false,
														"id": 4041,
														"mutability": "mutable",
														"name": "rewardGrowthBelowX128",
														"nodeType": "VariableDeclaration",
														"scope": 4090,
														"src": "5944:29:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5944:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4042,
												"nodeType": "VariableDeclarationStatement",
												"src": "5944:29:22"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 4045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4043,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4021,
														"src": "5987:11:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 4044,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4017,
														"src": "6002:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "5987:24:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4059,
													"nodeType": "Block",
													"src": "6097:103:22",
													"statements": [
														{
															"expression": {
																"id": 4057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4052,
																	"name": "rewardGrowthBelowX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4041,
																	"src": "6111:21:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4053,
																		"name": "rewardGrowthGlobalX128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4023,
																		"src": "6135:22:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 4054,
																			"name": "lower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4029,
																			"src": "6160:5:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 4055,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardGrowthOutsideX128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3823,
																		"src": "6160:29:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6135:54:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6111:78:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4058,
															"nodeType": "ExpressionStatement",
															"src": "6111:78:22"
														}
													]
												},
												"id": 4060,
												"nodeType": "IfStatement",
												"src": "5983:217:22",
												"trueBody": {
													"id": 4051,
													"nodeType": "Block",
													"src": "6013:78:22",
													"statements": [
														{
															"expression": {
																"id": 4049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4046,
																	"name": "rewardGrowthBelowX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4041,
																	"src": "6027:21:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 4047,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4029,
																		"src": "6051:5:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 4048,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardGrowthOutsideX128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3823,
																	"src": "6051:29:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6027:53:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4050,
															"nodeType": "ExpressionStatement",
															"src": "6027:53:22"
														}
													]
												}
											},
											{
												"assignments": [
													4062
												],
												"declarations": [
													{
														"constant": false,
														"id": 4062,
														"mutability": "mutable",
														"name": "rewardGrowthAboveX128",
														"nodeType": "VariableDeclaration",
														"scope": 4090,
														"src": "6251:29:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4061,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6251:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4063,
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:29:22"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 4066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4064,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4021,
														"src": "6294:11:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 4065,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4019,
														"src": "6308:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "6294:23:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4080,
													"nodeType": "Block",
													"src": "6403:103:22",
													"statements": [
														{
															"expression": {
																"id": 4078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4073,
																	"name": "rewardGrowthAboveX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4062,
																	"src": "6417:21:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4074,
																		"name": "rewardGrowthGlobalX128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4023,
																		"src": "6441:22:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 4075,
																			"name": "upper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4035,
																			"src": "6466:5:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 4076,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardGrowthOutsideX128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3823,
																		"src": "6466:29:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6441:54:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6417:78:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4079,
															"nodeType": "ExpressionStatement",
															"src": "6417:78:22"
														}
													]
												},
												"id": 4081,
												"nodeType": "IfStatement",
												"src": "6290:216:22",
												"trueBody": {
													"id": 4072,
													"nodeType": "Block",
													"src": "6319:78:22",
													"statements": [
														{
															"expression": {
																"id": 4070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4067,
																	"name": "rewardGrowthAboveX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4062,
																	"src": "6333:21:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 4068,
																		"name": "upper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4035,
																		"src": "6357:5:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 4069,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardGrowthOutsideX128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3823,
																	"src": "6357:29:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6333:53:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4071,
															"nodeType": "ExpressionStatement",
															"src": "6333:53:22"
														}
													]
												}
											},
											{
												"expression": {
													"id": 4088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4082,
														"name": "rewardGrowthInsideX128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4026,
														"src": "6516:22:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4083,
																"name": "rewardGrowthGlobalX128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4023,
																"src": "6541:22:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 4084,
																"name": "rewardGrowthBelowX128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4041,
																"src": "6566:21:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6541:46:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 4086,
															"name": "rewardGrowthAboveX128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4062,
															"src": "6590:21:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6541:70:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6516:95:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4089,
												"nodeType": "ExpressionStatement",
												"src": "6516:95:22"
											}
										]
									},
									"id": 4091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardGrowthInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4015,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4091,
												"src": "5581:40:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 4014,
													"keyType": {
														"id": 4012,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "5589:5:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "5581:27:22",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 4013,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3832,
														"src": "5598:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4017,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 4091,
												"src": "5631:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4016,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5631:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4019,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 4091,
												"src": "5656:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4018,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5656:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4021,
												"mutability": "mutable",
												"name": "tickCurrent",
												"nodeType": "VariableDeclaration",
												"scope": 4091,
												"src": "5681:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4020,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5681:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4023,
												"mutability": "mutable",
												"name": "rewardGrowthGlobalX128",
												"nodeType": "VariableDeclaration",
												"scope": 4091,
												"src": "5708:30:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5708:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5571:173:22"
									},
									"returnParameters": {
										"id": 4027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4026,
												"mutability": "mutable",
												"name": "rewardGrowthInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 4091,
												"src": "5768:30:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5767:32:22"
									},
									"scope": 4417,
									"src": "5541:1077:22",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4248,
										"nodeType": "Block",
										"src": "8360:1350:22",
										"statements": [
											{
												"assignments": [
													4126
												],
												"declarations": [
													{
														"constant": false,
														"id": 4126,
														"mutability": "mutable",
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 4248,
														"src": "8370:22:22",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 4125,
															"name": "Tick.Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3832,
															"src": "8370:9:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4130,
												"initialValue": {
													"baseExpression": {
														"id": 4127,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4096,
														"src": "8395:4:22",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 4129,
													"indexExpression": {
														"id": 4128,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4098,
														"src": "8400:4:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8395:10:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3832_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8370:35:22"
											},
											{
												"assignments": [
													4132
												],
												"declarations": [
													{
														"constant": false,
														"id": 4132,
														"mutability": "mutable",
														"name": "liquidityGrossBefore",
														"nodeType": "VariableDeclaration",
														"scope": 4248,
														"src": "8416:28:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 4131,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "8416:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4135,
												"initialValue": {
													"expression": {
														"id": 4133,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4126,
														"src": "8447:4:22",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info storage pointer"
														}
													},
													"id": 4134,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "liquidityGross",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3813,
													"src": "8447:19:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8416:50:22"
											},
											{
												"assignments": [
													4137
												],
												"declarations": [
													{
														"constant": false,
														"id": 4137,
														"mutability": "mutable",
														"name": "liquidityGrossAfter",
														"nodeType": "VariableDeclaration",
														"scope": 4248,
														"src": "8476:27:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 4136,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "8476:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4143,
												"initialValue": {
													"arguments": [
														{
															"id": 4140,
															"name": "liquidityGrossBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4132,
															"src": "8529:20:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 4141,
															"name": "liquidityDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4102,
															"src": "8551:14:22",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														],
														"expression": {
															"id": 4138,
															"name": "LiquidityMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "8506:13:22",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LiquidityMath_$2160_$",
																"typeString": "type(library LiquidityMath)"
															}
														},
														"id": 4139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addDelta",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2159,
														"src": "8506:22:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_int128_$returns$_t_uint128_$",
															"typeString": "function (uint128,int128) pure returns (uint128)"
														}
													},
													"id": 4142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8506:60:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8476:90:22"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 4147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4145,
																"name": "liquidityGrossAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4137,
																"src": "8585:19:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 4146,
																"name": "maxLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4118,
																"src": "8608:12:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8585:35:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c4f",
															"id": 4148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8622:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df0e8e403ea3fe54c7efb80492fa8f6599886b9c5435c1772b8d6400862c8c48",
																"typeString": "literal_string \"LO\""
															},
															"value": "LO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df0e8e403ea3fe54c7efb80492fa8f6599886b9c5435c1772b8d6400862c8c48",
																"typeString": "literal_string \"LO\""
															}
														],
														"id": 4144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8577:7:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8577:50:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4150,
												"nodeType": "ExpressionStatement",
												"src": "8577:50:22"
											},
											{
												"expression": {
													"id": 4161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4151,
														"name": "flipped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4121,
														"src": "8638:7:22",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 4160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 4154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4152,
																		"name": "liquidityGrossAfter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4137,
																		"src": "8649:19:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8672:1:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "8649:24:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 4155,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8648:26:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 4158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4156,
																		"name": "liquidityGrossBefore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4132,
																		"src": "8679:20:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8703:1:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "8679:25:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 4159,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8678:27:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8648:57:22",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8638:67:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4162,
												"nodeType": "ExpressionStatement",
												"src": "8638:67:22"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 4165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4163,
														"name": "liquidityGrossBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4132,
														"src": "8720:20:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 4164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8744:1:22",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8720:25:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4214,
												"nodeType": "IfStatement",
												"src": "8716:643:22",
												"trueBody": {
													"id": 4213,
													"nodeType": "Block",
													"src": "8747:612:22",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 4168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4166,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4098,
																	"src": "8877:4:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 4167,
																	"name": "tickCurrent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4100,
																	"src": "8885:11:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "8877:19:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4206,
															"nodeType": "IfStatement",
															"src": "8873:439:22",
															"trueBody": {
																"id": 4205,
																"nodeType": "Block",
																"src": "8898:414:22",
																"statements": [
																	{
																		"expression": {
																			"id": 4173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4169,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4126,
																					"src": "8916:4:22",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4171,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "feeGrowthOutside0X128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3819,
																				"src": "8916:26:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4172,
																				"name": "feeGrowthGlobal0X128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4104,
																				"src": "8945:20:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8916:49:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4174,
																		"nodeType": "ExpressionStatement",
																		"src": "8916:49:22"
																	},
																	{
																		"expression": {
																			"id": 4179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4175,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4126,
																					"src": "8983:4:22",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4177,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "feeGrowthOutside1X128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3821,
																				"src": "8983:26:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4178,
																				"name": "feeGrowthGlobal1X128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4106,
																				"src": "9012:20:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8983:49:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4180,
																		"nodeType": "ExpressionStatement",
																		"src": "8983:49:22"
																	},
																	{
																		"expression": {
																			"id": 4185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4181,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4126,
																					"src": "9050:4:22",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4183,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "rewardGrowthOutsideX128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3823,
																				"src": "9050:28:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4184,
																				"name": "rewardGrowthGlobalX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4108,
																				"src": "9081:22:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9050:53:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4186,
																		"nodeType": "ExpressionStatement",
																		"src": "9050:53:22"
																	},
																	{
																		"expression": {
																			"id": 4191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4187,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4126,
																					"src": "9121:4:22",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4189,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "secondsPerLiquidityOutsideX128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3827,
																				"src": "9121:35:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4190,
																				"name": "secondsPerLiquidityCumulativeX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4110,
																				"src": "9159:33:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "9121:71:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 4192,
																		"nodeType": "ExpressionStatement",
																		"src": "9121:71:22"
																	},
																	{
																		"expression": {
																			"id": 4197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4193,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4126,
																					"src": "9210:4:22",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4195,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "tickCumulativeOutside",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3825,
																				"src": "9210:26:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4196,
																				"name": "tickCumulative",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4112,
																				"src": "9239:14:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"src": "9210:43:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			}
																		},
																		"id": 4198,
																		"nodeType": "ExpressionStatement",
																		"src": "9210:43:22"
																	},
																	{
																		"expression": {
																			"id": 4203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4199,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4126,
																					"src": "9271:4:22",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4201,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "secondsOutside",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3829,
																				"src": "9271:19:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4202,
																				"name": "time",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4114,
																				"src": "9293:4:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"src": "9271:26:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"id": 4204,
																		"nodeType": "ExpressionStatement",
																		"src": "9271:26:22"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 4211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 4207,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4126,
																		"src": "9325:4:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 4209,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3831,
																	"src": "9325:16:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 4210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9344:4:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "9325:23:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4212,
															"nodeType": "ExpressionStatement",
															"src": "9325:23:22"
														}
													]
												}
											},
											{
												"expression": {
													"id": 4219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4215,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4126,
															"src": "9369:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4217,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "liquidityGross",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3813,
														"src": "9369:19:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4218,
														"name": "liquidityGrossAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4137,
														"src": "9391:19:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9369:41:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 4220,
												"nodeType": "ExpressionStatement",
												"src": "9369:41:22"
											},
											{
												"expression": {
													"id": 4246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4221,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4126,
															"src": "9536:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4223,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "liquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3815,
														"src": "9536:17:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 4224,
															"name": "upper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4116,
															"src": "9556:5:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 4241,
																			"name": "liquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4102,
																			"src": "9677:14:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 4237,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4126,
																						"src": "9654:4:22",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 4238,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3815,
																					"src": "9654:17:22",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 4236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9647:6:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 4235,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9647:6:22",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9647:25:22",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 4240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2262,
																		"src": "9647:29:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 4242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9647:45:22",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 4243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3256,
																"src": "9647:54:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 4244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9647:56:22",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"id": 4245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "9556:147:22",
														"trueExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 4231,
																			"name": "liquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4102,
																			"src": "9606:14:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 4227,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4126,
																						"src": "9583:4:22",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 4228,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3815,
																					"src": "9583:17:22",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 4226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9576:6:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 4225,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9576:6:22",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9576:25:22",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 4230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2289,
																		"src": "9576:29:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 4232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9576:45:22",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 4233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3256,
																"src": "9576:54:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 4234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9576:56:22",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "9536:167:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4247,
												"nodeType": "ExpressionStatement",
												"src": "9536:167:22"
											}
										]
									},
									"documentation": {
										"id": 4092,
										"nodeType": "StructuredDocumentation",
										"src": "6624:1281:22",
										"text": "@notice Updates a tick and returns true if the tick was flipped from initialized to uninitialized, or vice versa\n @param self The mapping containing all tick information for initialized ticks\n @param tick The tick that will be updated\n @param tickCurrent The current tick\n @param liquidityDelta A new amount of liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n @param secondsPerLiquidityCumulativeX128 The all-time seconds per max(1, liquidity) of the pool\n @param tickCumulative The tick * time elapsed since the pool was first initialized\n @param time The current block timestamp cast to a uint32\n @param upper true for updating a position's upper tick, or false for updating a position's lower tick\n @param maxLiquidity The maximum liquidity allocation for a single tick\n @return flipped Whether the tick was flipped from initialized to uninitialized, or vice versa"
									},
									"id": 4249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4096,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "7935:40:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 4095,
													"keyType": {
														"id": 4093,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "7943:5:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "7935:27:22",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 4094,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3832,
														"src": "7952:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4098,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "7985:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4097,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "7985:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4100,
												"mutability": "mutable",
												"name": "tickCurrent",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "8005:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4099,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "8005:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4102,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "8032:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 4101,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "8032:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4104,
												"mutability": "mutable",
												"name": "feeGrowthGlobal0X128",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "8063:28:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8063:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4106,
												"mutability": "mutable",
												"name": "feeGrowthGlobal1X128",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "8101:28:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8101:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4108,
												"mutability": "mutable",
												"name": "rewardGrowthGlobalX128",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "8139:30:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8139:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4110,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "8179:41:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4109,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8179:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4112,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "8230:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4111,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "8230:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4114,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "8260:11:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 4113,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8260:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4116,
												"mutability": "mutable",
												"name": "upper",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "8281:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8281:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4118,
												"mutability": "mutable",
												"name": "maxLiquidity",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "8301:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4117,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8301:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7925:402:22"
									},
									"returnParameters": {
										"id": 4122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4121,
												"mutability": "mutable",
												"name": "flipped",
												"nodeType": "VariableDeclaration",
												"scope": 4249,
												"src": "8346:12:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4120,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8346:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8345:14:22"
									},
									"scope": 4417,
									"src": "7910:1800:22",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4298,
										"nodeType": "Block",
										"src": "10468:381:22",
										"statements": [
											{
												"assignments": [
													4266
												],
												"declarations": [
													{
														"constant": false,
														"id": 4266,
														"mutability": "mutable",
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 4298,
														"src": "10478:22:22",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 4265,
															"name": "Tick.Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3832,
															"src": "10478:9:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4270,
												"initialValue": {
													"baseExpression": {
														"id": 4267,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4254,
														"src": "10503:4:22",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 4269,
													"indexExpression": {
														"id": 4268,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4256,
														"src": "10508:4:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10503:10:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3832_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10478:35:22"
											},
											{
												"expression": {
													"id": 4296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4271,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4266,
															"src": "10645:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4273,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedLiquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3817,
														"src": "10645:23:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 4274,
															"name": "upper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4260,
															"src": "10671:5:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 4291,
																			"name": "stakedLiquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4258,
																			"src": "10810:20:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 4287,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4266,
																						"src": "10781:4:22",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 4288,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakedLiquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3817,
																					"src": "10781:23:22",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 4286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10774:6:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 4285,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10774:6:22",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10774:31:22",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 4290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2262,
																		"src": "10774:35:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 4292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10774:57:22",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 4293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3256,
																"src": "10774:66:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 4294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10774:68:22",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"id": 4295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "10671:171:22",
														"trueExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 4281,
																			"name": "stakedLiquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4258,
																			"src": "10727:20:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 4277,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4266,
																						"src": "10698:4:22",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 4278,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakedLiquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3817,
																					"src": "10698:23:22",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 4276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10691:6:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 4275,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10691:6:22",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10691:31:22",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 4280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2289,
																		"src": "10691:35:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 4282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10691:57:22",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 4283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3256,
																"src": "10691:66:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 4284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10691:68:22",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "10645:197:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4297,
												"nodeType": "ExpressionStatement",
												"src": "10645:197:22"
											}
										]
									},
									"documentation": {
										"id": 4250,
										"nodeType": "StructuredDocumentation",
										"src": "9716:610:22",
										"text": "@notice Updates the staked liquidity component of a tick. Assumes tick is already initialized with an existing position.\n @notice We reuse existing liquidity for staking, so there is no change in liquidity\n @param self The mapping containing all tick information for initialized ticks\n @param tick The tick that will be updated\n @param stakedLiquidityDelta The amount of staked liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n @param upper true for updating a position's upper tick, or false for updating a position's lower tick"
									},
									"id": 4299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateStake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4254,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4299,
												"src": "10352:40:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 4253,
													"keyType": {
														"id": 4251,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "10360:5:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "10352:27:22",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 4252,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3832,
														"src": "10369:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4256,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4299,
												"src": "10394:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4255,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10394:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4258,
												"mutability": "mutable",
												"name": "stakedLiquidityDelta",
												"nodeType": "VariableDeclaration",
												"scope": 4299,
												"src": "10406:27:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 4257,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10406:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4260,
												"mutability": "mutable",
												"name": "upper",
												"nodeType": "VariableDeclaration",
												"scope": 4299,
												"src": "10435:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10435:4:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10351:95:22"
									},
									"returnParameters": {
										"id": 4262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10468:0:22"
									},
									"scope": 4417,
									"src": "10331:518:22",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4314,
										"nodeType": "Block",
										"src": "11114:34:22",
										"statements": [
											{
												"expression": {
													"id": 4312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11124:17:22",
													"subExpression": {
														"baseExpression": {
															"id": 4309,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4304,
															"src": "11131:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
																"typeString": "mapping(int24 => struct Tick.Info storage ref)"
															}
														},
														"id": 4311,
														"indexExpression": {
															"id": 4310,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4306,
															"src": "11136:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11131:10:22",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage",
															"typeString": "struct Tick.Info storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4313,
												"nodeType": "ExpressionStatement",
												"src": "11124:17:22"
											}
										]
									},
									"documentation": {
										"id": 4300,
										"nodeType": "StructuredDocumentation",
										"src": "10855:176:22",
										"text": "@notice Clears tick data\n @param self The mapping containing all initialized tick information for initialized ticks\n @param tick The tick that will be cleared"
									},
									"id": 4315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clear",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4304,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4315,
												"src": "11051:40:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 4303,
													"keyType": {
														"id": 4301,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "11059:5:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "11051:27:22",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 4302,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3832,
														"src": "11068:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4306,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4315,
												"src": "11093:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4305,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "11093:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11050:54:22"
									},
									"returnParameters": {
										"id": 4308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11114:0:22"
									},
									"scope": 4417,
									"src": "11036:112:22",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4415,
										"nodeType": "Block",
										"src": "12382:687:22",
										"statements": [
											{
												"assignments": [
													4342
												],
												"declarations": [
													{
														"constant": false,
														"id": 4342,
														"mutability": "mutable",
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 4415,
														"src": "12392:22:22",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 4341,
															"name": "Tick.Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3832,
															"src": "12392:9:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4346,
												"initialValue": {
													"baseExpression": {
														"id": 4343,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4320,
														"src": "12417:4:22",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 4345,
													"indexExpression": {
														"id": 4344,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4322,
														"src": "12422:4:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12417:10:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3832_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12392:35:22"
											},
											{
												"expression": {
													"id": 4354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4347,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4342,
															"src": "12437:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4349,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthOutside0X128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3819,
														"src": "12437:26:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4350,
															"name": "feeGrowthGlobal0X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4324,
															"src": "12466:20:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4351,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4342,
																"src": "12489:4:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4352,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "feeGrowthOutside0X128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3819,
															"src": "12489:26:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12466:49:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12437:78:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4355,
												"nodeType": "ExpressionStatement",
												"src": "12437:78:22"
											},
											{
												"expression": {
													"id": 4363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4356,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4342,
															"src": "12525:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4358,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthOutside1X128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3821,
														"src": "12525:26:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4359,
															"name": "feeGrowthGlobal1X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4326,
															"src": "12554:20:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4360,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4342,
																"src": "12577:4:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4361,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "feeGrowthOutside1X128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3821,
															"src": "12577:26:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12554:49:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12525:78:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4364,
												"nodeType": "ExpressionStatement",
												"src": "12525:78:22"
											},
											{
												"expression": {
													"id": 4372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4365,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4342,
															"src": "12613:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4367,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardGrowthOutsideX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3823,
														"src": "12613:28:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4368,
															"name": "rewardGrowthGlobalX128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4334,
															"src": "12644:22:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4369,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4342,
																"src": "12669:4:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4370,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardGrowthOutsideX128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3823,
															"src": "12669:28:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12644:53:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12613:84:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4373,
												"nodeType": "ExpressionStatement",
												"src": "12613:84:22"
											},
											{
												"expression": {
													"id": 4381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4374,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4342,
															"src": "12707:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4376,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "secondsPerLiquidityOutsideX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3827,
														"src": "12707:35:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 4380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4377,
															"name": "secondsPerLiquidityCumulativeX128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4328,
															"src": "12745:33:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4378,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4342,
																"src": "12781:4:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4379,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "secondsPerLiquidityOutsideX128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3827,
															"src": "12781:35:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "12745:71:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "12707:109:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 4382,
												"nodeType": "ExpressionStatement",
												"src": "12707:109:22"
											},
											{
												"expression": {
													"id": 4390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4383,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4342,
															"src": "12826:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4385,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tickCumulativeOutside",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3825,
														"src": "12826:26:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"id": 4389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4386,
															"name": "tickCumulative",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4330,
															"src": "12855:14:22",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4387,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4342,
																"src": "12872:4:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4388,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tickCumulativeOutside",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3825,
															"src": "12872:26:22",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"src": "12855:43:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "12826:72:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 4391,
												"nodeType": "ExpressionStatement",
												"src": "12826:72:22"
											},
											{
												"expression": {
													"id": 4399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4392,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4342,
															"src": "12908:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4394,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "secondsOutside",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3829,
														"src": "12908:19:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 4398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4395,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4332,
															"src": "12930:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4396,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4342,
																"src": "12937:4:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4397,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "secondsOutside",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3829,
															"src": "12937:19:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "12930:26:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "12908:48:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 4400,
												"nodeType": "ExpressionStatement",
												"src": "12908:48:22"
											},
											{
												"expression": {
													"id": 4406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4401,
															"name": "nets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4337,
															"src": "12966:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityNets_$3837_memory_ptr",
																"typeString": "struct Tick.LiquidityNets memory"
															}
														},
														"id": 4403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "liquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3834,
														"src": "12966:17:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4404,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4342,
															"src": "12986:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4405,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "liquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3815,
														"src": "12986:17:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "12966:37:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4407,
												"nodeType": "ExpressionStatement",
												"src": "12966:37:22"
											},
											{
												"expression": {
													"id": 4413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4408,
															"name": "nets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4337,
															"src": "13013:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityNets_$3837_memory_ptr",
																"typeString": "struct Tick.LiquidityNets memory"
															}
														},
														"id": 4410,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedLiquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3836,
														"src": "13013:23:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4411,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4342,
															"src": "13039:4:22",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4412,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakedLiquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3817,
														"src": "13039:23:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "13013:49:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4414,
												"nodeType": "ExpressionStatement",
												"src": "13013:49:22"
											}
										]
									},
									"documentation": {
										"id": 4316,
										"nodeType": "StructuredDocumentation",
										"src": "11154:869:22",
										"text": "@notice Transitions to next tick as needed by price movement\n @param self The mapping containing all tick information for initialized ticks\n @param tick The destination tick of the transition\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @param secondsPerLiquidityCumulativeX128 The current seconds per liquidity\n @param tickCumulative The tick * time elapsed since the pool was first initialized\n @param time The current block.timestamp\n @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n @return nets The amount of liquidity and staked liquidity added (subtracted) when tick is crossed from left to right (right to left)"
									},
									"id": 4416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cross",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4320,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "12052:40:22",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 4319,
													"keyType": {
														"id": 4317,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "12060:5:22",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "12052:27:22",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3832_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 4318,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3832,
														"src": "12069:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3832_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4322,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "12102:10:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4321,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "12102:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4324,
												"mutability": "mutable",
												"name": "feeGrowthGlobal0X128",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "12122:28:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12122:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4326,
												"mutability": "mutable",
												"name": "feeGrowthGlobal1X128",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "12160:28:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12160:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4328,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "12198:41:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4327,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "12198:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4330,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "12249:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4329,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "12249:5:22",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4332,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "12279:11:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 4331,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "12279:6:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4334,
												"mutability": "mutable",
												"name": "rewardGrowthGlobalX128",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "12300:30:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12300:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12042:294:22"
									},
									"returnParameters": {
										"id": 4338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4337,
												"mutability": "mutable",
												"name": "nets",
												"nodeType": "VariableDeclaration",
												"scope": 4416,
												"src": "12355:25:22",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LiquidityNets_$3837_memory_ptr",
													"typeString": "struct Tick.LiquidityNets"
												},
												"typeName": {
													"id": 4336,
													"name": "LiquidityNets",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3837,
													"src": "12355:13:22",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LiquidityNets_$3837_storage_ptr",
														"typeString": "struct Tick.LiquidityNets"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12354:27:22"
									},
									"scope": 4417,
									"src": "12028:1041:22",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4418,
							"src": "292:12779:22"
						}
					],
					"src": "45:13027:22"
				},
				"id": 22
			},
			"contracts/core/libraries/TickBitmap.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/TickBitmap.sol",
					"exportedSymbols": {
						"BitMath": [
							1578
						],
						"TickBitmap": [
							4673
						]
					},
					"id": 4674,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4419,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:23"
						},
						{
							"absolutePath": "contracts/core/libraries/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 4420,
							"nodeType": "ImportDirective",
							"scope": 4674,
							"sourceUnit": 1579,
							"src": "71:23:23",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4421,
								"nodeType": "StructuredDocumentation",
								"src": "96:243:23",
								"text": "@title Packed tick initialized state library\n @notice Stores a packed mapping of tick index to its initialized state\n @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word."
							},
							"fullyImplemented": true,
							"id": 4673,
							"linearizedBaseContracts": [
								4673
							],
							"name": "TickBitmap",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4449,
										"nodeType": "Block",
										"src": "775:79:23",
										"statements": [
											{
												"expression": {
													"id": 4438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4431,
														"name": "wordPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4427,
														"src": "785:7:23",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 4436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4434,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4424,
																	"src": "801:4:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 4435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "809:1:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "801:9:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 4433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "795:5:23",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 4432,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "795:5:23",
																"typeDescriptions": {}
															}
														},
														"id": 4437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "795:16:23",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "785:26:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 4439,
												"nodeType": "ExpressionStatement",
												"src": "785:26:23"
											},
											{
												"expression": {
													"id": 4447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4440,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4429,
														"src": "821:6:23",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 4445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4443,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4424,
																	"src": "836:4:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "323536",
																	"id": 4444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:3:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "836:10:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 4442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "830:5:23",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 4441,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "830:5:23",
																"typeDescriptions": {}
															}
														},
														"id": 4446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "830:17:23",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "821:26:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 4448,
												"nodeType": "ExpressionStatement",
												"src": "821:26:23"
											}
										]
									},
									"documentation": {
										"id": 4422,
										"nodeType": "StructuredDocumentation",
										"src": "364:325:23",
										"text": "@notice Computes the position in the mapping where the initialized bit for a tick lives\n @param tick The tick for which to compute the position\n @return wordPos The key in the mapping containing the word in which the bit is stored\n @return bitPos The bit position in the word where the flag is stored"
									},
									"id": 4450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "position",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4424,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4450,
												"src": "712:10:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4423,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "712:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:12:23"
									},
									"returnParameters": {
										"id": 4430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4427,
												"mutability": "mutable",
												"name": "wordPos",
												"nodeType": "VariableDeclaration",
												"scope": 4450,
												"src": "746:13:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 4426,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "746:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4429,
												"mutability": "mutable",
												"name": "bitPos",
												"nodeType": "VariableDeclaration",
												"scope": 4450,
												"src": "761:12:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4428,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "761:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:29:23"
									},
									"scope": 4673,
									"src": "694:160:23",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4492,
										"nodeType": "Block",
										"src": "1208:220:23",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 4467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 4465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4463,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4457,
																	"src": "1226:4:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 4464,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4459,
																	"src": "1233:11:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "1226:18:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 4466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1248:1:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1226:23:23",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 4462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1218:7:23",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 4468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:32:23",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4469,
												"nodeType": "ExpressionStatement",
												"src": "1218:32:23"
											},
											{
												"assignments": [
													4471,
													4473
												],
												"declarations": [
													{
														"constant": false,
														"id": 4471,
														"mutability": "mutable",
														"name": "wordPos",
														"nodeType": "VariableDeclaration",
														"scope": 4492,
														"src": "1295:13:23",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 4470,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "1295:5:23",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 4473,
														"mutability": "mutable",
														"name": "bitPos",
														"nodeType": "VariableDeclaration",
														"scope": 4492,
														"src": "1310:12:23",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 4472,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1310:5:23",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4479,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 4477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4475,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4457,
																"src": "1335:4:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 4476,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4459,
																"src": "1342:11:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "1335:18:23",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 4474,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4450,
														"src": "1326:8:23",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
															"typeString": "function (int24) pure returns (int16,uint8)"
														}
													},
													"id": 4478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1326:28:23",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
														"typeString": "tuple(int16,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1294:60:23"
											},
											{
												"assignments": [
													4481
												],
												"declarations": [
													{
														"constant": false,
														"id": 4481,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"scope": 4492,
														"src": "1364:12:23",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4480,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1364:7:23",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4485,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 4482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1379:1:23",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 4483,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4473,
														"src": "1384:6:23",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1379:11:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1364:26:23"
											},
											{
												"expression": {
													"id": 4490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4486,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4455,
															"src": "1400:4:23",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																"typeString": "mapping(int16 => uint256)"
															}
														},
														"id": 4488,
														"indexExpression": {
															"id": 4487,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4471,
															"src": "1405:7:23",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1400:13:23",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "^=",
													"rightHandSide": {
														"id": 4489,
														"name": "mask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4481,
														"src": "1417:4:23",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1400:21:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4491,
												"nodeType": "ExpressionStatement",
												"src": "1400:21:23"
											}
										]
									},
									"documentation": {
										"id": 4451,
										"nodeType": "StructuredDocumentation",
										"src": "860:245:23",
										"text": "@notice Flips the initialized state for a given tick from false to true, or vice versa\n @param self The mapping in which to flip the tick\n @param tick The tick to flip\n @param tickSpacing The spacing between usable ticks"
									},
									"id": 4493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4455,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4493,
												"src": "1128:38:23",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 4454,
													"keyType": {
														"id": 4452,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "1136:5:23",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "1128:25:23",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueType": {
														"id": 4453,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1145:7:23",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4457,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4493,
												"src": "1168:10:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4456,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1168:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4459,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 4493,
												"src": "1180:17:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4458,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1180:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:71:23"
									},
									"returnParameters": {
										"id": 4461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1208:0:23"
									},
									"scope": 4673,
									"src": "1110:318:23",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4671,
										"nodeType": "Block",
										"src": "2380:1707:23",
										"statements": [
											{
												"assignments": [
													4512
												],
												"declarations": [
													{
														"constant": false,
														"id": 4512,
														"mutability": "mutable",
														"name": "compressed",
														"nodeType": "VariableDeclaration",
														"scope": 4671,
														"src": "2390:16:23",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 4511,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2390:5:23",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4516,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 4515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4513,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4500,
														"src": "2409:4:23",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 4514,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4502,
														"src": "2416:11:23",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2409:18:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2390:37:23"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 4525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 4519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4517,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4500,
															"src": "2441:4:23",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 4518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2448:1:23",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2441:8:23",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 4524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 4522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4520,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4500,
																"src": "2453:4:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 4521,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4502,
																"src": "2460:11:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2453:18:23",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 4523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2475:1:23",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2453:23:23",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2441:35:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4529,
												"nodeType": "IfStatement",
												"src": "2437:53:23",
												"trueBody": {
													"expression": {
														"id": 4527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "2478:12:23",
														"subExpression": {
															"id": 4526,
															"name": "compressed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4512,
															"src": "2478:10:23",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 4528,
													"nodeType": "ExpressionStatement",
													"src": "2478:12:23"
												}
											},
											{
												"condition": {
													"id": 4530,
													"name": "lte",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4504,
													"src": "2540:3:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4669,
													"nodeType": "Block",
													"src": "3267:814:23",
													"statements": [
														{
															"assignments": [
																4597,
																4599
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4597,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 4669,
																	"src": "3379:13:23",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 4596,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "3379:5:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 4599,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 4669,
																	"src": "3394:12:23",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 4598,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3394:5:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4605,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 4603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4601,
																			"name": "compressed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4512,
																			"src": "3419:10:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 4602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3432:1:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3419:14:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 4600,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4450,
																	"src": "3410:8:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 4604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3410:24:23",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3378:56:23"
														},
														{
															"assignments": [
																4607
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4607,
																	"mutability": "mutable",
																	"name": "mask",
																	"nodeType": "VariableDeclaration",
																	"scope": 4669,
																	"src": "3506:12:23",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4606,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3506:7:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4616,
															"initialValue": {
																"id": 4615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "3521:20:23",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 4610,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 4608,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3524:1:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 4609,
																							"name": "bitPos",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4599,
																							"src": "3529:6:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "3524:11:23",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 4611,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3523:13:23",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 4612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3539:1:23",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3523:17:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4614,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3522:19:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3506:35:23"
														},
														{
															"assignments": [
																4618
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4618,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 4669,
																	"src": "3555:14:23",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4617,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3555:7:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4624,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 4619,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4498,
																		"src": "3572:4:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 4621,
																	"indexExpression": {
																		"id": 4620,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4597,
																		"src": "3577:7:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3572:13:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 4622,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4607,
																	"src": "3588:4:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3572:20:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3555:37:23"
														},
														{
															"expression": {
																"id": 4629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4625,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4509,
																	"src": "3717:11:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4626,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4618,
																		"src": "3731:6:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3741:1:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3731:11:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3717:25:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4630,
															"nodeType": "ExpressionStatement",
															"src": "3717:25:23"
														},
														{
															"expression": {
																"id": 4667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4631,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4507,
																	"src": "3866:4:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 4632,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4509,
																		"src": "3873:11:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 4665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 4662,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 4651,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 4649,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4512,
																							"src": "4007:10:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 4650,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4020:1:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4007:14:23",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 4660,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"arguments": [
																											{
																												"id": 4656,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "4035:5:23",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_uint8_$",
																													"typeString": "type(uint8)"
																												},
																												"typeName": {
																													"id": 4655,
																													"name": "uint8",
																													"nodeType": "ElementaryTypeName",
																													"src": "4035:5:23",
																													"typeDescriptions": {}
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_type$_t_uint8_$",
																													"typeString": "type(uint8)"
																												}
																											],
																											"id": 4654,
																											"name": "type",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967269,
																											"src": "4030:4:23",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 4657,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4030:11:23",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_meta_type_t_uint8",
																											"typeString": "type(uint8)"
																										}
																									},
																									"id": 4658,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "max",
																									"nodeType": "MemberAccess",
																									"src": "4030:15:23",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 4659,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4599,
																									"src": "4048:6:23",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "4030:24:23",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 4653,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4024:5:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 4652,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "4024:5:23",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 4661,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4024:31:23",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "4007:48:23",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 4663,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4006:50:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 4664,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4502,
																			"src": "4059:11:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "4006:64:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 4666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3873:197:23",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 4648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 4645,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 4635,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 4633,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4512,
																							"src": "3904:10:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 4634,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3917:1:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3904:14:23",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 4643,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"id": 4640,
																											"name": "masked",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4618,
																											"src": "3955:6:23",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 4638,
																											"name": "BitMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1578,
																											"src": "3927:7:23",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_BitMath_$1578_$",
																												"typeString": "type(library BitMath)"
																											}
																										},
																										"id": 4639,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "leastSignificantBit",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1577,
																										"src": "3927:27:23",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																											"typeString": "function (uint256) pure returns (uint8)"
																										}
																									},
																									"id": 4641,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3927:35:23",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 4642,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4599,
																									"src": "3965:6:23",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "3927:44:23",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 4637,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3921:5:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 4636,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3921:5:23",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 4644,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3921:51:23",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3904:68:23",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 4646,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3903:70:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 4647,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4502,
																			"src": "3976:11:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3903:84:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3866:204:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 4668,
															"nodeType": "ExpressionStatement",
															"src": "3866:204:23"
														}
													]
												},
												"id": 4670,
												"nodeType": "IfStatement",
												"src": "2536:1545:23",
												"trueBody": {
													"id": 4595,
													"nodeType": "Block",
													"src": "2545:716:23",
													"statements": [
														{
															"assignments": [
																4532,
																4534
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4532,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 4595,
																	"src": "2560:13:23",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 4531,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "2560:5:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 4534,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 4595,
																	"src": "2575:12:23",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 4533,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2575:5:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4538,
															"initialValue": {
																"arguments": [
																	{
																		"id": 4536,
																		"name": "compressed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4512,
																		"src": "2600:10:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 4535,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4450,
																	"src": "2591:8:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 4537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2591:20:23",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2559:52:23"
														},
														{
															"assignments": [
																4540
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4540,
																	"mutability": "mutable",
																	"name": "mask",
																	"nodeType": "VariableDeclaration",
																	"scope": 4595,
																	"src": "2692:12:23",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4539,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2692:7:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4552,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 4543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 4541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2708:1:23",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 4542,
																					"name": "bitPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4534,
																					"src": "2713:6:23",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "2708:11:23",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 4544,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2707:13:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 4545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2723:1:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2707:17:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 4547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2728:1:23",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 4548,
																				"name": "bitPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4534,
																				"src": "2733:6:23",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2728:11:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4550,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2727:13:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2707:33:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2692:48:23"
														},
														{
															"assignments": [
																4554
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4554,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 4595,
																	"src": "2754:14:23",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4553,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2754:7:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4560,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 4555,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4498,
																		"src": "2771:4:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 4557,
																	"indexExpression": {
																		"id": 4556,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4532,
																		"src": "2776:7:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2771:13:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 4558,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4540,
																	"src": "2787:4:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2771:20:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2754:37:23"
														},
														{
															"expression": {
																"id": 4565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4561,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4509,
																	"src": "2924:11:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4562,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4554,
																		"src": "2938:6:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2948:1:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2938:11:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2924:25:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4566,
															"nodeType": "ExpressionStatement",
															"src": "2924:25:23"
														},
														{
															"expression": {
																"id": 4593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4567,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4507,
																	"src": "3073:4:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 4568,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4509,
																		"src": "3080:11:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 4591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 4588,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 4583,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4512,
																						"src": "3209:10:23",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 4586,
																								"name": "bitPos",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4534,
																								"src": "3228:6:23",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 4585,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3222:5:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 4584,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3222:5:23",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 4587,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3222:13:23",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3209:26:23",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 4589,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3208:28:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 4590,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4502,
																			"src": "3239:11:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3208:42:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 4592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3080:170:23",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 4582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 4579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 4569,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4512,
																						"src": "3111:10:23",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 4577,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 4572,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4534,
																									"src": "3130:6:23",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"arguments": [
																										{
																											"id": 4575,
																											"name": "masked",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4554,
																											"src": "3166:6:23",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 4573,
																											"name": "BitMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1578,
																											"src": "3139:7:23",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_BitMath_$1578_$",
																												"typeString": "type(library BitMath)"
																											}
																										},
																										"id": 4574,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mostSignificantBit",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1416,
																										"src": "3139:26:23",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																											"typeString": "function (uint256) pure returns (uint8)"
																										}
																									},
																									"id": 4576,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3139:34:23",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "3130:43:23",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 4571,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3124:5:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 4570,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3124:5:23",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 4578,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3124:50:23",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3111:63:23",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 4580,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3110:65:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 4581,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4502,
																			"src": "3178:11:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3110:79:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3073:177:23",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 4594,
															"nodeType": "ExpressionStatement",
															"src": "3073:177:23"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4494,
										"nodeType": "StructuredDocumentation",
										"src": "1434:727:23",
										"text": "@notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n to the left (less than or equal to) or right (greater than) of the given tick\n @param self The mapping in which to compute the next initialized tick\n @param tick The starting tick\n @param tickSpacing The spacing between usable ticks\n @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks"
									},
									"id": 4672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextInitializedTickWithinOneWord",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4498,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4672,
												"src": "2217:38:23",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 4497,
													"keyType": {
														"id": 4495,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "2225:5:23",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "2217:25:23",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueType": {
														"id": 4496,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2234:7:23",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4500,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4672,
												"src": "2265:10:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4499,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2265:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4502,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 4672,
												"src": "2285:17:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4501,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2285:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4504,
												"mutability": "mutable",
												"name": "lte",
												"nodeType": "VariableDeclaration",
												"scope": 4672,
												"src": "2312:8:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2312:4:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:119:23"
									},
									"returnParameters": {
										"id": 4510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4507,
												"mutability": "mutable",
												"name": "next",
												"nodeType": "VariableDeclaration",
												"scope": 4672,
												"src": "2350:10:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4506,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2350:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4509,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 4672,
												"src": "2362:16:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2362:4:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:30:23"
									},
									"scope": 4673,
									"src": "2166:1921:23",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4674,
							"src": "339:3750:23"
						}
					],
					"src": "45:4045:23"
				},
				"id": 23
			},
			"contracts/core/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							5208
						]
					},
					"id": 5209,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4675,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:24"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4676,
								"nodeType": "StructuredDocumentation",
								"src": "78:235:24",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 5208,
							"linearizedBaseContracts": [
								5208
							],
							"name": "TickMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 4677,
										"nodeType": "StructuredDocumentation",
										"src": "336:108:24",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 4681,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 5208,
									"src": "449:42:24",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 4678,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "449:5:24",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 4680,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "484:7:24",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 4679,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "485:6:24",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4682,
										"nodeType": "StructuredDocumentation",
										"src": "497:107:24",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 4686,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 5208,
									"src": "609:44:24",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 4683,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "609:5:24",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 4685,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "644:9:24",
										"subExpression": {
											"id": 4684,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4681,
											"src": "645:8:24",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4687,
										"nodeType": "StructuredDocumentation",
										"src": "660:116:24",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 4690,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 5208,
									"src": "781:53:24",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 4688,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "781:7:24",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 4689,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "824:10:24",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4691,
										"nodeType": "StructuredDocumentation",
										"src": "840:116:24",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 4694,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 5208,
									"src": "961:92:24",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 4692,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "961:7:24",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 4693,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1004:49:24",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5067,
										"nodeType": "Block",
										"src": "1447:2495:24",
										"statements": [
											{
												"assignments": [
													4703
												],
												"declarations": [
													{
														"constant": false,
														"id": 4703,
														"mutability": "mutable",
														"name": "absTick",
														"nodeType": "VariableDeclaration",
														"scope": 5067,
														"src": "1457:15:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4702,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1457:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4723,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 4706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4704,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4697,
															"src": "1475:4:24",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 4705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1482:1:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1475:8:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 4719,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4697,
																		"src": "1526:4:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 4718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1519:6:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 4717,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1519:6:24",
																		"typeDescriptions": {}
																	}
																},
																"id": 4720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1519:12:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1511:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4715,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1511:7:24",
																"typeDescriptions": {}
															}
														},
														"id": 4721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1511:21:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1475:57:24",
													"trueExpression": {
														"arguments": [
															{
																"id": 4713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1494:13:24",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 4711,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4697,
																			"src": "1502:4:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 4710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1495:6:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 4709,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1495:6:24",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1495:12:24",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1486:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4707,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1486:7:24",
																"typeDescriptions": {}
															}
														},
														"id": 4714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1486:22:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1457:75:24"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4725,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4703,
																"src": "1550:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 4728,
																		"name": "MAX_TICK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4686,
																		"src": "1569:8:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 4727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1561:7:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 4726,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1561:7:24",
																		"typeDescriptions": {}
																	}
																},
																"id": 4729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1561:17:24",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1550:28:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 4731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1580:3:24",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 4724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1542:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:42:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4733,
												"nodeType": "ExpressionStatement",
												"src": "1542:42:24"
											},
											{
												"assignments": [
													4735
												],
												"declarations": [
													{
														"constant": false,
														"id": 4735,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 5067,
														"src": "1595:13:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1595:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4744,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4736,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4703,
																"src": "1611:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 4737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1621:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1611:13:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 4739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1628:1:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1611:18:24",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 4742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1669:35:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 4743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1611:93:24",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 4741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1632:34:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1595:109:24"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4745,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "1718:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 4746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1728:3:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1718:13:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1718:18:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4759,
												"nodeType": "IfStatement",
												"src": "1714:83:24",
												"trueBody": {
													"expression": {
														"id": 4757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4750,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "1738:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4751,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "1747:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 4752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1755:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1747:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4754,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1746:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1794:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1746:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1738:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4758,
													"nodeType": "ExpressionStatement",
													"src": "1738:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4760,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "1811:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 4761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1821:3:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1811:13:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1828:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1811:18:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4774,
												"nodeType": "IfStatement",
												"src": "1807:83:24",
												"trueBody": {
													"expression": {
														"id": 4772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4765,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "1831:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4766,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "1840:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 4767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1848:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1840:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4769,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1839:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1887:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1839:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1831:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4773,
													"nodeType": "ExpressionStatement",
													"src": "1831:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4775,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "1904:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 4776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1914:3:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1904:13:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1921:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1904:18:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4789,
												"nodeType": "IfStatement",
												"src": "1900:83:24",
												"trueBody": {
													"expression": {
														"id": 4787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4780,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "1924:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4781,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "1933:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 4782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1941:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1933:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4784,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1932:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1932:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1924:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4788,
													"nodeType": "ExpressionStatement",
													"src": "1924:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4790,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "1997:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 4791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:4:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1997:14:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2015:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1997:19:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4804,
												"nodeType": "IfStatement",
												"src": "1993:84:24",
												"trueBody": {
													"expression": {
														"id": 4802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4795,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "2018:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4796,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "2027:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 4797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2035:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2027:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4799,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2026:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2074:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2026:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2018:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4803,
													"nodeType": "ExpressionStatement",
													"src": "2018:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4805,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "2091:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 4806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2101:4:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2091:14:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2109:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2091:19:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4819,
												"nodeType": "IfStatement",
												"src": "2087:84:24",
												"trueBody": {
													"expression": {
														"id": 4817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4810,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "2112:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4811,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "2121:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 4812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2129:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2121:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4814,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2168:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2120:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2112:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4818,
													"nodeType": "ExpressionStatement",
													"src": "2112:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4820,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "2185:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 4821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2195:4:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2185:14:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2203:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2185:19:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4834,
												"nodeType": "IfStatement",
												"src": "2181:84:24",
												"trueBody": {
													"expression": {
														"id": 4832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4825,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "2206:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4826,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "2215:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 4827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2223:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2215:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4829,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2214:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2262:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2214:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2206:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4833,
													"nodeType": "ExpressionStatement",
													"src": "2206:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4835,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "2279:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 4836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2289:4:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2279:14:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2297:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2279:19:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4849,
												"nodeType": "IfStatement",
												"src": "2275:84:24",
												"trueBody": {
													"expression": {
														"id": 4847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4840,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "2300:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4841,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "2309:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 4842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2317:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2309:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4844,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2308:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2356:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2308:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2300:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4848,
													"nodeType": "ExpressionStatement",
													"src": "2300:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4850,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "2373:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 4851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2383:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2373:15:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2392:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2373:20:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4864,
												"nodeType": "IfStatement",
												"src": "2369:85:24",
												"trueBody": {
													"expression": {
														"id": 4862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4855,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "2395:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4856,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "2404:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 4857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2412:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2404:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4859,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2403:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2451:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2403:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2395:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4863,
													"nodeType": "ExpressionStatement",
													"src": "2395:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4865,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "2468:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 4866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2468:15:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2487:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2468:20:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4879,
												"nodeType": "IfStatement",
												"src": "2464:85:24",
												"trueBody": {
													"expression": {
														"id": 4877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4870,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "2490:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4871,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "2499:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 4872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2507:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2499:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4874,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2498:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2546:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2498:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2490:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4878,
													"nodeType": "ExpressionStatement",
													"src": "2490:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4880,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "2563:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 4881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2573:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2563:15:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2582:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2563:20:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4894,
												"nodeType": "IfStatement",
												"src": "2559:85:24",
												"trueBody": {
													"expression": {
														"id": 4892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4885,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "2585:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4886,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "2594:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 4887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2602:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2594:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4889,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2593:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2641:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2593:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2585:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4893,
													"nodeType": "ExpressionStatement",
													"src": "2585:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4895,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "2658:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 4896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2668:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2658:15:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2677:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2658:20:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4909,
												"nodeType": "IfStatement",
												"src": "2654:85:24",
												"trueBody": {
													"expression": {
														"id": 4907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4900,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "2680:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4901,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "2689:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 4902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2697:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2689:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4904,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2688:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2736:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2688:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2680:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4908,
													"nodeType": "ExpressionStatement",
													"src": "2680:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4910,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "2753:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 4911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2763:6:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2753:16:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2773:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2753:21:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4924,
												"nodeType": "IfStatement",
												"src": "2749:86:24",
												"trueBody": {
													"expression": {
														"id": 4922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4915,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "2776:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4916,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "2785:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 4917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2793:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2785:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4919,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2784:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2832:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2784:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2776:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4923,
													"nodeType": "ExpressionStatement",
													"src": "2776:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4925,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "2849:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 4926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2859:6:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2849:16:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2869:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2849:21:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4939,
												"nodeType": "IfStatement",
												"src": "2845:86:24",
												"trueBody": {
													"expression": {
														"id": 4937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4930,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "2872:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4931,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "2881:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 4932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2889:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2881:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4934,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2880:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2928:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2880:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2872:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4938,
													"nodeType": "ExpressionStatement",
													"src": "2872:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4940,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "2945:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 4941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2955:6:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2945:16:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2965:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2945:21:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4954,
												"nodeType": "IfStatement",
												"src": "2941:86:24",
												"trueBody": {
													"expression": {
														"id": 4952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4945,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "2968:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4946,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "2977:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 4947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2985:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2977:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4949,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2976:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2976:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2968:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4953,
													"nodeType": "ExpressionStatement",
													"src": "2968:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4955,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "3041:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 4956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3051:6:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3041:16:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3061:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3041:21:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4969,
												"nodeType": "IfStatement",
												"src": "3037:86:24",
												"trueBody": {
													"expression": {
														"id": 4967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4960,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "3064:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4961,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "3073:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 4962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3081:34:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3073:42:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4964,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3072:44:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3120:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3072:51:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3064:59:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4968,
													"nodeType": "ExpressionStatement",
													"src": "3064:59:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4970,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "3137:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 4971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3147:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3137:17:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3158:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3137:22:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4984,
												"nodeType": "IfStatement",
												"src": "3133:86:24",
												"trueBody": {
													"expression": {
														"id": 4982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4975,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "3161:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4976,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "3170:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 4977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3178:33:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3170:41:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3169:43:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3216:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3169:50:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3161:58:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4983,
													"nodeType": "ExpressionStatement",
													"src": "3161:58:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4985,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "3233:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 4986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3243:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3233:17:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3254:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:22:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4999,
												"nodeType": "IfStatement",
												"src": "3229:85:24",
												"trueBody": {
													"expression": {
														"id": 4997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4990,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "3257:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4991,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "3266:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 4992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3274:32:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3266:40:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4994,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3265:42:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3311:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3265:49:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3257:57:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4998,
													"nodeType": "ExpressionStatement",
													"src": "3257:57:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 5002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 5000,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "3328:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 5001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3338:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3328:17:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 5003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3349:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3328:22:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5014,
												"nodeType": "IfStatement",
												"src": "3324:83:24",
												"trueBody": {
													"expression": {
														"id": 5012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 5005,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "3352:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 5008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 5006,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "3361:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 5007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3369:30:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3361:38:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 5009,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3360:40:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 5010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3404:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3360:47:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3352:55:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 5013,
													"nodeType": "ExpressionStatement",
													"src": "3352:55:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 5017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 5015,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4703,
															"src": "3421:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 5016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3431:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3421:17:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 5018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3442:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3421:22:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5029,
												"nodeType": "IfStatement",
												"src": "3417:78:24",
												"trueBody": {
													"expression": {
														"id": 5027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 5020,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "3445:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 5023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 5021,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4735,
																			"src": "3454:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 5022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:25:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3454:33:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 5024,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3453:35:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 5025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3492:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3453:42:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3445:50:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 5028,
													"nodeType": "ExpressionStatement",
													"src": "3445:50:24"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 5032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5030,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4697,
														"src": "3510:4:24",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 5031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3517:1:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3510:8:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5043,
												"nodeType": "IfStatement",
												"src": "3506:47:24",
												"trueBody": {
													"expression": {
														"id": 5041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 5033,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4735,
															"src": "3520:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 5036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3533:7:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 5035,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3533:7:24",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 5034,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3528:4:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 5037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3528:13:24",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 5038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3528:17:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 5039,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4735,
																"src": "3548:5:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3528:25:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3520:33:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 5042,
													"nodeType": "ExpressionStatement",
													"src": "3520:33:24"
												}
											},
											{
												"expression": {
													"id": 5065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5044,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4700,
														"src": "3863:12:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 5063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 5049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 5047,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4735,
																				"src": "3887:5:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 5048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3896:2:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3887:11:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 5050,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3886:13:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 5058,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 5056,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 5051,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4735,
																						"src": "3903:5:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 5054,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 5052,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3912:1:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 5053,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3917:2:24",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3912:7:24",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 5055,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3911:9:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3903:17:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 5057,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3924:1:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3903:22:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 5060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3932:1:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 5061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3903:30:24",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 5059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3928:1:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 5062,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3902:32:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3886:48:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 5046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3878:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 5045,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3878:7:24",
																"typeDescriptions": {}
															}
														},
														"id": 5064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3878:57:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3863:72:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 5066,
												"nodeType": "ExpressionStatement",
												"src": "3863:72:24"
											}
										]
									},
									"documentation": {
										"id": 4695,
										"nodeType": "StructuredDocumentation",
										"src": "1060:297:24",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 5068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4697,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 5068,
												"src": "1390:10:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4696,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1390:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:12:24"
									},
									"returnParameters": {
										"id": 4701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4700,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 5068,
												"src": "1425:20:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4699,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:22:24"
									},
									"scope": 5208,
									"src": "1362:2580:24",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5206,
										"nodeType": "Block",
										"src": "4446:4196:24",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 5083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 5079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 5077,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5071,
																	"src": "4563:12:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 5078,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4690,
																	"src": "4579:14:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4563:30:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 5082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 5080,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5071,
																	"src": "4597:12:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 5081,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4694,
																	"src": "4612:14:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4597:29:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4563:63:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 5084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:3:24",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 5076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4555:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:77:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5086,
												"nodeType": "ExpressionStatement",
												"src": "4555:77:24"
											},
											{
												"assignments": [
													5088
												],
												"declarations": [
													{
														"constant": false,
														"id": 5088,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 5206,
														"src": "4642:13:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5087,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4642:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5095,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 5091,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5071,
																"src": "4666:12:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 5090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4658:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 5089,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4658:7:24",
																"typeDescriptions": {}
															}
														},
														"id": 5092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4658:21:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 5093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4683:2:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4658:27:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4642:43:24"
											},
											{
												"assignments": [
													5097
												],
												"declarations": [
													{
														"constant": false,
														"id": 5097,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 5206,
														"src": "4696:9:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5096,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4696:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5099,
												"initialValue": {
													"id": 5098,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5088,
													"src": "4708:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4696:17:24"
											},
											{
												"assignments": [
													5101
												],
												"declarations": [
													{
														"constant": false,
														"id": 5101,
														"mutability": "mutable",
														"name": "msb",
														"nodeType": "VariableDeclaration",
														"scope": 5206,
														"src": "4723:11:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4723:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5103,
												"initialValue": {
													"hexValue": "30",
													"id": 5102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4737:1:24",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4723:15:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4758:139:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4772:58:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:1:24",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4791:1:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4794:34:24",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4788:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4788:41:24"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:49:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4776:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4843:17:24",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4853:3:24"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4858:1:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4850:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:10:24"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4843:3:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4873:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4882:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4885:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4873:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "4843:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "4853:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "4791:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "4873:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "4885:1:24",
														"valueSize": 1
													}
												],
												"id": 5104,
												"nodeType": "InlineAssembly",
												"src": "4749:148:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4915:123:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4929:42:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:24",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4948:1:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4951:18:24",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4945:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4945:25:24"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:33:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4933:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4984:17:24",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4994:3:24"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4999:1:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4991:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:10:24"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5014:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5023:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5026:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5014:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "4984:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "4994:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "4948:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5014:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5026:1:24",
														"valueSize": 1
													}
												],
												"id": 5105,
												"nodeType": "InlineAssembly",
												"src": "4906:132:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5056:115:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5070:34:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5083:1:24",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5089:1:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:10:24",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5086:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:17:24"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5079:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:25:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5074:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5117:17:24",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:24"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5132:1:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5124:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:10:24"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5147:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5159:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5147:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5117:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5127:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5089:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5147:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5159:1:24",
														"valueSize": 1
													}
												],
												"id": 5106,
												"nodeType": "InlineAssembly",
												"src": "5047:124:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5189:111:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5203:30:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5216:1:24",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5222:1:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5225:6:24",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:13:24"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5212:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:21:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5207:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5246:17:24",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5256:3:24"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5261:1:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5253:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:10:24"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5246:3:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5285:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5288:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5281:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5276:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5246:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5256:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5222:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5276:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5288:1:24",
														"valueSize": 1
													}
												],
												"id": 5107,
												"nodeType": "InlineAssembly",
												"src": "5180:120:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5318:109:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5332:28:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5345:1:24",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5351:1:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5354:4:24",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5348:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5348:11:24"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5341:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:19:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5336:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5373:17:24",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5383:3:24"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5388:1:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5380:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:10:24"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5403:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5412:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5415:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5403:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5373:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5383:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5351:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5403:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5415:1:24",
														"valueSize": 1
													}
												],
												"id": 5108,
												"nodeType": "InlineAssembly",
												"src": "5309:118:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5445:108:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5459:27:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5472:1:24",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5478:1:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:3:24",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5475:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5475:10:24"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:18:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5463:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5499:17:24",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5509:3:24"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5514:1:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5506:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:10:24"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5529:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5538:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5541:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5529:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5499:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5509:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5478:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5529:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5541:1:24",
														"valueSize": 1
													}
												],
												"id": 5109,
												"nodeType": "InlineAssembly",
												"src": "5436:117:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5571:108:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5585:27:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5598:1:24",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5604:1:24"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5607:3:24",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5601:2:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5601:10:24"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:18:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5589:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5625:17:24",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5635:3:24"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5640:1:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5632:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:10:24"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5664:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5667:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5655:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5625:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5635:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5604:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5655:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5667:1:24",
														"valueSize": 1
													}
												],
												"id": 5110,
												"nodeType": "InlineAssembly",
												"src": "5562:117:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5697:73:24",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5711:19:24",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5723:1:24"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:3:24",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5720:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:10:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5715:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5743:17:24",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5753:3:24"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5758:1:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5750:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:10:24"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5743:3:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5743:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5101,
														"isOffset": false,
														"isSlot": false,
														"src": "5753:3:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5723:1:24",
														"valueSize": 1
													}
												],
												"id": 5111,
												"nodeType": "InlineAssembly",
												"src": "5688:82:24"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5112,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5101,
														"src": "5784:3:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 5113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5791:3:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5784:10:24",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 5131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 5124,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5097,
															"src": "5835:1:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5125,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5088,
																"src": "5839:5:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 5128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 5126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5849:3:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 5127,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5101,
																			"src": "5855:3:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5849:9:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 5129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5848:11:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5839:20:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5835:24:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 5132,
													"nodeType": "ExpressionStatement",
													"src": "5835:24:24"
												},
												"id": 5133,
												"nodeType": "IfStatement",
												"src": "5780:79:24",
												"trueBody": {
													"expression": {
														"id": 5122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 5115,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5097,
															"src": "5796:1:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5116,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5088,
																"src": "5800:5:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 5119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 5117,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5101,
																			"src": "5810:3:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 5118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5816:3:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5810:9:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 5120,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5809:11:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5800:20:24",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5796:24:24",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 5123,
													"nodeType": "ExpressionStatement",
													"src": "5796:24:24"
												}
											},
											{
												"assignments": [
													5135
												],
												"declarations": [
													{
														"constant": false,
														"id": 5135,
														"mutability": "mutable",
														"name": "log_2",
														"nodeType": "VariableDeclaration",
														"scope": 5206,
														"src": "5870:12:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 5134,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5870:6:24",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5145,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 5138,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5101,
																			"src": "5893:3:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 5137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5886:6:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 5136,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5886:6:24",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 5139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5886:11:24",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 5140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5900:3:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5886:17:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5142,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5885:19:24",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 5143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5908:2:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5885:25:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5870:40:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5930:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5944:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5953:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5962:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5965:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5958:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5944:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5981:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5999:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5990:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "5990:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5985:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6014:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6026:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6037:2:24",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6041:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6033:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6033:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6023:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6014:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6057:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6066:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6069:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6062:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6057:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6014:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6026:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5944:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5962:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5965:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "5999:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6057:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6069:1:24",
														"valueSize": 1
													}
												],
												"id": 5146,
												"nodeType": "InlineAssembly",
												"src": "5921:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6099:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6113:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6122:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6131:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6134:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6127:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6118:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6113:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6150:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6163:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6168:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6154:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6183:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6195:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6206:2:24",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6210:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6192:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6183:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6226:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6235:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6238:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6226:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6183:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6195:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6113:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6131:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6134:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6168:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6226:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6238:1:24",
														"valueSize": 1
													}
												],
												"id": 5147,
												"nodeType": "InlineAssembly",
												"src": "6090:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6268:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6282:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6300:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6303:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6296:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6296:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6287:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6282:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6319:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6332:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6337:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6323:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6352:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6364:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6375:2:24",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6379:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6361:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6352:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6395:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6404:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6407:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6395:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6352:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6364:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6282:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6300:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6303:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6337:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6395:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6407:1:24",
														"valueSize": 1
													}
												],
												"id": 5148,
												"nodeType": "InlineAssembly",
												"src": "6259:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6437:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6451:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6460:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6469:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6472:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6465:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6465:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6456:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6451:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6488:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6501:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6506:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6497:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6492:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6533:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6544:2:24",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6548:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6540:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6530:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6521:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6564:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6573:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6576:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6564:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6521:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6533:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6451:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6469:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6472:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6506:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6564:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6576:1:24",
														"valueSize": 1
													}
												],
												"id": 5149,
												"nodeType": "InlineAssembly",
												"src": "6428:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6606:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6620:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6629:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6638:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6641:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6620:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6657:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6670:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6675:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6666:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6661:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6690:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6702:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6713:2:24",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6717:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6709:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6709:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6699:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6690:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6733:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6742:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6745:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6738:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6738:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6733:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6690:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6702:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6620:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6638:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6641:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6675:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6733:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6745:1:24",
														"valueSize": 1
													}
												],
												"id": 5150,
												"nodeType": "InlineAssembly",
												"src": "6597:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6775:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6807:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6810:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6803:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6803:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6826:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6839:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6844:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6835:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6830:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6859:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6871:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6882:2:24",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6886:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6868:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6859:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6902:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6911:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6914:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6907:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6902:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6859:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "6871:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6789:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6807:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6810:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6844:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6902:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6914:1:24",
														"valueSize": 1
													}
												],
												"id": 5151,
												"nodeType": "InlineAssembly",
												"src": "6766:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6944:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6958:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6967:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6976:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6979:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6972:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6963:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6958:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6995:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7008:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7013:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7004:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6999:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7028:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7040:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7051:2:24",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7055:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7047:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7028:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7071:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7080:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7083:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7071:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7028:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7040:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6958:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6976:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "6979:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7013:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7071:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7083:1:24",
														"valueSize": 1
													}
												],
												"id": 5152,
												"nodeType": "InlineAssembly",
												"src": "6935:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7113:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7127:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7136:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7145:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7148:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7141:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7141:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7132:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7127:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7164:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7177:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7182:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7173:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7173:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7168:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7197:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7209:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7220:2:24",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7224:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7216:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7206:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7197:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7240:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7249:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7252:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7245:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7240:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7197:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7209:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7127:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7145:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7148:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7182:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7240:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7252:1:24",
														"valueSize": 1
													}
												],
												"id": 5153,
												"nodeType": "InlineAssembly",
												"src": "7104:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7282:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7296:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7305:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7314:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7317:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7310:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7301:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7296:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7333:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7346:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7351:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7337:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7366:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7378:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7389:2:24",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7393:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7385:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7375:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7366:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7409:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7418:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7421:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7414:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7409:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7366:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7378:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7296:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7314:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7317:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7351:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7409:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7421:1:24",
														"valueSize": 1
													}
												],
												"id": 5154,
												"nodeType": "InlineAssembly",
												"src": "7273:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7451:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7465:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7474:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7483:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7486:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7479:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7479:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7470:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7465:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7502:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7515:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7520:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7511:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7506:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7535:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7547:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7558:2:24",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7562:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7544:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7535:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7578:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7587:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7590:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7583:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7578:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7535:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7547:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7465:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7483:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7486:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7520:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7578:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7590:1:24",
														"valueSize": 1
													}
												],
												"id": 5155,
												"nodeType": "InlineAssembly",
												"src": "7442:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7620:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7634:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7643:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7652:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7655:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7648:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7648:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7634:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7671:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7689:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7675:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7704:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7716:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7727:2:24",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7731:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7713:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7704:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7747:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7756:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7759:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7752:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7752:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7747:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7704:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7634:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7652:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7655:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7689:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7747:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7759:1:24",
														"valueSize": 1
													}
												],
												"id": 5156,
												"nodeType": "InlineAssembly",
												"src": "7611:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7789:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7803:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7821:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7824:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7803:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7840:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7853:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7858:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7844:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7873:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7885:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7896:2:24",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7900:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7882:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7873:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7916:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7925:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7928:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7921:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7916:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7873:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "7885:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7803:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7821:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7824:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7858:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7916:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7928:1:24",
														"valueSize": 1
													}
												],
												"id": 5157,
												"nodeType": "InlineAssembly",
												"src": "7780:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7958:151:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7972:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7981:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7990:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7993:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7986:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7986:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7977:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7972:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8009:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8022:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8027:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8018:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8013:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8054:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8065:2:24",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8069:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8061:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8051:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8051:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8042:5:24"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8085:14:24",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8094:1:24"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8097:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8090:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8090:9:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8085:1:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "8042:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "8054:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7972:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7990:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "7993:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "8027:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "8085:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "8097:1:24",
														"valueSize": 1
													}
												],
												"id": 5158,
												"nodeType": "InlineAssembly",
												"src": "7949:160:24"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8127:124:24",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8141:24:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8150:3:24",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8159:1:24"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8162:1:24"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:9:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8146:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:19:24"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8141:1:24"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8178:20:24",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8191:3:24",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:24"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8187:3:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8187:11:24"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8182:1:24",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:30:24",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8223:5:24"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8234:2:24",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8238:1:24"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:24"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8230:10:24"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8220:2:24"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:21:24"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8211:5:24"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5135,
														"isOffset": false,
														"isSlot": false,
														"src": "8223:5:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "8141:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "8159:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "8162:1:24",
														"valueSize": 1
													},
													{
														"declaration": 5097,
														"isOffset": false,
														"isSlot": false,
														"src": "8196:1:24",
														"valueSize": 1
													}
												],
												"id": 5159,
												"nodeType": "InlineAssembly",
												"src": "8118:133:24"
											},
											{
												"assignments": [
													5161
												],
												"declarations": [
													{
														"constant": false,
														"id": 5161,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nodeType": "VariableDeclaration",
														"scope": 5206,
														"src": "8261:20:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 5160,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8261:6:24",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5165,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5162,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5135,
														"src": "8284:5:24",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 5163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8292:24:24",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8284:32:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8261:55:24"
											},
											{
												"assignments": [
													5167
												],
												"declarations": [
													{
														"constant": false,
														"id": 5167,
														"mutability": "mutable",
														"name": "tickLow",
														"nodeType": "VariableDeclaration",
														"scope": 5206,
														"src": "8345:13:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 5166,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8345:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5177,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 5172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 5170,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5161,
																			"src": "8368:13:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 5171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8384:37:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8368:53:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 5173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8367:55:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 5174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8426:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8367:62:24",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8361:5:24",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 5168,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8361:5:24",
															"typeDescriptions": {}
														}
													},
													"id": 5176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8361:69:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8345:85:24"
											},
											{
												"assignments": [
													5179
												],
												"declarations": [
													{
														"constant": false,
														"id": 5179,
														"mutability": "mutable",
														"name": "tickHi",
														"nodeType": "VariableDeclaration",
														"scope": 5206,
														"src": "8440:12:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 5178,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8440:5:24",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5189,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 5184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 5182,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5161,
																			"src": "8462:13:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 5183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8478:39:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8462:55:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 5185,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8461:57:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 5186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8522:3:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8461:64:24",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8455:5:24",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 5180,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8455:5:24",
															"typeDescriptions": {}
														}
													},
													"id": 5188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8455:71:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8440:86:24"
											},
											{
												"expression": {
													"id": 5204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5190,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5074,
														"src": "8537:4:24",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 5193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5191,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5167,
																"src": "8544:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 5192,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5179,
																"src": "8555:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8544:17:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 5199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 5196,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5179,
																			"src": "8593:6:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 5195,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5068,
																		"src": "8574:18:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 5197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8574:26:24",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 5198,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5071,
																	"src": "8604:12:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8574:42:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 5201,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5167,
																"src": "8628:7:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 5202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8574:61:24",
															"trueExpression": {
																"id": 5200,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5179,
																"src": "8619:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 5203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8544:91:24",
														"trueExpression": {
															"id": 5194,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5167,
															"src": "8564:7:24",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8537:98:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 5205,
												"nodeType": "ExpressionStatement",
												"src": "8537:98:24"
											}
										]
									},
									"documentation": {
										"id": 5069,
										"nodeType": "StructuredDocumentation",
										"src": "3948:408:24",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 5207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5071,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 5207,
												"src": "4389:20:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 5070,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4389:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4388:22:24"
									},
									"returnParameters": {
										"id": 5075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5074,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 5207,
												"src": "4434:10:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 5073,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4434:5:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:12:24"
									},
									"scope": 5208,
									"src": "4361:4281:24",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5209,
							"src": "313:8331:24"
						}
					],
					"src": "45:8600:24"
				},
				"id": 24
			},
			"contracts/core/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20Minimal": [
							735
						],
						"TransferHelper": [
							5259
						]
					},
					"id": 5260,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5210,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:25"
						},
						{
							"absolutePath": "contracts/core/interfaces/IERC20Minimal.sol",
							"file": "../interfaces/IERC20Minimal.sol",
							"id": 5211,
							"nodeType": "ImportDirective",
							"scope": 5260,
							"sourceUnit": 736,
							"src": "71:41:25",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 5212,
								"nodeType": "StructuredDocumentation",
								"src": "114:139:25",
								"text": "@title TransferHelper\n @notice Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false"
							},
							"fullyImplemented": true,
							"id": 5259,
							"linearizedBaseContracts": [
								5259
							],
							"name": "TransferHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 5257,
										"nodeType": "Block",
										"src": "675:225:25",
										"statements": [
											{
												"assignments": [
													5223,
													5225
												],
												"declarations": [
													{
														"constant": false,
														"id": 5223,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 5257,
														"src": "686:12:25",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 5222,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "686:4:25",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 5225,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 5257,
														"src": "700:17:25",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 5224,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "700:5:25",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5237,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 5230,
																			"name": "IERC20Minimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 735,
																			"src": "767:13:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$735_$",
																				"typeString": "type(contract IERC20Minimal)"
																			}
																		},
																		"id": 5231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 684,
																		"src": "767:22:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20Minimal.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 5232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "767:31:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 5233,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5217,
																	"src": "800:2:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 5234,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5219,
																	"src": "804:5:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 5228,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "744:3:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 5229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "744:22:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 5235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "744:66:25",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 5226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5215,
															"src": "733:5:25",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 5227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "733:10:25",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 5236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "733:78:25",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "685:126:25"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 5253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5239,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5223,
																"src": "829:7:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 5251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 5243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 5240,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5225,
																					"src": "841:4:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 5241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "841:11:25",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 5242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "856:1:25",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "841:16:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 5246,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5225,
																					"src": "872:4:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 5248,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "879:4:25",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 5247,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "879:4:25",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 5249,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "878:6:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 5244,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "861:3:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 5245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "861:10:25",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 5250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "861:24:25",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "841:44:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 5252,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "840:46:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "829:57:25",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5446",
															"id": 5254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "888:4:25",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cebb2b2e317200ffcf39e4291b6400d95f06e73adfd258bd495d227b7d846ff0",
																"typeString": "literal_string \"TF\""
															},
															"value": "TF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cebb2b2e317200ffcf39e4291b6400d95f06e73adfd258bd495d227b7d846ff0",
																"typeString": "literal_string \"TF\""
															}
														],
														"id": 5238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "821:7:25",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "821:72:25",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5256,
												"nodeType": "ExpressionStatement",
												"src": "821:72:25"
											}
										]
									},
									"documentation": {
										"id": 5213,
										"nodeType": "StructuredDocumentation",
										"src": "282:315:25",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Calls transfer on token contract, errors with TF if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 5258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5215,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 5258,
												"src": "624:13:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5217,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 5258,
												"src": "639:10:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5219,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 5258,
												"src": "651:13:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:42:25"
									},
									"returnParameters": {
										"id": 5221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:0:25"
									},
									"scope": 5259,
									"src": "602:298:25",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5260,
							"src": "253:649:25"
						}
					],
					"src": "45:858:25"
				},
				"id": 25
			},
			"contracts/core/libraries/UnsafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/UnsafeMath.sol",
					"exportedSymbols": {
						"UnsafeMath": [
							5275
						]
					},
					"id": 5276,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5261,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:26"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 5262,
								"nodeType": "StructuredDocumentation",
								"src": "71:173:26",
								"text": "@title Math functions that do not check inputs or outputs\n @notice Contains methods that perform common math functions but do not do any overflow or underflow checks"
							},
							"fullyImplemented": true,
							"id": 5275,
							"linearizedBaseContracts": [
								5275
							],
							"name": "UnsafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 5273,
										"nodeType": "Block",
										"src": "571:86:26",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "590:61:26",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "604:37:26",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "617:1:26"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "620:1:26"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:26"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "613:9:26"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "631:1:26"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "634:1:26"
																					}
																				],
																				"functionName": {
																					"name": "mod",
																					"nodeType": "YulIdentifier",
																					"src": "627:3:26"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "627:9:26"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "638:1:26",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "624:2:26"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "624:16:26"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:26"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:32:26"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nodeType": "YulIdentifier",
																	"src": "604:1:26"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5265,
														"isOffset": false,
														"isSlot": false,
														"src": "617:1:26",
														"valueSize": 1
													},
													{
														"declaration": 5265,
														"isOffset": false,
														"isSlot": false,
														"src": "631:1:26",
														"valueSize": 1
													},
													{
														"declaration": 5267,
														"isOffset": false,
														"isSlot": false,
														"src": "620:1:26",
														"valueSize": 1
													},
													{
														"declaration": 5267,
														"isOffset": false,
														"isSlot": false,
														"src": "634:1:26",
														"valueSize": 1
													},
													{
														"declaration": 5270,
														"isOffset": false,
														"isSlot": false,
														"src": "604:1:26",
														"valueSize": 1
													}
												],
												"id": 5272,
												"nodeType": "InlineAssembly",
												"src": "581:70:26"
											}
										]
									},
									"documentation": {
										"id": 5263,
										"nodeType": "StructuredDocumentation",
										"src": "269:218:26",
										"text": "@notice Returns ceil(x / y)\n @dev division by 0 has unspecified behavior, and must be checked externally\n @param x The dividend\n @param y The divisor\n @return z The quotient, ceil(x / y)"
									},
									"id": 5274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divRoundingUp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5265,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 5274,
												"src": "515:9:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5267,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 5274,
												"src": "526:9:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:22:26"
									},
									"returnParameters": {
										"id": 5271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5270,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 5274,
												"src": "560:9:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:11:26"
									},
									"scope": 5275,
									"src": "492:165:26",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5276,
							"src": "244:415:26"
						}
					],
					"src": "45:615:26"
				},
				"id": 26
			}
		}
	}
}