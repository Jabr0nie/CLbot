{
	"id": "d38bb363f0fd1b71b1fd6d5b5657d3b1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/core/VeloStake.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity =0.7.6;\r\npragma abicoder v2;\r\n\r\nimport \"./interfaces/ICLPool.sol\";\r\nimport \"./libraries/LowGasSafeMath.sol\";\r\nimport \"./libraries/SafeCast.sol\";\r\nimport \"./libraries/Tick.sol\";\r\nimport \"./libraries/TickBitmap.sol\";\r\nimport \"./libraries/Position.sol\";\r\n\r\nimport \"./libraries/FullMath.sol\";\r\nimport \"./libraries/FixedPoint128.sol\";\r\nimport \"./libraries/TransferHelper.sol\";\r\nimport \"./libraries/TickMath.sol\";\r\nimport \"./libraries/LiquidityMath.sol\";\r\nimport \"./libraries/LiquidityAmounts.sol\";\r\nimport \"./libraries/SqrtPriceMath.sol\";\r\n\r\nimport \"./interfaces/ICLFactory.sol\";\r\nimport \"./interfaces/IFactoryRegistry.sol\";\r\nimport \"./interfaces/IERC20Minimal.sol\";\r\nimport \"./interfaces/callback/ICLMintCallback.sol\";\r\nimport \"./interfaces/callback/ICLSwapCallback.sol\";\r\nimport \"contracts/libraries/VelodromeTimeLibrary.sol\";\r\nimport \"./INonfungiblePositionManager.sol\";\r\n\r\nimport {ERC721Holder} from \"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\";\r\n\r\ninterface Oracle {\r\n    function GetPrice(address pooladdress) external view returns (uint256 price);\r\n    function getAmountsforLiquidity(address pool, uint256 usdAmount) external view returns (uint amount0, uint amount1);\r\n}\r\n\r\ninterface IERC721 {\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\r\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n    function approve(address to, uint256 tokenId) external;\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n\r\ninterface ICLGauge {\r\n    event NotifyReward(address indexed from, uint256 amount);\r\n    event Deposit(address indexed user, uint256 indexed tokenId, uint128 indexed liquidityToStake);\r\n    event Withdraw(address indexed user, uint256 indexed tokenId, uint128 indexed liquidityToStake);\r\n    event ClaimFees(address indexed from, uint256 claimed0, uint256 claimed1);\r\n    event ClaimRewards(address indexed from, uint256 amount);\r\n    function nft() external view returns (INonfungiblePositionManager);\r\n    function voter() external view returns (IVoter);\r\n    function pool() external view returns (ICLPool);\r\n    function feesVotingReward() external view returns (address);\r\n    function periodFinish() external view returns (uint256);\r\n    function rewardRate() external view returns (uint256);\r\n    function rewards(uint256 tokenId) external view returns (uint256);\r\n    function lastUpdateTime(uint256 tokenId) external view returns (uint256);\r\n    function rewardRateByEpoch(uint256) external view returns (uint256);\r\n    function fees0() external view returns (uint256);\r\n    function fees1() external view returns (uint256);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function tickSpacing() external view returns (int24);\r\n    function left() external view returns (uint256 _left);\r\n    function rewardToken() external view returns (address);\r\n    function isPool() external view returns (bool);\r\n    function rewardGrowthInside(uint256 tokenId) external view returns (uint256);\r\n    function earned(address account, uint256 tokenId) external view returns (uint256);\r\n    function getReward(address account) external;\r\n    function getReward(uint256 tokenId) external;\r\n    function notifyRewardAmount(uint256 amount) external;\r\n    function notifyRewardWithoutClaim(uint256 amount) external;\r\n    function deposit(uint256 tokenId) external;\r\n    function withdraw(uint256 tokenId) external;\r\n    function stakedValues(address depositor) external view returns (uint256[] memory);\r\n    function stakedByIndex(address depositor, uint256 index) external view returns (uint256);\r\n    function stakedContains(address depositor, uint256 tokenId) external view returns (bool);\r\n    function stakedLength(address depositor) external view returns (uint256);\r\n}\r\n\r\ninterface IERC20 {\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n\r\ncontract V3BotStaking is ERC721Holder{\r\n    address public pool; // token0/token1 pool address\r\n    address public token0; // token0 on Optimism\r\n    address public token1; // token1 on Optimism\r\n    address public farmNFT;\r\n    uint256 public tokenId;\r\n    address public admin;\r\n    int24 public tickSpacing;\r\n    int24 public spaceMultiplier;\r\n    address public oracle = 0x9465eD15b70E8A534663530C4fCc92E22B8F6032;\r\n\r\n    struct Deposit {\r\n        address owner;\r\n        uint128 liquidity;\r\n        address token0;\r\n        address token1;\r\n    }\r\n\r\n    /// @dev deposits[tokenId] => Deposit\r\n    mapping(uint256 => Deposit) public deposits;\r\n\r\n        constructor() {\r\n        admin = msg.sender;\r\n    }\r\n\r\n    function _newAdmin(address newAdmin) external {\r\n        require(msg.sender == admin, \"Only owner can do this\");\r\n        admin = newAdmin;\r\n    }\r\n\r\n    function _newtokenID(uint256 newTokenId) external {\r\n        require(msg.sender == admin, \"Only owner can do this\");\r\n        tokenId = newTokenId;\r\n    }\r\n// Us ICLGuage to stake the token\r\n//use the \r\n    function stake() public payable {\r\n        IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).transferFrom(msg.sender, address(this), tokenId);\r\n        IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).approve(msg.sender, tokenId);\r\n        IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).approve(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF, tokenId);\r\n        ICLGauge(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF).deposit(tokenId);\r\n    }\r\n\r\n\r\n    function withdraw() public payable {\r\n        ICLGauge(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF).withdraw(tokenId);\r\n    }\r\n\r\n    function sendNFTBack() public payable {\r\n        IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).transferFrom(address(this), msg.sender, tokenId);\r\n    }\r\n\r\n    function _transferToAdmin(address Token) external {\r\n        uint256 value = IERC20Minimal(Token).balanceOf(address(this));\r\n        IERC20Minimal(Token).transfer(admin, value);\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC721Receiver.sol\";\n\n  /**\n   * @dev Implementation of the {IERC721Receiver} interface.\n   *\n   * Accepts all token transfers. \n   * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n   */\ncontract ERC721Holder is IERC721Receiver {\n\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"contracts/core/INonfungiblePositionManager.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.5;\r\npragma abicoder v2;\r\n\r\n\r\n/// @title Non-fungible token for positions\r\n/// @notice Wraps CL positions in a non-fungible token interface which allows for them to be transferred\r\n/// and authorized.\r\ninterface INonfungiblePositionManager\r\n{\r\n    /// @notice Emitted when liquidity is increased for a position NFT\r\n    /// @dev Also emitted when a token is minted\r\n    /// @param tokenId The ID of the token for which liquidity was increased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\r\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\r\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\r\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when liquidity is decreased for a position NFT\r\n    /// @param tokenId The ID of the token for which liquidity was decreased\r\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\r\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\r\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\r\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when tokens are collected for a position NFT\r\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\r\n    /// @param tokenId The ID of the token for which underlying tokens were collected\r\n    /// @param recipient The address of the account that received the collected tokens\r\n    /// @param amount0 The amount of token0 owed to the position that was collected\r\n    /// @param amount1 The amount of token1 owed to the position that was collected\r\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\r\n    /// @notice Emitted when a new Token Descriptor is set\r\n    /// @param tokenDescriptor Address of the new Token Descriptor\r\n    event TokenDescriptorChanged(address indexed tokenDescriptor);\r\n    /// @notice Emitted when a new Owner is set\r\n    /// @param owner Address of the new Owner\r\n    event TransferOwnership(address indexed owner);\r\n\r\n    /// @notice Returns the position information associated with a given token ID.\r\n    /// @dev Throws if the token ID is not valid.\r\n    /// @param tokenId The ID of the token that represents the position\r\n    /// @return nonce The nonce for permits\r\n    /// @return operator The address that is approved for spending\r\n    /// @return token0 The address of the token0 for a specific pool\r\n    /// @return token1 The address of the token1 for a specific pool\r\n    /// @return tickSpacing The tick spacing associated with the pool\r\n    /// @return tickLower The lower end of the tick range for the position\r\n    /// @return tickUpper The higher end of the tick range for the position\r\n    /// @return liquidity The liquidity of the position\r\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\r\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\r\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\r\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\r\n    function positions(uint256 tokenId)\r\n        external\r\n        view\r\n        returns (\r\n            uint96 nonce,\r\n            address operator,\r\n            address token0,\r\n            address token1,\r\n            int24 tickSpacing,\r\n            int24 tickLower,\r\n            int24 tickUpper,\r\n            uint128 liquidity,\r\n            uint256 feeGrowthInside0LastX128,\r\n            uint256 feeGrowthInside1LastX128,\r\n            uint128 tokensOwed0,\r\n            uint128 tokensOwed1\r\n        );\r\n\r\n    /// @notice Returns the address of the Token Descriptor, that handles generating token URIs for Positions\r\n    function tokenDescriptor() external view returns (address);\r\n\r\n    /// @notice Returns the address of the Owner, that is allowed to set a new TokenDescriptor\r\n    function owner() external view returns (address);\r\n\r\n    struct MintParams {\r\n        address token0;\r\n        address token1;\r\n        int24 tickSpacing;\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        address recipient;\r\n        uint256 deadline;\r\n        uint160 sqrtPriceX96;\r\n    }\r\n\r\n    /// @notice Creates a new position wrapped in a NFT\r\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\r\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\r\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\r\n    /// @return tokenId The ID of the token that represents the minted position\r\n    /// @return liquidity The amount of liquidity for this position\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function mint(MintParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint256 tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\r\n\r\n    struct IncreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint256 amount0Desired;\r\n        uint256 amount1Desired;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\r\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\r\n    /// amount0Desired The desired amount of token0 to be spent,\r\n    /// amount1Desired The desired amount of token1 to be spent,\r\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\r\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return liquidity The new liquidity amount as a result of the increase\r\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\r\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\r\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint128 liquidity, uint256 amount0, uint256 amount1);\r\n\r\n    struct DecreaseLiquidityParams {\r\n        uint256 tokenId;\r\n        uint128 liquidity;\r\n        uint256 amount0Min;\r\n        uint256 amount1Min;\r\n        uint256 deadline;\r\n    }\r\n\r\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\r\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\r\n    /// amount The amount by which liquidity will be decreased,\r\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\r\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\r\n    /// deadline The time by which the transaction must be included to effect the change\r\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\r\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\r\n    /// @dev The use of this function can cause a loss to users of the NonfungiblePositionManager\r\n    /// @dev for tokens that have very high decimals.\r\n    /// @dev The amount of tokens necessary for the loss is: 3.4028237e+38.\r\n    /// @dev This is equivalent to 1e20 value with 18 decimals.\r\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\r\n        external\r\n        payable\r\n        returns (uint256 amount0, uint256 amount1);\r\n\r\n    struct CollectParams {\r\n        uint256 tokenId;\r\n        address recipient;\r\n        uint128 amount0Max;\r\n        uint128 amount1Max;\r\n    }\r\n\r\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\r\n    /// @notice Used to update staked positions before deposit and withdraw\r\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\r\n    /// recipient The account that should receive the tokens,\r\n    /// amount0Max The maximum amount of token0 to collect,\r\n    /// amount1Max The maximum amount of token1 to collect\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\r\n    /// must be collected first.\r\n    /// @param tokenId The ID of the token that is being burned\r\n    function burn(uint256 tokenId) external payable;\r\n\r\n    /// @notice Sets a new Token Descriptor\r\n    /// @param _tokenDescriptor Address of the new Token Descriptor to be chosen\r\n    function setTokenDescriptor(address _tokenDescriptor) external;\r\n\r\n    /// @notice Sets a new Owner address\r\n    /// @param _owner Address of the new Owner to be chosen\r\n    function setOwner(address _owner) external;\r\n}\r\n"
			},
			"contracts/libraries/VelodromeTimeLibrary.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity =0.7.6;\n\nlibrary VelodromeTimeLibrary {\n    uint256 internal constant WEEK = 7 days;\n\n    /// @dev Returns start of epoch based on current timestamp\n    function epochStart(uint256 timestamp) internal pure returns (uint256) {\n        return timestamp - (timestamp % WEEK);\n    }\n\n    /// @dev Returns start of next epoch / end of current epoch\n    function epochNext(uint256 timestamp) internal pure returns (uint256) {\n        return timestamp - (timestamp % WEEK) + WEEK;\n    }\n\n    /// @dev Returns start of voting window\n    function epochVoteStart(uint256 timestamp) internal pure returns (uint256) {\n        return timestamp - (timestamp % WEEK) + 1 hours;\n    }\n\n    /// @dev Returns end of voting window / beginning of unrestricted voting window\n    function epochVoteEnd(uint256 timestamp) internal pure returns (uint256) {\n        return timestamp - (timestamp % WEEK) + WEEK - 1 hours;\n    }\n}\n"
			},
			"contracts/core/interfaces/callback/ICLSwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for ICLPoolActions#swap\n/// @notice Any contract that calls ICLPoolActions#swap must implement this interface\ninterface ICLSwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via ICLPool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a CLPool deployed by the canonical CLFactory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the ICLPoolActions#swap call\n    function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes calldata data) external;\n}\n"
			},
			"contracts/core/interfaces/callback/ICLMintCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for ICLPoolActions#mint\n/// @notice Any contract that calls ICLPoolActions#mint must implement this interface\ninterface ICLMintCallback {\n    /// @notice Called to `msg.sender` after minting liquidity to a position from ICLPool#mint.\n    /// @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\n    /// The caller of this method must be checked to be a CLPool deployed by the canonical CLFactory.\n    /// @param amount0Owed The amount of token0 due to the pool for the minted liquidity\n    /// @param amount1Owed The amount of token1 due to the pool for the minted liquidity\n    /// @param data Any data passed through by the caller via the ICLPoolActions#mint call\n    function uniswapV3MintCallback(uint256 amount0Owed, uint256 amount1Owed, bytes calldata data) external;\n}\n"
			},
			"contracts/core/interfaces/IERC20Minimal.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Minimal ERC20 interface for CL\n/// @notice Contains a subset of the full ERC20 interface that is used in CL\ninterface IERC20Minimal {\n    /// @notice Returns the balance of a token\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\n    /// @return The number of tokens held by the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\n    /// @param recipient The account that will receive the amount transferred\n    /// @param amount The number of tokens to send from the sender to the recipient\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /// @notice Returns the current allowance given to a spender by an owner\n    /// @param owner The account of the token owner\n    /// @param spender The account of the token spender\n    /// @return The current allowance granted by `owner` to `spender`\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\n    /// @param amount The amount of tokens allowed to be used by `spender`\n    /// @return Returns true for a successful approval, false for unsuccessful\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n    /// @param sender The account from which the transfer will be initiated\n    /// @param recipient The recipient of the transfer\n    /// @param amount The amount of the transfer\n    /// @return Returns true for a successful transfer, false for unsuccessful\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\n    /// @param value The amount of tokens that were transferred\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n    /// @param owner The account that approved spending of its tokens\n    /// @param spender The account for which the spending allowance was modified\n    /// @param value The new allowance from the owner to the spender\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/core/interfaces/IFactoryRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity =0.7.6;\n\ninterface IFactoryRegistry {\n    function approve(address poolFactory, address votingRewardsFactory, address gaugeFactory) external;\n\n    function isPoolFactoryApproved(address poolFactory) external returns (bool);\n\n    function factoriesToPoolFactory(address poolFactory)\n        external\n        returns (address votingRewardsFactory, address gaugeFactory);\n}\n"
			},
			"contracts/core/interfaces/ICLFactory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport {IVoter} from \"contracts/core/interfaces/IVoter.sol\";\nimport {IFactoryRegistry} from \"contracts/core/interfaces/IFactoryRegistry.sol\";\n\n/// @title The interface for the CL Factory\n/// @notice The CL Factory facilitates creation of CL pools and control over the protocol fees\ninterface ICLFactory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when the swapFeeManager of the factory is changed\n    /// @param oldFeeManager The swapFeeManager before the swapFeeManager was changed\n    /// @param newFeeManager The swapFeeManager after the swapFeeManager was changed\n    event SwapFeeManagerChanged(address indexed oldFeeManager, address indexed newFeeManager);\n\n    /// @notice Emitted when the swapFeeModule of the factory is changed\n    /// @param oldFeeModule The swapFeeModule before the swapFeeModule was changed\n    /// @param newFeeModule The swapFeeModule after the swapFeeModule was changed\n    event SwapFeeModuleChanged(address indexed oldFeeModule, address indexed newFeeModule);\n\n    /// @notice Emitted when the unstakedFeeManager of the factory is changed\n    /// @param oldFeeManager The unstakedFeeManager before the unstakedFeeManager was changed\n    /// @param newFeeManager The unstakedFeeManager after the unstakedFeeManager was changed\n    event UnstakedFeeManagerChanged(address indexed oldFeeManager, address indexed newFeeManager);\n\n    /// @notice Emitted when the unstakedFeeModule of the factory is changed\n    /// @param oldFeeModule The unstakedFeeModule before the unstakedFeeModule was changed\n    /// @param newFeeModule The unstakedFeeModule after the unstakedFeeModule was changed\n    event UnstakedFeeModuleChanged(address indexed oldFeeModule, address indexed newFeeModule);\n\n    /// @notice Emitted when the defaultUnstakedFee of the factory is changed\n    /// @param oldUnstakedFee The defaultUnstakedFee before the defaultUnstakedFee was changed\n    /// @param newUnstakedFee The defaultUnstakedFee after the unstakedFeeModule was changed\n    event DefaultUnstakedFeeChanged(uint24 indexed oldUnstakedFee, uint24 indexed newUnstakedFee);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(address indexed token0, address indexed token1, int24 indexed tickSpacing, address pool);\n\n    /// @notice Emitted when a new tick spacing is enabled for pool creation via the factory\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools\n    /// @param fee The default fee for a pool created with a given tickSpacing\n    event TickSpacingEnabled(int24 indexed tickSpacing, uint24 indexed fee);\n\n    /// @notice The voter contract, used to create gauges\n    /// @return The address of the voter contract\n    function voter() external view returns (IVoter);\n\n    /// @notice The address of the pool implementation contract used to deploy proxies / clones\n    /// @return The address of the pool implementation contract\n    function poolImplementation() external view returns (address);\n\n    /// @notice Factory registry for valid pool / gauge / rewards factories\n    /// @return The address of the factory registry\n    function factoryRegistry() external view returns (IFactoryRegistry);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the current swapFeeManager of the factory\n    /// @dev Can be changed by the current swap fee manager via setSwapFeeManager\n    /// @return The address of the factory swapFeeManager\n    function swapFeeManager() external view returns (address);\n\n    /// @notice Returns the current swapFeeModule of the factory\n    /// @dev Can be changed by the current swap fee manager via setSwapFeeModule\n    /// @return The address of the factory swapFeeModule\n    function swapFeeModule() external view returns (address);\n\n    /// @notice Returns the current unstakedFeeManager of the factory\n    /// @dev Can be changed by the current unstaked fee manager via setUnstakedFeeManager\n    /// @return The address of the factory unstakedFeeManager\n    function unstakedFeeManager() external view returns (address);\n\n    /// @notice Returns the current unstakedFeeModule of the factory\n    /// @dev Can be changed by the current unstaked fee manager via setUnstakedFeeModule\n    /// @return The address of the factory unstakedFeeModule\n    function unstakedFeeModule() external view returns (address);\n\n    /// @notice Returns the current defaultUnstakedFee of the factory\n    /// @dev Can be changed by the current unstaked fee manager via setDefaultUnstakedFee\n    /// @return The default Unstaked Fee of the factory\n    function defaultUnstakedFee() external view returns (uint24);\n\n    /// @notice Returns a default fee for a tick spacing.\n    /// @dev Use getFee for the most up to date fee for a given pool.\n    /// A tick spacing can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param tickSpacing The enabled tick spacing. Returns 0 if not enabled\n    /// @return fee The default fee for the given tick spacing\n    function tickSpacingToFee(int24 tickSpacing) external view returns (uint24 fee);\n\n    /// @notice Returns a list of enabled tick spacings. Used to iterate through pools created by the factory\n    /// @dev Tick spacings cannot be removed. Tick spacings are not ordered\n    /// @return List of enabled tick spacings\n    function tickSpacings() external view returns (int24[] memory);\n\n    /// @notice Returns the pool address for a given pair of tokens and a tick spacing, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param tickSpacing The tick spacing of the pool\n    /// @return pool The pool address\n    function getPool(address tokenA, address tokenB, int24 tickSpacing) external view returns (address pool);\n\n    /// @notice Return address of pool created by this factory given its `index`\n    /// @param index Index of the pool\n    /// @return The pool address in the given index\n    function allPools(uint256 index) external view returns (address);\n\n    /// @notice Returns the number of pools created from this factory\n    /// @return Number of pools created from this factory\n    function allPoolsLength() external view returns (uint256);\n\n    /// @notice Used in VotingEscrow to determine if a contract is a valid pool of the factory\n    /// @param pool The address of the pool to check\n    /// @return Whether the pool is a valid pool of the factory\n    function isPair(address pool) external view returns (bool);\n\n    /// @notice Get swap & flash fee for a given pool. Accounts for default and dynamic fees\n    /// @dev Swap & flash fee is denominated in pips. i.e. 1e-6\n    /// @param pool The pool to get the swap & flash fee for\n    /// @return The swap & flash fee for the given pool\n    function getSwapFee(address pool) external view returns (uint24);\n\n    /// @notice Get unstaked fee for a given pool. Accounts for default and dynamic fees\n    /// @dev Unstaked fee is denominated in pips. i.e. 1e-6\n    /// @param pool The pool to get the unstaked fee for\n    /// @return The unstaked fee for the given pool\n    function getUnstakedFee(address pool) external view returns (uint24);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param tickSpacing The desired tick spacing for the pool\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will\n    /// revert if the pool already exists, the tick spacing is invalid, or the token arguments are invalid\n    /// @return pool The address of the newly created pool\n    function createPool(address tokenA, address tokenB, int24 tickSpacing, uint160 sqrtPriceX96)\n        external\n        returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Updates the swapFeeManager of the factory\n    /// @dev Must be called by the current swap fee manager\n    /// @param _swapFeeManager The new swapFeeManager of the factory\n    function setSwapFeeManager(address _swapFeeManager) external;\n\n    /// @notice Updates the swapFeeModule of the factory\n    /// @dev Must be called by the current swap fee manager\n    /// @param _swapFeeModule The new swapFeeModule of the factory\n    function setSwapFeeModule(address _swapFeeModule) external;\n\n    /// @notice Updates the unstakedFeeManager of the factory\n    /// @dev Must be called by the current unstaked fee manager\n    /// @param _unstakedFeeManager The new unstakedFeeManager of the factory\n    function setUnstakedFeeManager(address _unstakedFeeManager) external;\n\n    /// @notice Updates the unstakedFeeModule of the factory\n    /// @dev Must be called by the current unstaked fee manager\n    /// @param _unstakedFeeModule The new unstakedFeeModule of the factory\n    function setUnstakedFeeModule(address _unstakedFeeModule) external;\n\n    /// @notice Updates the defaultUnstakedFee of the factory\n    /// @dev Must be called by the current unstaked fee manager\n    /// @param _defaultUnstakedFee The new defaultUnstakedFee of the factory\n    function setDefaultUnstakedFee(uint24 _defaultUnstakedFee) external;\n\n    /// @notice Enables a certain tickSpacing\n    /// @dev Tick spacings may never be removed once enabled\n    /// @param tickSpacing The spacing between ticks to be enforced in the pool\n    /// @param fee The default fee associated with a given tick spacing\n    function enableTickSpacing(int24 tickSpacing, uint24 fee) external;\n}\n"
			},
			"contracts/core/libraries/SqrtPriceMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport \"./LowGasSafeMath.sol\";\nimport \"./SafeCast.sol\";\n\nimport \"./FullMath.sol\";\nimport \"./UnsafeMath.sol\";\nimport \"./FixedPoint96.sol\";\n\n/// @title Functions based on Q64.96 sqrt price and liquidity\n/// @notice Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas\nlibrary SqrtPriceMath {\n    using LowGasSafeMath for uint256;\n    using SafeCast for uint256;\n\n    /// @notice Gets the next sqrt price given a delta of token0\n    /// @dev Always rounds up, because in the exact output case (increasing price) we need to move the price at least\n    /// far enough to get the desired output amount, and in the exact input case (decreasing price) we need to move the\n    /// price less in order to not send too much output.\n    /// The most precise formula for this is liquidity * sqrtPX96 / (liquidity +- amount * sqrtPX96),\n    /// if this is impossible because of overflow, we calculate liquidity / (liquidity / sqrtPX96 +- amount).\n    /// @param sqrtPX96 The starting price, i.e. before accounting for the token0 delta\n    /// @param liquidity The amount of usable liquidity\n    /// @param amount How much of token0 to add or remove from virtual reserves\n    /// @param add Whether to add or remove the amount of token0\n    /// @return The price after adding or removing amount, depending on add\n    function getNextSqrtPriceFromAmount0RoundingUp(uint160 sqrtPX96, uint128 liquidity, uint256 amount, bool add)\n        internal\n        pure\n        returns (uint160)\n    {\n        // we short circuit amount == 0 because the result is otherwise not guaranteed to equal the input price\n        if (amount == 0) return sqrtPX96;\n        uint256 numerator1 = uint256(liquidity) << FixedPoint96.RESOLUTION;\n\n        if (add) {\n            uint256 product;\n            if ((product = amount * sqrtPX96) / amount == sqrtPX96) {\n                uint256 denominator = numerator1 + product;\n                if (denominator >= numerator1) {\n                    // always fits in 160 bits\n                    return uint160(FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator));\n                }\n            }\n\n            return uint160(UnsafeMath.divRoundingUp(numerator1, (numerator1 / sqrtPX96).add(amount)));\n        } else {\n            uint256 product;\n            // if the product overflows, we know the denominator underflows\n            // in addition, we must check that the denominator does not underflow\n            require((product = amount * sqrtPX96) / amount == sqrtPX96 && numerator1 > product);\n            uint256 denominator = numerator1 - product;\n            return FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator).toUint160();\n        }\n    }\n\n    /// @notice Gets the next sqrt price given a delta of token1\n    /// @dev Always rounds down, because in the exact output case (decreasing price) we need to move the price at least\n    /// far enough to get the desired output amount, and in the exact input case (increasing price) we need to move the\n    /// price less in order to not send too much output.\n    /// The formula we compute is within <1 wei of the lossless version: sqrtPX96 +- amount / liquidity\n    /// @param sqrtPX96 The starting price, i.e., before accounting for the token1 delta\n    /// @param liquidity The amount of usable liquidity\n    /// @param amount How much of token1 to add, or remove, from virtual reserves\n    /// @param add Whether to add, or remove, the amount of token1\n    /// @return The price after adding or removing `amount`\n    function getNextSqrtPriceFromAmount1RoundingDown(uint160 sqrtPX96, uint128 liquidity, uint256 amount, bool add)\n        internal\n        pure\n        returns (uint160)\n    {\n        // if we're adding (subtracting), rounding down requires rounding the quotient down (up)\n        // in both cases, avoid a mulDiv for most inputs\n        if (add) {\n            uint256 quotient = (\n                amount <= type(uint160).max\n                    ? (amount << FixedPoint96.RESOLUTION) / liquidity\n                    : FullMath.mulDiv(amount, FixedPoint96.Q96, liquidity)\n            );\n\n            return uint256(sqrtPX96).add(quotient).toUint160();\n        } else {\n            uint256 quotient = (\n                amount <= type(uint160).max\n                    ? UnsafeMath.divRoundingUp(amount << FixedPoint96.RESOLUTION, liquidity)\n                    : FullMath.mulDivRoundingUp(amount, FixedPoint96.Q96, liquidity)\n            );\n\n            require(sqrtPX96 > quotient);\n            // always fits 160 bits\n            return uint160(sqrtPX96 - quotient);\n        }\n    }\n\n    /// @notice Gets the next sqrt price given an input amount of token0 or token1\n    /// @dev Throws if price or liquidity are 0, or if the next price is out of bounds\n    /// @param sqrtPX96 The starting price, i.e., before accounting for the input amount\n    /// @param liquidity The amount of usable liquidity\n    /// @param amountIn How much of token0, or token1, is being swapped in\n    /// @param zeroForOne Whether the amount in is token0 or token1\n    /// @return sqrtQX96 The price after adding the input amount to token0 or token1\n    function getNextSqrtPriceFromInput(uint160 sqrtPX96, uint128 liquidity, uint256 amountIn, bool zeroForOne)\n        internal\n        pure\n        returns (uint160 sqrtQX96)\n    {\n        require(sqrtPX96 > 0);\n        require(liquidity > 0);\n\n        // round to make sure that we don't pass the target price\n        return zeroForOne\n            ? getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountIn, true)\n            : getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountIn, true);\n    }\n\n    /// @notice Gets the next sqrt price given an output amount of token0 or token1\n    /// @dev Throws if price or liquidity are 0 or the next price is out of bounds\n    /// @param sqrtPX96 The starting price before accounting for the output amount\n    /// @param liquidity The amount of usable liquidity\n    /// @param amountOut How much of token0, or token1, is being swapped out\n    /// @param zeroForOne Whether the amount out is token0 or token1\n    /// @return sqrtQX96 The price after removing the output amount of token0 or token1\n    function getNextSqrtPriceFromOutput(uint160 sqrtPX96, uint128 liquidity, uint256 amountOut, bool zeroForOne)\n        internal\n        pure\n        returns (uint160 sqrtQX96)\n    {\n        require(sqrtPX96 > 0);\n        require(liquidity > 0);\n\n        // round to make sure that we pass the target price\n        return zeroForOne\n            ? getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountOut, false)\n            : getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountOut, false);\n    }\n\n    /// @notice Gets the amount0 delta between two prices\n    /// @dev Calculates liquidity / sqrt(lower) - liquidity / sqrt(upper),\n    /// i.e. liquidity * (sqrt(upper) - sqrt(lower)) / (sqrt(upper) * sqrt(lower))\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The amount of usable liquidity\n    /// @param roundUp Whether to round the amount up or down\n    /// @return amount0 Amount of token0 required to cover a position of size liquidity between the two passed prices\n    function getAmount0Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity, bool roundUp)\n        internal\n        pure\n        returns (uint256 amount0)\n    {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        uint256 numerator1 = uint256(liquidity) << FixedPoint96.RESOLUTION;\n        uint256 numerator2 = sqrtRatioBX96 - sqrtRatioAX96;\n\n        require(sqrtRatioAX96 > 0);\n\n        return roundUp\n            ? UnsafeMath.divRoundingUp(FullMath.mulDivRoundingUp(numerator1, numerator2, sqrtRatioBX96), sqrtRatioAX96)\n            : FullMath.mulDiv(numerator1, numerator2, sqrtRatioBX96) / sqrtRatioAX96;\n    }\n\n    /// @notice Gets the amount1 delta between two prices\n    /// @dev Calculates liquidity * (sqrt(upper) - sqrt(lower))\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The amount of usable liquidity\n    /// @param roundUp Whether to round the amount up, or down\n    /// @return amount1 Amount of token1 required to cover a position of size liquidity between the two passed prices\n    function getAmount1Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity, bool roundUp)\n        internal\n        pure\n        returns (uint256 amount1)\n    {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        return roundUp\n            ? FullMath.mulDivRoundingUp(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96)\n            : FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96);\n    }\n\n    /// @notice Helper that gets signed token0 delta\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The change in liquidity for which to compute the amount0 delta\n    /// @return amount0 Amount of token0 corresponding to the passed liquidityDelta between the two prices\n    function getAmount0Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, int128 liquidity)\n        internal\n        pure\n        returns (int256 amount0)\n    {\n        return liquidity < 0\n            ? -getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(-liquidity), false).toInt256()\n            : getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(liquidity), true).toInt256();\n    }\n\n    /// @notice Helper that gets signed token1 delta\n    /// @param sqrtRatioAX96 A sqrt price\n    /// @param sqrtRatioBX96 Another sqrt price\n    /// @param liquidity The change in liquidity for which to compute the amount1 delta\n    /// @return amount1 Amount of token1 corresponding to the passed liquidityDelta between the two prices\n    function getAmount1Delta(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, int128 liquidity)\n        internal\n        pure\n        returns (int256 amount1)\n    {\n        return liquidity < 0\n            ? -getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(-liquidity), false).toInt256()\n            : getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(liquidity), true).toInt256();\n    }\n}\n"
			},
			"contracts/core/libraries/LiquidityAmounts.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport \"contracts/core/libraries/FullMath.sol\";\r\nimport \"contracts/core/libraries/FixedPoint96.sol\";\r\n\r\n/// @title Liquidity amount functions\r\n/// @notice Provides functions for computing liquidity amounts from token amounts and prices\r\nlibrary LiquidityAmounts {\r\n    /// @notice Downcasts uint256 to uint128\r\n    /// @param x The uint258 to be downcasted\r\n    /// @return y The passed value, downcasted to uint128\r\n    function toUint128(uint256 x) private pure returns (uint128 y) {\r\n        require((y = uint128(x)) == x);\r\n    }\r\n\r\n    /// @notice Computes the amount of liquidity received for a given amount of token0 and price range\r\n    /// @dev Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param amount0 The amount0 being sent in\r\n    /// @return liquidity The amount of returned liquidity\r\n    function getLiquidityForAmount0(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint256 amount0)\r\n        internal\r\n        pure\r\n        returns (uint128 liquidity)\r\n    {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n        uint256 intermediate = FullMath.mulDiv(sqrtRatioAX96, sqrtRatioBX96, FixedPoint96.Q96);\r\n        return toUint128(FullMath.mulDiv(amount0, intermediate, sqrtRatioBX96 - sqrtRatioAX96));\r\n    }\r\n\r\n    /// @notice Computes the amount of liquidity received for a given amount of token1 and price range\r\n    /// @dev Calculates amount1 / (sqrt(upper) - sqrt(lower)).\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param amount1 The amount1 being sent in\r\n    /// @return liquidity The amount of returned liquidity\r\n    function getLiquidityForAmount1(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint256 amount1)\r\n        internal\r\n        pure\r\n        returns (uint128 liquidity)\r\n    {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n        return toUint128(FullMath.mulDiv(amount1, FixedPoint96.Q96, sqrtRatioBX96 - sqrtRatioAX96));\r\n    }\r\n\r\n    /// @notice Computes the maximum amount of liquidity received for a given amount of token0, token1, the current\r\n    /// pool prices and the prices at the tick boundaries\r\n    /// @param sqrtRatioX96 A sqrt price representing the current pool prices\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param amount0 The amount of token0 being sent in\r\n    /// @param amount1 The amount of token1 being sent in\r\n    /// @return liquidity The maximum amount of liquidity received\r\n    function getLiquidityForAmounts(\r\n        uint160 sqrtRatioX96,\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    ) internal pure returns (uint128 liquidity) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        if (sqrtRatioX96 <= sqrtRatioAX96) {\r\n            liquidity = getLiquidityForAmount0(sqrtRatioAX96, sqrtRatioBX96, amount0);\r\n        } else if (sqrtRatioX96 < sqrtRatioBX96) {\r\n            uint128 liquidity0 = getLiquidityForAmount0(sqrtRatioX96, sqrtRatioBX96, amount0);\r\n            uint128 liquidity1 = getLiquidityForAmount1(sqrtRatioAX96, sqrtRatioX96, amount1);\r\n\r\n            liquidity = liquidity0 < liquidity1 ? liquidity0 : liquidity1;\r\n        } else {\r\n            liquidity = getLiquidityForAmount1(sqrtRatioAX96, sqrtRatioBX96, amount1);\r\n        }\r\n    }\r\n\r\n    /// @notice Computes the amount of token0 for a given amount of liquidity and a price range\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param liquidity The liquidity being valued\r\n    /// @return amount0 The amount of token0\r\n    function getAmount0ForLiquidity(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity)\r\n        internal\r\n        pure\r\n        returns (uint256 amount0)\r\n    {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        return FullMath.mulDiv(\r\n            uint256(liquidity) << FixedPoint96.RESOLUTION, sqrtRatioBX96 - sqrtRatioAX96, sqrtRatioBX96\r\n        ) / sqrtRatioAX96;\r\n    }\r\n\r\n    /// @notice Computes the amount of token1 for a given amount of liquidity and a price range\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param liquidity The liquidity being valued\r\n    /// @return amount1 The amount of token1\r\n    function getAmount1ForLiquidity(uint160 sqrtRatioAX96, uint160 sqrtRatioBX96, uint128 liquidity)\r\n        internal\r\n        pure\r\n        returns (uint256 amount1)\r\n    {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        return FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96);\r\n    }\r\n\r\n    /// @notice Computes the token0 and token1 value for a given amount of liquidity, the current\r\n    /// pool prices and the prices at the tick boundaries\r\n    /// @param sqrtRatioX96 A sqrt price representing the current pool prices\r\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\r\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\r\n    /// @param liquidity The liquidity being valued\r\n    /// @return amount0 The amount of token0\r\n    /// @return amount1 The amount of token1\r\n    function getAmountsForLiquidity(\r\n        uint160 sqrtRatioX96,\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint128 liquidity\r\n    ) internal pure returns (uint256 amount0, uint256 amount1) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        if (sqrtRatioX96 <= sqrtRatioAX96) {\r\n            amount0 = getAmount0ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity);\r\n        } else if (sqrtRatioX96 < sqrtRatioBX96) {\r\n            amount0 = getAmount0ForLiquidity(sqrtRatioX96, sqrtRatioBX96, liquidity);\r\n            amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioX96, liquidity);\r\n        } else {\r\n            amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity);\r\n        }\r\n    }\r\n}\r\n"
			},
			"contracts/core/libraries/LiquidityMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math library for liquidity\nlibrary LiquidityMath {\n    /// @notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n    /// @param x The liquidity before change\n    /// @param y The delta by which liquidity should be changed\n    /// @return z The liquidity delta\n    function addDelta(uint128 x, int128 y) internal pure returns (uint128 z) {\n        if (y < 0) {\n            require((z = x - uint128(-y)) < x, \"LS\");\n        } else {\n            require((z = x + uint128(y)) >= x, \"LA\");\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(MAX_TICK), \"T\");\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, \"R\");\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"
			},
			"contracts/core/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport \"../interfaces/IERC20Minimal.sol\";\n\n/// @title TransferHelper\n/// @notice Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false\nlibrary TransferHelper {\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Calls transfer on token contract, errors with TF if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(address token, address to, uint256 value) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20Minimal.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TF\");\n    }\n}\n"
			},
			"contracts/core/libraries/FixedPoint128.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.4.0;\n\n/// @title FixedPoint128\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\nlibrary FixedPoint128 {\n    uint256 internal constant Q128 = 0x100000000000000000000000000000000;\n}\n"
			},
			"contracts/core/libraries/FullMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.0 <0.8.0;\n\n/// @title Contains 512-bit math functions\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\nlibrary FullMath {\n    /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    function mulDiv(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {\n        // 512-bit multiply [prod1 prod0] = a * b\n        // Compute the product mod 2**256 and mod 2**256 - 1\n        // then use the Chinese Remainder Theorem to reconstruct\n        // the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2**256 + prod0\n        uint256 prod0; // Least significant 256 bits of the product\n        uint256 prod1; // Most significant 256 bits of the product\n        assembly {\n            let mm := mulmod(a, b, not(0))\n            prod0 := mul(a, b)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        // Handle non-overflow cases, 256 by 256 division\n        if (prod1 == 0) {\n            require(denominator > 0);\n            assembly {\n                result := div(prod0, denominator)\n            }\n            return result;\n        }\n\n        // Make sure the result is less than 2**256.\n        // Also prevents denominator == 0\n        require(denominator > prod1);\n\n        ///////////////////////////////////////////////\n        // 512 by 256 division.\n        ///////////////////////////////////////////////\n\n        // Make division exact by subtracting the remainder from [prod1 prod0]\n        // Compute remainder using mulmod\n        uint256 remainder;\n        assembly {\n            remainder := mulmod(a, b, denominator)\n        }\n        // Subtract 256 bit number from 512 bit number\n        assembly {\n            prod1 := sub(prod1, gt(remainder, prod0))\n            prod0 := sub(prod0, remainder)\n        }\n\n        // Factor powers of two out of denominator\n        // Compute largest power of two divisor of denominator.\n        // Always >= 1.\n        uint256 twos = -denominator & denominator;\n        // Divide denominator by power of two\n        assembly {\n            denominator := div(denominator, twos)\n        }\n\n        // Divide [prod1 prod0] by the factors of two\n        assembly {\n            prod0 := div(prod0, twos)\n        }\n        // Shift in bits from prod1 into prod0. For this we need\n        // to flip `twos` such that it is 2**256 / twos.\n        // If twos is zero, then it becomes one\n        assembly {\n            twos := add(div(sub(0, twos), twos), 1)\n        }\n        prod0 |= prod1 * twos;\n\n        // Invert denominator mod 2**256\n        // Now that denominator is an odd number, it has an inverse\n        // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n        // Compute the inverse by starting with a seed that is correct\n        // correct for four bits. That is, denominator * inv = 1 mod 2**4\n        uint256 inv = (3 * denominator) ^ 2;\n        // Now use Newton-Raphson iteration to improve the precision.\n        // Thanks to Hensel's lifting lemma, this also works in modular\n        // arithmetic, doubling the correct bits in each step.\n        inv *= 2 - denominator * inv; // inverse mod 2**8\n        inv *= 2 - denominator * inv; // inverse mod 2**16\n        inv *= 2 - denominator * inv; // inverse mod 2**32\n        inv *= 2 - denominator * inv; // inverse mod 2**64\n        inv *= 2 - denominator * inv; // inverse mod 2**128\n        inv *= 2 - denominator * inv; // inverse mod 2**256\n\n        // Because the division is now exact we can divide by multiplying\n        // with the modular inverse of denominator. This will give us the\n        // correct result modulo 2**256. Since the precoditions guarantee\n        // that the outcome is less than 2**256, this is the final result.\n        // We don't need to compute the high bits of the result and prod1\n        // is no longer required.\n        result = prod0 * inv;\n        return result;\n    }\n\n    /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    function mulDivRoundingUp(uint256 a, uint256 b, uint256 denominator) internal pure returns (uint256 result) {\n        result = mulDiv(a, b, denominator);\n        if (mulmod(a, b, denominator) > 0) {\n            require(result < type(uint256).max);\n            result++;\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/Position.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\nimport \"./FullMath.sol\";\nimport \"./FixedPoint128.sol\";\nimport \"./LiquidityMath.sol\";\n\n/// @title Position\n/// @notice Positions represent an owner address' liquidity between a lower and upper tick boundary\n/// @dev Positions store additional state for tracking fees owed to the position\nlibrary Position {\n    // info stored for each user's position\n    struct Info {\n        // the amount of liquidity owned by this position\n        uint128 liquidity;\n        // fee growth per unit of liquidity as of the last update to liquidity or fees owed\n        uint256 feeGrowthInside0LastX128;\n        uint256 feeGrowthInside1LastX128;\n        // the fees owed to the position owner in token0/token1\n        uint128 tokensOwed0;\n        uint128 tokensOwed1;\n    }\n\n    /// @notice Returns the Info struct of a position, given an owner and position boundaries\n    /// @param self The mapping containing all user positions\n    /// @param owner The address of the position owner\n    /// @param tickLower The lower tick boundary of the position\n    /// @param tickUpper The upper tick boundary of the position\n    /// @return position The position info struct of the given owners' position\n    function get(mapping(bytes32 => Info) storage self, address owner, int24 tickLower, int24 tickUpper)\n        internal\n        view\n        returns (Position.Info storage position)\n    {\n        position = self[keccak256(abi.encodePacked(owner, tickLower, tickUpper))];\n    }\n\n    /// @notice Credits accumulated fees to a user's position\n    /// @param self The individual position to update\n    /// @param liquidityDelta The change in pool liquidity as a result of the position update\n    /// @param feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n    /// @param feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries\n    /// @param staked Signifies if the position is staked in the gauge or not\n    function update(\n        Info storage self,\n        int128 liquidityDelta,\n        uint256 feeGrowthInside0X128,\n        uint256 feeGrowthInside1X128,\n        bool staked\n    ) internal {\n        Info memory _self = self;\n\n        uint128 liquidityNext;\n        if (liquidityDelta == 0) {\n            require(_self.liquidity > 0, \"NP\"); // disallow pokes for 0 liquidity positions\n            liquidityNext = _self.liquidity;\n        } else {\n            liquidityNext = LiquidityMath.addDelta(_self.liquidity, liquidityDelta);\n        }\n\n        uint128 tokensOwed0;\n        uint128 tokensOwed1;\n        if (!staked) {\n            // calculate accumulated fees\n            tokensOwed0 = uint128(\n                FullMath.mulDiv(\n                    feeGrowthInside0X128 - _self.feeGrowthInside0LastX128, _self.liquidity, FixedPoint128.Q128\n                )\n            );\n            tokensOwed1 = uint128(\n                FullMath.mulDiv(\n                    feeGrowthInside1X128 - _self.feeGrowthInside1LastX128, _self.liquidity, FixedPoint128.Q128\n                )\n            );\n        }\n\n        // update the position\n        if (liquidityDelta != 0) self.liquidity = liquidityNext;\n        self.feeGrowthInside0LastX128 = feeGrowthInside0X128;\n        self.feeGrowthInside1LastX128 = feeGrowthInside1X128;\n        if (tokensOwed0 > 0 || tokensOwed1 > 0) {\n            // overflow is acceptable, have to withdraw before you hit type(uint128).max fees\n            self.tokensOwed0 += tokensOwed0;\n            self.tokensOwed1 += tokensOwed1;\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/TickBitmap.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport \"./BitMath.sol\";\n\n/// @title Packed tick initialized state library\n/// @notice Stores a packed mapping of tick index to its initialized state\n/// @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\nlibrary TickBitmap {\n    /// @notice Computes the position in the mapping where the initialized bit for a tick lives\n    /// @param tick The tick for which to compute the position\n    /// @return wordPos The key in the mapping containing the word in which the bit is stored\n    /// @return bitPos The bit position in the word where the flag is stored\n    function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {\n        wordPos = int16(tick >> 8);\n        bitPos = uint8(tick % 256);\n    }\n\n    /// @notice Flips the initialized state for a given tick from false to true, or vice versa\n    /// @param self The mapping in which to flip the tick\n    /// @param tick The tick to flip\n    /// @param tickSpacing The spacing between usable ticks\n    function flipTick(mapping(int16 => uint256) storage self, int24 tick, int24 tickSpacing) internal {\n        require(tick % tickSpacing == 0); // ensure that the tick is spaced\n        (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing);\n        uint256 mask = 1 << bitPos;\n        self[wordPos] ^= mask;\n    }\n\n    /// @notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n    /// to the left (less than or equal to) or right (greater than) of the given tick\n    /// @param self The mapping in which to compute the next initialized tick\n    /// @param tick The starting tick\n    /// @param tickSpacing The spacing between usable ticks\n    /// @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n    /// @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n    /// @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks\n    function nextInitializedTickWithinOneWord(\n        mapping(int16 => uint256) storage self,\n        int24 tick,\n        int24 tickSpacing,\n        bool lte\n    ) internal view returns (int24 next, bool initialized) {\n        int24 compressed = tick / tickSpacing;\n        if (tick < 0 && tick % tickSpacing != 0) compressed--; // round towards negative infinity\n\n        if (lte) {\n            (int16 wordPos, uint8 bitPos) = position(compressed);\n            // all the 1s at or to the right of the current bitPos\n            uint256 mask = (1 << bitPos) - 1 + (1 << bitPos);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the right of or at the current tick, return rightmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed - int24(bitPos - BitMath.mostSignificantBit(masked))) * tickSpacing\n                : (compressed - int24(bitPos)) * tickSpacing;\n        } else {\n            // start from the word of the next tick, since the current tick state doesn't matter\n            (int16 wordPos, uint8 bitPos) = position(compressed + 1);\n            // all the 1s at or to the left of the bitPos\n            uint256 mask = ~((1 << bitPos) - 1);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the left of the current tick, return leftmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed + 1 + int24(BitMath.leastSignificantBit(masked) - bitPos)) * tickSpacing\n                : (compressed + 1 + int24(type(uint8).max - bitPos)) * tickSpacing;\n        }\n    }\n}\n"
			},
			"contracts/core/libraries/Tick.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\nimport \"./LowGasSafeMath.sol\";\nimport \"./SafeCast.sol\";\n\nimport \"./TickMath.sol\";\nimport \"./LiquidityMath.sol\";\n\n/// @title Tick\n/// @notice Contains functions for managing tick processes and relevant calculations\nlibrary Tick {\n    using LowGasSafeMath for int256;\n    using SafeCast for int256;\n\n    // info stored for each initialized individual tick\n    struct Info {\n        // the total position liquidity that references this tick\n        // includes both staked and unstaked liquidity\n        uint128 liquidityGross;\n        // amount of net liquidity added (subtracted) when tick is crossed from left to right (right to left)\n        // includes both staked and unstaked liquidity\n        int128 liquidityNet;\n        // amount of net staked liquidity added (subtracted) when tick is crossed from left to right (right to left)\n        int128 stakedLiquidityNet;\n        // fee growth per unit of liquidity on the _other_ side of this tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint256 feeGrowthOutside0X128;\n        uint256 feeGrowthOutside1X128;\n        // reward growth per unit of liquidity on the _other_ side of this tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint256 rewardGrowthOutsideX128;\n        // the cumulative tick value on the other side of the tick\n        int56 tickCumulativeOutside;\n        // the seconds per unit of liquidity on the _other_ side of this tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint160 secondsPerLiquidityOutsideX128;\n        // the seconds spent on the other side of the tick (relative to the current tick)\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\n        uint32 secondsOutside;\n        // true iff the tick is initialized, i.e. the value is exactly equivalent to the expression liquidityGross != 0\n        // these 8 bits are set to prevent fresh sstores when crossing newly initialized ticks\n        bool initialized;\n    }\n\n    struct LiquidityNets {\n        int128 liquidityNet;\n        int128 stakedLiquidityNet;\n    }\n\n    /// @notice Derives max liquidity per tick from given tick spacing\n    /// @dev Executed within the pool constructor\n    /// @param tickSpacing The amount of required tick separation, realized in multiples of `tickSpacing`\n    ///     e.g., a tickSpacing of 3 requires ticks to be initialized every 3rd tick i.e., ..., -6, -3, 0, 3, 6, ...\n    /// @return The max liquidity per tick\n    function tickSpacingToMaxLiquidityPerTick(int24 tickSpacing) internal pure returns (uint128) {\n        int24 minTick = (TickMath.MIN_TICK / tickSpacing) * tickSpacing;\n        int24 maxTick = (TickMath.MAX_TICK / tickSpacing) * tickSpacing;\n        uint24 numTicks = uint24((maxTick - minTick) / tickSpacing) + 1;\n        return type(uint128).max / numTicks;\n    }\n\n    /// @notice Retrieves fee growth data\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tickLower The lower tick boundary of the position\n    /// @param tickUpper The upper tick boundary of the position\n    /// @param tickCurrent The current tick\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n    /// @return feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n    /// @return feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries\n    function getFeeGrowthInside(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tickLower,\n        int24 tickUpper,\n        int24 tickCurrent,\n        uint256 feeGrowthGlobal0X128,\n        uint256 feeGrowthGlobal1X128\n    ) internal view returns (uint256 feeGrowthInside0X128, uint256 feeGrowthInside1X128) {\n        Info storage lower = self[tickLower];\n        Info storage upper = self[tickUpper];\n\n        // calculate fee growth below\n        uint256 feeGrowthBelow0X128;\n        uint256 feeGrowthBelow1X128;\n        if (tickCurrent >= tickLower) {\n            feeGrowthBelow0X128 = lower.feeGrowthOutside0X128;\n            feeGrowthBelow1X128 = lower.feeGrowthOutside1X128;\n        } else {\n            feeGrowthBelow0X128 = feeGrowthGlobal0X128 - lower.feeGrowthOutside0X128;\n            feeGrowthBelow1X128 = feeGrowthGlobal1X128 - lower.feeGrowthOutside1X128;\n        }\n\n        // calculate fee growth above\n        uint256 feeGrowthAbove0X128;\n        uint256 feeGrowthAbove1X128;\n        if (tickCurrent < tickUpper) {\n            feeGrowthAbove0X128 = upper.feeGrowthOutside0X128;\n            feeGrowthAbove1X128 = upper.feeGrowthOutside1X128;\n        } else {\n            feeGrowthAbove0X128 = feeGrowthGlobal0X128 - upper.feeGrowthOutside0X128;\n            feeGrowthAbove1X128 = feeGrowthGlobal1X128 - upper.feeGrowthOutside1X128;\n        }\n\n        feeGrowthInside0X128 = feeGrowthGlobal0X128 - feeGrowthBelow0X128 - feeGrowthAbove0X128;\n        feeGrowthInside1X128 = feeGrowthGlobal1X128 - feeGrowthBelow1X128 - feeGrowthAbove1X128;\n    }\n\n    function getRewardGrowthInside(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tickLower,\n        int24 tickUpper,\n        int24 tickCurrent,\n        uint256 rewardGrowthGlobalX128\n    ) internal view returns (uint256 rewardGrowthInsideX128) {\n        Info storage lower = self[tickLower];\n        Info storage upper = self[tickUpper];\n\n        // calculate reward growth below\n        uint256 rewardGrowthBelowX128;\n        if (tickCurrent >= tickLower) {\n            rewardGrowthBelowX128 = lower.rewardGrowthOutsideX128;\n        } else {\n            rewardGrowthBelowX128 = rewardGrowthGlobalX128 - lower.rewardGrowthOutsideX128;\n        }\n\n        // calculate reward growth above\n        uint256 rewardGrowthAboveX128;\n        if (tickCurrent < tickUpper) {\n            rewardGrowthAboveX128 = upper.rewardGrowthOutsideX128;\n        } else {\n            rewardGrowthAboveX128 = rewardGrowthGlobalX128 - upper.rewardGrowthOutsideX128;\n        }\n\n        rewardGrowthInsideX128 = rewardGrowthGlobalX128 - rewardGrowthBelowX128 - rewardGrowthAboveX128;\n    }\n\n    /// @notice Updates a tick and returns true if the tick was flipped from initialized to uninitialized, or vice versa\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tick The tick that will be updated\n    /// @param tickCurrent The current tick\n    /// @param liquidityDelta A new amount of liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n    /// @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n    /// @param secondsPerLiquidityCumulativeX128 The all-time seconds per max(1, liquidity) of the pool\n    /// @param tickCumulative The tick * time elapsed since the pool was first initialized\n    /// @param time The current block timestamp cast to a uint32\n    /// @param upper true for updating a position's upper tick, or false for updating a position's lower tick\n    /// @param maxLiquidity The maximum liquidity allocation for a single tick\n    /// @return flipped Whether the tick was flipped from initialized to uninitialized, or vice versa\n    function update(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tick,\n        int24 tickCurrent,\n        int128 liquidityDelta,\n        uint256 feeGrowthGlobal0X128,\n        uint256 feeGrowthGlobal1X128,\n        uint256 rewardGrowthGlobalX128,\n        uint160 secondsPerLiquidityCumulativeX128,\n        int56 tickCumulative,\n        uint32 time,\n        bool upper,\n        uint128 maxLiquidity\n    ) internal returns (bool flipped) {\n        Tick.Info storage info = self[tick];\n\n        uint128 liquidityGrossBefore = info.liquidityGross;\n        uint128 liquidityGrossAfter = LiquidityMath.addDelta(liquidityGrossBefore, liquidityDelta);\n\n        require(liquidityGrossAfter <= maxLiquidity, \"LO\");\n\n        flipped = (liquidityGrossAfter == 0) != (liquidityGrossBefore == 0);\n\n        if (liquidityGrossBefore == 0) {\n            // by convention, we assume that all growth before a tick was initialized happened _below_ the tick\n            if (tick <= tickCurrent) {\n                info.feeGrowthOutside0X128 = feeGrowthGlobal0X128;\n                info.feeGrowthOutside1X128 = feeGrowthGlobal1X128;\n                info.rewardGrowthOutsideX128 = rewardGrowthGlobalX128;\n                info.secondsPerLiquidityOutsideX128 = secondsPerLiquidityCumulativeX128;\n                info.tickCumulativeOutside = tickCumulative;\n                info.secondsOutside = time;\n            }\n            info.initialized = true;\n        }\n\n        info.liquidityGross = liquidityGrossAfter;\n\n        // when the lower (upper) tick is crossed left to right (right to left), liquidity must be added (removed)\n        info.liquidityNet = upper\n            ? int256(info.liquidityNet).sub(liquidityDelta).toInt128()\n            : int256(info.liquidityNet).add(liquidityDelta).toInt128();\n    }\n\n    /// @notice Updates the staked liquidity component of a tick. Assumes tick is already initialized with an existing position.\n    /// @notice We reuse existing liquidity for staking, so there is no change in liquidity\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tick The tick that will be updated\n    /// @param stakedLiquidityDelta The amount of staked liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n    /// @param upper true for updating a position's upper tick, or false for updating a position's lower tick\n    function updateStake(mapping(int24 => Tick.Info) storage self, int24 tick, int128 stakedLiquidityDelta, bool upper)\n        internal\n    {\n        Tick.Info storage info = self[tick];\n        // when the lower (upper) tick is crossed left to right (right to left), staked liquidity must be added (removed)\n        info.stakedLiquidityNet = upper\n            ? int256(info.stakedLiquidityNet).sub(stakedLiquidityDelta).toInt128()\n            : int256(info.stakedLiquidityNet).add(stakedLiquidityDelta).toInt128();\n    }\n\n    /// @notice Clears tick data\n    /// @param self The mapping containing all initialized tick information for initialized ticks\n    /// @param tick The tick that will be cleared\n    function clear(mapping(int24 => Tick.Info) storage self, int24 tick) internal {\n        delete self[tick];\n    }\n\n    /// @notice Transitions to next tick as needed by price movement\n    /// @param self The mapping containing all tick information for initialized ticks\n    /// @param tick The destination tick of the transition\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n    /// @param secondsPerLiquidityCumulativeX128 The current seconds per liquidity\n    /// @param tickCumulative The tick * time elapsed since the pool was first initialized\n    /// @param time The current block.timestamp\n    /// @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n    /// @return nets The amount of liquidity and staked liquidity added (subtracted) when tick is crossed from left to right (right to left)\n    function cross(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tick,\n        uint256 feeGrowthGlobal0X128,\n        uint256 feeGrowthGlobal1X128,\n        uint160 secondsPerLiquidityCumulativeX128,\n        int56 tickCumulative,\n        uint32 time,\n        uint256 rewardGrowthGlobalX128\n    ) internal returns (LiquidityNets memory nets) {\n        Tick.Info storage info = self[tick];\n        info.feeGrowthOutside0X128 = feeGrowthGlobal0X128 - info.feeGrowthOutside0X128;\n        info.feeGrowthOutside1X128 = feeGrowthGlobal1X128 - info.feeGrowthOutside1X128;\n        info.rewardGrowthOutsideX128 = rewardGrowthGlobalX128 - info.rewardGrowthOutsideX128;\n        info.secondsPerLiquidityOutsideX128 = secondsPerLiquidityCumulativeX128 - info.secondsPerLiquidityOutsideX128;\n        info.tickCumulativeOutside = tickCumulative - info.tickCumulativeOutside;\n        info.secondsOutside = time - info.secondsOutside;\n        nets.liquidityNet = info.liquidityNet;\n        nets.stakedLiquidityNet = info.stakedLiquidityNet;\n    }\n}\n"
			},
			"contracts/core/libraries/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Safe casting methods\n/// @notice Contains methods for safely casting between types\nlibrary SafeCast {\n    /// @notice Cast a uint256 to a uint160, revert on overflow\n    /// @param y The uint256 to be downcasted\n    /// @return z The downcasted integer, now type uint160\n    function toUint160(uint256 y) internal pure returns (uint160 z) {\n        require((z = uint160(y)) == y);\n    }\n\n    /// @notice Cast a int256 to a int128, revert on overflow or underflow\n    /// @param y The int256 to be downcasted\n    /// @return z The downcasted integer, now type int128\n    function toInt128(int256 y) internal pure returns (int128 z) {\n        require((z = int128(y)) == y);\n    }\n\n    /// @notice Cast a uint256 to a int256, revert on overflow\n    /// @param y The uint256 to be casted\n    /// @return z The casted integer, now type int256\n    function toInt256(uint256 y) internal pure returns (int256 z) {\n        require(y < 2 ** 255);\n        z = int256(y);\n    }\n}\n"
			},
			"contracts/core/libraries/LowGasSafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.0;\n\n/// @title Optimized overflow and underflow safe math operations\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\nlibrary LowGasSafeMath {\n    /// @notice Returns x + y, reverts if sum overflows uint256\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x);\n    }\n\n    /// @notice Returns x - y, reverts if underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x);\n    }\n\n    /// @notice Returns x * y, reverts if overflows\n    /// @param x The multiplicand\n    /// @param y The multiplier\n    /// @return z The product of x and y\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(x == 0 || (z = x * y) / x == y);\n    }\n\n    /// @notice Returns x + y, reverts if overflows or underflows\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x + y) >= x == (y >= 0));\n    }\n\n    /// @notice Returns x - y, reverts if overflows or underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x - y) <= x == (y >= 0));\n    }\n}\n"
			},
			"contracts/core/interfaces/ICLPool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport \"./pool/ICLPoolConstants.sol\";\nimport \"./pool/ICLPoolState.sol\";\nimport \"./pool/ICLPoolDerivedState.sol\";\nimport \"./pool/ICLPoolActions.sol\";\nimport \"./pool/ICLPoolOwnerActions.sol\";\nimport \"./pool/ICLPoolEvents.sol\";\n\n/// @title The interface for a CL Pool\n/// @notice A CL pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface ICLPool is\n    ICLPoolConstants,\n    ICLPoolState,\n    ICLPoolDerivedState,\n    ICLPoolActions,\n    ICLPoolEvents,\n    ICLPoolOwnerActions\n{}\n"
			},
			"contracts/core/libraries/BitMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title BitMath\n/// @dev This library provides functionality for computing bit properties of an unsigned integer\nlibrary BitMath {\n    /// @notice Returns the index of the most significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n    /// @param x the value for which to compute the most significant bit, must be greater than 0\n    /// @return r the index of the most significant bit\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        if (x >= 0x100000000000000000000000000000000) {\n            x >>= 128;\n            r += 128;\n        }\n        if (x >= 0x10000000000000000) {\n            x >>= 64;\n            r += 64;\n        }\n        if (x >= 0x100000000) {\n            x >>= 32;\n            r += 32;\n        }\n        if (x >= 0x10000) {\n            x >>= 16;\n            r += 16;\n        }\n        if (x >= 0x100) {\n            x >>= 8;\n            r += 8;\n        }\n        if (x >= 0x10) {\n            x >>= 4;\n            r += 4;\n        }\n        if (x >= 0x4) {\n            x >>= 2;\n            r += 2;\n        }\n        if (x >= 0x2) r += 1;\n    }\n\n    /// @notice Returns the index of the least significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n    /// @param x the value for which to compute the least significant bit, must be greater than 0\n    /// @return r the index of the least significant bit\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        r = 255;\n        if (x & type(uint128).max > 0) {\n            r -= 128;\n        } else {\n            x >>= 128;\n        }\n        if (x & type(uint64).max > 0) {\n            r -= 64;\n        } else {\n            x >>= 64;\n        }\n        if (x & type(uint32).max > 0) {\n            r -= 32;\n        } else {\n            x >>= 32;\n        }\n        if (x & type(uint16).max > 0) {\n            r -= 16;\n        } else {\n            x >>= 16;\n        }\n        if (x & type(uint8).max > 0) {\n            r -= 8;\n        } else {\n            x >>= 8;\n        }\n        if (x & 0xf > 0) {\n            r -= 4;\n        } else {\n            x >>= 4;\n        }\n        if (x & 0x3 > 0) {\n            r -= 2;\n        } else {\n            x >>= 2;\n        }\n        if (x & 0x1 > 0) r -= 1;\n    }\n}\n"
			},
			"contracts/core/libraries/FixedPoint96.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.4.0;\n\n/// @title FixedPoint96\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n/// @dev Used in SqrtPriceMath.sol\nlibrary FixedPoint96 {\n    uint8 internal constant RESOLUTION = 96;\n    uint256 internal constant Q96 = 0x1000000000000000000000000;\n}\n"
			},
			"contracts/core/libraries/UnsafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math functions that do not check inputs or outputs\n/// @notice Contains methods that perform common math functions but do not do any overflow or underflow checks\nlibrary UnsafeMath {\n    /// @notice Returns ceil(x / y)\n    /// @dev division by 0 has unspecified behavior, and must be checked externally\n    /// @param x The dividend\n    /// @param y The divisor\n    /// @return z The quotient, ceil(x / y)\n    function divRoundingUp(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        assembly {\n            z := add(div(x, y), gt(mod(x, y), 0))\n        }\n    }\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface ICLPoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld, uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the gauge\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectFees(address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface ICLPoolOwnerActions {\n    /// @notice Collect the gauge fee accrued to the pool\n    /// @return amount0 The gauge fee collected in token0\n    /// @return amount1 The gauge fee collected in token1\n    function collectFees() external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface ICLPoolActions {\n    /// @notice Initialize function used in proxy deployment\n    /// @dev Can be called once only\n    /// Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @dev not locked because it initializes unlocked\n    /// @param _factory The CL factory contract address\n    /// @param _token0 The first token of the pool by address sort order\n    /// @param _token1 The second token of the pool by address sort order\n    /// @param _tickSpacing The pool tick spacing\n    /// @param _factoryRegistry The address of the factory registry managing the pool factory\n    /// @param _sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    function initialize(\n        address _factory,\n        address _token0,\n        address _token1,\n        int24 _tickSpacing,\n        address _factoryRegistry,\n        uint160 _sqrtPriceX96\n    ) external;\n\n    /// @notice Initialize gauge and nft manager\n    /// @dev Callable only once, by the gauge factory\n    /// @param _gauge The gauge corresponding to this pool\n    /// @param _nft The position manager used for position management\n    function setGaugeAndPositionManager(address _gauge, address _nft) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(address recipient, int24 tickLower, int24 tickUpper, uint128 amount, bytes calldata data)\n        external\n        returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @param owner Owner of the position in the pool (nft manager or gauge)\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested,\n        address owner\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(int24 tickLower, int24 tickUpper, uint128 amount)\n        external\n        returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @param owner Owner of the position in the pool (nft manager or gauge)\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(int24 tickLower, int24 tickUpper, uint128 amount, address owner)\n        external\n        returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Convert existing liquidity into staked liquidity\n    /// @notice Only callable by the gauge associated with this pool\n    /// @param stakedLiquidityDelta The amount by which to increase or decrease the staked liquidity\n    /// @param tickLower The lower tick of the position for which to stake liquidity\n    /// @param tickUpper The upper tick of the position for which to stake liquidity\n    /// @param positionUpdate If the nft and gauge position should be updated\n    function stake(int128 stakedLiquidityDelta, int24 tickLower, int24 tickUpper, bool positionUpdate) external;\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(address recipient, uint256 amount0, uint256 amount1, bytes calldata data) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n\n    /// @notice Updates rewardGrowthGlobalX128 every time when any tick is crossed,\n    /// or when any position is staked/unstaked from the gauge\n    function updateRewardsGrowthGlobal() external;\n\n    /// @notice Syncs rewards with gauge\n    /// @param rewardRate the rate rewards being distributed during the epoch\n    /// @param rewardReserve the available rewards to be distributed during the epoch\n    /// @param periodFinish the end of the current period of rewards, updated once per epoch\n    function syncReward(uint256 rewardRate, uint256 rewardReserve, uint256 periodFinish) external;\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface ICLPoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (int56 tickCumulativeInside, uint160 secondsPerLiquidityInsideX128, uint32 secondsInside);\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface ICLPoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            bool unlocked\n        );\n\n    /// @notice The pool's swap & flash fee in pips, i.e. 1e-6\n    /// @dev Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\n    /// @return The swap & flash fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool's unstaked fee in pips, i.e. 1e-6\n    /// @dev Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\n    /// @return The unstaked fee\n    function unstakedFee() external view returns (uint24);\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function rewardGrowthGlobalX128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the gauge\n    /// @dev Gauge fees will never exceed uint128 max in either token\n    function gaugeFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice the emission rate of time-based farming\n    function rewardRate() external view returns (uint256);\n\n    /// @notice acts as a virtual reserve that holds information on how many rewards are yet to be distributed\n    function rewardReserve() external view returns (uint256);\n\n    /// @notice timestamp of the end of the current epoch's rewards\n    function periodFinish() external view returns (uint256);\n\n    /// @notice last time the rewardReserve and rewardRate were updated\n    function lastUpdated() external view returns (uint32);\n\n    /// @notice tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinish\n    /// @notice this amount is rolled over on the next call to notifyRewardAmount\n    /// @dev rollover will always be smaller than the rewards distributed that epoch\n    function rollover() external view returns (uint256);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    /// @dev This value includes staked liquidity\n    function liquidity() external view returns (uint128);\n\n    /// @notice The currently in range staked liquidity available to the pool\n    /// @dev This value has no relationship to the total staked liquidity across all ticks\n    function stakedLiquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            int128 stakedLiquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            uint256 rewardGrowthOutsideX128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n\n    /// @notice Returns data about reward growth within a tick range.\n    /// RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations.\n    /// @dev Used in gauge reward/earned calculations\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @param _rewardGrowthGlobalX128 a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)\n    /// @return rewardGrowthInsideX128 The reward growth in the range\n    function getRewardGrowthInside(int24 tickLower, int24 tickUpper, uint256 _rewardGrowthGlobalX128)\n        external\n        view\n        returns (uint256 rewardGrowthInsideX128);\n}\n"
			},
			"contracts/core/interfaces/pool/ICLPoolConstants.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are not defined as immutable (due to proxy pattern) but are effectively immutable.\n/// @notice i.e., the methods will always return the same values\ninterface ICLPoolConstants {\n    /// @notice The contract that deployed the pool, which must adhere to the ICLFactory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The gauge corresponding to this pool\n    /// @return The gauge contract address\n    function gauge() external view returns (address);\n\n    /// @notice The nft manager\n    /// @return The nft manager contract address\n    function nft() external view returns (address);\n\n    /// @notice The factory registry that manages pool <> gauge <> reward factory relationships\n    /// @return The factory registry contract address\n    function factoryRegistry() external view returns (address);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"contracts/core/interfaces/IVoter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport {IVotingEscrow} from \"contracts/core/interfaces/IVotingEscrow.sol\";\nimport {IFactoryRegistry} from \"contracts/core/interfaces/IFactoryRegistry.sol\";\n\ninterface IVoter {\n    function ve() external view returns (IVotingEscrow);\n\n    function vote(uint256 _tokenId, address[] calldata _poolVote, uint256[] calldata _weights) external;\n\n    function gauges(address _pool) external view returns (address);\n\n    function gaugeToFees(address _gauge) external view returns (address);\n\n    function gaugeToBribes(address _gauge) external view returns (address);\n\n    function createGauge(address _poolFactory, address _pool) external returns (address);\n\n    function distribute(address gauge) external;\n\n    function factoryRegistry() external view returns (IFactoryRegistry);\n\n    /// @dev Utility to distribute to gauges of pools in array.\n    /// @param _gauges Array of gauges to distribute to.\n    function distribute(address[] memory _gauges) external;\n\n    function isAlive(address _gauge) external view returns (bool);\n\n    function killGauge(address _gauge) external;\n\n    function emergencyCouncil() external view returns (address);\n\n    /// @notice Claim emissions from gauges.\n    /// @param _gauges Array of gauges to collect emissions from.\n    function claimRewards(address[] memory _gauges) external;\n\n    /// @notice Claim fees for a given NFT.\n    /// @dev Utility to help batch fee claims.\n    /// @param _fees    Array of FeesVotingReward contracts to collect from.\n    /// @param _tokens  Array of tokens that are used as fees.\n    /// @param _tokenId Id of veNFT that you wish to claim fees for.\n    function claimFees(address[] memory _fees, address[][] memory _tokens, uint256 _tokenId) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.7.00;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"contracts/core/interfaces/IVotingEscrow.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity =0.7.6;\n\ninterface IVotingEscrow {\n    function team() external returns (address);\n\n    /// @notice Deposit `_value` tokens for `msg.sender` and lock for `_lockDuration`\n    /// @param _value Amount to deposit\n    /// @param _lockDuration Number of seconds to lock tokens for (rounded down to nearest week)\n    /// @return TokenId of created veNFT\n    function createLock(uint256 _value, uint256 _lockDuration) external returns (uint256);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "berlin"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers.  Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":348:702  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":348:702  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":538:700  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x80\n      dup2\n      add\n      0x60\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_9\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_4:\n      0x40\n      dup1\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n    tag_9:\n      shl(0xe1, 0x0a85bd01)\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204bac764cc52b3e267783f0752d5167bbd67fc217e22fc87ecfaf5e64d6887deb64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610159806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b6100f66004803603608081101561004657600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561008157600080fd5b82018360208201111561009357600080fd5b803590602001918460018302840111640100000000831117156100b557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610113945050505050565b604080516001600160e01b03199092168252519081900360200190f35b630a85bd0160e11b94935050505056fea26469706673582212204bac764cc52b3e267783f0752d5167bbd67fc217e22fc87ecfaf5e64d6887deb64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x113 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xAC PUSH23 0x4CC52B3E267783F0752D5167BBD67FC217E22FC87ECFAF 0x5E PUSH5 0xD6887DEB64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "348:354:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b6100f66004803603608081101561004657600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561008157600080fd5b82018360208201111561009357600080fd5b803590602001918460018302840111640100000000831117156100b557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610113945050505050565b604080516001600160e01b03199092168252519081900360200190f35b630a85bd0160e11b94935050505056fea26469706673582212204bac764cc52b3e267783f0752d5167bbd67fc217e22fc87ecfaf5e64d6887deb64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x113 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xAC PUSH23 0x4CC52B3E267783F0752D5167BBD67FC217E22FC87ECFAF 0x5E PUSH5 0xD6887DEB64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "348:354:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;538:162;;;;;;;;;;;;;;;;-1:-1:-1;;;;;538:162:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;538:162:0;;-1:-1:-1;538:162:0;;-1:-1:-1;;;;;538:162:0:i;:::-;;;;-1:-1:-1;;;;;;538:162:0;;;;;;;;;;;;;;;-1:-1:-1;;;538:162:0;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "69000",
								"executionCost": "117",
								"totalCost": "69117"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 348,
									"end": 702,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 702,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 702,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 702,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 348,
									"end": 702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 702,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 348,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 702,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 348,
									"end": 702,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 702,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 348,
									"end": 702,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 348,
									"end": 702,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 348,
									"end": 702,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 348,
									"end": 702,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 702,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 348,
									"end": 702,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 702,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 702,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 348,
									"end": 702,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 702,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bac764cc52b3e267783f0752d5167bbd67fc217e22fc87ecfaf5e64d6887deb64736f6c63430007060033",
									".code": [
										{
											"begin": 348,
											"end": 702,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 702,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers.  Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":{\"keccak256\":\"0xdb2133d55b8f3a94313af8f4371ae0501a58e412d471b03d8581214c5ea2ce33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cea1e4bf769f27c8c9c1442f1518b49ef6c8b71a4bd4ce88353da9e9a8ba1704\",\"dweb:/ipfs/QmR1b8sj7fxgeHqDksV4GYTjZS1qajWC3yg9VCMUJus2bF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd03561349430ee87f356fb47017ebe9137fd8aab8380e7a1c3b270c7fba62376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e747e57851bbd7685566623148b778542e0280aa0f8a8fe0ba54b4c6127f5d65\",\"dweb:/ipfs/QmScpCryhDC3Ag12jgn6sCvrYvEQ3qeapxbcfuv1oRE4B2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC-721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd03561349430ee87f356fb47017ebe9137fd8aab8380e7a1c3b270c7fba62376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e747e57851bbd7685566623148b778542e0280aa0f8a8fe0ba54b4c6127f5d65\",\"dweb:/ipfs/QmScpCryhDC3Ag12jgn6sCvrYvEQ3qeapxbcfuv1oRE4B2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/INonfungiblePositionManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenDescriptor",
									"type": "address"
								}
							],
							"name": "TokenDescriptorChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "TransferOwnership",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "int24",
											"name": "tickSpacing",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceX96",
											"type": "uint160"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenDescriptor",
									"type": "address"
								}
							],
							"name": "setTokenDescriptor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenDescriptor",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							},
							"TokenDescriptorChanged(address)": {
								"params": {
									"tokenDescriptor": "Address of the new Token Descriptor"
								}
							},
							"TransferOwnership(address)": {
								"params": {
									"owner": "Address of the new Owner"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"details": "The use of this function can cause a loss to users of the NonfungiblePositionManagerfor tokens that have very high decimals.The amount of tokens necessary for the loss is: 3.4028237e+38.This is equivalent to 1e20 value with 18 decimals.",
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"mint((address,address,int24,int24,int24,uint256,uint256,uint256,uint256,address,uint256,uint160))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickSpacing": "The tick spacing associated with the pool",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"setOwner(address)": {
								"params": {
									"_owner": "Address of the new Owner to be chosen"
								}
							},
							"setTokenDescriptor(address)": {
								"params": {
									"_tokenDescriptor": "Address of the new Token Descriptor to be chosen"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"mint((address,address,int24,int24,int24,uint256,uint256,uint256,uint256,address,uint256,uint160))": "b5007d1f",
							"owner()": "8da5cb5b",
							"positions(uint256)": "99fbab88",
							"setOwner(address)": "13af4035",
							"setTokenDescriptor(address)": "b6dc7ea3",
							"tokenDescriptor()": "5a9d7a68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenDescriptor\",\"type\":\"address\"}],\"name\":\"TokenDescriptorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenDescriptor\",\"type\":\"address\"}],\"name\":\"setTokenDescriptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenDescriptor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}},\"TokenDescriptorChanged(address)\":{\"params\":{\"tokenDescriptor\":\"Address of the new Token Descriptor\"}},\"TransferOwnership(address)\":{\"params\":{\"owner\":\"Address of the new Owner\"}}},\"kind\":\"dev\",\"methods\":{\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"details\":\"The use of this function can cause a loss to users of the NonfungiblePositionManagerfor tokens that have very high decimals.The amount of tokens necessary for the loss is: 3.4028237e+38.This is equivalent to 1e20 value with 18 decimals.\",\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"mint((address,address,int24,int24,int24,uint256,uint256,uint256,uint256,address,uint256,uint160))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickSpacing\":\"The tick spacing associated with the pool\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"setOwner(address)\":{\"params\":{\"_owner\":\"Address of the new Owner to be chosen\"}},\"setTokenDescriptor(address)\":{\"params\":{\"_tokenDescriptor\":\"Address of the new Token Descriptor to be chosen\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"},\"TokenDescriptorChanged(address)\":{\"notice\":\"Emitted when a new Token Descriptor is set\"},\"TransferOwnership(address)\":{\"notice\":\"Emitted when a new Owner is set\"}},\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipientUsed to update staked positions before deposit and withdraw\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,int24,int24,int24,uint256,uint256,uint256,uint256,address,uint256,uint160))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"owner()\":{\"notice\":\"Returns the address of the Owner, that is allowed to set a new TokenDescriptor\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"setOwner(address)\":{\"notice\":\"Sets a new Owner address\"},\"setTokenDescriptor(address)\":{\"notice\":\"Sets a new Token Descriptor\"},\"tokenDescriptor()\":{\"notice\":\"Returns the address of the Token Descriptor, that handles generating token URIs for Positions\"}},\"notice\":\"Wraps CL positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xfe7d9ee66050cd945f09f5a54bada3d8eb3b024aedc37b9c521703c61e3ac892\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f5d4cc3b9d41b44b2419a72bc3cd27bc0608e0b488196348b4a2e342d2114467\",\"dweb:/ipfs/QmYKKT5uccPQQSBT54wN2yZV5phs4kPYr76WvUerYiKbWp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							},
							"TokenDescriptorChanged(address)": {
								"notice": "Emitted when a new Token Descriptor is set"
							},
							"TransferOwnership(address)": {
								"notice": "Emitted when a new Owner is set"
							}
						},
						"kind": "user",
						"methods": {
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipientUsed to update staked positions before deposit and withdraw"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,int24,int24,int24,uint256,uint256,uint256,uint256,address,uint256,uint160))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"owner()": {
								"notice": "Returns the address of the Owner, that is allowed to set a new TokenDescriptor"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							},
							"setOwner(address)": {
								"notice": "Sets a new Owner address"
							},
							"setTokenDescriptor(address)": {
								"notice": "Sets a new Token Descriptor"
							},
							"tokenDescriptor()": {
								"notice": "Returns the address of the Token Descriptor, that handles generating token URIs for Positions"
							}
						},
						"notice": "Wraps CL positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				}
			},
			"contracts/core/VeloStake.sol": {
				"ICLGauge": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimed0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "claimed1",
									"type": "uint256"
								}
							],
							"name": "ClaimFees",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ClaimRewards",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint128",
									"name": "liquidityToStake",
									"type": "uint128"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "NotifyReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint128",
									"name": "liquidityToStake",
									"type": "uint128"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fees0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fees1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feesVotingReward",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "left",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_left",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract INonfungiblePositionManager",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "notifyRewardWithoutClaim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pool",
							"outputs": [
								{
									"internalType": "contract ICLPool",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "rewardGrowthInside",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewardRateByEpoch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "stakedByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stakedContains",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								}
							],
							"name": "stakedLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								}
							],
							"name": "stakedValues",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "voter",
							"outputs": [
								{
									"internalType": "contract IVoter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256)": "b6b55f25",
							"earned(address,uint256)": "3e491d47",
							"fees0()": "93f1c442",
							"fees1()": "4c02a21c",
							"feesVotingReward()": "0fe2f711",
							"getReward(address)": "c00007b0",
							"getReward(uint256)": "1c4b774b",
							"isPool()": "e2e1c6db",
							"lastUpdateTime(uint256)": "4bcddb1f",
							"left()": "16e64048",
							"nft()": "47ccca02",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"notifyRewardWithoutClaim(uint256)": "dcdc18dc",
							"periodFinish()": "ebe2b12b",
							"pool()": "16f0115b",
							"rewardGrowthInside(uint256)": "ac789c08",
							"rewardRate()": "7b0a47ee",
							"rewardRateByEpoch(uint256)": "94af5b63",
							"rewardToken()": "f7c618c1",
							"rewards(uint256)": "f301af42",
							"stakedByIndex(address,uint256)": "38463937",
							"stakedContains(address,uint256)": "c69deec5",
							"stakedLength(address)": "ae775c32",
							"stakedValues(address)": "4b937763",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"voter()": "46c96aac",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimed0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimed1\",\"type\":\"uint256\"}],\"name\":\"ClaimFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidityToStake\",\"type\":\"uint128\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NotifyReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"liquidityToStake\",\"type\":\"uint128\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fees0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fees1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesVotingReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"left\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_left\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notifyRewardWithoutClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract ICLPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rewardGrowthInside\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardRateByEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"stakedByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stakedContains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"stakedLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"stakedValues\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voter\",\"outputs\":[{\"internalType\":\"contract IVoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/VeloStake.sol\":\"ICLGauge\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":{\"keccak256\":\"0xdb2133d55b8f3a94313af8f4371ae0501a58e412d471b03d8581214c5ea2ce33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cea1e4bf769f27c8c9c1442f1518b49ef6c8b71a4bd4ce88353da9e9a8ba1704\",\"dweb:/ipfs/QmR1b8sj7fxgeHqDksV4GYTjZS1qajWC3yg9VCMUJus2bF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd03561349430ee87f356fb47017ebe9137fd8aab8380e7a1c3b270c7fba62376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e747e57851bbd7685566623148b778542e0280aa0f8a8fe0ba54b4c6127f5d65\",\"dweb:/ipfs/QmScpCryhDC3Ag12jgn6sCvrYvEQ3qeapxbcfuv1oRE4B2\"]},\"contracts/core/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xfe7d9ee66050cd945f09f5a54bada3d8eb3b024aedc37b9c521703c61e3ac892\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f5d4cc3b9d41b44b2419a72bc3cd27bc0608e0b488196348b4a2e342d2114467\",\"dweb:/ipfs/QmYKKT5uccPQQSBT54wN2yZV5phs4kPYr76WvUerYiKbWp\"]},\"contracts/core/VeloStake.sol\":{\"keccak256\":\"0x3e2baa012a3b0975e1820fc4a1be113422631c4885b360b5a1c3bcfe09b1f11b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a57b925bf793d34da5297305b963f56867ac55f09d789b27f914559041bfa7ca\",\"dweb:/ipfs/QmaxEaweUjoWBtWKGgbRRvo47nzk2eWoer1EH4cKJkBwGN\"]},\"contracts/core/interfaces/ICLFactory.sol\":{\"keccak256\":\"0x2b8dda4776bd095c900e408b2cb21324f72694bed75c69972cd0cb3b16b1bff0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d37ae64eabec6197ef78c9fd1d4c699398937ca5f3e9f852b11b32082ab2e680\",\"dweb:/ipfs/QmWLLA5bV17Q3fS5fDdukXsaquZ5sNoP8KvBAEfYQHfK3Z\"]},\"contracts/core/interfaces/ICLPool.sol\":{\"keccak256\":\"0x0a11e1392c4b5ef4e47a3415a9b1a2118e9370d52a253dbd1c910bbbb615e91f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0c04e689e0589f3d67961fd5febcdc0f39c0700aeebef2537ccfb29ddba29de1\",\"dweb:/ipfs/QmbuthGhVJsx45dpgF7p71VSuLshREAsaLJu34HQNgRJoz\"]},\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]},\"contracts/core/interfaces/IFactoryRegistry.sol\":{\"keccak256\":\"0xa2dbe19a5c9e221ffd8e4612ee8a4aa1233ab0ad059d4b7d91a8dca1153bcea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a01d481d3a1f5172b8601d267439e24662849d7ebb3e1e66ec46d541e57831\",\"dweb:/ipfs/QmYG56TEtS8dwHrNaHxGrTp8r6cDzRkuGKsHBbiToUVEvX\"]},\"contracts/core/interfaces/IVoter.sol\":{\"keccak256\":\"0x029239646ad77a70b26a702b7e286521a03d5b89d148ff7c13d9bf56f6203187\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eccfb9403ee8f5e7f604eccb0cafcbd047c1f73371537227011e6d557895fa68\",\"dweb:/ipfs/QmTjDHzzKTzkYhTeiWA1po8YL3USKkkMZSxZixVgsSQcXK\"]},\"contracts/core/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x17ee815f29f7bc6a1528203976ed5bfdd945354dd72a7d322e8b092e331beb3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9845c5056470191730c8a8688663bc9808172e57395c1c6053b5145bf9fd5098\",\"dweb:/ipfs/QmXyoRGbDe6KPngPsKXWZCyLLdmRTFKdhVD5Gf1Y15rG7a\"]},\"contracts/core/interfaces/callback/ICLMintCallback.sol\":{\"keccak256\":\"0x22d4ed43f7d7313e676e80f7ae3315f53c3a84fbf256efae5116ef0aba32c1e8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a21d9618b9a9c2fe2cf35d9d6d608dd02a112bd05e6020fbe71e7e09064c2be7\",\"dweb:/ipfs/QmeBQiyVmxVTPT3ftVFDkiDVgZLMar6SQegryLC7A3jmLr\"]},\"contracts/core/interfaces/callback/ICLSwapCallback.sol\":{\"keccak256\":\"0xb93e1ef2be3090a64b3b024f60253aef64b875f61dffaef8b9231351f8054948\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b16ccd544a6a551c977b7a7d6b6b9704c68e86624d66ecb16d945d3b88239458\",\"dweb:/ipfs/QmPBP5K81AFfHazhbbVb9ZXh6hzKeLqZcEUxnrkKNY7z2L\"]},\"contracts/core/interfaces/pool/ICLPoolActions.sol\":{\"keccak256\":\"0x7699f31261ab40982e34febe16128f1edfdad39075969195301352ea66bcac40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://074f1c470e11f30d0fae8b95b963c9d19dcbd2c5bd17ad4ebba95c5f0f073044\",\"dweb:/ipfs/QmdDWMUspgBXfLhcxqESez9rSwA8JYNRycmhkhuKoDCWqJ\"]},\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":{\"keccak256\":\"0xfad00d4ca1a40ef27d9614a98483ca67c4491b6f19e376901745c57a6949b512\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5ea522565efb803d146673ff9e37aa090a5abff334fea587da62f4fb5d6647\",\"dweb:/ipfs/QmVRPscHFVjYFvRbJf41zVLtA2jVLbEUH66KGtEzspXnWS\"]},\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]},\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":{\"keccak256\":\"0x32fbcac8952f1c5c44b466b0e1c28634ce71372c0f65242aa0d821cebdddcc2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f22382292967f97640f84a7edfa01cf7deb303bf882344b9985007f1dcbef2\",\"dweb:/ipfs/Qmej7vWwun9fRBCrcvzPHdZP1jtLSCxJtjTSdkVTcgWeAE\"]},\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":{\"keccak256\":\"0xeafd14ae3e15c9f663507e004c599618bfd5d2a90d58b3b450f9372f9e3f54f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49472c8cf06dc7084e22fc57ffdce860aa7a9ff77f12e4bef0c13a078bbc5831\",\"dweb:/ipfs/Qmd29vWULezsJJzhw3wZxsU6Hsng5949v2TiVCbdga4Vqe\"]},\"contracts/core/interfaces/pool/ICLPoolState.sol\":{\"keccak256\":\"0xe57d65825a097d6f0ab55d7ae39b528695b3df65320ed524124fbb55949bfcf9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b63b25beebe612acfd564f40b0d95b3844ee71bf969a3357419e7a54f1ece961\",\"dweb:/ipfs/Qmdk3mNLz3cSZscbXFsJp69gjgxFcBv6K5mdc6tjnmtFSR\"]},\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0xae7f7b0bbbd864bc1761ec5eac62ec761f2ef168d32ef9e914e337b077ebba4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b57b2f04997cd6055404801982f57083f8e9242935b3ebf3bbed032f5035f2f1\",\"dweb:/ipfs/QmdxHVMQEA32jnyroWZG2sk4NPtQFWXPfkDDYvRtK2APFA\"]},\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/Position.sol\":{\"keccak256\":\"0xcf1e701e3fae35be8b77ff1217cfdd23d33eb16fd3cec70be8ea6888f87af285\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8c89746dd30e76cc029d4e090e402b28aae0659cc71800758b99137dfe85f55\",\"dweb:/ipfs/QmY4Ft1YBLqzqwTgNdpCyRd7WrY78zKgg4Ddv2zqZiBEiE\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xefd51a282ca9fbc89394776e7f5c6f96fa084ca26b71d99727780332c87d1843\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f09b719eff523f65d0d11fc476b9735e1390018d5ff585991d0fc644e913ecf\",\"dweb:/ipfs/QmNiZxxQhqteYgJdhCQ3cZ4S7bTQf2AQRUJqMVvPY3doot\"]},\"contracts/core/libraries/Tick.sol\":{\"keccak256\":\"0xb5ebd80c667f4501dba65f4e39e51ff36e5334480849e0ed8604222d20b4ed1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://246f590513441ac0f307170f5099e4a0c0b1f579406fc30b909b249858dbd099\",\"dweb:/ipfs/QmaA5uC3eck7nMqyJbpSPEhmXmAXaKLNBSS1Lfnzzzjc95\"]},\"contracts/core/libraries/TickBitmap.sol\":{\"keccak256\":\"0xd829fadfca3f8f5870c877c7eeceb4a692603c16b711174526129987e8745f5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d2cbf3802f7e611708a45bc390ee9307d947e49b348294591659444b9989c05\",\"dweb:/ipfs/Qmcny7JNyVYCtcZG3b1BL4ThuKREmAkE9ZKaC3i32pnt7X\"]},\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]},\"contracts/core/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3bbe07a0684d98efe73f7012e446873494e74983e1f75a16d42c25b956d61651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78ac9659c70ba3253a6e526ba5a144994fb3d32df2e9537787eeb45aae320aec\",\"dweb:/ipfs/QmbaZRbPP2wFZ9coJd2iyPM37hm3kXzPLuRtL6KKr1MCSL\"]},\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"contracts/libraries/VelodromeTimeLibrary.sol\":{\"keccak256\":\"0x53d5f0b1b864a7dc552ef0291526938a36b1936517d17f62515bb6ba51c1260d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbc80fd3b18f04224a2a813d6c20a305c7e0479d6414a78d482b45635bc97dba\",\"dweb:/ipfs/QmQFbXCkjzeFgY5M8DyeKZjxeuN8xGdmUmjNH7FNMkLi8T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/VeloStake.sol\":\"IERC20\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":{\"keccak256\":\"0xdb2133d55b8f3a94313af8f4371ae0501a58e412d471b03d8581214c5ea2ce33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cea1e4bf769f27c8c9c1442f1518b49ef6c8b71a4bd4ce88353da9e9a8ba1704\",\"dweb:/ipfs/QmR1b8sj7fxgeHqDksV4GYTjZS1qajWC3yg9VCMUJus2bF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd03561349430ee87f356fb47017ebe9137fd8aab8380e7a1c3b270c7fba62376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e747e57851bbd7685566623148b778542e0280aa0f8a8fe0ba54b4c6127f5d65\",\"dweb:/ipfs/QmScpCryhDC3Ag12jgn6sCvrYvEQ3qeapxbcfuv1oRE4B2\"]},\"contracts/core/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xfe7d9ee66050cd945f09f5a54bada3d8eb3b024aedc37b9c521703c61e3ac892\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f5d4cc3b9d41b44b2419a72bc3cd27bc0608e0b488196348b4a2e342d2114467\",\"dweb:/ipfs/QmYKKT5uccPQQSBT54wN2yZV5phs4kPYr76WvUerYiKbWp\"]},\"contracts/core/VeloStake.sol\":{\"keccak256\":\"0x3e2baa012a3b0975e1820fc4a1be113422631c4885b360b5a1c3bcfe09b1f11b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a57b925bf793d34da5297305b963f56867ac55f09d789b27f914559041bfa7ca\",\"dweb:/ipfs/QmaxEaweUjoWBtWKGgbRRvo47nzk2eWoer1EH4cKJkBwGN\"]},\"contracts/core/interfaces/ICLFactory.sol\":{\"keccak256\":\"0x2b8dda4776bd095c900e408b2cb21324f72694bed75c69972cd0cb3b16b1bff0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d37ae64eabec6197ef78c9fd1d4c699398937ca5f3e9f852b11b32082ab2e680\",\"dweb:/ipfs/QmWLLA5bV17Q3fS5fDdukXsaquZ5sNoP8KvBAEfYQHfK3Z\"]},\"contracts/core/interfaces/ICLPool.sol\":{\"keccak256\":\"0x0a11e1392c4b5ef4e47a3415a9b1a2118e9370d52a253dbd1c910bbbb615e91f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0c04e689e0589f3d67961fd5febcdc0f39c0700aeebef2537ccfb29ddba29de1\",\"dweb:/ipfs/QmbuthGhVJsx45dpgF7p71VSuLshREAsaLJu34HQNgRJoz\"]},\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]},\"contracts/core/interfaces/IFactoryRegistry.sol\":{\"keccak256\":\"0xa2dbe19a5c9e221ffd8e4612ee8a4aa1233ab0ad059d4b7d91a8dca1153bcea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a01d481d3a1f5172b8601d267439e24662849d7ebb3e1e66ec46d541e57831\",\"dweb:/ipfs/QmYG56TEtS8dwHrNaHxGrTp8r6cDzRkuGKsHBbiToUVEvX\"]},\"contracts/core/interfaces/IVoter.sol\":{\"keccak256\":\"0x029239646ad77a70b26a702b7e286521a03d5b89d148ff7c13d9bf56f6203187\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eccfb9403ee8f5e7f604eccb0cafcbd047c1f73371537227011e6d557895fa68\",\"dweb:/ipfs/QmTjDHzzKTzkYhTeiWA1po8YL3USKkkMZSxZixVgsSQcXK\"]},\"contracts/core/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x17ee815f29f7bc6a1528203976ed5bfdd945354dd72a7d322e8b092e331beb3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9845c5056470191730c8a8688663bc9808172e57395c1c6053b5145bf9fd5098\",\"dweb:/ipfs/QmXyoRGbDe6KPngPsKXWZCyLLdmRTFKdhVD5Gf1Y15rG7a\"]},\"contracts/core/interfaces/callback/ICLMintCallback.sol\":{\"keccak256\":\"0x22d4ed43f7d7313e676e80f7ae3315f53c3a84fbf256efae5116ef0aba32c1e8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a21d9618b9a9c2fe2cf35d9d6d608dd02a112bd05e6020fbe71e7e09064c2be7\",\"dweb:/ipfs/QmeBQiyVmxVTPT3ftVFDkiDVgZLMar6SQegryLC7A3jmLr\"]},\"contracts/core/interfaces/callback/ICLSwapCallback.sol\":{\"keccak256\":\"0xb93e1ef2be3090a64b3b024f60253aef64b875f61dffaef8b9231351f8054948\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b16ccd544a6a551c977b7a7d6b6b9704c68e86624d66ecb16d945d3b88239458\",\"dweb:/ipfs/QmPBP5K81AFfHazhbbVb9ZXh6hzKeLqZcEUxnrkKNY7z2L\"]},\"contracts/core/interfaces/pool/ICLPoolActions.sol\":{\"keccak256\":\"0x7699f31261ab40982e34febe16128f1edfdad39075969195301352ea66bcac40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://074f1c470e11f30d0fae8b95b963c9d19dcbd2c5bd17ad4ebba95c5f0f073044\",\"dweb:/ipfs/QmdDWMUspgBXfLhcxqESez9rSwA8JYNRycmhkhuKoDCWqJ\"]},\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":{\"keccak256\":\"0xfad00d4ca1a40ef27d9614a98483ca67c4491b6f19e376901745c57a6949b512\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5ea522565efb803d146673ff9e37aa090a5abff334fea587da62f4fb5d6647\",\"dweb:/ipfs/QmVRPscHFVjYFvRbJf41zVLtA2jVLbEUH66KGtEzspXnWS\"]},\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]},\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":{\"keccak256\":\"0x32fbcac8952f1c5c44b466b0e1c28634ce71372c0f65242aa0d821cebdddcc2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f22382292967f97640f84a7edfa01cf7deb303bf882344b9985007f1dcbef2\",\"dweb:/ipfs/Qmej7vWwun9fRBCrcvzPHdZP1jtLSCxJtjTSdkVTcgWeAE\"]},\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":{\"keccak256\":\"0xeafd14ae3e15c9f663507e004c599618bfd5d2a90d58b3b450f9372f9e3f54f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49472c8cf06dc7084e22fc57ffdce860aa7a9ff77f12e4bef0c13a078bbc5831\",\"dweb:/ipfs/Qmd29vWULezsJJzhw3wZxsU6Hsng5949v2TiVCbdga4Vqe\"]},\"contracts/core/interfaces/pool/ICLPoolState.sol\":{\"keccak256\":\"0xe57d65825a097d6f0ab55d7ae39b528695b3df65320ed524124fbb55949bfcf9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b63b25beebe612acfd564f40b0d95b3844ee71bf969a3357419e7a54f1ece961\",\"dweb:/ipfs/Qmdk3mNLz3cSZscbXFsJp69gjgxFcBv6K5mdc6tjnmtFSR\"]},\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0xae7f7b0bbbd864bc1761ec5eac62ec761f2ef168d32ef9e914e337b077ebba4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b57b2f04997cd6055404801982f57083f8e9242935b3ebf3bbed032f5035f2f1\",\"dweb:/ipfs/QmdxHVMQEA32jnyroWZG2sk4NPtQFWXPfkDDYvRtK2APFA\"]},\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/Position.sol\":{\"keccak256\":\"0xcf1e701e3fae35be8b77ff1217cfdd23d33eb16fd3cec70be8ea6888f87af285\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8c89746dd30e76cc029d4e090e402b28aae0659cc71800758b99137dfe85f55\",\"dweb:/ipfs/QmY4Ft1YBLqzqwTgNdpCyRd7WrY78zKgg4Ddv2zqZiBEiE\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xefd51a282ca9fbc89394776e7f5c6f96fa084ca26b71d99727780332c87d1843\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f09b719eff523f65d0d11fc476b9735e1390018d5ff585991d0fc644e913ecf\",\"dweb:/ipfs/QmNiZxxQhqteYgJdhCQ3cZ4S7bTQf2AQRUJqMVvPY3doot\"]},\"contracts/core/libraries/Tick.sol\":{\"keccak256\":\"0xb5ebd80c667f4501dba65f4e39e51ff36e5334480849e0ed8604222d20b4ed1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://246f590513441ac0f307170f5099e4a0c0b1f579406fc30b909b249858dbd099\",\"dweb:/ipfs/QmaA5uC3eck7nMqyJbpSPEhmXmAXaKLNBSS1Lfnzzzjc95\"]},\"contracts/core/libraries/TickBitmap.sol\":{\"keccak256\":\"0xd829fadfca3f8f5870c877c7eeceb4a692603c16b711174526129987e8745f5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d2cbf3802f7e611708a45bc390ee9307d947e49b348294591659444b9989c05\",\"dweb:/ipfs/Qmcny7JNyVYCtcZG3b1BL4ThuKREmAkE9ZKaC3i32pnt7X\"]},\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]},\"contracts/core/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3bbe07a0684d98efe73f7012e446873494e74983e1f75a16d42c25b956d61651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78ac9659c70ba3253a6e526ba5a144994fb3d32df2e9537787eeb45aae320aec\",\"dweb:/ipfs/QmbaZRbPP2wFZ9coJd2iyPM37hm3kXzPLuRtL6KKr1MCSL\"]},\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"contracts/libraries/VelodromeTimeLibrary.sol\":{\"keccak256\":\"0x53d5f0b1b864a7dc552ef0291526938a36b1936517d17f62515bb6ba51c1260d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbc80fd3b18f04224a2a813d6c20a305c7e0479d6414a78d482b45635bc97dba\",\"dweb:/ipfs/QmQFbXCkjzeFgY5M8DyeKZjxeuN8xGdmUmjNH7FNMkLi8T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/VeloStake.sol\":\"IERC721\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":{\"keccak256\":\"0xdb2133d55b8f3a94313af8f4371ae0501a58e412d471b03d8581214c5ea2ce33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cea1e4bf769f27c8c9c1442f1518b49ef6c8b71a4bd4ce88353da9e9a8ba1704\",\"dweb:/ipfs/QmR1b8sj7fxgeHqDksV4GYTjZS1qajWC3yg9VCMUJus2bF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd03561349430ee87f356fb47017ebe9137fd8aab8380e7a1c3b270c7fba62376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e747e57851bbd7685566623148b778542e0280aa0f8a8fe0ba54b4c6127f5d65\",\"dweb:/ipfs/QmScpCryhDC3Ag12jgn6sCvrYvEQ3qeapxbcfuv1oRE4B2\"]},\"contracts/core/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xfe7d9ee66050cd945f09f5a54bada3d8eb3b024aedc37b9c521703c61e3ac892\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f5d4cc3b9d41b44b2419a72bc3cd27bc0608e0b488196348b4a2e342d2114467\",\"dweb:/ipfs/QmYKKT5uccPQQSBT54wN2yZV5phs4kPYr76WvUerYiKbWp\"]},\"contracts/core/VeloStake.sol\":{\"keccak256\":\"0x3e2baa012a3b0975e1820fc4a1be113422631c4885b360b5a1c3bcfe09b1f11b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a57b925bf793d34da5297305b963f56867ac55f09d789b27f914559041bfa7ca\",\"dweb:/ipfs/QmaxEaweUjoWBtWKGgbRRvo47nzk2eWoer1EH4cKJkBwGN\"]},\"contracts/core/interfaces/ICLFactory.sol\":{\"keccak256\":\"0x2b8dda4776bd095c900e408b2cb21324f72694bed75c69972cd0cb3b16b1bff0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d37ae64eabec6197ef78c9fd1d4c699398937ca5f3e9f852b11b32082ab2e680\",\"dweb:/ipfs/QmWLLA5bV17Q3fS5fDdukXsaquZ5sNoP8KvBAEfYQHfK3Z\"]},\"contracts/core/interfaces/ICLPool.sol\":{\"keccak256\":\"0x0a11e1392c4b5ef4e47a3415a9b1a2118e9370d52a253dbd1c910bbbb615e91f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0c04e689e0589f3d67961fd5febcdc0f39c0700aeebef2537ccfb29ddba29de1\",\"dweb:/ipfs/QmbuthGhVJsx45dpgF7p71VSuLshREAsaLJu34HQNgRJoz\"]},\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]},\"contracts/core/interfaces/IFactoryRegistry.sol\":{\"keccak256\":\"0xa2dbe19a5c9e221ffd8e4612ee8a4aa1233ab0ad059d4b7d91a8dca1153bcea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a01d481d3a1f5172b8601d267439e24662849d7ebb3e1e66ec46d541e57831\",\"dweb:/ipfs/QmYG56TEtS8dwHrNaHxGrTp8r6cDzRkuGKsHBbiToUVEvX\"]},\"contracts/core/interfaces/IVoter.sol\":{\"keccak256\":\"0x029239646ad77a70b26a702b7e286521a03d5b89d148ff7c13d9bf56f6203187\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eccfb9403ee8f5e7f604eccb0cafcbd047c1f73371537227011e6d557895fa68\",\"dweb:/ipfs/QmTjDHzzKTzkYhTeiWA1po8YL3USKkkMZSxZixVgsSQcXK\"]},\"contracts/core/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x17ee815f29f7bc6a1528203976ed5bfdd945354dd72a7d322e8b092e331beb3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9845c5056470191730c8a8688663bc9808172e57395c1c6053b5145bf9fd5098\",\"dweb:/ipfs/QmXyoRGbDe6KPngPsKXWZCyLLdmRTFKdhVD5Gf1Y15rG7a\"]},\"contracts/core/interfaces/callback/ICLMintCallback.sol\":{\"keccak256\":\"0x22d4ed43f7d7313e676e80f7ae3315f53c3a84fbf256efae5116ef0aba32c1e8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a21d9618b9a9c2fe2cf35d9d6d608dd02a112bd05e6020fbe71e7e09064c2be7\",\"dweb:/ipfs/QmeBQiyVmxVTPT3ftVFDkiDVgZLMar6SQegryLC7A3jmLr\"]},\"contracts/core/interfaces/callback/ICLSwapCallback.sol\":{\"keccak256\":\"0xb93e1ef2be3090a64b3b024f60253aef64b875f61dffaef8b9231351f8054948\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b16ccd544a6a551c977b7a7d6b6b9704c68e86624d66ecb16d945d3b88239458\",\"dweb:/ipfs/QmPBP5K81AFfHazhbbVb9ZXh6hzKeLqZcEUxnrkKNY7z2L\"]},\"contracts/core/interfaces/pool/ICLPoolActions.sol\":{\"keccak256\":\"0x7699f31261ab40982e34febe16128f1edfdad39075969195301352ea66bcac40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://074f1c470e11f30d0fae8b95b963c9d19dcbd2c5bd17ad4ebba95c5f0f073044\",\"dweb:/ipfs/QmdDWMUspgBXfLhcxqESez9rSwA8JYNRycmhkhuKoDCWqJ\"]},\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":{\"keccak256\":\"0xfad00d4ca1a40ef27d9614a98483ca67c4491b6f19e376901745c57a6949b512\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5ea522565efb803d146673ff9e37aa090a5abff334fea587da62f4fb5d6647\",\"dweb:/ipfs/QmVRPscHFVjYFvRbJf41zVLtA2jVLbEUH66KGtEzspXnWS\"]},\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]},\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":{\"keccak256\":\"0x32fbcac8952f1c5c44b466b0e1c28634ce71372c0f65242aa0d821cebdddcc2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f22382292967f97640f84a7edfa01cf7deb303bf882344b9985007f1dcbef2\",\"dweb:/ipfs/Qmej7vWwun9fRBCrcvzPHdZP1jtLSCxJtjTSdkVTcgWeAE\"]},\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":{\"keccak256\":\"0xeafd14ae3e15c9f663507e004c599618bfd5d2a90d58b3b450f9372f9e3f54f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49472c8cf06dc7084e22fc57ffdce860aa7a9ff77f12e4bef0c13a078bbc5831\",\"dweb:/ipfs/Qmd29vWULezsJJzhw3wZxsU6Hsng5949v2TiVCbdga4Vqe\"]},\"contracts/core/interfaces/pool/ICLPoolState.sol\":{\"keccak256\":\"0xe57d65825a097d6f0ab55d7ae39b528695b3df65320ed524124fbb55949bfcf9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b63b25beebe612acfd564f40b0d95b3844ee71bf969a3357419e7a54f1ece961\",\"dweb:/ipfs/Qmdk3mNLz3cSZscbXFsJp69gjgxFcBv6K5mdc6tjnmtFSR\"]},\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0xae7f7b0bbbd864bc1761ec5eac62ec761f2ef168d32ef9e914e337b077ebba4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b57b2f04997cd6055404801982f57083f8e9242935b3ebf3bbed032f5035f2f1\",\"dweb:/ipfs/QmdxHVMQEA32jnyroWZG2sk4NPtQFWXPfkDDYvRtK2APFA\"]},\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/Position.sol\":{\"keccak256\":\"0xcf1e701e3fae35be8b77ff1217cfdd23d33eb16fd3cec70be8ea6888f87af285\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8c89746dd30e76cc029d4e090e402b28aae0659cc71800758b99137dfe85f55\",\"dweb:/ipfs/QmY4Ft1YBLqzqwTgNdpCyRd7WrY78zKgg4Ddv2zqZiBEiE\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xefd51a282ca9fbc89394776e7f5c6f96fa084ca26b71d99727780332c87d1843\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f09b719eff523f65d0d11fc476b9735e1390018d5ff585991d0fc644e913ecf\",\"dweb:/ipfs/QmNiZxxQhqteYgJdhCQ3cZ4S7bTQf2AQRUJqMVvPY3doot\"]},\"contracts/core/libraries/Tick.sol\":{\"keccak256\":\"0xb5ebd80c667f4501dba65f4e39e51ff36e5334480849e0ed8604222d20b4ed1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://246f590513441ac0f307170f5099e4a0c0b1f579406fc30b909b249858dbd099\",\"dweb:/ipfs/QmaA5uC3eck7nMqyJbpSPEhmXmAXaKLNBSS1Lfnzzzjc95\"]},\"contracts/core/libraries/TickBitmap.sol\":{\"keccak256\":\"0xd829fadfca3f8f5870c877c7eeceb4a692603c16b711174526129987e8745f5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d2cbf3802f7e611708a45bc390ee9307d947e49b348294591659444b9989c05\",\"dweb:/ipfs/Qmcny7JNyVYCtcZG3b1BL4ThuKREmAkE9ZKaC3i32pnt7X\"]},\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]},\"contracts/core/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3bbe07a0684d98efe73f7012e446873494e74983e1f75a16d42c25b956d61651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78ac9659c70ba3253a6e526ba5a144994fb3d32df2e9537787eeb45aae320aec\",\"dweb:/ipfs/QmbaZRbPP2wFZ9coJd2iyPM37hm3kXzPLuRtL6KKr1MCSL\"]},\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"contracts/libraries/VelodromeTimeLibrary.sol\":{\"keccak256\":\"0x53d5f0b1b864a7dc552ef0291526938a36b1936517d17f62515bb6ba51c1260d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbc80fd3b18f04224a2a813d6c20a305c7e0479d6414a78d482b45635bc97dba\",\"dweb:/ipfs/QmQFbXCkjzeFgY5M8DyeKZjxeuN8xGdmUmjNH7FNMkLi8T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Oracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pooladdress",
									"type": "address"
								}
							],
							"name": "GetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								}
							],
							"name": "getAmountsforLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"GetPrice(address)": "f29d0040",
							"getAmountsforLiquidity(address,uint256)": "941e0eb8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pooladdress\",\"type\":\"address\"}],\"name\":\"GetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"getAmountsforLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/VeloStake.sol\":\"Oracle\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":{\"keccak256\":\"0xdb2133d55b8f3a94313af8f4371ae0501a58e412d471b03d8581214c5ea2ce33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cea1e4bf769f27c8c9c1442f1518b49ef6c8b71a4bd4ce88353da9e9a8ba1704\",\"dweb:/ipfs/QmR1b8sj7fxgeHqDksV4GYTjZS1qajWC3yg9VCMUJus2bF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd03561349430ee87f356fb47017ebe9137fd8aab8380e7a1c3b270c7fba62376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e747e57851bbd7685566623148b778542e0280aa0f8a8fe0ba54b4c6127f5d65\",\"dweb:/ipfs/QmScpCryhDC3Ag12jgn6sCvrYvEQ3qeapxbcfuv1oRE4B2\"]},\"contracts/core/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xfe7d9ee66050cd945f09f5a54bada3d8eb3b024aedc37b9c521703c61e3ac892\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f5d4cc3b9d41b44b2419a72bc3cd27bc0608e0b488196348b4a2e342d2114467\",\"dweb:/ipfs/QmYKKT5uccPQQSBT54wN2yZV5phs4kPYr76WvUerYiKbWp\"]},\"contracts/core/VeloStake.sol\":{\"keccak256\":\"0x3e2baa012a3b0975e1820fc4a1be113422631c4885b360b5a1c3bcfe09b1f11b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a57b925bf793d34da5297305b963f56867ac55f09d789b27f914559041bfa7ca\",\"dweb:/ipfs/QmaxEaweUjoWBtWKGgbRRvo47nzk2eWoer1EH4cKJkBwGN\"]},\"contracts/core/interfaces/ICLFactory.sol\":{\"keccak256\":\"0x2b8dda4776bd095c900e408b2cb21324f72694bed75c69972cd0cb3b16b1bff0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d37ae64eabec6197ef78c9fd1d4c699398937ca5f3e9f852b11b32082ab2e680\",\"dweb:/ipfs/QmWLLA5bV17Q3fS5fDdukXsaquZ5sNoP8KvBAEfYQHfK3Z\"]},\"contracts/core/interfaces/ICLPool.sol\":{\"keccak256\":\"0x0a11e1392c4b5ef4e47a3415a9b1a2118e9370d52a253dbd1c910bbbb615e91f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0c04e689e0589f3d67961fd5febcdc0f39c0700aeebef2537ccfb29ddba29de1\",\"dweb:/ipfs/QmbuthGhVJsx45dpgF7p71VSuLshREAsaLJu34HQNgRJoz\"]},\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]},\"contracts/core/interfaces/IFactoryRegistry.sol\":{\"keccak256\":\"0xa2dbe19a5c9e221ffd8e4612ee8a4aa1233ab0ad059d4b7d91a8dca1153bcea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a01d481d3a1f5172b8601d267439e24662849d7ebb3e1e66ec46d541e57831\",\"dweb:/ipfs/QmYG56TEtS8dwHrNaHxGrTp8r6cDzRkuGKsHBbiToUVEvX\"]},\"contracts/core/interfaces/IVoter.sol\":{\"keccak256\":\"0x029239646ad77a70b26a702b7e286521a03d5b89d148ff7c13d9bf56f6203187\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eccfb9403ee8f5e7f604eccb0cafcbd047c1f73371537227011e6d557895fa68\",\"dweb:/ipfs/QmTjDHzzKTzkYhTeiWA1po8YL3USKkkMZSxZixVgsSQcXK\"]},\"contracts/core/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x17ee815f29f7bc6a1528203976ed5bfdd945354dd72a7d322e8b092e331beb3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9845c5056470191730c8a8688663bc9808172e57395c1c6053b5145bf9fd5098\",\"dweb:/ipfs/QmXyoRGbDe6KPngPsKXWZCyLLdmRTFKdhVD5Gf1Y15rG7a\"]},\"contracts/core/interfaces/callback/ICLMintCallback.sol\":{\"keccak256\":\"0x22d4ed43f7d7313e676e80f7ae3315f53c3a84fbf256efae5116ef0aba32c1e8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a21d9618b9a9c2fe2cf35d9d6d608dd02a112bd05e6020fbe71e7e09064c2be7\",\"dweb:/ipfs/QmeBQiyVmxVTPT3ftVFDkiDVgZLMar6SQegryLC7A3jmLr\"]},\"contracts/core/interfaces/callback/ICLSwapCallback.sol\":{\"keccak256\":\"0xb93e1ef2be3090a64b3b024f60253aef64b875f61dffaef8b9231351f8054948\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b16ccd544a6a551c977b7a7d6b6b9704c68e86624d66ecb16d945d3b88239458\",\"dweb:/ipfs/QmPBP5K81AFfHazhbbVb9ZXh6hzKeLqZcEUxnrkKNY7z2L\"]},\"contracts/core/interfaces/pool/ICLPoolActions.sol\":{\"keccak256\":\"0x7699f31261ab40982e34febe16128f1edfdad39075969195301352ea66bcac40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://074f1c470e11f30d0fae8b95b963c9d19dcbd2c5bd17ad4ebba95c5f0f073044\",\"dweb:/ipfs/QmdDWMUspgBXfLhcxqESez9rSwA8JYNRycmhkhuKoDCWqJ\"]},\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":{\"keccak256\":\"0xfad00d4ca1a40ef27d9614a98483ca67c4491b6f19e376901745c57a6949b512\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5ea522565efb803d146673ff9e37aa090a5abff334fea587da62f4fb5d6647\",\"dweb:/ipfs/QmVRPscHFVjYFvRbJf41zVLtA2jVLbEUH66KGtEzspXnWS\"]},\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]},\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":{\"keccak256\":\"0x32fbcac8952f1c5c44b466b0e1c28634ce71372c0f65242aa0d821cebdddcc2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f22382292967f97640f84a7edfa01cf7deb303bf882344b9985007f1dcbef2\",\"dweb:/ipfs/Qmej7vWwun9fRBCrcvzPHdZP1jtLSCxJtjTSdkVTcgWeAE\"]},\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":{\"keccak256\":\"0xeafd14ae3e15c9f663507e004c599618bfd5d2a90d58b3b450f9372f9e3f54f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49472c8cf06dc7084e22fc57ffdce860aa7a9ff77f12e4bef0c13a078bbc5831\",\"dweb:/ipfs/Qmd29vWULezsJJzhw3wZxsU6Hsng5949v2TiVCbdga4Vqe\"]},\"contracts/core/interfaces/pool/ICLPoolState.sol\":{\"keccak256\":\"0xe57d65825a097d6f0ab55d7ae39b528695b3df65320ed524124fbb55949bfcf9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b63b25beebe612acfd564f40b0d95b3844ee71bf969a3357419e7a54f1ece961\",\"dweb:/ipfs/Qmdk3mNLz3cSZscbXFsJp69gjgxFcBv6K5mdc6tjnmtFSR\"]},\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0xae7f7b0bbbd864bc1761ec5eac62ec761f2ef168d32ef9e914e337b077ebba4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b57b2f04997cd6055404801982f57083f8e9242935b3ebf3bbed032f5035f2f1\",\"dweb:/ipfs/QmdxHVMQEA32jnyroWZG2sk4NPtQFWXPfkDDYvRtK2APFA\"]},\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/Position.sol\":{\"keccak256\":\"0xcf1e701e3fae35be8b77ff1217cfdd23d33eb16fd3cec70be8ea6888f87af285\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8c89746dd30e76cc029d4e090e402b28aae0659cc71800758b99137dfe85f55\",\"dweb:/ipfs/QmY4Ft1YBLqzqwTgNdpCyRd7WrY78zKgg4Ddv2zqZiBEiE\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xefd51a282ca9fbc89394776e7f5c6f96fa084ca26b71d99727780332c87d1843\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f09b719eff523f65d0d11fc476b9735e1390018d5ff585991d0fc644e913ecf\",\"dweb:/ipfs/QmNiZxxQhqteYgJdhCQ3cZ4S7bTQf2AQRUJqMVvPY3doot\"]},\"contracts/core/libraries/Tick.sol\":{\"keccak256\":\"0xb5ebd80c667f4501dba65f4e39e51ff36e5334480849e0ed8604222d20b4ed1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://246f590513441ac0f307170f5099e4a0c0b1f579406fc30b909b249858dbd099\",\"dweb:/ipfs/QmaA5uC3eck7nMqyJbpSPEhmXmAXaKLNBSS1Lfnzzzjc95\"]},\"contracts/core/libraries/TickBitmap.sol\":{\"keccak256\":\"0xd829fadfca3f8f5870c877c7eeceb4a692603c16b711174526129987e8745f5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d2cbf3802f7e611708a45bc390ee9307d947e49b348294591659444b9989c05\",\"dweb:/ipfs/Qmcny7JNyVYCtcZG3b1BL4ThuKREmAkE9ZKaC3i32pnt7X\"]},\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]},\"contracts/core/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3bbe07a0684d98efe73f7012e446873494e74983e1f75a16d42c25b956d61651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78ac9659c70ba3253a6e526ba5a144994fb3d32df2e9537787eeb45aae320aec\",\"dweb:/ipfs/QmbaZRbPP2wFZ9coJd2iyPM37hm3kXzPLuRtL6KKr1MCSL\"]},\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"contracts/libraries/VelodromeTimeLibrary.sol\":{\"keccak256\":\"0x53d5f0b1b864a7dc552ef0291526938a36b1936517d17f62515bb6ba51c1260d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbc80fd3b18f04224a2a813d6c20a305c7e0479d6414a78d482b45635bc97dba\",\"dweb:/ipfs/QmQFbXCkjzeFgY5M8DyeKZjxeuN8xGdmUmjNH7FNMkLi8T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"V3BotStaking": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "_newAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newTokenId",
									"type": "uint256"
								}
							],
							"name": "_newtokenID",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "Token",
									"type": "address"
								}
							],
							"name": "_transferToAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "deposits",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "farmNFT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sendNFTBack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "spaceMultiplier",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"stateVariables": {
							"deposits": {
								"details": "deposits[tokenId] => Deposit"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/VeloStake.sol\":5334:7365  contract V3BotStaking is ERC721Holder{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/core/VeloStake.sol\":5685:5751  address public oracle = 0x9465eD15b70E8A534663530C4fCc92E22B8F6032 */\n  0x06\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/core/VeloStake.sol\":5709:5751  0x9465eD15b70E8A534663530C4fCc92E22B8F6032 */\n  0x9465ed15b70e8a534663530c4fcc92e22b8f6032\n    /* \"contracts/core/VeloStake.sol\":5685:5751  address public oracle = 0x9465eD15b70E8A534663530C4fCc92E22B8F6032 */\n  or\n  swap1\n  sstore\n    /* \"contracts/core/VeloStake.sol\":5992:6043  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/core/VeloStake.sol\":6017:6022  admin */\n  0x05\n    /* \"contracts/core/VeloStake.sol\":6017:6035  admin = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/core/VeloStake.sol\":6025:6035  msg.sender */\n  caller\n    /* \"contracts/core/VeloStake.sol\":6017:6035  admin = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/core/VeloStake.sol\":5334:7365  contract V3BotStaking is ERC721Holder{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/VeloStake.sol\":5334:7365  contract V3BotStaking is ERC721Holder{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7dc0d1d0\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xda802f80\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xda802f80\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe58d539e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe6f4d0aa\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfd1c1518\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x7dc0d1d0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb02c43d0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd0c93a7c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x3a4b66f1\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x3a4b66f1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6020159d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7210468a\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x0dfe1681\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x16f0115b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17d70f7c\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/core/VeloStake.sol\":5434:5455  address public token0 */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":538:700  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":5378:5397  address public pool */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_23\n      tag_36\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":5563:5585  uint256 public tokenId */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":6412:6857  function stake() public payable {\r... */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/core/VeloStake.sol\":6867:6991  function withdraw() public payable {\r... */\n    tag_7:\n      tag_43\n      tag_46\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":6205:6359  function _newtokenID(uint256 newTokenId) external {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_43\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":7164:7348  function _transferToAdmin(address Token) external {\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_43\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":5685:5751  address public oracle = 0x9465eD15b70E8A534663530C4fCc92E22B8F6032 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_23\n      tag_59\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":5936:5979  mapping(uint256 => Deposit) public deposits */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_25\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":5619:5643  int24 public tickSpacing */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":5484:5505  address public token1 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_23\n      tag_74\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":5534:5556  address public farmNFT */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_23\n      tag_78\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":6999:7156  function sendNFTBack() public payable {\r... */\n    tag_15:\n      tag_43\n      tag_81\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":6051:6197  function _newAdmin(address newAdmin) external {\r... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_43\n      tag_84\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":5592:5612  address public admin */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_23\n      tag_88\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":5650:5678  int24 public spaceMultiplier */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_68\n      tag_92\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":5434:5455  address public token0 */\n    tag_24:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":538:700  function onERC721Received(address, address, uint256, bytes memory) public virtual override returns (bytes4) {... */\n    tag_31:\n      shl(0xe1, 0x0a85bd01)\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":5378:5397  address public pool */\n    tag_36:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":5563:5585  uint256 public tokenId */\n    tag_40:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":6412:6857  function stake() public payable {\r... */\n    tag_44:\n        /* \"contracts/core/VeloStake.sol\":6547:6554  tokenId */\n      0x04\n      dup1\n      sload\n        /* \"contracts/core/VeloStake.sol\":6455:6555  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).transferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/core/VeloStake.sol\":6463:6505  0x416b433906b1B72FA758e166e239c43d68dC6F29 */\n      0x416b433906b1b72fa758e166e239c43d68dc6f29\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6455:6519  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).transferFrom */\n      0x23b872dd\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6455:6555  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).transferFrom(msg.sender, address(this), tokenId) */\n      tag_96\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6520:6530  msg.sender */\n      caller\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6540:6544  this */\n      address\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6547:6554  tokenId */\n      swap2\n        /* \"contracts/core/VeloStake.sol\":6455:6555  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).transferFrom(msg.sender, address(this), tokenId) */\n      add\n      tag_97\n      jump\t// in\n    tag_96:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n        /* \"contracts/core/VeloStake.sol\":6638:6645  tokenId */\n      0x04\n      dup1\n      sload\n        /* \"contracts/core/VeloStake.sol\":6566:6646  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).approve(msg.sender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"contracts/core/VeloStake.sol\":6574:6616  0x416b433906b1B72FA758e166e239c43d68dC6F29 */\n      0x416b433906b1b72fa758e166e239c43d68dc6f29\n      swap5\n      pop\n        /* \"contracts/core/VeloStake.sol\":6566:6625  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).approve */\n      0x095ea7b3\n      swap4\n      pop\n        /* \"contracts/core/VeloStake.sol\":6566:6646  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).approve(msg.sender, tokenId) */\n      tag_101\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6626:6636  msg.sender */\n      caller\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6638:6645  tokenId */\n      swap2\n        /* \"contracts/core/VeloStake.sol\":6566:6646  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).approve(msg.sender, tokenId) */\n      add\n      tag_102\n      jump\t// in\n    tag_101:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n        /* \"contracts/core/VeloStake.sol\":6761:6768  tokenId */\n      0x04\n      dup1\n      sload\n        /* \"contracts/core/VeloStake.sol\":6657:6769  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).approve(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"contracts/core/VeloStake.sol\":6665:6707  0x416b433906b1B72FA758e166e239c43d68dC6F29 */\n      0x416b433906b1b72fa758e166e239c43d68dc6f29\n      swap5\n      pop\n        /* \"contracts/core/VeloStake.sol\":6657:6716  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).approve */\n      0x095ea7b3\n      swap4\n      pop\n        /* \"contracts/core/VeloStake.sol\":6657:6769  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).approve(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF, tokenId) */\n      tag_106\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6717:6759  0xC8c7b5aE61d97Be7d02d606629059487066DC9CF */\n      0xc8c7b5ae61d97be7d02d606629059487066dc9cf\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6761:6768  tokenId */\n      swap2\n        /* \"contracts/core/VeloStake.sol\":6657:6769  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).approve(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF, tokenId) */\n      add\n      tag_102\n      jump\t// in\n    tag_106:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n        /* \"contracts/core/VeloStake.sol\":6841:6848  tokenId */\n      0x04\n      dup1\n      sload\n        /* \"contracts/core/VeloStake.sol\":6780:6849  ICLGauge(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF).deposit(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0xb6b55f25)\n      dup2\n      mstore\n        /* \"contracts/core/VeloStake.sol\":6789:6831  0xC8c7b5aE61d97Be7d02d606629059487066DC9CF */\n      0xc8c7b5ae61d97be7d02d606629059487066dc9cf\n      swap5\n      pop\n        /* \"contracts/core/VeloStake.sol\":6780:6840  ICLGauge(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF).deposit */\n      0xb6b55f25\n      swap4\n      pop\n        /* \"contracts/core/VeloStake.sol\":6780:6849  ICLGauge(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF).deposit(tokenId) */\n      tag_110\n      swap3\n      add\n      tag_42\n      jump\t// in\n    tag_110:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/core/VeloStake.sol\":6412:6857  function stake() public payable {\r... */\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":6867:6991  function withdraw() public payable {\r... */\n    tag_46:\n        /* \"contracts/core/VeloStake.sol\":6975:6982  tokenId */\n      0x04\n      dup1\n      sload\n        /* \"contracts/core/VeloStake.sol\":6913:6983  ICLGauge(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF).withdraw(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n        /* \"contracts/core/VeloStake.sol\":6922:6964  0xC8c7b5aE61d97Be7d02d606629059487066DC9CF */\n      0xc8c7b5ae61d97be7d02d606629059487066dc9cf\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6913:6974  ICLGauge(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF).withdraw */\n      0x2e1a7d4d\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6913:6983  ICLGauge(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF).withdraw(tokenId) */\n      tag_110\n      swap3\n        /* \"contracts/core/VeloStake.sol\":6975:6982  tokenId */\n      swap1\n      swap2\n        /* \"contracts/core/VeloStake.sol\":6913:6983  ICLGauge(0xC8c7b5aE61d97Be7d02d606629059487066DC9CF).withdraw(tokenId) */\n      add\n      tag_42\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":6205:6359  function _newtokenID(uint256 newTokenId) external {\r... */\n    tag_51:\n        /* \"contracts/core/VeloStake.sol\":6288:6293  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/core/VeloStake.sol\":6274:6284  msg.sender */\n      caller\n        /* \"contracts/core/VeloStake.sol\":6274:6293  msg.sender == admin */\n      eq\n        /* \"contracts/core/VeloStake.sol\":6266:6320  require(msg.sender == admin, \"Only owner can do this\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/core/VeloStake.sol\":6331:6338  tokenId */\n      0x04\n        /* \"contracts/core/VeloStake.sol\":6331:6351  tokenId = newTokenId */\n      sstore\n        /* \"contracts/core/VeloStake.sol\":6205:6359  function _newtokenID(uint256 newTokenId) external {\r... */\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":7164:7348  function _transferToAdmin(address Token) external {\r... */\n    tag_56:\n        /* \"contracts/core/VeloStake.sol\":7241:7286  IERC20Minimal(Token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/core/VeloStake.sol\":7225:7238  uint256 value */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/VeloStake.sol\":7241:7271  IERC20Minimal(Token).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/core/VeloStake.sol\":7241:7286  IERC20Minimal(Token).balanceOf(address(this)) */\n      tag_124\n      swap1\n        /* \"contracts/core/VeloStake.sol\":7280:7284  this */\n      address\n      swap1\n        /* \"contracts/core/VeloStake.sol\":7241:7286  IERC20Minimal(Token).balanceOf(address(this)) */\n      0x04\n      add\n      tag_26\n      jump\t// in\n    tag_124:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"contracts/core/VeloStake.sol\":7327:7332  admin */\n      sload(0x05)\n        /* \"contracts/core/VeloStake.sol\":7297:7340  IERC20Minimal(Token).transfer(admin, value) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/core/VeloStake.sol\":7225:7286  uint256 value = IERC20Minimal(Token).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/VeloStake.sol\":7297:7326  IERC20Minimal(Token).transfer */\n      dup1\n      dup6\n      and\n      swap3\n      0xa9059cbb\n      swap3\n        /* \"contracts/core/VeloStake.sol\":7297:7340  IERC20Minimal(Token).transfer(admin, value) */\n      tag_130\n      swap3\n        /* \"contracts/core/VeloStake.sol\":7327:7332  admin */\n      and\n      swap1\n        /* \"contracts/core/VeloStake.sol\":7225:7286  uint256 value = IERC20Minimal(Token).balanceOf(address(this)) */\n      dup6\n      swap1\n        /* \"contracts/core/VeloStake.sol\":7297:7340  IERC20Minimal(Token).transfer(admin, value) */\n      0x04\n      add\n      tag_102\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      pop\n        /* \"contracts/core/VeloStake.sol\":7164:7348  function _transferToAdmin(address Token) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":5685:5751  address public oracle = 0x9465eD15b70E8A534663530C4fCc92E22B8F6032 */\n    tag_59:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      dup2\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":5936:5979  mapping(uint256 => Deposit) public deposits */\n    tag_64:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      swap4\n      sub(shl(0x80, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      dup3\n      and\n      swap2\n      and\n      dup5\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":5619:5643  int24 public tickSpacing */\n    tag_69:\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0x02\n      signextend\n      dup2\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":5484:5505  address public token1 */\n    tag_74:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":5534:5556  address public farmNFT */\n    tag_78:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":6999:7156  function sendNFTBack() public payable {\r... */\n    tag_81:\n        /* \"contracts/core/VeloStake.sol\":7140:7147  tokenId */\n      0x04\n      dup1\n      sload\n        /* \"contracts/core/VeloStake.sol\":7048:7148  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).transferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/core/VeloStake.sol\":7056:7098  0x416b433906b1B72FA758e166e239c43d68dC6F29 */\n      0x416b433906b1b72fa758e166e239c43d68dc6f29\n      swap3\n        /* \"contracts/core/VeloStake.sol\":7048:7112  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).transferFrom */\n      0x23b872dd\n      swap3\n        /* \"contracts/core/VeloStake.sol\":7048:7148  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).transferFrom(address(this), msg.sender, tokenId) */\n      tag_110\n      swap3\n        /* \"contracts/core/VeloStake.sol\":7121:7125  this */\n      address\n      swap3\n        /* \"contracts/core/VeloStake.sol\":7128:7138  msg.sender */\n      caller\n      swap3\n        /* \"contracts/core/VeloStake.sol\":7140:7147  tokenId */\n      swap2\n        /* \"contracts/core/VeloStake.sol\":7048:7148  IERC721(0x416b433906b1B72FA758e166e239c43d68dC6F29).transferFrom(address(this), msg.sender, tokenId) */\n      add\n      tag_97\n      jump\t// in\n        /* \"contracts/core/VeloStake.sol\":6051:6197  function _newAdmin(address newAdmin) external {\r... */\n    tag_85:\n        /* \"contracts/core/VeloStake.sol\":6130:6135  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/core/VeloStake.sol\":6116:6126  msg.sender */\n      caller\n        /* \"contracts/core/VeloStake.sol\":6116:6135  msg.sender == admin */\n      eq\n        /* \"contracts/core/VeloStake.sol\":6108:6162  require(msg.sender == admin, \"Only owner can do this\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_144:\n        /* \"contracts/core/VeloStake.sol\":6173:6178  admin */\n      0x05\n        /* \"contracts/core/VeloStake.sol\":6173:6189  admin = newAdmin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/core/VeloStake.sol\":6051:6197  function _newAdmin(address newAdmin) external {\r... */\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":5592:5612  address public admin */\n    tag_88:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      dup2\n      jump\t// out\n        /* \"contracts/core/VeloStake.sol\":5650:5678  int24 public spaceMultiplier */\n    tag_92:\n      sload(0x05)\n      shl(0xb8, 0x01)\n      swap1\n      div\n      0x02\n      signextend\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_147:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":113:115   */\n    tag_149:\n        /* \"#utility.yul\":65:189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":194:392   */\n    tag_55:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_151:\n        /* \"#utility.yul\":355:386   */\n      tag_152\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_147\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:1557   */\n    tag_30:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":569:572   */\n      0x80\n        /* \"#utility.yul\":557:566   */\n      dup6\n        /* \"#utility.yul\":548:555   */\n      dup8\n        /* \"#utility.yul\":544:567   */\n      sub\n        /* \"#utility.yul\":540:573   */\n      slt\n        /* \"#utility.yul\":537:539   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":591:597   */\n      dup3\n        /* \"#utility.yul\":583:589   */\n      dup4\n        /* \"#utility.yul\":576:598   */\n      revert\n        /* \"#utility.yul\":537:539   */\n    tag_154:\n        /* \"#utility.yul\":619:650   */\n      tag_155\n        /* \"#utility.yul\":640:649   */\n      dup6\n        /* \"#utility.yul\":619:650   */\n      tag_147\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":609:650   */\n      swap4\n      pop\n        /* \"#utility.yul\":669:671   */\n      0x20\n        /* \"#utility.yul\":690:730   */\n      tag_156\n        /* \"#utility.yul\":726:728   */\n      dup2\n        /* \"#utility.yul\":715:724   */\n      dup8\n        /* \"#utility.yul\":711:729   */\n      add\n        /* \"#utility.yul\":690:730   */\n      tag_147\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":680:730   */\n      swap4\n      pop\n        /* \"#utility.yul\":777:779   */\n      0x40\n        /* \"#utility.yul\":766:775   */\n      dup7\n        /* \"#utility.yul\":762:780   */\n      add\n        /* \"#utility.yul\":749:781   */\n      calldataload\n        /* \"#utility.yul\":739:781   */\n      swap3\n      pop\n        /* \"#utility.yul\":832:834   */\n      0x60\n        /* \"#utility.yul\":821:830   */\n      dup7\n        /* \"#utility.yul\":817:835   */\n      add\n        /* \"#utility.yul\":804:836   */\n      calldataload\n        /* \"#utility.yul\":855:873   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":896:898   */\n      dup1\n        /* \"#utility.yul\":888:894   */\n      dup3\n        /* \"#utility.yul\":885:899   */\n      gt\n        /* \"#utility.yul\":882:884   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":917:923   */\n      dup4\n        /* \"#utility.yul\":909:915   */\n      dup5\n        /* \"#utility.yul\":902:924   */\n      revert\n        /* \"#utility.yul\":882:884   */\n    tag_157:\n        /* \"#utility.yul\":960:966   */\n      dup2\n        /* \"#utility.yul\":949:958   */\n      dup9\n        /* \"#utility.yul\":945:967   */\n      add\n        /* \"#utility.yul\":935:967   */\n      swap2\n      pop\n        /* \"#utility.yul\":1005:1012   */\n      dup9\n        /* \"#utility.yul\":998:1002   */\n      0x1f\n        /* \"#utility.yul\":994:996   */\n      dup4\n        /* \"#utility.yul\":990:1003   */\n      add\n        /* \"#utility.yul\":986:1013   */\n      slt\n        /* \"#utility.yul\":976:978   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":1032:1038   */\n      dup4\n        /* \"#utility.yul\":1024:1030   */\n      dup5\n        /* \"#utility.yul\":1017:1039   */\n      revert\n        /* \"#utility.yul\":976:978   */\n    tag_158:\n        /* \"#utility.yul\":1073:1075   */\n      dup2\n        /* \"#utility.yul\":1060:1076   */\n      calldataload\n        /* \"#utility.yul\":1095:1097   */\n      dup2\n        /* \"#utility.yul\":1091:1093   */\n      dup2\n        /* \"#utility.yul\":1088:1098   */\n      gt\n        /* \"#utility.yul\":1085:1087   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1101:1110   */\n      invalid\n        /* \"#utility.yul\":1085:1087   */\n    tag_159:\n        /* \"#utility.yul\":1141:1143   */\n      0x40\n        /* \"#utility.yul\":1135:1144   */\n      mload\n        /* \"#utility.yul\":1210:1212   */\n      0x1f\n        /* \"#utility.yul\":1191:1204   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1187:1214   */\n      and\n        /* \"#utility.yul\":1175:1215   */\n      dup2\n      add\n        /* \"#utility.yul\":1171:1220   */\n      dup6\n      add\n        /* \"#utility.yul\":1235:1253   */\n      dup4\n      dup2\n      gt\n        /* \"#utility.yul\":1255:1277   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1232:1278   */\n      or\n        /* \"#utility.yul\":1229:1231   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1281:1290   */\n      invalid\n        /* \"#utility.yul\":1229:1231   */\n    tag_160:\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1301:1323   */\n      mstore\n        /* \"#utility.yul\":1332:1350   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":1369:1380   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1365:1385   */\n      dup6\n      add\n        /* \"#utility.yul\":1362:1395   */\n      dup12\n      lt\n        /* \"#utility.yul\":1359:1361   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":1413:1419   */\n      dup6\n        /* \"#utility.yul\":1405:1411   */\n      dup7\n        /* \"#utility.yul\":1398:1420   */\n      revert\n        /* \"#utility.yul\":1359:1361   */\n    tag_161:\n        /* \"#utility.yul\":1474:1476   */\n      dup2\n        /* \"#utility.yul\":1469:1471   */\n      dup6\n        /* \"#utility.yul\":1465:1467   */\n      dup6\n        /* \"#utility.yul\":1461:1472   */\n      add\n        /* \"#utility.yul\":1456:1458   */\n      dup7\n        /* \"#utility.yul\":1448:1454   */\n      dup4\n        /* \"#utility.yul\":1444:1459   */\n      add\n        /* \"#utility.yul\":1431:1477   */\n      calldatacopy\n        /* \"#utility.yul\":1497:1512   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1493:1517   */\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1486:1526   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n        /* \"#utility.yul\":527:1557   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1562:1859   */\n    tag_136:\n      0x00\n        /* \"#utility.yul\":1682:1684   */\n      0x20\n        /* \"#utility.yul\":1670:1679   */\n      dup3\n        /* \"#utility.yul\":1661:1668   */\n      dup5\n        /* \"#utility.yul\":1657:1680   */\n      sub\n        /* \"#utility.yul\":1653:1685   */\n      slt\n        /* \"#utility.yul\":1650:1652   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1703:1709   */\n      dup1\n        /* \"#utility.yul\":1695:1701   */\n      dup2\n        /* \"#utility.yul\":1688:1710   */\n      revert\n        /* \"#utility.yul\":1650:1652   */\n    tag_163:\n        /* \"#utility.yul\":1740:1749   */\n      dup2\n        /* \"#utility.yul\":1734:1750   */\n      mload\n        /* \"#utility.yul\":1793:1798   */\n      dup1\n        /* \"#utility.yul\":1786:1799   */\n      iszero\n        /* \"#utility.yul\":1779:1800   */\n      iszero\n        /* \"#utility.yul\":1772:1777   */\n      dup2\n        /* \"#utility.yul\":1769:1801   */\n      eq\n        /* \"#utility.yul\":1759:1761   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":1820:1826   */\n      dup2\n        /* \"#utility.yul\":1812:1818   */\n      dup3\n        /* \"#utility.yul\":1805:1827   */\n      revert\n        /* \"#utility.yul\":1864:2054   */\n    tag_50:\n      0x00\n        /* \"#utility.yul\":1976:1978   */\n      0x20\n        /* \"#utility.yul\":1964:1973   */\n      dup3\n        /* \"#utility.yul\":1955:1962   */\n      dup5\n        /* \"#utility.yul\":1951:1974   */\n      sub\n        /* \"#utility.yul\":1947:1979   */\n      slt\n        /* \"#utility.yul\":1944:1946   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1997:2003   */\n      dup1\n        /* \"#utility.yul\":1989:1995   */\n      dup2\n        /* \"#utility.yul\":1982:2004   */\n      revert\n        /* \"#utility.yul\":1944:1946   */\n    tag_166:\n      pop\n        /* \"#utility.yul\":2025:2048   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1934:2054   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2253   */\n    tag_129:\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x20\n        /* \"#utility.yul\":2170:2179   */\n      dup3\n        /* \"#utility.yul\":2161:2168   */\n      dup5\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2152   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2203:2209   */\n      dup1\n        /* \"#utility.yul\":2195:2201   */\n      dup2\n        /* \"#utility.yul\":2188:2210   */\n      revert\n        /* \"#utility.yul\":2150:2152   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":2231:2247   */\n      mload\n      swap2\n        /* \"#utility.yul\":2140:2253   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2258:2461   */\n    tag_26:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2422:2454   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2404:2455   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2392:2394   */\n      0x20\n        /* \"#utility.yul\":2377:2395   */\n      add\n      swap1\n        /* \"#utility.yul\":2359:2461   */\n      jump\t// out\n        /* \"#utility.yul\":2466:2849   */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2732:2747   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":2714:2748   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2784:2799   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2764:2782   */\n      dup3\n      add\n        /* \"#utility.yul\":2757:2800   */\n      mstore\n        /* \"#utility.yul\":2831:2833   */\n      0x40\n        /* \"#utility.yul\":2816:2834   */\n      dup2\n      add\n        /* \"#utility.yul\":2809:2843   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2664:2666   */\n      0x60\n        /* \"#utility.yul\":2649:2667   */\n      add\n      swap1\n        /* \"#utility.yul\":2631:2849   */\n      jump\t// out\n        /* \"#utility.yul\":2854:3136   */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3054:3086   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3036:3087   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3118:3120   */\n      0x20\n        /* \"#utility.yul\":3103:3121   */\n      dup3\n      add\n        /* \"#utility.yul\":3096:3130   */\n      mstore\n        /* \"#utility.yul\":3024:3026   */\n      0x40\n        /* \"#utility.yul\":3009:3027   */\n      add\n      swap1\n        /* \"#utility.yul\":2991:3136   */\n      jump\t// out\n        /* \"#utility.yul\":3529:4026   */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3816:3831   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":3798:3832   */\n      dup2\n      mstore\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":3868:3915   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":3863:3865   */\n      0x20\n        /* \"#utility.yul\":3848:3866   */\n      dup5\n      add\n        /* \"#utility.yul\":3841:3916   */\n      mstore\n        /* \"#utility.yul\":3952:3967   */\n      swap1\n      dup4\n      and\n        /* \"#utility.yul\":3947:3949   */\n      0x40\n        /* \"#utility.yul\":3932:3950   */\n      dup4\n      add\n        /* \"#utility.yul\":3925:3968   */\n      mstore\n        /* \"#utility.yul\":4004:4019   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3999:4001   */\n      0x60\n        /* \"#utility.yul\":3984:4002   */\n      dup3\n      add\n        /* \"#utility.yul\":3977:4020   */\n      mstore\n        /* \"#utility.yul\":3747:3750   */\n      0x80\n        /* \"#utility.yul\":3732:3751   */\n      add\n      swap1\n        /* \"#utility.yul\":3714:4026   */\n      jump\t// out\n        /* \"#utility.yul\":4310:4512   */\n    tag_33:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":4472:4505   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4454:4506   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4442:4444   */\n      0x20\n        /* \"#utility.yul\":4427:4445   */\n      add\n      swap1\n        /* \"#utility.yul\":4409:4512   */\n      jump\t// out\n        /* \"#utility.yul\":4517:4705   */\n    tag_71:\n        /* \"#utility.yul\":4688:4689   */\n      0x02\n        /* \"#utility.yul\":4677:4698   */\n      swap2\n      swap1\n      swap2\n      signextend\n        /* \"#utility.yul\":4659:4699   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4647:4649   */\n      0x20\n        /* \"#utility.yul\":4632:4650   */\n      add\n      swap1\n        /* \"#utility.yul\":4614:4705   */\n      jump\t// out\n        /* \"#utility.yul\":4710:5056   */\n    tag_122:\n        /* \"#utility.yul\":4912:4914   */\n      0x20\n        /* \"#utility.yul\":4894:4915   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4951:4953   */\n      0x16\n        /* \"#utility.yul\":4931:4949   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4924:4954   */\n      mstore\n      shl(0x50, 0x4f6e6c79206f776e65722063616e20646f2074686973)\n        /* \"#utility.yul\":4985:4987   */\n      0x40\n        /* \"#utility.yul\":4970:4988   */\n      dup3\n      add\n        /* \"#utility.yul\":4963:5015   */\n      mstore\n        /* \"#utility.yul\":5047:5049   */\n      0x60\n        /* \"#utility.yul\":5032:5050   */\n      add\n      swap1\n        /* \"#utility.yul\":4884:5056   */\n      jump\t// out\n        /* \"#utility.yul\":5061:5238   */\n    tag_42:\n        /* \"#utility.yul\":5207:5232   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5195:5197   */\n      0x20\n        /* \"#utility.yul\":5180:5198   */\n      add\n      swap1\n        /* \"#utility.yul\":5162:5238   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202b36e0980b3acfcc7d6db9fc2ad6f6c9a9bec3541842c69123eb8361cc63d02364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600680546001600160a01b031916739465ed15b70e8a534663530c4fcc92e22b8f603217905534801561003657600080fd5b50600580546001600160a01b031916331790556109c4806100586000396000f3fe6080604052600436106100fe5760003560e01c80637dc0d1d011610095578063da802f8011610064578063da802f8014610260578063e58d539e14610275578063e6f4d0aa1461027d578063f851a4401461029d578063fd1c1518146102b2576100fe565b80637dc0d1d0146101e4578063b02c43d0146101f9578063d0c93a7c14610229578063d21220a71461024b576100fe565b80633a4b66f1116100d15780633a4b66f1146101925780633ccfd60b1461019c5780636020159d146101a45780637210468a146101c4576100fe565b80630dfe168114610103578063150b7a021461012e57806316f0115b1461015b57806317d70f7c14610170575b600080fd5b34801561010f57600080fd5b506101186102c7565b60405161012591906108ad565b60405180910390f35b34801561013a57600080fd5b5061014e61014936600461079d565b6102d6565b6040516101259190610932565b34801561016757600080fd5b506101186102e6565b34801561017c57600080fd5b506101856102f5565b6040516101259190610985565b61019a6102fb565b005b61019a6104c0565b3480156101b057600080fd5b5061019a6101bf36600461087d565b6104f9565b3480156101d057600080fd5b5061019a6101df36600461077c565b610531565b3480156101f057600080fd5b5061011861063c565b34801561020557600080fd5b5061021961021436600461087d565b61064b565b60405161012594939291906108fe565b34801561023557600080fd5b5061023e61068b565b6040516101259190610947565b34801561025757600080fd5b5061011861069b565b34801561026c57600080fd5b506101186106aa565b61019a6106b9565b34801561028957600080fd5b5061019a61029836600461077c565b6106f5565b3480156102a957600080fd5b50610118610741565b3480156102be57600080fd5b5061023e610750565b6001546001600160a01b031681565b630a85bd0160e11b949350505050565b6000546001600160a01b031681565b60045481565b600480546040516323b872dd60e01b815273416b433906b1b72fa758e166e239c43d68dc6f29926323b872dd92610337923392309291016108c1565b600060405180830381600087803b15801561035157600080fd5b505af1158015610365573d6000803e3d6000fd5b50506004805460405163095ea7b360e01b815273416b433906b1b72fa758e166e239c43d68dc6f29945063095ea7b393506103a392339291016108e5565b600060405180830381600087803b1580156103bd57600080fd5b505af11580156103d1573d6000803e3d6000fd5b50506004805460405163095ea7b360e01b815273416b433906b1b72fa758e166e239c43d68dc6f29945063095ea7b393506104239273c8c7b5ae61d97be7d02d606629059487066dc9cf9291016108e5565b600060405180830381600087803b15801561043d57600080fd5b505af1158015610451573d6000803e3d6000fd5b50506004805460405163b6b55f2560e01b815273c8c7b5ae61d97be7d02d606629059487066dc9cf945063b6b55f25935061048c9201610985565b600060405180830381600087803b1580156104a657600080fd5b505af11580156104ba573d6000803e3d6000fd5b50505050565b60048054604051632e1a7d4d60e01b815273c8c7b5ae61d97be7d02d606629059487066dc9cf92632e1a7d4d9261048c92909101610985565b6005546001600160a01b0316331461052c5760405162461bcd60e51b815260040161052390610955565b60405180910390fd5b600455565b6040516370a0823160e01b81526000906001600160a01b038316906370a08231906105609030906004016108ad565b60206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b09190610895565b60055460405163a9059cbb60e01b81529192506001600160a01b038085169263a9059cbb926105e592169085906004016108e5565b602060405180830381600087803b1580156105ff57600080fd5b505af1158015610613573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610637919061085d565b505050565b6006546001600160a01b031681565b60076020526000908152604090208054600182015460028301546003909301546001600160a01b03928316936001600160801b0390921692918216911684565b600554600160a01b900460020b81565b6002546001600160a01b031681565b6003546001600160a01b031681565b600480546040516323b872dd60e01b815273416b433906b1b72fa758e166e239c43d68dc6f29926323b872dd9261048c923092339291016108c1565b6005546001600160a01b0316331461071f5760405162461bcd60e51b815260040161052390610955565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031681565b600554600160b81b900460020b81565b80356001600160a01b038116811461077757600080fd5b919050565b60006020828403121561078d578081fd5b61079682610760565b9392505050565b600080600080608085870312156107b2578283fd5b6107bb85610760565b935060206107ca818701610760565b935060408601359250606086013567ffffffffffffffff808211156107ed578384fd5b818801915088601f830112610800578384fd5b81358181111561080c57fe5b604051601f8201601f191681018501838111828210171561082957fe5b60405281815283820185018b101561083f578586fd5b81858501868301379081019093019390935250939692955090935050565b60006020828403121561086e578081fd5b81518015158114610796578182fd5b60006020828403121561088e578081fd5b5035919050565b6000602082840312156108a6578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0394851681526001600160801b039390931660208401529083166040830152909116606082015260800190565b6001600160e01b031991909116815260200190565b60029190910b815260200190565b6020808252601690820152754f6e6c79206f776e65722063616e20646f207468697360501b604082015260600190565b9081526020019056fea26469706673582212202b36e0980b3acfcc7d6db9fc2ad6f6c9a9bec3541842c69123eb8361cc63d02364736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x9465ED15B70E8A534663530C4FCC92E22B8F6032 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x9C4 DUP1 PUSH2 0x58 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DC0D1D0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDA802F80 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDA802F80 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xE58D539E EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xE6F4D0AA EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xFD1C1518 EQ PUSH2 0x2B2 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x24B JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x3A4B66F1 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x6020159D EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x7210468A EQ PUSH2 0x1C4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x79D JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x932 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x2E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x2FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19A PUSH2 0x4C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x63C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x947 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x69B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x19A PUSH2 0x6B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x741 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x750 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x416B433906B1B72FA758E166E239C43D68DC6F29 SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x337 SWAP3 CALLER SWAP3 ADDRESS SWAP3 SWAP2 ADD PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x365 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x416B433906B1B72FA758E166E239C43D68DC6F29 SWAP5 POP PUSH4 0x95EA7B3 SWAP4 POP PUSH2 0x3A3 SWAP3 CALLER SWAP3 SWAP2 ADD PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x416B433906B1B72FA758E166E239C43D68DC6F29 SWAP5 POP PUSH4 0x95EA7B3 SWAP4 POP PUSH2 0x423 SWAP3 PUSH20 0xC8C7B5AE61D97BE7D02D606629059487066DC9CF SWAP3 SWAP2 ADD PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x451 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xC8C7B5AE61D97BE7D02D606629059487066DC9CF SWAP5 POP PUSH4 0xB6B55F25 SWAP4 POP PUSH2 0x48C SWAP3 ADD PUSH2 0x985 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xC8C7B5AE61D97BE7D02D606629059487066DC9CF SWAP3 PUSH4 0x2E1A7D4D SWAP3 PUSH2 0x48C SWAP3 SWAP1 SWAP2 ADD PUSH2 0x985 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x560 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x895 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x5E5 SWAP3 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x613 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x85D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x416B433906B1B72FA758E166E239C43D68DC6F29 SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x48C SWAP3 ADDRESS SWAP3 CALLER SWAP3 SWAP2 ADD PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x955 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x796 DUP3 PUSH2 0x760 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7B2 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x7BB DUP6 PUSH2 0x760 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH2 0x7CA DUP2 DUP8 ADD PUSH2 0x760 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7ED JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x800 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x80C JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD DUP6 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x829 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD DUP6 ADD DUP12 LT ISZERO PUSH2 0x83F JUMPI DUP6 DUP7 REVERT JUMPDEST DUP2 DUP6 DUP6 ADD DUP7 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x86E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x796 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x88E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x4F6E6C79206F776E65722063616E20646F2074686973 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B CALLDATASIZE 0xE0 SWAP9 SIGNEXTEND GASPRICE 0xCF 0xCC PUSH30 0x6DB9FC2AD6F6C9A9BEC3541842C69123EB8361CC63D02364736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "5334:2031:3:-:0;;;5685:66;;;-1:-1:-1;;;;;;5685:66:3;5709:42;5685:66;;;5992:51;;;;;;;;;-1:-1:-1;6017:5:3;:18;;-1:-1:-1;;;;;;6017:18:3;6025:10;6017:18;;;5334:2031;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5240:34",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:34",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:34",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:34",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:34"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:34"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:34"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:34",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:34",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:34"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:34"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:34",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:34",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:34"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:34"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:34",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:34"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:34"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:34"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:34"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:34"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:34"
															},
															"nodeType": "YulIf",
															"src": "113:2:34"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:34",
														"type": ""
													}
												],
												"src": "14:175:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:34",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:34"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:34"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:34"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:34"
															},
															"nodeType": "YulIf",
															"src": "274:2:34"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:34"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:34"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:34"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:34",
														"type": ""
													}
												],
												"src": "194:198:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "527:1030:34",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "574:26:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "583:6:34"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "591:6:34"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "576:6:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "576:22:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "576:22:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "548:7:34"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "557:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "544:23:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "569:3:34",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "540:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:33:34"
															},
															"nodeType": "YulIf",
															"src": "537:2:34"
														},
														{
															"nodeType": "YulAssignment",
															"src": "609:41:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "640:9:34"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "619:20:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:31:34"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:34"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "659:12:34",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "669:2:34",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "663:2:34",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "680:50:34",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "715:9:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "726:2:34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "711:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "711:18:34"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "690:20:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:40:34"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:34"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "739:42:34",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "766:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "777:2:34",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "762:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "762:18:34"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "749:12:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "749:32:34"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "739:6:34"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "790:46:34",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "821:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "832:2:34",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "817:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "817:18:34"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "804:12:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:32:34"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "794:6:34",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "845:28:34",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "855:18:34",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "849:2:34",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:26:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "909:6:34"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "917:6:34"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "902:6:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:22:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "902:22:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "888:6:34"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "896:2:34"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "885:2:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "885:14:34"
															},
															"nodeType": "YulIf",
															"src": "882:2:34"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "935:32:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "949:9:34"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "960:6:34"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:22:34"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "939:2:34",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1015:26:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1024:6:34"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1032:6:34"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1017:6:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1017:22:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1017:22:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "994:2:34"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "998:4:34",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "990:3:34"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "990:13:34"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1005:7:34"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "986:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:27:34"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:35:34"
															},
															"nodeType": "YulIf",
															"src": "976:2:34"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1050:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1073:2:34"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1060:12:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:16:34"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1054:2:34",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1099:13:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "1101:7:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1101:9:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1101:9:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1091:2:34"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1095:2:34"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1088:2:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:10:34"
															},
															"nodeType": "YulIf",
															"src": "1085:2:34"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1121:23:34",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1141:2:34",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1135:5:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1135:9:34"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1125:6:34",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1153:67:34",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1179:6:34"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1195:2:34"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1199:4:34",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1191:3:34"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1191:13:34"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1210:2:34",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1206:3:34"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1206:7:34"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1187:3:34"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1187:27:34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1175:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1175:40:34"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1217:2:34"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1171:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1171:49:34"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1157:10:34",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1279:13:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "1281:7:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1281:9:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1281:9:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1238:10:34"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1250:2:34"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1235:2:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1235:18:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1258:10:34"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1270:6:34"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1255:2:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1255:22:34"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1232:2:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:46:34"
															},
															"nodeType": "YulIf",
															"src": "1229:2:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:34",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1312:10:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1301:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1301:22:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1301:22:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1339:6:34"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1347:2:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:18:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1332:18:34"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1396:26:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1405:6:34"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1413:6:34"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1398:22:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1398:22:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1373:2:34"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1377:2:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1369:3:34"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1369:11:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1382:2:34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1365:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1365:20:34"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1387:7:34"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1362:2:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:33:34"
															},
															"nodeType": "YulIf",
															"src": "1359:2:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1448:6:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1456:2:34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:15:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1465:2:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1469:2:34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1461:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1461:11:34"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1474:2:34"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1431:12:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:46:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1431:46:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1501:6:34"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1509:2:34"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1497:3:34"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1497:15:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1514:2:34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1493:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1493:24:34"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1519:6:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1486:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:40:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1486:40:34"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1535:16:34",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1545:6:34"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1535:6:34"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "469:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "480:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "492:6:34",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "500:6:34",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "508:6:34",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "516:6:34",
														"type": ""
													}
												],
												"src": "397:1160:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1640:219:34",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1686:26:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1695:6:34"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1703:6:34"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1688:6:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1688:22:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1688:22:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1661:7:34"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1670:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:23:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1653:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1653:32:34"
															},
															"nodeType": "YulIf",
															"src": "1650:2:34"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1721:29:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1740:9:34"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1734:5:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:16:34"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1725:5:34",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1803:26:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1812:6:34"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1820:6:34"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1805:6:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1805:22:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1805:22:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1772:5:34"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1793:5:34"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1786:6:34"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1786:13:34"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1779:6:34"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1779:21:34"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1769:2:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1769:32:34"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1762:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:40:34"
															},
															"nodeType": "YulIf",
															"src": "1759:2:34"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1838:15:34",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1848:5:34"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:34"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1606:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1617:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1629:6:34",
														"type": ""
													}
												],
												"src": "1562:297:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1934:120:34",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1980:26:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1989:6:34"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1997:6:34"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1982:6:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1982:22:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1982:22:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1955:7:34"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1964:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1951:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1951:23:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1976:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1947:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:32:34"
															},
															"nodeType": "YulIf",
															"src": "1944:2:34"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2015:33:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2038:9:34"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2025:12:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:23:34"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2015:6:34"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1900:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1911:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1923:6:34",
														"type": ""
													}
												],
												"src": "1864:190:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2140:113:34",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2186:26:34",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2195:6:34"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2203:6:34"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:34"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2188:22:34"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:22:34"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:34"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:34"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:32:34"
															},
															"nodeType": "YulIf",
															"src": "2150:2:34"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2221:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2237:9:34"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2231:5:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "2231:16:34"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:34"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2106:9:34",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2117:7:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2129:6:34",
														"type": ""
													}
												],
												"src": "2059:194:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2359:102:34",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2369:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2381:9:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2377:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2369:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2411:9:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2426:6:34"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2442:3:34",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2447:1:34",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2438:3:34"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2438:11:34"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2451:1:34",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2434:3:34"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2434:19:34"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2422:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2422:32:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:51:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:51:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2328:9:34",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2339:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2350:4:34",
														"type": ""
													}
												],
												"src": "2258:203:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2631:218:34",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2641:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2653:9:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:34",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2649:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "2649:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2641:4:34"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2676:29:34",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:3:34",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2699:1:34",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2690:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2690:11:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2703:1:34",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "2686:19:34"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2680:2:34",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2721:9:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2736:6:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2744:2:34"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2732:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2732:15:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2714:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "2714:34:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2714:34:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2779:2:34",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2764:18:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2788:6:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2796:2:34"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2784:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2784:15:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2757:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:43:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2757:43:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2820:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2831:2:34",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2816:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2816:18:34"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2836:6:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2809:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "2809:34:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2809:34:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:34",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2595:6:34",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2603:6:34",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2611:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2622:4:34",
														"type": ""
													}
												],
												"src": "2466:383:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2991:145:34",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3001:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3013:9:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3024:2:34",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3009:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3009:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3001:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3043:9:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3058:6:34"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3074:3:34",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3079:1:34",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3070:3:34"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3070:11:34"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3083:1:34",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3066:3:34"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3066:19:34"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:32:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3036:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3036:51:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3036:51:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3107:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3118:2:34",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3103:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3103:18:34"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3123:6:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3096:34:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3096:34:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2952:9:34",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2963:6:34",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2971:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2982:4:34",
														"type": ""
													}
												],
												"src": "2854:282:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3306:218:34",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3316:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3328:9:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3339:2:34",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3324:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3316:4:34"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3351:29:34",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3369:3:34",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3374:1:34",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3365:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3365:11:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3378:1:34",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3361:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3361:19:34"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3355:2:34",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3396:9:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3411:6:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3419:2:34"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3407:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3407:15:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3389:34:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3389:34:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3443:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3454:2:34",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3439:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:18:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3463:6:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3471:2:34"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:15:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3432:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:43:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3432:43:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3495:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3506:2:34",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3491:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3491:18:34"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3511:6:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3484:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:34:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3484:34:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3259:9:34",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3270:6:34",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3278:6:34",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3286:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3297:4:34",
														"type": ""
													}
												],
												"src": "3141:383:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3714:312:34",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3724:27:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3736:9:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3747:3:34",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3732:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:19:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3724:4:34"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3760:29:34",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3778:3:34",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3783:1:34",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3774:11:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3787:1:34",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:19:34"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3764:2:34",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3820:6:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3828:2:34"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3816:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3816:15:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3798:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:34:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3798:34:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3852:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3863:2:34",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3848:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3848:18:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3872:6:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3880:34:34",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3868:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3868:47:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:75:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:75:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3936:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3947:2:34",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3932:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3932:18:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3956:6:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3964:2:34"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3952:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3952:15:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3925:43:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3925:43:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3988:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3999:2:34",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3984:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3984:18:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "4008:6:34"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4016:2:34"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4004:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4004:15:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "3977:43:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3977:43:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint128_t_address_t_address__to_t_address_t_uint128_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3659:9:34",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3670:6:34",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3678:6:34",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3686:6:34",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3694:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3705:4:34",
														"type": ""
													}
												],
												"src": "3529:497:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4160:145:34",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4170:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4182:9:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:34",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4178:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "4178:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4170:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4212:9:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4227:6:34"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4243:3:34",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4248:1:34",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4239:3:34"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4239:11:34"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4252:1:34",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4235:3:34"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4235:19:34"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4223:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4223:32:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4205:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:51:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4205:51:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4276:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4287:2:34",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4272:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4272:18:34"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4292:6:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:34:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:34:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4121:9:34",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4132:6:34",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4140:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4151:4:34",
														"type": ""
													}
												],
												"src": "4031:274:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4409:103:34",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4419:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4431:9:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4442:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4427:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "4427:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4419:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4461:9:34"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4476:6:34"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4488:3:34",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4493:10:34",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4484:3:34"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4484:20:34"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4472:33:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:52:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4454:52:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4378:9:34",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4389:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4400:4:34",
														"type": ""
													}
												],
												"src": "4310:202:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4614:91:34",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4624:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4636:9:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4647:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4632:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "4632:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4624:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4666:9:34"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4688:1:34",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4691:6:34"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nodeType": "YulIdentifier",
																			"src": "4677:10:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4677:21:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4659:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:40:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4659:40:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4583:9:34",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4594:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4605:4:34",
														"type": ""
													}
												],
												"src": "4517:188:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4884:172:34",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4901:9:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4912:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4894:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "4894:21:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4894:21:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4935:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4946:2:34",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4931:18:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4951:2:34",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4924:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "4924:30:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4924:30:34"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4974:9:34"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4985:2:34",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4970:3:34"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4970:18:34"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4990:24:34",
																		"type": "",
																		"value": "Only owner can do this"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "4963:52:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4963:52:34"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5024:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5036:9:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:2:34",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5024:4:34"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6fd24def08b0888543800c4127fd6d1aa58919ac12b49d8f20efd315c642cdfa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4861:9:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4875:4:34",
														"type": ""
													}
												],
												"src": "4710:346:34"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5162:76:34",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5172:26:34",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5184:9:34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5195:2:34",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5180:3:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "5180:18:34"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5172:4:34"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5214:9:34"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5225:6:34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:34"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:25:34"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5207:25:34"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5131:9:34",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5142:6:34",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5153:4:34",
														"type": ""
													}
												],
												"src": "5061:177:34"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        let _1 := 32\n        value1 := abi_decode_t_address(add(headStart, _1))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value3, value3) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value3, value3) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { invalid() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value3, value3) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value3)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint128_t_address_t_address__to_t_address_t_uint128_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, signextend(2, value0))\n    }\n    function abi_encode_tuple_t_stringliteral_6fd24def08b0888543800c4127fd6d1aa58919ac12b49d8f20efd315c642cdfa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Only owner can do this\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 34,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100fe5760003560e01c80637dc0d1d011610095578063da802f8011610064578063da802f8014610260578063e58d539e14610275578063e6f4d0aa1461027d578063f851a4401461029d578063fd1c1518146102b2576100fe565b80637dc0d1d0146101e4578063b02c43d0146101f9578063d0c93a7c14610229578063d21220a71461024b576100fe565b80633a4b66f1116100d15780633a4b66f1146101925780633ccfd60b1461019c5780636020159d146101a45780637210468a146101c4576100fe565b80630dfe168114610103578063150b7a021461012e57806316f0115b1461015b57806317d70f7c14610170575b600080fd5b34801561010f57600080fd5b506101186102c7565b60405161012591906108ad565b60405180910390f35b34801561013a57600080fd5b5061014e61014936600461079d565b6102d6565b6040516101259190610932565b34801561016757600080fd5b506101186102e6565b34801561017c57600080fd5b506101856102f5565b6040516101259190610985565b61019a6102fb565b005b61019a6104c0565b3480156101b057600080fd5b5061019a6101bf36600461087d565b6104f9565b3480156101d057600080fd5b5061019a6101df36600461077c565b610531565b3480156101f057600080fd5b5061011861063c565b34801561020557600080fd5b5061021961021436600461087d565b61064b565b60405161012594939291906108fe565b34801561023557600080fd5b5061023e61068b565b6040516101259190610947565b34801561025757600080fd5b5061011861069b565b34801561026c57600080fd5b506101186106aa565b61019a6106b9565b34801561028957600080fd5b5061019a61029836600461077c565b6106f5565b3480156102a957600080fd5b50610118610741565b3480156102be57600080fd5b5061023e610750565b6001546001600160a01b031681565b630a85bd0160e11b949350505050565b6000546001600160a01b031681565b60045481565b600480546040516323b872dd60e01b815273416b433906b1b72fa758e166e239c43d68dc6f29926323b872dd92610337923392309291016108c1565b600060405180830381600087803b15801561035157600080fd5b505af1158015610365573d6000803e3d6000fd5b50506004805460405163095ea7b360e01b815273416b433906b1b72fa758e166e239c43d68dc6f29945063095ea7b393506103a392339291016108e5565b600060405180830381600087803b1580156103bd57600080fd5b505af11580156103d1573d6000803e3d6000fd5b50506004805460405163095ea7b360e01b815273416b433906b1b72fa758e166e239c43d68dc6f29945063095ea7b393506104239273c8c7b5ae61d97be7d02d606629059487066dc9cf9291016108e5565b600060405180830381600087803b15801561043d57600080fd5b505af1158015610451573d6000803e3d6000fd5b50506004805460405163b6b55f2560e01b815273c8c7b5ae61d97be7d02d606629059487066dc9cf945063b6b55f25935061048c9201610985565b600060405180830381600087803b1580156104a657600080fd5b505af11580156104ba573d6000803e3d6000fd5b50505050565b60048054604051632e1a7d4d60e01b815273c8c7b5ae61d97be7d02d606629059487066dc9cf92632e1a7d4d9261048c92909101610985565b6005546001600160a01b0316331461052c5760405162461bcd60e51b815260040161052390610955565b60405180910390fd5b600455565b6040516370a0823160e01b81526000906001600160a01b038316906370a08231906105609030906004016108ad565b60206040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b09190610895565b60055460405163a9059cbb60e01b81529192506001600160a01b038085169263a9059cbb926105e592169085906004016108e5565b602060405180830381600087803b1580156105ff57600080fd5b505af1158015610613573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610637919061085d565b505050565b6006546001600160a01b031681565b60076020526000908152604090208054600182015460028301546003909301546001600160a01b03928316936001600160801b0390921692918216911684565b600554600160a01b900460020b81565b6002546001600160a01b031681565b6003546001600160a01b031681565b600480546040516323b872dd60e01b815273416b433906b1b72fa758e166e239c43d68dc6f29926323b872dd9261048c923092339291016108c1565b6005546001600160a01b0316331461071f5760405162461bcd60e51b815260040161052390610955565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031681565b600554600160b81b900460020b81565b80356001600160a01b038116811461077757600080fd5b919050565b60006020828403121561078d578081fd5b61079682610760565b9392505050565b600080600080608085870312156107b2578283fd5b6107bb85610760565b935060206107ca818701610760565b935060408601359250606086013567ffffffffffffffff808211156107ed578384fd5b818801915088601f830112610800578384fd5b81358181111561080c57fe5b604051601f8201601f191681018501838111828210171561082957fe5b60405281815283820185018b101561083f578586fd5b81858501868301379081019093019390935250939692955090935050565b60006020828403121561086e578081fd5b81518015158114610796578182fd5b60006020828403121561088e578081fd5b5035919050565b6000602082840312156108a6578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0394851681526001600160801b039390931660208401529083166040830152909116606082015260800190565b6001600160e01b031991909116815260200190565b60029190910b815260200190565b6020808252601690820152754f6e6c79206f776e65722063616e20646f207468697360501b604082015260600190565b9081526020019056fea26469706673582212202b36e0980b3acfcc7d6db9fc2ad6f6c9a9bec3541842c69123eb8361cc63d02364736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DC0D1D0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDA802F80 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDA802F80 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xE58D539E EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xE6F4D0AA EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xFD1C1518 EQ PUSH2 0x2B2 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xB02C43D0 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x24B JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x3A4B66F1 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x6020159D EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x7210468A EQ PUSH2 0x1C4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x17D70F7C EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x79D JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x932 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x2E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x2FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19A PUSH2 0x4C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x63C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x947 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x69B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x19A PUSH2 0x6B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x741 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x750 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x416B433906B1B72FA758E166E239C43D68DC6F29 SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x337 SWAP3 CALLER SWAP3 ADDRESS SWAP3 SWAP2 ADD PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x365 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x416B433906B1B72FA758E166E239C43D68DC6F29 SWAP5 POP PUSH4 0x95EA7B3 SWAP4 POP PUSH2 0x3A3 SWAP3 CALLER SWAP3 SWAP2 ADD PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x416B433906B1B72FA758E166E239C43D68DC6F29 SWAP5 POP PUSH4 0x95EA7B3 SWAP4 POP PUSH2 0x423 SWAP3 PUSH20 0xC8C7B5AE61D97BE7D02D606629059487066DC9CF SWAP3 SWAP2 ADD PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x451 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xC8C7B5AE61D97BE7D02D606629059487066DC9CF SWAP5 POP PUSH4 0xB6B55F25 SWAP4 POP PUSH2 0x48C SWAP3 ADD PUSH2 0x985 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xC8C7B5AE61D97BE7D02D606629059487066DC9CF SWAP3 PUSH4 0x2E1A7D4D SWAP3 PUSH2 0x48C SWAP3 SWAP1 SWAP2 ADD PUSH2 0x985 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x560 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x578 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x895 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0x5E5 SWAP3 AND SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x613 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x85D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0x416B433906B1B72FA758E166E239C43D68DC6F29 SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x48C SWAP3 ADDRESS SWAP3 CALLER SWAP3 SWAP2 ADD PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x955 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x796 DUP3 PUSH2 0x760 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x7B2 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x7BB DUP6 PUSH2 0x760 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH2 0x7CA DUP2 DUP8 ADD PUSH2 0x760 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x7ED JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x800 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x80C JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD DUP6 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x829 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD DUP6 ADD DUP12 LT ISZERO PUSH2 0x83F JUMPI DUP6 DUP7 REVERT JUMPDEST DUP2 DUP6 DUP6 ADD DUP7 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x86E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x796 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x88E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8A6 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x4F6E6C79206F776E65722063616E20646F2074686973 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B CALLDATASIZE 0xE0 SWAP9 SIGNEXTEND GASPRICE 0xCF 0xCC PUSH30 0x6DB9FC2AD6F6C9A9BEC3541842C69123EB8361CC63D02364736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "5334:2031:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5434:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:162:0;;;;;;;;;;-1:-1:-1;538:162:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5378:19:3:-;;;;;;;;;;;;;:::i;5563:22::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6412:445::-;;;:::i;:::-;;6867:124;;;:::i;6205:154::-;;;;;;;;;;-1:-1:-1;6205:154:3;;;;;:::i;:::-;;:::i;7164:184::-;;;;;;;;;;-1:-1:-1;7164:184:3;;;;;:::i;:::-;;:::i;5685:66::-;;;;;;;;;;;;;:::i;5936:43::-;;;;;;;;;;-1:-1:-1;5936:43:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;5619:24::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5484:21::-;;;;;;;;;;;;;:::i;5534:22::-;;;;;;;;;;;;;:::i;6999:157::-;;;:::i;6051:146::-;;;;;;;;;;-1:-1:-1;6051:146:3;;;;;:::i;:::-;;:::i;5592:20::-;;;;;;;;;;;;;:::i;5650:28::-;;;;;;;;;;;;;:::i;5434:21::-;;;-1:-1:-1;;;;;5434:21:3;;:::o;538:162:0:-;-1:-1:-1;;;538:162:0;;;;;;:::o;5378:19:3:-;;;-1:-1:-1;;;;;5378:19:3;;:::o;5563:22::-;;;;:::o;6412:445::-;6547:7;;;6455:100;;-1:-1:-1;;;6455:100:3;;6463:42;;6455:64;;:100;;6520:10;;6540:4;;6547:7;6455:100;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6638:7:3;;;6566:80;;-1:-1:-1;;;6566:80:3;;6574:42;;-1:-1:-1;6566:59:3;;-1:-1:-1;6566:80:3;;6626:10;;6638:7;6566:80;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6761:7:3;;;6657:112;;-1:-1:-1;;;6657:112:3;;6665:42;;-1:-1:-1;6657:59:3;;-1:-1:-1;6657:112:3;;6717:42;;6761:7;6657:112;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6841:7:3;;;6780:69;;-1:-1:-1;;;6780:69:3;;6789:42;;-1:-1:-1;6780:60:3;;-1:-1:-1;6780:69:3;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6412:445::o;6867:124::-;6975:7;;;6913:70;;-1:-1:-1;;;6913:70:3;;6922:42;;6913:61;;:70;;6975:7;;6913:70;;:::i;6205:154::-;6288:5;;-1:-1:-1;;;;;6288:5:3;6274:10;:19;6266:54;;;;-1:-1:-1;;;6266:54:3;;;;;;;:::i;:::-;;;;;;;;;6331:7;:20;6205:154::o;7164:184::-;7241:45;;-1:-1:-1;;;7241:45:3;;7225:13;;-1:-1:-1;;;;;7241:30:3;;;;;:45;;7280:4;;7241:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7327:5;;7297:43;;-1:-1:-1;;;7297:43:3;;7225:61;;-1:-1:-1;;;;;;7297:29:3;;;;;;:43;;7327:5;;7225:61;;7297:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7164:184;;:::o;5685:66::-;;;-1:-1:-1;;;;;5685:66:3;;:::o;5936:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5936:43:3;;;;-1:-1:-1;;;;;5936:43:3;;;;;;;;;;:::o;5619:24::-;;;-1:-1:-1;;;5619:24:3;;;;;:::o;5484:21::-;;;-1:-1:-1;;;;;5484:21:3;;:::o;5534:22::-;;;-1:-1:-1;;;;;5534:22:3;;:::o;6999:157::-;7140:7;;;7048:100;;-1:-1:-1;;;7048:100:3;;7056:42;;7048:64;;:100;;7121:4;;7128:10;;7140:7;7048:100;;:::i;6051:146::-;6130:5;;-1:-1:-1;;;;;6130:5:3;6116:10;:19;6108:54;;;;-1:-1:-1;;;6108:54:3;;;;;;;:::i;:::-;6173:5;:16;;-1:-1:-1;;;;;;6173:16:3;-1:-1:-1;;;;;6173:16:3;;;;;;;;;;6051:146::o;5592:20::-;;;-1:-1:-1;;;;;5592:20:3;;:::o;5650:28::-;;;-1:-1:-1;;;5650:28:3;;;;;:::o;14:175:34:-;84:20;;-1:-1:-1;;;;;133:31:34;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:34:o;397:1160::-;;;;;569:3;557:9;548:7;544:23;540:33;537:2;;;591:6;583;576:22;537:2;619:31;640:9;619:31;:::i;:::-;609:41;;669:2;690:40;726:2;715:9;711:18;690:40;:::i;:::-;680:50;;777:2;766:9;762:18;749:32;739:42;;832:2;821:9;817:18;804:32;855:18;896:2;888:6;885:14;882:2;;;917:6;909;902:22;882:2;960:6;949:9;945:22;935:32;;1005:7;998:4;994:2;990:13;986:27;976:2;;1032:6;1024;1017:22;976:2;1073;1060:16;1095:2;1091;1088:10;1085:2;;;1101:9;1085:2;1141;1135:9;1210:2;1191:13;;-1:-1:-1;;1187:27:34;1175:40;;1171:49;;1235:18;;;1255:22;;;1232:46;1229:2;;;1281:9;1229:2;1308;1301:22;1332:18;;;1369:11;;;1365:20;;1362:33;-1:-1:-1;1359:2:34;;;1413:6;1405;1398:22;1359:2;1474;1469;1465;1461:11;1456:2;1448:6;1444:15;1431:46;1497:15;;;1493:24;;;1486:40;;;;-1:-1:-1;527:1030:34;;;;-1:-1:-1;527:1030:34;;-1:-1:-1;;527:1030:34:o;1562:297::-;;1682:2;1670:9;1661:7;1657:23;1653:32;1650:2;;;1703:6;1695;1688:22;1650:2;1740:9;1734:16;1793:5;1786:13;1779:21;1772:5;1769:32;1759:2;;1820:6;1812;1805:22;1864:190;;1976:2;1964:9;1955:7;1951:23;1947:32;1944:2;;;1997:6;1989;1982:22;1944:2;-1:-1:-1;2025:23:34;;1934:120;-1:-1:-1;1934:120:34:o;2059:194::-;;2182:2;2170:9;2161:7;2157:23;2153:32;2150:2;;;2203:6;2195;2188:22;2150:2;-1:-1:-1;2231:16:34;;2140:113;-1:-1:-1;2140:113:34:o;2258:203::-;-1:-1:-1;;;;;2422:32:34;;;;2404:51;;2392:2;2377:18;;2359:102::o;2466:383::-;-1:-1:-1;;;;;2732:15:34;;;2714:34;;2784:15;;;;2779:2;2764:18;;2757:43;2831:2;2816:18;;2809:34;;;;2664:2;2649:18;;2631:218::o;2854:282::-;-1:-1:-1;;;;;3054:32:34;;;;3036:51;;3118:2;3103:18;;3096:34;3024:2;3009:18;;2991:145::o;3529:497::-;-1:-1:-1;;;;;3816:15:34;;;3798:34;;-1:-1:-1;;;;;3868:47:34;;;;3863:2;3848:18;;3841:75;3952:15;;;3947:2;3932:18;;3925:43;4004:15;;;3999:2;3984:18;;3977:43;3747:3;3732:19;;3714:312::o;4310:202::-;-1:-1:-1;;;;;;4472:33:34;;;;4454:52;;4442:2;4427:18;;4409:103::o;4517:188::-;4688:1;4677:21;;;;4659:40;;4647:2;4632:18;;4614:91::o;4710:346::-;4912:2;4894:21;;;4951:2;4931:18;;;4924:30;-1:-1:-1;;;4985:2:34;4970:18;;4963:52;5047:2;5032:18;;4884:172::o;5061:177::-;5207:25;;;5195:2;5180:18;;5162:76::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "500000",
								"executionCost": "42208",
								"totalCost": "542208"
							},
							"external": {
								"_newAdmin(address)": "22077",
								"_newtokenID(uint256)": "21131",
								"_transferToAdmin(address)": "infinite",
								"admin()": "1158",
								"deposits(uint256)": "3838",
								"farmNFT()": "1092",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"oracle()": "1093",
								"pool()": "1138",
								"sendNFTBack()": "infinite",
								"spaceMultiplier()": "1177",
								"stake()": "infinite",
								"tickSpacing()": "1134",
								"token0()": "1094",
								"token1()": "1159",
								"tokenId()": "1118",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5334,
									"end": 7365,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 5334,
									"end": 7365,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5334,
									"end": 7365,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5685,
									"end": 5751,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 5685,
									"end": 5751,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5685,
									"end": 5751,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5685,
									"end": 5751,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5709,
									"end": 5751,
									"name": "PUSH",
									"source": 3,
									"value": "9465ED15B70E8A534663530C4FCC92E22B8F6032"
								},
								{
									"begin": 5685,
									"end": 5751,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5685,
									"end": 5751,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5685,
									"end": 5751,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5992,
									"end": 6043,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 5992,
									"end": 6043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5992,
									"end": 6043,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 5992,
									"end": 6043,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5992,
									"end": 6043,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5992,
									"end": 6043,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5992,
									"end": 6043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5992,
									"end": 6043,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5992,
									"end": 6043,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5992,
									"end": 6043,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6017,
									"end": 6022,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 6017,
									"end": 6035,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6017,
									"end": 6035,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6017,
									"end": 6035,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6025,
									"end": 6035,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 6017,
									"end": 6035,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 6017,
									"end": 6035,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6017,
									"end": 6035,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5334,
									"end": 7365,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5334,
									"end": 7365,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5334,
									"end": 7365,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5334,
									"end": 7365,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5334,
									"end": 7365,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 5334,
									"end": 7365,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5334,
									"end": 7365,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b36e0980b3acfcc7d6db9fc2ad6f6c9a9bec3541842c69123eb8361cc63d02364736f6c63430007060033",
									".code": [
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "7DC0D1D0"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "DA802F80"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "DA802F80"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "E58D539E"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "E6F4D0AA"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "F851A440"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "FD1C1518"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "7DC0D1D0"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "B02C43D0"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "D0C93A7C"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "D21220A7"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "3A4B66F1"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "3A4B66F1"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "3CCFD60B"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "6020159D"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "7210468A"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "DFE1681"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "16F0115B"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "17D70F7C"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 7365,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6412,
											"end": 6857,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 6412,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6412,
											"end": 6857,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6412,
											"end": 6857,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6412,
											"end": 6857,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6412,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6857,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6867,
											"end": 6991,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 6867,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6867,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6867,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 6867,
											"end": 6991,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6999,
											"end": 7156,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6999,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6999,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6999,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6999,
											"end": 7156,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5455,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 538,
											"end": 700,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5397,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5563,
											"end": 5585,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6412,
											"end": 6857,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6412,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6554,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6547,
											"end": 6554,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6554,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6463,
											"end": 6505,
											"name": "PUSH",
											"source": 3,
											"value": "416B433906B1B72FA758E166E239C43D68DC6F29"
										},
										{
											"begin": 6463,
											"end": 6505,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6519,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 6455,
											"end": 6519,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6530,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6520,
											"end": 6530,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6544,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6554,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6455,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6638,
											"end": 6645,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6638,
											"end": 6645,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6638,
											"end": 6645,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6616,
											"name": "PUSH",
											"source": 3,
											"value": "416B433906B1B72FA758E166E239C43D68DC6F29"
										},
										{
											"begin": 6574,
											"end": 6616,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6566,
											"end": 6625,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 6566,
											"end": 6625,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6626,
											"end": 6636,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6626,
											"end": 6636,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6638,
											"end": 6645,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 6566,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6761,
											"end": 6768,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6761,
											"end": 6768,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6761,
											"end": 6768,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6665,
											"end": 6707,
											"name": "PUSH",
											"source": 3,
											"value": "416B433906B1B72FA758E166E239C43D68DC6F29"
										},
										{
											"begin": 6665,
											"end": 6707,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6657,
											"end": 6716,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 6657,
											"end": 6716,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6717,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "C8C7B5AE61D97BE7D02D606629059487066DC9CF"
										},
										{
											"begin": 6717,
											"end": 6759,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6761,
											"end": 6768,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6657,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6841,
											"end": 6848,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6841,
											"end": 6848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6841,
											"end": 6848,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B6B55F25"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6789,
											"end": 6831,
											"name": "PUSH",
											"source": 3,
											"value": "C8C7B5AE61D97BE7D02D606629059487066DC9CF"
										},
										{
											"begin": 6789,
											"end": 6831,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6780,
											"end": 6840,
											"name": "PUSH",
											"source": 3,
											"value": "B6B55F25"
										},
										{
											"begin": 6780,
											"end": 6840,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6780,
											"end": 6849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6857,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6867,
											"end": 6991,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 6867,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6975,
											"end": 6982,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6975,
											"end": 6982,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6975,
											"end": 6982,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6983,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6913,
											"end": 6983,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6913,
											"end": 6983,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6983,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 6964,
											"name": "PUSH",
											"source": 3,
											"value": "C8C7B5AE61D97BE7D02D606629059487066DC9CF"
										},
										{
											"begin": 6922,
											"end": 6964,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6974,
											"name": "PUSH",
											"source": 3,
											"value": "2E1A7D4D"
										},
										{
											"begin": 6913,
											"end": 6974,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6913,
											"end": 6983,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6975,
											"end": 6982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6975,
											"end": 6982,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6983,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 6913,
											"end": 6983,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6293,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6288,
											"end": 6293,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6293,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6274,
											"end": 6293,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6266,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6331,
											"end": 6338,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6331,
											"end": 6351,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6205,
											"end": 6359,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7238,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7241,
											"end": 7271,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7271,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 7241,
											"end": 7271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7284,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7241,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7332,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7327,
											"end": 7332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7286,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7286,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7297,
											"end": 7326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7326,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7326,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7326,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7326,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 7297,
											"end": 7326,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7332,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7327,
											"end": 7332,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7286,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7286,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7297,
											"end": 7340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7164,
											"end": 7348,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5685,
											"end": 5751,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5936,
											"end": 5979,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "SIGNEXTEND",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5619,
											"end": 5643,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6999,
											"end": 7156,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 6999,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7147,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7140,
											"end": 7147,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7147,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7148,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7048,
											"end": 7148,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7048,
											"end": 7148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7056,
											"end": 7098,
											"name": "PUSH",
											"source": 3,
											"value": "416B433906B1B72FA758E166E239C43D68DC6F29"
										},
										{
											"begin": 7056,
											"end": 7098,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7112,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 7048,
											"end": 7112,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 7048,
											"end": 7148,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7121,
											"end": 7125,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 7121,
											"end": 7125,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7138,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7128,
											"end": 7138,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7147,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7048,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 7048,
											"end": 7148,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6135,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6130,
											"end": 6135,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6130,
											"end": 6135,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6116,
											"end": 6126,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6116,
											"end": 6135,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 6108,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6178,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6197,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5612,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "SIGNEXTEND",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5678,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 34,
											"value": "147"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 34
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "149"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 113,
											"end": 115,
											"name": "tag",
											"source": 34,
											"value": "149"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 65,
											"end": 189,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 65,
											"end": 189,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 34,
											"value": "55"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "151"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 34,
											"value": "151"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "147"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 34,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 1557,
											"name": "tag",
											"source": 34,
											"value": "30"
										},
										{
											"begin": 397,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 397,
											"end": 1557,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 1557,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 397,
											"end": 1557,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 1557,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 569,
											"end": 572,
											"name": "PUSH",
											"source": 34,
											"value": "80"
										},
										{
											"begin": 557,
											"end": 566,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 548,
											"end": 555,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 544,
											"end": 567,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 540,
											"end": 573,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 537,
											"end": 539,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "154"
										},
										{
											"begin": 537,
											"end": 539,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 591,
											"end": 597,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 583,
											"end": 589,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 576,
											"end": 598,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 537,
											"end": 539,
											"name": "tag",
											"source": 34,
											"value": "154"
										},
										{
											"begin": 537,
											"end": 539,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 619,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "155"
										},
										{
											"begin": 640,
											"end": 649,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 619,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "147"
										},
										{
											"begin": 619,
											"end": 650,
											"name": "JUMP",
											"source": 34,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 650,
											"name": "tag",
											"source": 34,
											"value": "155"
										},
										{
											"begin": 619,
											"end": 650,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 609,
											"end": 650,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 609,
											"end": 650,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 669,
											"end": 671,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "156"
										},
										{
											"begin": 726,
											"end": 728,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 715,
											"end": 724,
											"name": "DUP8",
											"source": 34
										},
										{
											"begin": 711,
											"end": 729,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 690,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "147"
										},
										{
											"begin": 690,
											"end": 730,
											"name": "JUMP",
											"source": 34,
											"value": "[in]"
										},
										{
											"begin": 690,
											"end": 730,
											"name": "tag",
											"source": 34,
											"value": "156"
										},
										{
											"begin": 690,
											"end": 730,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 680,
											"end": 730,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 680,
											"end": 730,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 777,
											"end": 779,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 762,
											"end": 780,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 749,
											"end": 781,
											"name": "CALLDATALOAD",
											"source": 34
										},
										{
											"begin": 739,
											"end": 781,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 739,
											"end": 781,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 821,
											"end": 830,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 804,
											"end": 836,
											"name": "CALLDATALOAD",
											"source": 34
										},
										{
											"begin": 855,
											"end": 873,
											"name": "PUSH",
											"source": 34,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 896,
											"end": 898,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 888,
											"end": 894,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 885,
											"end": 899,
											"name": "GT",
											"source": 34
										},
										{
											"begin": 882,
											"end": 884,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 882,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "157"
										},
										{
											"begin": 882,
											"end": 884,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 917,
											"end": 923,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 902,
											"end": 924,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 882,
											"end": 884,
											"name": "tag",
											"source": 34,
											"value": "157"
										},
										{
											"begin": 882,
											"end": 884,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 960,
											"end": 966,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 949,
											"end": 958,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 945,
											"end": 967,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 935,
											"end": 967,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 935,
											"end": 967,
											"name": "POP",
											"source": 34
										},
										{
											"begin": 1005,
											"end": 1012,
											"name": "DUP9",
											"source": 34
										},
										{
											"begin": 998,
											"end": 1002,
											"name": "PUSH",
											"source": 34,
											"value": "1F"
										},
										{
											"begin": 994,
											"end": 996,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 990,
											"end": 1003,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 986,
											"end": 1013,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 976,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "158"
										},
										{
											"begin": 976,
											"end": 978,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 1024,
											"end": 1030,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 1017,
											"end": 1039,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 976,
											"end": 978,
											"name": "tag",
											"source": 34,
											"value": "158"
										},
										{
											"begin": 976,
											"end": 978,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1073,
											"end": 1075,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1060,
											"end": 1076,
											"name": "CALLDATALOAD",
											"source": 34
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1091,
											"end": 1093,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "GT",
											"source": 34
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "159"
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1101,
											"end": 1110,
											"name": "INVALID",
											"source": 34
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "tag",
											"source": 34,
											"value": "159"
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1141,
											"end": 1143,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1144,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 1210,
											"end": 1212,
											"name": "PUSH",
											"source": 34,
											"value": "1F"
										},
										{
											"begin": 1191,
											"end": 1204,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1191,
											"end": 1204,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1187,
											"end": 1214,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 1175,
											"end": 1215,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1175,
											"end": 1215,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1171,
											"end": 1220,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 1171,
											"end": 1220,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1235,
											"end": 1253,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 1235,
											"end": 1253,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1235,
											"end": 1253,
											"name": "GT",
											"source": 34
										},
										{
											"begin": 1255,
											"end": 1277,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1255,
											"end": 1277,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1255,
											"end": 1277,
											"name": "LT",
											"source": 34
										},
										{
											"begin": 1232,
											"end": 1278,
											"name": "OR",
											"source": 34
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "160"
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1281,
											"end": 1290,
											"name": "INVALID",
											"source": 34
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "tag",
											"source": 34,
											"value": "160"
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1323,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 1369,
											"end": 1380,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 1369,
											"end": 1380,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1369,
											"end": 1380,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1365,
											"end": 1385,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 1365,
											"end": 1385,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1362,
											"end": 1395,
											"name": "DUP12",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "161"
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1413,
											"end": 1419,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 1398,
											"end": 1420,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "tag",
											"source": 34,
											"value": "161"
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1474,
											"end": 1476,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1469,
											"end": 1471,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 1465,
											"end": 1467,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 1461,
											"end": 1472,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1456,
											"end": 1458,
											"name": "DUP7",
											"source": 34
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 1444,
											"end": 1459,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1431,
											"end": 1477,
											"name": "CALLDATACOPY",
											"source": 34
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1497,
											"end": 1512,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1493,
											"end": 1517,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1493,
											"end": 1517,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 1493,
											"end": 1517,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 1486,
											"end": 1526,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 1486,
											"end": 1526,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 1486,
											"end": 1526,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 1486,
											"end": 1526,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 527,
											"end": 1557,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 527,
											"end": 1557,
											"name": "SWAP7",
											"source": 34
										},
										{
											"begin": 527,
											"end": 1557,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 527,
											"end": 1557,
											"name": "SWAP6",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 527,
											"end": 1557,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 527,
											"end": 1557,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 527,
											"end": 1557,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 1562,
											"end": 1859,
											"name": "tag",
											"source": 34,
											"value": "136"
										},
										{
											"begin": 1562,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1562,
											"end": 1859,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1684,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1661,
											"end": 1668,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 1657,
											"end": 1680,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 1653,
											"end": 1685,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "163"
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1688,
											"end": 1710,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "tag",
											"source": 34,
											"value": "163"
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1740,
											"end": 1749,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1734,
											"end": 1750,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 1793,
											"end": 1798,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1779,
											"end": 1800,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1772,
											"end": 1777,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1769,
											"end": 1801,
											"name": "EQ",
											"source": 34
										},
										{
											"begin": 1759,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "152"
										},
										{
											"begin": 1759,
											"end": 1761,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1820,
											"end": 1826,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1805,
											"end": 1827,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 1864,
											"end": 2054,
											"name": "tag",
											"source": 34,
											"value": "50"
										},
										{
											"begin": 1864,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 1864,
											"end": 2054,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 1973,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 1955,
											"end": 1962,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 1951,
											"end": 1974,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 1947,
											"end": 1979,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "166"
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 1997,
											"end": 2003,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 1982,
											"end": 2004,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "tag",
											"source": 34,
											"value": "166"
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "CALLDATALOAD",
											"source": 34
										},
										{
											"begin": 2025,
											"end": 2048,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 1934,
											"end": 2054,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 2054,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 2059,
											"end": 2253,
											"name": "tag",
											"source": 34,
											"value": "129"
										},
										{
											"begin": 2059,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 2059,
											"end": 2253,
											"name": "PUSH",
											"source": 34,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 34
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 34
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "ISZERO",
											"source": 34
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 34,
											"value": "168"
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "JUMPI",
											"source": 34
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 2188,
											"end": 2210,
											"name": "REVERT",
											"source": 34
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "tag",
											"source": 34,
											"value": "168"
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2231,
											"end": 2247,
											"name": "MLOAD",
											"source": 34
										},
										{
											"begin": 2231,
											"end": 2247,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 2140,
											"end": 2253,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2140,
											"end": 2253,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 2258,
											"end": 2461,
											"name": "tag",
											"source": 34,
											"value": "26"
										},
										{
											"begin": 2258,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2422,
											"end": 2454,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 2422,
											"end": 2454,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 2422,
											"end": 2454,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 2422,
											"end": 2454,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 2404,
											"end": 2455,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 2404,
											"end": 2455,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 2392,
											"end": 2394,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 2377,
											"end": 2395,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 2377,
											"end": 2395,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 2359,
											"end": 2461,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 2466,
											"end": 2849,
											"name": "tag",
											"source": 34,
											"value": "97"
										},
										{
											"begin": 2466,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2732,
											"end": 2747,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 2732,
											"end": 2747,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 2732,
											"end": 2747,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 2714,
											"end": 2748,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 2784,
											"end": 2799,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 2784,
											"end": 2799,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 2784,
											"end": 2799,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 2784,
											"end": 2799,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 2757,
											"end": 2800,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 2831,
											"end": 2833,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 2809,
											"end": 2843,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 2809,
											"end": 2843,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 2809,
											"end": 2843,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 2809,
											"end": 2843,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 2649,
											"end": 2667,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 2649,
											"end": 2667,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 2631,
											"end": 2849,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 2854,
											"end": 3136,
											"name": "tag",
											"source": 34,
											"value": "102"
										},
										{
											"begin": 2854,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3054,
											"end": 3086,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 3054,
											"end": 3086,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 3054,
											"end": 3086,
											"name": "SWAP3",
											"source": 34
										},
										{
											"begin": 3054,
											"end": 3086,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 3036,
											"end": 3087,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 3036,
											"end": 3087,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 3096,
											"end": 3130,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 3024,
											"end": 3026,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 3009,
											"end": 3027,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 2991,
											"end": 3136,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 3529,
											"end": 4026,
											"name": "tag",
											"source": 34,
											"value": "66"
										},
										{
											"begin": 3529,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3816,
											"end": 3831,
											"name": "SWAP5",
											"source": 34
										},
										{
											"begin": 3816,
											"end": 3831,
											"name": "DUP6",
											"source": 34
										},
										{
											"begin": 3816,
											"end": 3831,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 3798,
											"end": 3832,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 3798,
											"end": 3832,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3868,
											"end": 3915,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 3868,
											"end": 3915,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 3868,
											"end": 3915,
											"name": "SWAP4",
											"source": 34
										},
										{
											"begin": 3868,
											"end": 3915,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 3863,
											"end": 3865,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "DUP5",
											"source": 34
										},
										{
											"begin": 3848,
											"end": 3866,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 3841,
											"end": 3916,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 3952,
											"end": 3967,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 3952,
											"end": 3967,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 3952,
											"end": 3967,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 3947,
											"end": 3949,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "DUP4",
											"source": 34
										},
										{
											"begin": 3932,
											"end": 3950,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 3925,
											"end": 3968,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 4004,
											"end": 4019,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 4004,
											"end": 4019,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 4004,
											"end": 4019,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 3999,
											"end": 4001,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 3977,
											"end": 4020,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "PUSH",
											"source": 34,
											"value": "80"
										},
										{
											"begin": 3732,
											"end": 3751,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 3732,
											"end": 3751,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 3714,
											"end": 4026,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 4310,
											"end": 4512,
											"name": "tag",
											"source": 34,
											"value": "33"
										},
										{
											"begin": 4310,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4472,
											"end": 4505,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 4472,
											"end": 4505,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 4472,
											"end": 4505,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 4472,
											"end": 4505,
											"name": "AND",
											"source": 34
										},
										{
											"begin": 4454,
											"end": 4506,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 4454,
											"end": 4506,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 4442,
											"end": 4444,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 4409,
											"end": 4512,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 4517,
											"end": 4705,
											"name": "tag",
											"source": 34,
											"value": "71"
										},
										{
											"begin": 4517,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4688,
											"end": 4689,
											"name": "PUSH",
											"source": 34,
											"value": "2"
										},
										{
											"begin": 4677,
											"end": 4698,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 4677,
											"end": 4698,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 4677,
											"end": 4698,
											"name": "SWAP2",
											"source": 34
										},
										{
											"begin": 4677,
											"end": 4698,
											"name": "SIGNEXTEND",
											"source": 34
										},
										{
											"begin": 4659,
											"end": 4699,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 4659,
											"end": 4699,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 4647,
											"end": 4649,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 4632,
											"end": 4650,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 4632,
											"end": 4650,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 4614,
											"end": 4705,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 4710,
											"end": 5056,
											"name": "tag",
											"source": 34,
											"value": "122"
										},
										{
											"begin": 4710,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 4894,
											"end": 4915,
											"name": "DUP1",
											"source": 34
										},
										{
											"begin": 4894,
											"end": 4915,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 4894,
											"end": 4915,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 4951,
											"end": 4953,
											"name": "PUSH",
											"source": 34,
											"value": "16"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 4924,
											"end": 4954,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F6E6C79206F776E65722063616E20646F2074686973"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4985,
											"end": 4987,
											"name": "PUSH",
											"source": 34,
											"value": "40"
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "DUP3",
											"source": 34
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 4963,
											"end": 5015,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 5047,
											"end": 5049,
											"name": "PUSH",
											"source": 34,
											"value": "60"
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 4884,
											"end": 5056,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										},
										{
											"begin": 5061,
											"end": 5238,
											"name": "tag",
											"source": 34,
											"value": "42"
										},
										{
											"begin": 5061,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 34
										},
										{
											"begin": 5207,
											"end": 5232,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 5207,
											"end": 5232,
											"name": "DUP2",
											"source": 34
										},
										{
											"begin": 5207,
											"end": 5232,
											"name": "MSTORE",
											"source": 34
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "PUSH",
											"source": 34,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "ADD",
											"source": 34
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "SWAP1",
											"source": 34
										},
										{
											"begin": 5162,
											"end": 5238,
											"name": "JUMP",
											"source": 34,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_newAdmin(address)": "e6f4d0aa",
							"_newtokenID(uint256)": "6020159d",
							"_transferToAdmin(address)": "7210468a",
							"admin()": "f851a440",
							"deposits(uint256)": "b02c43d0",
							"farmNFT()": "da802f80",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"oracle()": "7dc0d1d0",
							"pool()": "16f0115b",
							"sendNFTBack()": "e58d539e",
							"spaceMultiplier()": "fd1c1518",
							"stake()": "3a4b66f1",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"tokenId()": "17d70f7c",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"_newAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTokenId\",\"type\":\"uint256\"}],\"name\":\"_newtokenID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Token\",\"type\":\"address\"}],\"name\":\"_transferToAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendNFTBack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"spaceMultiplier\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"stateVariables\":{\"deposits\":{\"details\":\"deposits[tokenId] => Deposit\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/VeloStake.sol\":\"V3BotStaking\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol\":{\"keccak256\":\"0xdb2133d55b8f3a94313af8f4371ae0501a58e412d471b03d8581214c5ea2ce33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cea1e4bf769f27c8c9c1442f1518b49ef6c8b71a4bd4ce88353da9e9a8ba1704\",\"dweb:/ipfs/QmR1b8sj7fxgeHqDksV4GYTjZS1qajWC3yg9VCMUJus2bF\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd03561349430ee87f356fb47017ebe9137fd8aab8380e7a1c3b270c7fba62376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e747e57851bbd7685566623148b778542e0280aa0f8a8fe0ba54b4c6127f5d65\",\"dweb:/ipfs/QmScpCryhDC3Ag12jgn6sCvrYvEQ3qeapxbcfuv1oRE4B2\"]},\"contracts/core/INonfungiblePositionManager.sol\":{\"keccak256\":\"0xfe7d9ee66050cd945f09f5a54bada3d8eb3b024aedc37b9c521703c61e3ac892\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f5d4cc3b9d41b44b2419a72bc3cd27bc0608e0b488196348b4a2e342d2114467\",\"dweb:/ipfs/QmYKKT5uccPQQSBT54wN2yZV5phs4kPYr76WvUerYiKbWp\"]},\"contracts/core/VeloStake.sol\":{\"keccak256\":\"0x3e2baa012a3b0975e1820fc4a1be113422631c4885b360b5a1c3bcfe09b1f11b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a57b925bf793d34da5297305b963f56867ac55f09d789b27f914559041bfa7ca\",\"dweb:/ipfs/QmaxEaweUjoWBtWKGgbRRvo47nzk2eWoer1EH4cKJkBwGN\"]},\"contracts/core/interfaces/ICLFactory.sol\":{\"keccak256\":\"0x2b8dda4776bd095c900e408b2cb21324f72694bed75c69972cd0cb3b16b1bff0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d37ae64eabec6197ef78c9fd1d4c699398937ca5f3e9f852b11b32082ab2e680\",\"dweb:/ipfs/QmWLLA5bV17Q3fS5fDdukXsaquZ5sNoP8KvBAEfYQHfK3Z\"]},\"contracts/core/interfaces/ICLPool.sol\":{\"keccak256\":\"0x0a11e1392c4b5ef4e47a3415a9b1a2118e9370d52a253dbd1c910bbbb615e91f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0c04e689e0589f3d67961fd5febcdc0f39c0700aeebef2537ccfb29ddba29de1\",\"dweb:/ipfs/QmbuthGhVJsx45dpgF7p71VSuLshREAsaLJu34HQNgRJoz\"]},\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]},\"contracts/core/interfaces/IFactoryRegistry.sol\":{\"keccak256\":\"0xa2dbe19a5c9e221ffd8e4612ee8a4aa1233ab0ad059d4b7d91a8dca1153bcea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a01d481d3a1f5172b8601d267439e24662849d7ebb3e1e66ec46d541e57831\",\"dweb:/ipfs/QmYG56TEtS8dwHrNaHxGrTp8r6cDzRkuGKsHBbiToUVEvX\"]},\"contracts/core/interfaces/IVoter.sol\":{\"keccak256\":\"0x029239646ad77a70b26a702b7e286521a03d5b89d148ff7c13d9bf56f6203187\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eccfb9403ee8f5e7f604eccb0cafcbd047c1f73371537227011e6d557895fa68\",\"dweb:/ipfs/QmTjDHzzKTzkYhTeiWA1po8YL3USKkkMZSxZixVgsSQcXK\"]},\"contracts/core/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x17ee815f29f7bc6a1528203976ed5bfdd945354dd72a7d322e8b092e331beb3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9845c5056470191730c8a8688663bc9808172e57395c1c6053b5145bf9fd5098\",\"dweb:/ipfs/QmXyoRGbDe6KPngPsKXWZCyLLdmRTFKdhVD5Gf1Y15rG7a\"]},\"contracts/core/interfaces/callback/ICLMintCallback.sol\":{\"keccak256\":\"0x22d4ed43f7d7313e676e80f7ae3315f53c3a84fbf256efae5116ef0aba32c1e8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a21d9618b9a9c2fe2cf35d9d6d608dd02a112bd05e6020fbe71e7e09064c2be7\",\"dweb:/ipfs/QmeBQiyVmxVTPT3ftVFDkiDVgZLMar6SQegryLC7A3jmLr\"]},\"contracts/core/interfaces/callback/ICLSwapCallback.sol\":{\"keccak256\":\"0xb93e1ef2be3090a64b3b024f60253aef64b875f61dffaef8b9231351f8054948\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b16ccd544a6a551c977b7a7d6b6b9704c68e86624d66ecb16d945d3b88239458\",\"dweb:/ipfs/QmPBP5K81AFfHazhbbVb9ZXh6hzKeLqZcEUxnrkKNY7z2L\"]},\"contracts/core/interfaces/pool/ICLPoolActions.sol\":{\"keccak256\":\"0x7699f31261ab40982e34febe16128f1edfdad39075969195301352ea66bcac40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://074f1c470e11f30d0fae8b95b963c9d19dcbd2c5bd17ad4ebba95c5f0f073044\",\"dweb:/ipfs/QmdDWMUspgBXfLhcxqESez9rSwA8JYNRycmhkhuKoDCWqJ\"]},\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":{\"keccak256\":\"0xfad00d4ca1a40ef27d9614a98483ca67c4491b6f19e376901745c57a6949b512\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5ea522565efb803d146673ff9e37aa090a5abff334fea587da62f4fb5d6647\",\"dweb:/ipfs/QmVRPscHFVjYFvRbJf41zVLtA2jVLbEUH66KGtEzspXnWS\"]},\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]},\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":{\"keccak256\":\"0x32fbcac8952f1c5c44b466b0e1c28634ce71372c0f65242aa0d821cebdddcc2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f22382292967f97640f84a7edfa01cf7deb303bf882344b9985007f1dcbef2\",\"dweb:/ipfs/Qmej7vWwun9fRBCrcvzPHdZP1jtLSCxJtjTSdkVTcgWeAE\"]},\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":{\"keccak256\":\"0xeafd14ae3e15c9f663507e004c599618bfd5d2a90d58b3b450f9372f9e3f54f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49472c8cf06dc7084e22fc57ffdce860aa7a9ff77f12e4bef0c13a078bbc5831\",\"dweb:/ipfs/Qmd29vWULezsJJzhw3wZxsU6Hsng5949v2TiVCbdga4Vqe\"]},\"contracts/core/interfaces/pool/ICLPoolState.sol\":{\"keccak256\":\"0xe57d65825a097d6f0ab55d7ae39b528695b3df65320ed524124fbb55949bfcf9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b63b25beebe612acfd564f40b0d95b3844ee71bf969a3357419e7a54f1ece961\",\"dweb:/ipfs/Qmdk3mNLz3cSZscbXFsJp69gjgxFcBv6K5mdc6tjnmtFSR\"]},\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0xae7f7b0bbbd864bc1761ec5eac62ec761f2ef168d32ef9e914e337b077ebba4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b57b2f04997cd6055404801982f57083f8e9242935b3ebf3bbed032f5035f2f1\",\"dweb:/ipfs/QmdxHVMQEA32jnyroWZG2sk4NPtQFWXPfkDDYvRtK2APFA\"]},\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/Position.sol\":{\"keccak256\":\"0xcf1e701e3fae35be8b77ff1217cfdd23d33eb16fd3cec70be8ea6888f87af285\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8c89746dd30e76cc029d4e090e402b28aae0659cc71800758b99137dfe85f55\",\"dweb:/ipfs/QmY4Ft1YBLqzqwTgNdpCyRd7WrY78zKgg4Ddv2zqZiBEiE\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xefd51a282ca9fbc89394776e7f5c6f96fa084ca26b71d99727780332c87d1843\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f09b719eff523f65d0d11fc476b9735e1390018d5ff585991d0fc644e913ecf\",\"dweb:/ipfs/QmNiZxxQhqteYgJdhCQ3cZ4S7bTQf2AQRUJqMVvPY3doot\"]},\"contracts/core/libraries/Tick.sol\":{\"keccak256\":\"0xb5ebd80c667f4501dba65f4e39e51ff36e5334480849e0ed8604222d20b4ed1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://246f590513441ac0f307170f5099e4a0c0b1f579406fc30b909b249858dbd099\",\"dweb:/ipfs/QmaA5uC3eck7nMqyJbpSPEhmXmAXaKLNBSS1Lfnzzzjc95\"]},\"contracts/core/libraries/TickBitmap.sol\":{\"keccak256\":\"0xd829fadfca3f8f5870c877c7eeceb4a692603c16b711174526129987e8745f5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d2cbf3802f7e611708a45bc390ee9307d947e49b348294591659444b9989c05\",\"dweb:/ipfs/Qmcny7JNyVYCtcZG3b1BL4ThuKREmAkE9ZKaC3i32pnt7X\"]},\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]},\"contracts/core/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3bbe07a0684d98efe73f7012e446873494e74983e1f75a16d42c25b956d61651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78ac9659c70ba3253a6e526ba5a144994fb3d32df2e9537787eeb45aae320aec\",\"dweb:/ipfs/QmbaZRbPP2wFZ9coJd2iyPM37hm3kXzPLuRtL6KKr1MCSL\"]},\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]},\"contracts/libraries/VelodromeTimeLibrary.sol\":{\"keccak256\":\"0x53d5f0b1b864a7dc552ef0291526938a36b1936517d17f62515bb6ba51c1260d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbc80fd3b18f04224a2a813d6c20a305c7e0479d6414a78d482b45635bc97dba\",\"dweb:/ipfs/QmQFbXCkjzeFgY5M8DyeKZjxeuN8xGdmUmjNH7FNMkLi8T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 681,
								"contract": "contracts/core/VeloStake.sol:V3BotStaking",
								"label": "pool",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 683,
								"contract": "contracts/core/VeloStake.sol:V3BotStaking",
								"label": "token0",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 685,
								"contract": "contracts/core/VeloStake.sol:V3BotStaking",
								"label": "token1",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 687,
								"contract": "contracts/core/VeloStake.sol:V3BotStaking",
								"label": "farmNFT",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 689,
								"contract": "contracts/core/VeloStake.sol:V3BotStaking",
								"label": "tokenId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 691,
								"contract": "contracts/core/VeloStake.sol:V3BotStaking",
								"label": "admin",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 693,
								"contract": "contracts/core/VeloStake.sol:V3BotStaking",
								"label": "tickSpacing",
								"offset": 20,
								"slot": "5",
								"type": "t_int24"
							},
							{
								"astId": 695,
								"contract": "contracts/core/VeloStake.sol:V3BotStaking",
								"label": "spaceMultiplier",
								"offset": 23,
								"slot": "5",
								"type": "t_int24"
							},
							{
								"astId": 698,
								"contract": "contracts/core/VeloStake.sol:V3BotStaking",
								"label": "oracle",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 712,
								"contract": "contracts/core/VeloStake.sol:V3BotStaking",
								"label": "deposits",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(Deposit)707_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_int24": {
								"encoding": "inplace",
								"label": "int24",
								"numberOfBytes": "3"
							},
							"t_mapping(t_uint256,t_struct(Deposit)707_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct V3BotStaking.Deposit)",
								"numberOfBytes": "32",
								"value": "t_struct(Deposit)707_storage"
							},
							"t_struct(Deposit)707_storage": {
								"encoding": "inplace",
								"label": "struct V3BotStaking.Deposit",
								"members": [
									{
										"astId": 700,
										"contract": "contracts/core/VeloStake.sol:V3BotStaking",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 702,
										"contract": "contracts/core/VeloStake.sol:V3BotStaking",
										"label": "liquidity",
										"offset": 0,
										"slot": "1",
										"type": "t_uint128"
									},
									{
										"astId": 704,
										"contract": "contracts/core/VeloStake.sol:V3BotStaking",
										"label": "token0",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 706,
										"contract": "contracts/core/VeloStake.sol:V3BotStaking",
										"label": "token1",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/ICLFactory.sol": {
				"ICLFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "oldUnstakedFee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "newUnstakedFee",
									"type": "uint24"
								}
							],
							"name": "DefaultUnstakedFeeChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldFeeManager",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newFeeManager",
									"type": "address"
								}
							],
							"name": "SwapFeeManagerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldFeeModule",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newFeeModule",
									"type": "address"
								}
							],
							"name": "SwapFeeModuleChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "TickSpacingEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldFeeManager",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newFeeManager",
									"type": "address"
								}
							],
							"name": "UnstakedFeeManagerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldFeeModule",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newFeeModule",
									"type": "address"
								}
							],
							"name": "UnstakedFeeModuleChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "allPools",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPoolsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultUnstakedFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "enableTickSpacing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryRegistry",
							"outputs": [
								{
									"internalType": "contract IFactoryRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getSwapFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "getUnstakedFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "isPair",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "_defaultUnstakedFee",
									"type": "uint24"
								}
							],
							"name": "setDefaultUnstakedFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_swapFeeManager",
									"type": "address"
								}
							],
							"name": "setSwapFeeManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_swapFeeModule",
									"type": "address"
								}
							],
							"name": "setSwapFeeModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_unstakedFeeManager",
									"type": "address"
								}
							],
							"name": "setUnstakedFeeManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_unstakedFeeModule",
									"type": "address"
								}
							],
							"name": "setUnstakedFeeModule",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapFeeManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapFeeModule",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "tickSpacingToFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacings",
							"outputs": [
								{
									"internalType": "int24[]",
									"name": "",
									"type": "int24[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakedFeeManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakedFeeModule",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "voter",
							"outputs": [
								{
									"internalType": "contract IVoter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"DefaultUnstakedFeeChanged(uint24,uint24)": {
								"params": {
									"newUnstakedFee": "The defaultUnstakedFee after the unstakedFeeModule was changed",
									"oldUnstakedFee": "The defaultUnstakedFee before the defaultUnstakedFee was changed"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The owner after the owner was changed",
									"oldOwner": "The owner before the owner was changed"
								}
							},
							"PoolCreated(address,address,int24,address)": {
								"params": {
									"pool": "The address of the created pool",
									"tickSpacing": "The minimum number of ticks between initialized ticks",
									"token0": "The first token of the pool by address sort order",
									"token1": "The second token of the pool by address sort order"
								}
							},
							"SwapFeeManagerChanged(address,address)": {
								"params": {
									"newFeeManager": "The swapFeeManager after the swapFeeManager was changed",
									"oldFeeManager": "The swapFeeManager before the swapFeeManager was changed"
								}
							},
							"SwapFeeModuleChanged(address,address)": {
								"params": {
									"newFeeModule": "The swapFeeModule after the swapFeeModule was changed",
									"oldFeeModule": "The swapFeeModule before the swapFeeModule was changed"
								}
							},
							"TickSpacingEnabled(int24,uint24)": {
								"params": {
									"fee": "The default fee for a pool created with a given tickSpacing",
									"tickSpacing": "The minimum number of ticks between initialized ticks for pools"
								}
							},
							"UnstakedFeeManagerChanged(address,address)": {
								"params": {
									"newFeeManager": "The unstakedFeeManager after the unstakedFeeManager was changed",
									"oldFeeManager": "The unstakedFeeManager before the unstakedFeeManager was changed"
								}
							},
							"UnstakedFeeModuleChanged(address,address)": {
								"params": {
									"newFeeModule": "The unstakedFeeModule after the unstakedFeeModule was changed",
									"oldFeeModule": "The unstakedFeeModule before the unstakedFeeModule was changed"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allPools(uint256)": {
								"params": {
									"index": "Index of the pool"
								},
								"returns": {
									"_0": "The pool address in the given index"
								}
							},
							"allPoolsLength()": {
								"returns": {
									"_0": "Number of pools created from this factory"
								}
							},
							"createPool(address,address,int24,uint160)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will revert if the pool already exists, the tick spacing is invalid, or the token arguments are invalid",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tickSpacing": "The desired tick spacing for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"defaultUnstakedFee()": {
								"details": "Can be changed by the current unstaked fee manager via setDefaultUnstakedFee",
								"returns": {
									"_0": "The default Unstaked Fee of the factory"
								}
							},
							"enableTickSpacing(int24,uint24)": {
								"details": "Tick spacings may never be removed once enabled",
								"params": {
									"fee": "The default fee associated with a given tick spacing",
									"tickSpacing": "The spacing between ticks to be enforced in the pool"
								}
							},
							"factoryRegistry()": {
								"returns": {
									"_0": "The address of the factory registry"
								}
							},
							"getPool(address,address,int24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"tickSpacing": "The tick spacing of the pool",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"getSwapFee(address)": {
								"details": "Swap & flash fee is denominated in pips. i.e. 1e-6",
								"params": {
									"pool": "The pool to get the swap & flash fee for"
								},
								"returns": {
									"_0": "The swap & flash fee for the given pool"
								}
							},
							"getUnstakedFee(address)": {
								"details": "Unstaked fee is denominated in pips. i.e. 1e-6",
								"params": {
									"pool": "The pool to get the unstaked fee for"
								},
								"returns": {
									"_0": "The unstaked fee for the given pool"
								}
							},
							"isPair(address)": {
								"params": {
									"pool": "The address of the pool to check"
								},
								"returns": {
									"_0": "Whether the pool is a valid pool of the factory"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"poolImplementation()": {
								"returns": {
									"_0": "The address of the pool implementation contract"
								}
							},
							"setDefaultUnstakedFee(uint24)": {
								"details": "Must be called by the current unstaked fee manager",
								"params": {
									"_defaultUnstakedFee": "The new defaultUnstakedFee of the factory"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							},
							"setSwapFeeManager(address)": {
								"details": "Must be called by the current swap fee manager",
								"params": {
									"_swapFeeManager": "The new swapFeeManager of the factory"
								}
							},
							"setSwapFeeModule(address)": {
								"details": "Must be called by the current swap fee manager",
								"params": {
									"_swapFeeModule": "The new swapFeeModule of the factory"
								}
							},
							"setUnstakedFeeManager(address)": {
								"details": "Must be called by the current unstaked fee manager",
								"params": {
									"_unstakedFeeManager": "The new unstakedFeeManager of the factory"
								}
							},
							"setUnstakedFeeModule(address)": {
								"details": "Must be called by the current unstaked fee manager",
								"params": {
									"_unstakedFeeModule": "The new unstakedFeeModule of the factory"
								}
							},
							"swapFeeManager()": {
								"details": "Can be changed by the current swap fee manager via setSwapFeeManager",
								"returns": {
									"_0": "The address of the factory swapFeeManager"
								}
							},
							"swapFeeModule()": {
								"details": "Can be changed by the current swap fee manager via setSwapFeeModule",
								"returns": {
									"_0": "The address of the factory swapFeeModule"
								}
							},
							"tickSpacingToFee(int24)": {
								"details": "Use getFee for the most up to date fee for a given pool. A tick spacing can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"tickSpacing": "The enabled tick spacing. Returns 0 if not enabled"
								},
								"returns": {
									"fee": "The default fee for the given tick spacing"
								}
							},
							"tickSpacings()": {
								"details": "Tick spacings cannot be removed. Tick spacings are not ordered",
								"returns": {
									"_0": "List of enabled tick spacings"
								}
							},
							"unstakedFeeManager()": {
								"details": "Can be changed by the current unstaked fee manager via setUnstakedFeeManager",
								"returns": {
									"_0": "The address of the factory unstakedFeeManager"
								}
							},
							"unstakedFeeModule()": {
								"details": "Can be changed by the current unstaked fee manager via setUnstakedFeeModule",
								"returns": {
									"_0": "The address of the factory unstakedFeeModule"
								}
							},
							"voter()": {
								"returns": {
									"_0": "The address of the voter contract"
								}
							}
						},
						"title": "The interface for the CL Factory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPools(uint256)": "41d1de97",
							"allPoolsLength()": "efde4e64",
							"createPool(address,address,int24,uint160)": "232aa5ac",
							"defaultUnstakedFee()": "e2824832",
							"enableTickSpacing(int24,uint24)": "eee0fdb4",
							"factoryRegistry()": "3bf0c9fb",
							"getPool(address,address,int24)": "28af8d0b",
							"getSwapFee(address)": "35458dcc",
							"getUnstakedFee(address)": "48cf7a43",
							"isPair(address)": "e5e31b13",
							"owner()": "8da5cb5b",
							"poolImplementation()": "cefa7799",
							"setDefaultUnstakedFee(uint24)": "a2f97f42",
							"setOwner(address)": "13af4035",
							"setSwapFeeManager(address)": "ffb4d9d1",
							"setSwapFeeModule(address)": "61b9c3ec",
							"setUnstakedFeeManager(address)": "93ce8627",
							"setUnstakedFeeModule(address)": "1b31d878",
							"swapFeeManager()": "d574afa9",
							"swapFeeModule()": "23c43a51",
							"tickSpacingToFee(int24)": "380dc1c2",
							"tickSpacings()": "9cbbbe86",
							"unstakedFeeManager()": "82e189e0",
							"unstakedFeeModule()": "7693bc11",
							"voter()": "46c96aac"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"oldUnstakedFee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"newUnstakedFee\",\"type\":\"uint24\"}],\"name\":\"DefaultUnstakedFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldFeeManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeManager\",\"type\":\"address\"}],\"name\":\"SwapFeeManagerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldFeeModule\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeModule\",\"type\":\"address\"}],\"name\":\"SwapFeeModuleChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"TickSpacingEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldFeeManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeManager\",\"type\":\"address\"}],\"name\":\"UnstakedFeeManagerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldFeeModule\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeModule\",\"type\":\"address\"}],\"name\":\"UnstakedFeeModuleChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPoolsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultUnstakedFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"enableTickSpacing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryRegistry\",\"outputs\":[{\"internalType\":\"contract IFactoryRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getSwapFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getUnstakedFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_defaultUnstakedFee\",\"type\":\"uint24\"}],\"name\":\"setDefaultUnstakedFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapFeeManager\",\"type\":\"address\"}],\"name\":\"setSwapFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapFeeModule\",\"type\":\"address\"}],\"name\":\"setSwapFeeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_unstakedFeeManager\",\"type\":\"address\"}],\"name\":\"setUnstakedFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_unstakedFeeModule\",\"type\":\"address\"}],\"name\":\"setUnstakedFeeModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeeModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"tickSpacingToFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacings\",\"outputs\":[{\"internalType\":\"int24[]\",\"name\":\"\",\"type\":\"int24[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakedFeeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakedFeeModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voter\",\"outputs\":[{\"internalType\":\"contract IVoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DefaultUnstakedFeeChanged(uint24,uint24)\":{\"params\":{\"newUnstakedFee\":\"The defaultUnstakedFee after the unstakedFeeModule was changed\",\"oldUnstakedFee\":\"The defaultUnstakedFee before the defaultUnstakedFee was changed\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,int24,address)\":{\"params\":{\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}},\"SwapFeeManagerChanged(address,address)\":{\"params\":{\"newFeeManager\":\"The swapFeeManager after the swapFeeManager was changed\",\"oldFeeManager\":\"The swapFeeManager before the swapFeeManager was changed\"}},\"SwapFeeModuleChanged(address,address)\":{\"params\":{\"newFeeModule\":\"The swapFeeModule after the swapFeeModule was changed\",\"oldFeeModule\":\"The swapFeeModule before the swapFeeModule was changed\"}},\"TickSpacingEnabled(int24,uint24)\":{\"params\":{\"fee\":\"The default fee for a pool created with a given tickSpacing\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools\"}},\"UnstakedFeeManagerChanged(address,address)\":{\"params\":{\"newFeeManager\":\"The unstakedFeeManager after the unstakedFeeManager was changed\",\"oldFeeManager\":\"The unstakedFeeManager before the unstakedFeeManager was changed\"}},\"UnstakedFeeModuleChanged(address,address)\":{\"params\":{\"newFeeModule\":\"The unstakedFeeModule after the unstakedFeeModule was changed\",\"oldFeeModule\":\"The unstakedFeeModule before the unstakedFeeModule was changed\"}}},\"kind\":\"dev\",\"methods\":{\"allPools(uint256)\":{\"params\":{\"index\":\"Index of the pool\"},\"returns\":{\"_0\":\"The pool address in the given index\"}},\"allPoolsLength()\":{\"returns\":{\"_0\":\"Number of pools created from this factory\"}},\"createPool(address,address,int24,uint160)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will revert if the pool already exists, the tick spacing is invalid, or the token arguments are invalid\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tickSpacing\":\"The desired tick spacing for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"defaultUnstakedFee()\":{\"details\":\"Can be changed by the current unstaked fee manager via setDefaultUnstakedFee\",\"returns\":{\"_0\":\"The default Unstaked Fee of the factory\"}},\"enableTickSpacing(int24,uint24)\":{\"details\":\"Tick spacings may never be removed once enabled\",\"params\":{\"fee\":\"The default fee associated with a given tick spacing\",\"tickSpacing\":\"The spacing between ticks to be enforced in the pool\"}},\"factoryRegistry()\":{\"returns\":{\"_0\":\"The address of the factory registry\"}},\"getPool(address,address,int24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"tickSpacing\":\"The tick spacing of the pool\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"getSwapFee(address)\":{\"details\":\"Swap & flash fee is denominated in pips. i.e. 1e-6\",\"params\":{\"pool\":\"The pool to get the swap & flash fee for\"},\"returns\":{\"_0\":\"The swap & flash fee for the given pool\"}},\"getUnstakedFee(address)\":{\"details\":\"Unstaked fee is denominated in pips. i.e. 1e-6\",\"params\":{\"pool\":\"The pool to get the unstaked fee for\"},\"returns\":{\"_0\":\"The unstaked fee for the given pool\"}},\"isPair(address)\":{\"params\":{\"pool\":\"The address of the pool to check\"},\"returns\":{\"_0\":\"Whether the pool is a valid pool of the factory\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"poolImplementation()\":{\"returns\":{\"_0\":\"The address of the pool implementation contract\"}},\"setDefaultUnstakedFee(uint24)\":{\"details\":\"Must be called by the current unstaked fee manager\",\"params\":{\"_defaultUnstakedFee\":\"The new defaultUnstakedFee of the factory\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}},\"setSwapFeeManager(address)\":{\"details\":\"Must be called by the current swap fee manager\",\"params\":{\"_swapFeeManager\":\"The new swapFeeManager of the factory\"}},\"setSwapFeeModule(address)\":{\"details\":\"Must be called by the current swap fee manager\",\"params\":{\"_swapFeeModule\":\"The new swapFeeModule of the factory\"}},\"setUnstakedFeeManager(address)\":{\"details\":\"Must be called by the current unstaked fee manager\",\"params\":{\"_unstakedFeeManager\":\"The new unstakedFeeManager of the factory\"}},\"setUnstakedFeeModule(address)\":{\"details\":\"Must be called by the current unstaked fee manager\",\"params\":{\"_unstakedFeeModule\":\"The new unstakedFeeModule of the factory\"}},\"swapFeeManager()\":{\"details\":\"Can be changed by the current swap fee manager via setSwapFeeManager\",\"returns\":{\"_0\":\"The address of the factory swapFeeManager\"}},\"swapFeeModule()\":{\"details\":\"Can be changed by the current swap fee manager via setSwapFeeModule\",\"returns\":{\"_0\":\"The address of the factory swapFeeModule\"}},\"tickSpacingToFee(int24)\":{\"details\":\"Use getFee for the most up to date fee for a given pool. A tick spacing can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"tickSpacing\":\"The enabled tick spacing. Returns 0 if not enabled\"},\"returns\":{\"fee\":\"The default fee for the given tick spacing\"}},\"tickSpacings()\":{\"details\":\"Tick spacings cannot be removed. Tick spacings are not ordered\",\"returns\":{\"_0\":\"List of enabled tick spacings\"}},\"unstakedFeeManager()\":{\"details\":\"Can be changed by the current unstaked fee manager via setUnstakedFeeManager\",\"returns\":{\"_0\":\"The address of the factory unstakedFeeManager\"}},\"unstakedFeeModule()\":{\"details\":\"Can be changed by the current unstaked fee manager via setUnstakedFeeModule\",\"returns\":{\"_0\":\"The address of the factory unstakedFeeModule\"}},\"voter()\":{\"returns\":{\"_0\":\"The address of the voter contract\"}}},\"title\":\"The interface for the CL Factory\",\"version\":1},\"userdoc\":{\"events\":{\"DefaultUnstakedFeeChanged(uint24,uint24)\":{\"notice\":\"Emitted when the defaultUnstakedFee of the factory is changed\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,int24,address)\":{\"notice\":\"Emitted when a pool is created\"},\"SwapFeeManagerChanged(address,address)\":{\"notice\":\"Emitted when the swapFeeManager of the factory is changed\"},\"SwapFeeModuleChanged(address,address)\":{\"notice\":\"Emitted when the swapFeeModule of the factory is changed\"},\"TickSpacingEnabled(int24,uint24)\":{\"notice\":\"Emitted when a new tick spacing is enabled for pool creation via the factory\"},\"UnstakedFeeManagerChanged(address,address)\":{\"notice\":\"Emitted when the unstakedFeeManager of the factory is changed\"},\"UnstakedFeeModuleChanged(address,address)\":{\"notice\":\"Emitted when the unstakedFeeModule of the factory is changed\"}},\"kind\":\"user\",\"methods\":{\"allPools(uint256)\":{\"notice\":\"Return address of pool created by this factory given its `index`\"},\"allPoolsLength()\":{\"notice\":\"Returns the number of pools created from this factory\"},\"createPool(address,address,int24,uint160)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"defaultUnstakedFee()\":{\"notice\":\"Returns the current defaultUnstakedFee of the factory\"},\"enableTickSpacing(int24,uint24)\":{\"notice\":\"Enables a certain tickSpacing\"},\"factoryRegistry()\":{\"notice\":\"Factory registry for valid pool / gauge / rewards factories\"},\"getPool(address,address,int24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a tick spacing, or address 0 if it does not exist\"},\"getSwapFee(address)\":{\"notice\":\"Get swap & flash fee for a given pool. Accounts for default and dynamic fees\"},\"getUnstakedFee(address)\":{\"notice\":\"Get unstaked fee for a given pool. Accounts for default and dynamic fees\"},\"isPair(address)\":{\"notice\":\"Used in VotingEscrow to determine if a contract is a valid pool of the factory\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"poolImplementation()\":{\"notice\":\"The address of the pool implementation contract used to deploy proxies / clones\"},\"setDefaultUnstakedFee(uint24)\":{\"notice\":\"Updates the defaultUnstakedFee of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"},\"setSwapFeeManager(address)\":{\"notice\":\"Updates the swapFeeManager of the factory\"},\"setSwapFeeModule(address)\":{\"notice\":\"Updates the swapFeeModule of the factory\"},\"setUnstakedFeeManager(address)\":{\"notice\":\"Updates the unstakedFeeManager of the factory\"},\"setUnstakedFeeModule(address)\":{\"notice\":\"Updates the unstakedFeeModule of the factory\"},\"swapFeeManager()\":{\"notice\":\"Returns the current swapFeeManager of the factory\"},\"swapFeeModule()\":{\"notice\":\"Returns the current swapFeeModule of the factory\"},\"tickSpacingToFee(int24)\":{\"notice\":\"Returns a default fee for a tick spacing.\"},\"tickSpacings()\":{\"notice\":\"Returns a list of enabled tick spacings. Used to iterate through pools created by the factory\"},\"unstakedFeeManager()\":{\"notice\":\"Returns the current unstakedFeeManager of the factory\"},\"unstakedFeeModule()\":{\"notice\":\"Returns the current unstakedFeeModule of the factory\"},\"voter()\":{\"notice\":\"The voter contract, used to create gauges\"}},\"notice\":\"The CL Factory facilitates creation of CL pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/ICLFactory.sol\":\"ICLFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/ICLFactory.sol\":{\"keccak256\":\"0x2b8dda4776bd095c900e408b2cb21324f72694bed75c69972cd0cb3b16b1bff0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d37ae64eabec6197ef78c9fd1d4c699398937ca5f3e9f852b11b32082ab2e680\",\"dweb:/ipfs/QmWLLA5bV17Q3fS5fDdukXsaquZ5sNoP8KvBAEfYQHfK3Z\"]},\"contracts/core/interfaces/IFactoryRegistry.sol\":{\"keccak256\":\"0xa2dbe19a5c9e221ffd8e4612ee8a4aa1233ab0ad059d4b7d91a8dca1153bcea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a01d481d3a1f5172b8601d267439e24662849d7ebb3e1e66ec46d541e57831\",\"dweb:/ipfs/QmYG56TEtS8dwHrNaHxGrTp8r6cDzRkuGKsHBbiToUVEvX\"]},\"contracts/core/interfaces/IVoter.sol\":{\"keccak256\":\"0x029239646ad77a70b26a702b7e286521a03d5b89d148ff7c13d9bf56f6203187\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eccfb9403ee8f5e7f604eccb0cafcbd047c1f73371537227011e6d557895fa68\",\"dweb:/ipfs/QmTjDHzzKTzkYhTeiWA1po8YL3USKkkMZSxZixVgsSQcXK\"]},\"contracts/core/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x17ee815f29f7bc6a1528203976ed5bfdd945354dd72a7d322e8b092e331beb3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9845c5056470191730c8a8688663bc9808172e57395c1c6053b5145bf9fd5098\",\"dweb:/ipfs/QmXyoRGbDe6KPngPsKXWZCyLLdmRTFKdhVD5Gf1Y15rG7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"DefaultUnstakedFeeChanged(uint24,uint24)": {
								"notice": "Emitted when the defaultUnstakedFee of the factory is changed"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the owner of the factory is changed"
							},
							"PoolCreated(address,address,int24,address)": {
								"notice": "Emitted when a pool is created"
							},
							"SwapFeeManagerChanged(address,address)": {
								"notice": "Emitted when the swapFeeManager of the factory is changed"
							},
							"SwapFeeModuleChanged(address,address)": {
								"notice": "Emitted when the swapFeeModule of the factory is changed"
							},
							"TickSpacingEnabled(int24,uint24)": {
								"notice": "Emitted when a new tick spacing is enabled for pool creation via the factory"
							},
							"UnstakedFeeManagerChanged(address,address)": {
								"notice": "Emitted when the unstakedFeeManager of the factory is changed"
							},
							"UnstakedFeeModuleChanged(address,address)": {
								"notice": "Emitted when the unstakedFeeModule of the factory is changed"
							}
						},
						"kind": "user",
						"methods": {
							"allPools(uint256)": {
								"notice": "Return address of pool created by this factory given its `index`"
							},
							"allPoolsLength()": {
								"notice": "Returns the number of pools created from this factory"
							},
							"createPool(address,address,int24,uint160)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"defaultUnstakedFee()": {
								"notice": "Returns the current defaultUnstakedFee of the factory"
							},
							"enableTickSpacing(int24,uint24)": {
								"notice": "Enables a certain tickSpacing"
							},
							"factoryRegistry()": {
								"notice": "Factory registry for valid pool / gauge / rewards factories"
							},
							"getPool(address,address,int24)": {
								"notice": "Returns the pool address for a given pair of tokens and a tick spacing, or address 0 if it does not exist"
							},
							"getSwapFee(address)": {
								"notice": "Get swap & flash fee for a given pool. Accounts for default and dynamic fees"
							},
							"getUnstakedFee(address)": {
								"notice": "Get unstaked fee for a given pool. Accounts for default and dynamic fees"
							},
							"isPair(address)": {
								"notice": "Used in VotingEscrow to determine if a contract is a valid pool of the factory"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"poolImplementation()": {
								"notice": "The address of the pool implementation contract used to deploy proxies / clones"
							},
							"setDefaultUnstakedFee(uint24)": {
								"notice": "Updates the defaultUnstakedFee of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							},
							"setSwapFeeManager(address)": {
								"notice": "Updates the swapFeeManager of the factory"
							},
							"setSwapFeeModule(address)": {
								"notice": "Updates the swapFeeModule of the factory"
							},
							"setUnstakedFeeManager(address)": {
								"notice": "Updates the unstakedFeeManager of the factory"
							},
							"setUnstakedFeeModule(address)": {
								"notice": "Updates the unstakedFeeModule of the factory"
							},
							"swapFeeManager()": {
								"notice": "Returns the current swapFeeManager of the factory"
							},
							"swapFeeModule()": {
								"notice": "Returns the current swapFeeModule of the factory"
							},
							"tickSpacingToFee(int24)": {
								"notice": "Returns a default fee for a tick spacing."
							},
							"tickSpacings()": {
								"notice": "Returns a list of enabled tick spacings. Used to iterate through pools created by the factory"
							},
							"unstakedFeeManager()": {
								"notice": "Returns the current unstakedFeeManager of the factory"
							},
							"unstakedFeeModule()": {
								"notice": "Returns the current unstakedFeeModule of the factory"
							},
							"voter()": {
								"notice": "The voter contract, used to create gauges"
							}
						},
						"notice": "The CL Factory facilitates creation of CL pools and control over the protocol fees",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/ICLPool.sol": {
				"ICLPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectFees",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collectFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gauge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gaugeFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint256",
									"name": "_rewardGrowthGlobalX128",
									"type": "uint256"
								}
							],
							"name": "getRewardGrowthInside",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rewardGrowthInsideX128",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "_tickSpacing",
									"type": "int24"
								},
								{
									"internalType": "address",
									"name": "_factoryRegistry",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "_sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdated",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardGrowthGlobalX128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardReserve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rollover",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gauge",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nft",
									"type": "address"
								}
							],
							"name": "setGaugeAndPositionManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int128",
									"name": "stakedLiquidityDelta",
									"type": "int128"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "bool",
									"name": "positionUpdate",
									"type": "bool"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardReserve",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "periodFinish",
									"type": "uint256"
								}
							],
							"name": "syncReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "int128",
									"name": "stakedLiquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardGrowthOutsideX128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakedFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateRewardsGrowthGlobal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"burn(int24,int24,uint128,address)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"owner": "Owner of the position in the pool (nft manager or gauge)",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collect(address,int24,int24,uint128,uint128,address)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"owner": "Owner of the position in the pool (nft manager or gauge)",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectFees()": {
								"returns": {
									"amount0": "The gauge fee collected in token0",
									"amount1": "The gauge fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"factoryRegistry()": {
								"returns": {
									"_0": "The factory registry contract address"
								}
							},
							"fee()": {
								"details": "Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.",
								"returns": {
									"_0": "The swap & flash fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"gauge()": {
								"returns": {
									"_0": "The gauge contract address"
								}
							},
							"gaugeFees()": {
								"details": "Gauge fees will never exceed uint128 max in either token"
							},
							"getRewardGrowthInside(int24,int24,uint256)": {
								"details": "Used in gauge reward/earned calculations",
								"params": {
									"_rewardGrowthGlobalX128": "a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)",
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"rewardGrowthInsideX128": "The reward growth in the range"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(address,address,address,int24,address,uint160)": {
								"details": "Can be called once only Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valuenot locked because it initializes unlocked",
								"params": {
									"_factory": "The CL factory contract address",
									"_factoryRegistry": "The address of the factory registry managing the pool factory",
									"_sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"_tickSpacing": "The pool tick spacing",
									"_token0": "The first token of the pool by address sort order",
									"_token1": "The second token of the pool by address sort order"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticksThis value includes staked liquidity"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"nft()": {
								"returns": {
									"_0": "The nft manager contract address"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"rewardGrowthGlobalX128()": {
								"details": "This value can overflow the uint256"
							},
							"rollover()": {
								"details": "rollover will always be smaller than the rewards distributed that epoch"
							},
							"setGaugeAndPositionManager(address,address)": {
								"details": "Callable only once, by the gauge factory",
								"params": {
									"_gauge": "The gauge corresponding to this pool",
									"_nft": "The position manager used for position management"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"stake(int128,int24,int24,bool)": {
								"params": {
									"positionUpdate": "If the nft and gauge position should be updated",
									"stakedLiquidityDelta": "The amount by which to increase or decrease the staked liquidity",
									"tickLower": "The lower tick of the position for which to stake liquidity",
									"tickUpper": "The upper tick of the position for which to stake liquidity"
								}
							},
							"stakedLiquidity()": {
								"details": "This value has no relationship to the total staked liquidity across all ticks"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"syncReward(uint256,uint256,uint256)": {
								"params": {
									"periodFinish": "the end of the current period of rewards, updated once per epoch",
									"rewardRate": "the rate rewards being distributed during the epoch",
									"rewardReserve": "the available rewards to be distributed during the epoch"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"unstakedFee()": {
								"details": "Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.",
								"returns": {
									"_0": "The unstaked fee"
								}
							}
						},
						"title": "The interface for a CL Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"burn(int24,int24,uint128,address)": "6f89244c",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collect(address,int24,int24,uint128,uint128,address)": "31338374",
							"collectFees()": "c8796572",
							"factory()": "c45a0155",
							"factoryRegistry()": "3bf0c9fb",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"gauge()": "a6f19c84",
							"gaugeFees()": "293833ba",
							"getRewardGrowthInside(int24,int24,uint256)": "a16368c9",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(address,address,address,int24,address,uint160)": "2071d884",
							"lastUpdated()": "d0b06f5d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"nft()": "47ccca02",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"periodFinish()": "ebe2b12b",
							"positions(bytes32)": "514ea4bf",
							"rewardGrowthGlobalX128()": "57806ada",
							"rewardRate()": "7b0a47ee",
							"rewardReserve()": "cab64bcd",
							"rollover()": "b056b49a",
							"setGaugeAndPositionManager(address,address)": "1f7c3568",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"stake(int128,int24,int24,bool)": "4ed6210f",
							"stakedLiquidity()": "3ab04b20",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"syncReward(uint256,uint256,uint256)": "60a73f9b",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"unstakedFee()": "b64cc67b",
							"updateRewardsGrowthGlobal()": "1b410960"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gaugeFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"_rewardGrowthGlobalX128\",\"type\":\"uint256\"}],\"name\":\"getRewardGrowthInside\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardGrowthInsideX128\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"_tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"address\",\"name\":\"_factoryRegistry\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"_sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardGrowthGlobalX128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"setGaugeAndPositionManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"stakedLiquidityDelta\",\"type\":\"int128\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"positionUpdate\",\"type\":\"bool\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodFinish\",\"type\":\"uint256\"}],\"name\":\"syncReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"stakedLiquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardGrowthOutsideX128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakedFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateRewardsGrowthGlobal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"burn(int24,int24,uint128,address)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"owner\":\"Owner of the position in the pool (nft manager or gauge)\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collect(address,int24,int24,uint128,uint128,address)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"owner\":\"Owner of the position in the pool (nft manager or gauge)\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectFees()\":{\"returns\":{\"amount0\":\"The gauge fee collected in token0\",\"amount1\":\"The gauge fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"factoryRegistry()\":{\"returns\":{\"_0\":\"The factory registry contract address\"}},\"fee()\":{\"details\":\"Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\",\"returns\":{\"_0\":\"The swap & flash fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"gauge()\":{\"returns\":{\"_0\":\"The gauge contract address\"}},\"gaugeFees()\":{\"details\":\"Gauge fees will never exceed uint128 max in either token\"},\"getRewardGrowthInside(int24,int24,uint256)\":{\"details\":\"Used in gauge reward/earned calculations\",\"params\":{\"_rewardGrowthGlobalX128\":\"a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)\",\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"rewardGrowthInsideX128\":\"The reward growth in the range\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(address,address,address,int24,address,uint160)\":{\"details\":\"Can be called once only Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valuenot locked because it initializes unlocked\",\"params\":{\"_factory\":\"The CL factory contract address\",\"_factoryRegistry\":\"The address of the factory registry managing the pool factory\",\"_sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"_tickSpacing\":\"The pool tick spacing\",\"_token0\":\"The first token of the pool by address sort order\",\"_token1\":\"The second token of the pool by address sort order\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticksThis value includes staked liquidity\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"nft()\":{\"returns\":{\"_0\":\"The nft manager contract address\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"rewardGrowthGlobalX128()\":{\"details\":\"This value can overflow the uint256\"},\"rollover()\":{\"details\":\"rollover will always be smaller than the rewards distributed that epoch\"},\"setGaugeAndPositionManager(address,address)\":{\"details\":\"Callable only once, by the gauge factory\",\"params\":{\"_gauge\":\"The gauge corresponding to this pool\",\"_nft\":\"The position manager used for position management\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"stake(int128,int24,int24,bool)\":{\"params\":{\"positionUpdate\":\"If the nft and gauge position should be updated\",\"stakedLiquidityDelta\":\"The amount by which to increase or decrease the staked liquidity\",\"tickLower\":\"The lower tick of the position for which to stake liquidity\",\"tickUpper\":\"The upper tick of the position for which to stake liquidity\"}},\"stakedLiquidity()\":{\"details\":\"This value has no relationship to the total staked liquidity across all ticks\"},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"syncReward(uint256,uint256,uint256)\":{\"params\":{\"periodFinish\":\"the end of the current period of rewards, updated once per epoch\",\"rewardRate\":\"the rate rewards being distributed during the epoch\",\"rewardReserve\":\"the available rewards to be distributed during the epoch\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"unstakedFee()\":{\"details\":\"Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\",\"returns\":{\"_0\":\"The unstaked fee\"}}},\"title\":\"The interface for a CL Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectFees(address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the gauge\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"burn(int24,int24,uint128,address)\":{\"notice\":\"Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collect(address,int24,int24,uint128,uint128,address)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectFees()\":{\"notice\":\"Collect the gauge fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the ICLFactory interface\"},\"factoryRegistry()\":{\"notice\":\"The factory registry that manages pool <> gauge <> reward factory relationships\"},\"fee()\":{\"notice\":\"The pool's swap & flash fee in pips, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"gauge()\":{\"notice\":\"The gauge corresponding to this pool\"},\"gaugeFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the gauge\"},\"getRewardGrowthInside(int24,int24,uint256)\":{\"notice\":\"Returns data about reward growth within a tick range. RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations.\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(address,address,address,int24,address,uint160)\":{\"notice\":\"Initialize function used in proxy deployment\"},\"lastUpdated()\":{\"notice\":\"last time the rewardReserve and rewardRate were updated\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"nft()\":{\"notice\":\"The nft manager\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"periodFinish()\":{\"notice\":\"timestamp of the end of the current epoch's rewards\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"rewardGrowthGlobalX128()\":{\"notice\":\"The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool\"},\"rewardRate()\":{\"notice\":\"the emission rate of time-based farming\"},\"rewardReserve()\":{\"notice\":\"acts as a virtual reserve that holds information on how many rewards are yet to be distributed\"},\"rollover()\":{\"notice\":\"tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinishthis amount is rolled over on the next call to notifyRewardAmount\"},\"setGaugeAndPositionManager(address,address)\":{\"notice\":\"Initialize gauge and nft manager\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"stake(int128,int24,int24,bool)\":{\"notice\":\"Convert existing liquidity into staked liquidityOnly callable by the gauge associated with this pool\"},\"stakedLiquidity()\":{\"notice\":\"The currently in range staked liquidity available to the pool\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"syncReward(uint256,uint256,uint256)\":{\"notice\":\"Syncs rewards with gauge\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"},\"unstakedFee()\":{\"notice\":\"The pool's unstaked fee in pips, i.e. 1e-6\"},\"updateRewardsGrowthGlobal()\":{\"notice\":\"Updates rewardGrowthGlobalX128 every time when any tick is crossed, or when any position is staked/unstaked from the gauge\"}},\"notice\":\"A CL pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/ICLPool.sol\":\"ICLPool\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/ICLPool.sol\":{\"keccak256\":\"0x0a11e1392c4b5ef4e47a3415a9b1a2118e9370d52a253dbd1c910bbbb615e91f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0c04e689e0589f3d67961fd5febcdc0f39c0700aeebef2537ccfb29ddba29de1\",\"dweb:/ipfs/QmbuthGhVJsx45dpgF7p71VSuLshREAsaLJu34HQNgRJoz\"]},\"contracts/core/interfaces/pool/ICLPoolActions.sol\":{\"keccak256\":\"0x7699f31261ab40982e34febe16128f1edfdad39075969195301352ea66bcac40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://074f1c470e11f30d0fae8b95b963c9d19dcbd2c5bd17ad4ebba95c5f0f073044\",\"dweb:/ipfs/QmdDWMUspgBXfLhcxqESez9rSwA8JYNRycmhkhuKoDCWqJ\"]},\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":{\"keccak256\":\"0xfad00d4ca1a40ef27d9614a98483ca67c4491b6f19e376901745c57a6949b512\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5ea522565efb803d146673ff9e37aa090a5abff334fea587da62f4fb5d6647\",\"dweb:/ipfs/QmVRPscHFVjYFvRbJf41zVLtA2jVLbEUH66KGtEzspXnWS\"]},\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]},\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":{\"keccak256\":\"0x32fbcac8952f1c5c44b466b0e1c28634ce71372c0f65242aa0d821cebdddcc2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f22382292967f97640f84a7edfa01cf7deb303bf882344b9985007f1dcbef2\",\"dweb:/ipfs/Qmej7vWwun9fRBCrcvzPHdZP1jtLSCxJtjTSdkVTcgWeAE\"]},\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":{\"keccak256\":\"0xeafd14ae3e15c9f663507e004c599618bfd5d2a90d58b3b450f9372f9e3f54f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49472c8cf06dc7084e22fc57ffdce860aa7a9ff77f12e4bef0c13a078bbc5831\",\"dweb:/ipfs/Qmd29vWULezsJJzhw3wZxsU6Hsng5949v2TiVCbdga4Vqe\"]},\"contracts/core/interfaces/pool/ICLPoolState.sol\":{\"keccak256\":\"0xe57d65825a097d6f0ab55d7ae39b528695b3df65320ed524124fbb55949bfcf9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b63b25beebe612acfd564f40b0d95b3844ee71bf969a3357419e7a54f1ece961\",\"dweb:/ipfs/Qmdk3mNLz3cSZscbXFsJp69gjgxFcBv6K5mdc6tjnmtFSR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectFees(address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the gauge"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"burn(int24,int24,uint128,address)": {
								"notice": "Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collect(address,int24,int24,uint128,uint128,address)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectFees()": {
								"notice": "Collect the gauge fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the ICLFactory interface"
							},
							"factoryRegistry()": {
								"notice": "The factory registry that manages pool <> gauge <> reward factory relationships"
							},
							"fee()": {
								"notice": "The pool's swap & flash fee in pips, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"gauge()": {
								"notice": "The gauge corresponding to this pool"
							},
							"gaugeFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the gauge"
							},
							"getRewardGrowthInside(int24,int24,uint256)": {
								"notice": "Returns data about reward growth within a tick range. RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations."
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(address,address,address,int24,address,uint160)": {
								"notice": "Initialize function used in proxy deployment"
							},
							"lastUpdated()": {
								"notice": "last time the rewardReserve and rewardRate were updated"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"nft()": {
								"notice": "The nft manager"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"periodFinish()": {
								"notice": "timestamp of the end of the current epoch's rewards"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"rewardGrowthGlobalX128()": {
								"notice": "The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool"
							},
							"rewardRate()": {
								"notice": "the emission rate of time-based farming"
							},
							"rewardReserve()": {
								"notice": "acts as a virtual reserve that holds information on how many rewards are yet to be distributed"
							},
							"rollover()": {
								"notice": "tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinishthis amount is rolled over on the next call to notifyRewardAmount"
							},
							"setGaugeAndPositionManager(address,address)": {
								"notice": "Initialize gauge and nft manager"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"stake(int128,int24,int24,bool)": {
								"notice": "Convert existing liquidity into staked liquidityOnly callable by the gauge associated with this pool"
							},
							"stakedLiquidity()": {
								"notice": "The currently in range staked liquidity available to the pool"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"syncReward(uint256,uint256,uint256)": {
								"notice": "Syncs rewards with gauge"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							},
							"unstakedFee()": {
								"notice": "The pool's unstaked fee in pips, i.e. 1e-6"
							},
							"updateRewardsGrowthGlobal()": {
								"notice": "Updates rewardGrowthGlobalX128 every time when any tick is crossed, or when any position is staked/unstaked from the gauge"
							}
						},
						"notice": "A CL pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/IERC20Minimal.sol": {
				"IERC20Minimal": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"title": "Minimal ERC20 interface for CL",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for CL\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in CL\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/IERC20Minimal.sol\":\"IERC20Minimal\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"notice": "Contains a subset of the full ERC20 interface that is used in CL",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/IFactoryRegistry.sol": {
				"IFactoryRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "poolFactory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "votingRewardsFactory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "gaugeFactory",
									"type": "address"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "poolFactory",
									"type": "address"
								}
							],
							"name": "factoriesToPoolFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "votingRewardsFactory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "gaugeFactory",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "poolFactory",
									"type": "address"
								}
							],
							"name": "isPoolFactoryApproved",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,address,address)": "9b140a85",
							"factoriesToPoolFactory(address)": "1217afdb",
							"isPoolFactoryApproved(address)": "d1ea0a1d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"votingRewardsFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gaugeFactory\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"}],\"name\":\"factoriesToPoolFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"votingRewardsFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gaugeFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolFactory\",\"type\":\"address\"}],\"name\":\"isPoolFactoryApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/IFactoryRegistry.sol\":\"IFactoryRegistry\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/IFactoryRegistry.sol\":{\"keccak256\":\"0xa2dbe19a5c9e221ffd8e4612ee8a4aa1233ab0ad059d4b7d91a8dca1153bcea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a01d481d3a1f5172b8601d267439e24662849d7ebb3e1e66ec46d541e57831\",\"dweb:/ipfs/QmYG56TEtS8dwHrNaHxGrTp8r6cDzRkuGKsHBbiToUVEvX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/IVoter.sol": {
				"IVoter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_fees",
									"type": "address[]"
								},
								{
									"internalType": "address[][]",
									"name": "_tokens",
									"type": "address[][]"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "claimFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_gauges",
									"type": "address[]"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_poolFactory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_pool",
									"type": "address"
								}
							],
							"name": "createGauge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_gauges",
									"type": "address[]"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "gauge",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyCouncil",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryRegistry",
							"outputs": [
								{
									"internalType": "contract IFactoryRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gauge",
									"type": "address"
								}
							],
							"name": "gaugeToBribes",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gauge",
									"type": "address"
								}
							],
							"name": "gaugeToFees",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pool",
									"type": "address"
								}
							],
							"name": "gauges",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gauge",
									"type": "address"
								}
							],
							"name": "isAlive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gauge",
									"type": "address"
								}
							],
							"name": "killGauge",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ve",
							"outputs": [
								{
									"internalType": "contract IVotingEscrow",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "_poolVote",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_weights",
									"type": "uint256[]"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"claimFees(address[],address[][],uint256)": {
								"details": "Utility to help batch fee claims.",
								"params": {
									"_fees": "Array of FeesVotingReward contracts to collect from.",
									"_tokenId": "Id of veNFT that you wish to claim fees for.",
									"_tokens": "Array of tokens that are used as fees."
								}
							},
							"claimRewards(address[])": {
								"params": {
									"_gauges": "Array of gauges to collect emissions from."
								}
							},
							"distribute(address[])": {
								"details": "Utility to distribute to gauges of pools in array.",
								"params": {
									"_gauges": "Array of gauges to distribute to."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimFees(address[],address[][],uint256)": "666256aa",
							"claimRewards(address[])": "f9f031df",
							"createGauge(address,address)": "794cea3c",
							"distribute(address)": "63453ae1",
							"distribute(address[])": "6138889b",
							"emergencyCouncil()": "7778960e",
							"factoryRegistry()": "3bf0c9fb",
							"gaugeToBribes(address)": "294a6aeb",
							"gaugeToFees(address)": "c4f08165",
							"gauges(address)": "b9a09fd5",
							"isAlive(address)": "1703e5f9",
							"killGauge(address)": "992a7933",
							"ve()": "1f850716",
							"vote(uint256,address[],uint256[])": "7ac09bf7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_fees\",\"type\":\"address[]\"},{\"internalType\":\"address[][]\",\"name\":\"_tokens\",\"type\":\"address[][]\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_gauges\",\"type\":\"address[]\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"createGauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_gauges\",\"type\":\"address[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyCouncil\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryRegistry\",\"outputs\":[{\"internalType\":\"contract IFactoryRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"}],\"name\":\"gaugeToBribes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"}],\"name\":\"gaugeToFees\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"gauges\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"}],\"name\":\"isAlive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"}],\"name\":\"killGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ve\",\"outputs\":[{\"internalType\":\"contract IVotingEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_poolVote\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimFees(address[],address[][],uint256)\":{\"details\":\"Utility to help batch fee claims.\",\"params\":{\"_fees\":\"Array of FeesVotingReward contracts to collect from.\",\"_tokenId\":\"Id of veNFT that you wish to claim fees for.\",\"_tokens\":\"Array of tokens that are used as fees.\"}},\"claimRewards(address[])\":{\"params\":{\"_gauges\":\"Array of gauges to collect emissions from.\"}},\"distribute(address[])\":{\"details\":\"Utility to distribute to gauges of pools in array.\",\"params\":{\"_gauges\":\"Array of gauges to distribute to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimFees(address[],address[][],uint256)\":{\"notice\":\"Claim fees for a given NFT.\"},\"claimRewards(address[])\":{\"notice\":\"Claim emissions from gauges.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/IVoter.sol\":\"IVoter\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/IFactoryRegistry.sol\":{\"keccak256\":\"0xa2dbe19a5c9e221ffd8e4612ee8a4aa1233ab0ad059d4b7d91a8dca1153bcea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47a01d481d3a1f5172b8601d267439e24662849d7ebb3e1e66ec46d541e57831\",\"dweb:/ipfs/QmYG56TEtS8dwHrNaHxGrTp8r6cDzRkuGKsHBbiToUVEvX\"]},\"contracts/core/interfaces/IVoter.sol\":{\"keccak256\":\"0x029239646ad77a70b26a702b7e286521a03d5b89d148ff7c13d9bf56f6203187\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eccfb9403ee8f5e7f604eccb0cafcbd047c1f73371537227011e6d557895fa68\",\"dweb:/ipfs/QmTjDHzzKTzkYhTeiWA1po8YL3USKkkMZSxZixVgsSQcXK\"]},\"contracts/core/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x17ee815f29f7bc6a1528203976ed5bfdd945354dd72a7d322e8b092e331beb3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9845c5056470191730c8a8688663bc9808172e57395c1c6053b5145bf9fd5098\",\"dweb:/ipfs/QmXyoRGbDe6KPngPsKXWZCyLLdmRTFKdhVD5Gf1Y15rG7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claimFees(address[],address[][],uint256)": {
								"notice": "Claim fees for a given NFT."
							},
							"claimRewards(address[])": {
								"notice": "Claim emissions from gauges."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/IVotingEscrow.sol": {
				"IVotingEscrow": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockDuration",
									"type": "uint256"
								}
							],
							"name": "createLock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "team",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createLock(uint256,uint256)": {
								"params": {
									"_lockDuration": "Number of seconds to lock tokens for (rounded down to nearest week)",
									"_value": "Amount to deposit"
								},
								"returns": {
									"_0": "TokenId of created veNFT"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createLock(uint256,uint256)": "b52c05fe",
							"team()": "85f2aef2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockDuration\",\"type\":\"uint256\"}],\"name\":\"createLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"team\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createLock(uint256,uint256)\":{\"params\":{\"_lockDuration\":\"Number of seconds to lock tokens for (rounded down to nearest week)\",\"_value\":\"Amount to deposit\"},\"returns\":{\"_0\":\"TokenId of created veNFT\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createLock(uint256,uint256)\":{\"notice\":\"Deposit `_value` tokens for `msg.sender` and lock for `_lockDuration`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/IVotingEscrow.sol\":\"IVotingEscrow\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/IVotingEscrow.sol\":{\"keccak256\":\"0x17ee815f29f7bc6a1528203976ed5bfdd945354dd72a7d322e8b092e331beb3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9845c5056470191730c8a8688663bc9808172e57395c1c6053b5145bf9fd5098\",\"dweb:/ipfs/QmXyoRGbDe6KPngPsKXWZCyLLdmRTFKdhVD5Gf1Y15rG7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createLock(uint256,uint256)": {
								"notice": "Deposit `_value` tokens for `msg.sender` and lock for `_lockDuration`"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/callback/ICLMintCallback.sol": {
				"ICLMintCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Owed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Owed",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3MintCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a CLPool deployed by the canonical CLFactory.",
								"params": {
									"amount0Owed": "The amount of token0 due to the pool for the minted liquidity",
									"amount1Owed": "The amount of token1 due to the pool for the minted liquidity",
									"data": "Any data passed through by the caller via the ICLPoolActions#mint call"
								}
							}
						},
						"title": "Callback for ICLPoolActions#mint",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": "d3487997"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a CLPool deployed by the canonical CLFactory.\",\"params\":{\"amount0Owed\":\"The amount of token0 due to the pool for the minted liquidity\",\"amount1Owed\":\"The amount of token1 due to the pool for the minted liquidity\",\"data\":\"Any data passed through by the caller via the ICLPoolActions#mint call\"}}},\"title\":\"Callback for ICLPoolActions#mint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after minting liquidity to a position from ICLPool#mint.\"}},\"notice\":\"Any contract that calls ICLPoolActions#mint must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/callback/ICLMintCallback.sol\":\"ICLMintCallback\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/callback/ICLMintCallback.sol\":{\"keccak256\":\"0x22d4ed43f7d7313e676e80f7ae3315f53c3a84fbf256efae5116ef0aba32c1e8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a21d9618b9a9c2fe2cf35d9d6d608dd02a112bd05e6020fbe71e7e09064c2be7\",\"dweb:/ipfs/QmeBQiyVmxVTPT3ftVFDkiDVgZLMar6SQegryLC7A3jmLr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"notice": "Called to `msg.sender` after minting liquidity to a position from ICLPool#mint."
							}
						},
						"notice": "Any contract that calls ICLPoolActions#mint must implement this interface",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/callback/ICLSwapCallback.sol": {
				"ICLSwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a CLPool deployed by the canonical CLFactory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the ICLPoolActions#swap call"
								}
							}
						},
						"title": "Callback for ICLPoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a CLPool deployed by the canonical CLFactory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the ICLPoolActions#swap call\"}}},\"title\":\"Callback for ICLPoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via ICLPool#swap.\"}},\"notice\":\"Any contract that calls ICLPoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/callback/ICLSwapCallback.sol\":\"ICLSwapCallback\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/callback/ICLSwapCallback.sol\":{\"keccak256\":\"0xb93e1ef2be3090a64b3b024f60253aef64b875f61dffaef8b9231351f8054948\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b16ccd544a6a551c977b7a7d6b6b9704c68e86624d66ecb16d945d3b88239458\",\"dweb:/ipfs/QmPBP5K81AFfHazhbbVb9ZXh6hzKeLqZcEUxnrkKNY7z2L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via ICLPool#swap."
							}
						},
						"notice": "Any contract that calls ICLPoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolActions.sol": {
				"ICLPoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "_tickSpacing",
									"type": "int24"
								},
								{
									"internalType": "address",
									"name": "_factoryRegistry",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "_sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gauge",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nft",
									"type": "address"
								}
							],
							"name": "setGaugeAndPositionManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int128",
									"name": "stakedLiquidityDelta",
									"type": "int128"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "bool",
									"name": "positionUpdate",
									"type": "bool"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardReserve",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "periodFinish",
									"type": "uint256"
								}
							],
							"name": "syncReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateRewardsGrowthGlobal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"burn(int24,int24,uint128,address)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"owner": "Owner of the position in the pool (nft manager or gauge)",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collect(address,int24,int24,uint128,uint128,address)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"owner": "Owner of the position in the pool (nft manager or gauge)",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(address,address,address,int24,address,uint160)": {
								"details": "Can be called once only Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valuenot locked because it initializes unlocked",
								"params": {
									"_factory": "The CL factory contract address",
									"_factoryRegistry": "The address of the factory registry managing the pool factory",
									"_sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"_tickSpacing": "The pool tick spacing",
									"_token0": "The first token of the pool by address sort order",
									"_token1": "The second token of the pool by address sort order"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"setGaugeAndPositionManager(address,address)": {
								"details": "Callable only once, by the gauge factory",
								"params": {
									"_gauge": "The gauge corresponding to this pool",
									"_nft": "The position manager used for position management"
								}
							},
							"stake(int128,int24,int24,bool)": {
								"params": {
									"positionUpdate": "If the nft and gauge position should be updated",
									"stakedLiquidityDelta": "The amount by which to increase or decrease the staked liquidity",
									"tickLower": "The lower tick of the position for which to stake liquidity",
									"tickUpper": "The upper tick of the position for which to stake liquidity"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"syncReward(uint256,uint256,uint256)": {
								"params": {
									"periodFinish": "the end of the current period of rewards, updated once per epoch",
									"rewardRate": "the rate rewards being distributed during the epoch",
									"rewardReserve": "the available rewards to be distributed during the epoch"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"burn(int24,int24,uint128,address)": "6f89244c",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collect(address,int24,int24,uint128,uint128,address)": "31338374",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(address,address,address,int24,address,uint160)": "2071d884",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"setGaugeAndPositionManager(address,address)": "1f7c3568",
							"stake(int128,int24,int24,bool)": "4ed6210f",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"syncReward(uint256,uint256,uint256)": "60a73f9b",
							"updateRewardsGrowthGlobal()": "1b410960"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"_tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"address\",\"name\":\"_factoryRegistry\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"_sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"setGaugeAndPositionManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"stakedLiquidityDelta\",\"type\":\"int128\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"positionUpdate\",\"type\":\"bool\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodFinish\",\"type\":\"uint256\"}],\"name\":\"syncReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateRewardsGrowthGlobal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"burn(int24,int24,uint128,address)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"owner\":\"Owner of the position in the pool (nft manager or gauge)\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collect(address,int24,int24,uint128,uint128,address)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"owner\":\"Owner of the position in the pool (nft manager or gauge)\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(address,address,address,int24,address,uint160)\":{\"details\":\"Can be called once only Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 valuenot locked because it initializes unlocked\",\"params\":{\"_factory\":\"The CL factory contract address\",\"_factoryRegistry\":\"The address of the factory registry managing the pool factory\",\"_sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"_tickSpacing\":\"The pool tick spacing\",\"_token0\":\"The first token of the pool by address sort order\",\"_token1\":\"The second token of the pool by address sort order\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"setGaugeAndPositionManager(address,address)\":{\"details\":\"Callable only once, by the gauge factory\",\"params\":{\"_gauge\":\"The gauge corresponding to this pool\",\"_nft\":\"The position manager used for position management\"}},\"stake(int128,int24,int24,bool)\":{\"params\":{\"positionUpdate\":\"If the nft and gauge position should be updated\",\"stakedLiquidityDelta\":\"The amount by which to increase or decrease the staked liquidity\",\"tickLower\":\"The lower tick of the position for which to stake liquidity\",\"tickUpper\":\"The upper tick of the position for which to stake liquidity\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"syncReward(uint256,uint256,uint256)\":{\"params\":{\"periodFinish\":\"the end of the current period of rewards, updated once per epoch\",\"rewardRate\":\"the rate rewards being distributed during the epoch\",\"rewardReserve\":\"the available rewards to be distributed during the epoch\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"burn(int24,int24,uint128,address)\":{\"notice\":\"Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collect(address,int24,int24,uint128,uint128,address)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(address,address,address,int24,address,uint160)\":{\"notice\":\"Initialize function used in proxy deployment\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"setGaugeAndPositionManager(address,address)\":{\"notice\":\"Initialize gauge and nft manager\"},\"stake(int128,int24,int24,bool)\":{\"notice\":\"Convert existing liquidity into staked liquidityOnly callable by the gauge associated with this pool\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"syncReward(uint256,uint256,uint256)\":{\"notice\":\"Syncs rewards with gauge\"},\"updateRewardsGrowthGlobal()\":{\"notice\":\"Updates rewardGrowthGlobalX128 every time when any tick is crossed, or when any position is staked/unstaked from the gauge\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolActions.sol\":\"ICLPoolActions\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolActions.sol\":{\"keccak256\":\"0x7699f31261ab40982e34febe16128f1edfdad39075969195301352ea66bcac40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://074f1c470e11f30d0fae8b95b963c9d19dcbd2c5bd17ad4ebba95c5f0f073044\",\"dweb:/ipfs/QmdDWMUspgBXfLhcxqESez9rSwA8JYNRycmhkhuKoDCWqJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"burn(int24,int24,uint128,address)": {
								"notice": "Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collect(address,int24,int24,uint128,uint128,address)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(address,address,address,int24,address,uint160)": {
								"notice": "Initialize function used in proxy deployment"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"setGaugeAndPositionManager(address,address)": {
								"notice": "Initialize gauge and nft manager"
							},
							"stake(int128,int24,int24,bool)": {
								"notice": "Convert existing liquidity into staked liquidityOnly callable by the gauge associated with this pool"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"syncReward(uint256,uint256,uint256)": {
								"notice": "Syncs rewards with gauge"
							},
							"updateRewardsGrowthGlobal()": {
								"notice": "Updates rewardGrowthGlobalX128 every time when any tick is crossed, or when any position is staked/unstaked from the gauge"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolConstants.sol": {
				"ICLPoolConstants": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gauge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"factoryRegistry()": {
								"returns": {
									"_0": "The factory registry contract address"
								}
							},
							"gauge()": {
								"returns": {
									"_0": "The gauge contract address"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"nft()": {
								"returns": {
									"_0": "The nft manager contract address"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"factoryRegistry()": "3bf0c9fb",
							"gauge()": "a6f19c84",
							"maxLiquidityPerTick()": "70cf754a",
							"nft()": "47ccca02",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"factoryRegistry()\":{\"returns\":{\"_0\":\"The factory registry contract address\"}},\"gauge()\":{\"returns\":{\"_0\":\"The gauge contract address\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"nft()\":{\"returns\":{\"_0\":\"The nft manager contract address\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the ICLFactory interface\"},\"factoryRegistry()\":{\"notice\":\"The factory registry that manages pool <> gauge <> reward factory relationships\"},\"gauge()\":{\"notice\":\"The gauge corresponding to this pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"nft()\":{\"notice\":\"The nft manager\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are not defined as immutable (due to proxy pattern) but are effectively immutable.i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":\"ICLPoolConstants\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolConstants.sol\":{\"keccak256\":\"0xfad00d4ca1a40ef27d9614a98483ca67c4491b6f19e376901745c57a6949b512\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2b5ea522565efb803d146673ff9e37aa090a5abff334fea587da62f4fb5d6647\",\"dweb:/ipfs/QmVRPscHFVjYFvRbJf41zVLtA2jVLbEUH66KGtEzspXnWS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the ICLFactory interface"
							},
							"factoryRegistry()": {
								"notice": "The factory registry that manages pool <> gauge <> reward factory relationships"
							},
							"gauge()": {
								"notice": "The gauge corresponding to this pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"nft()": {
								"notice": "The nft manager"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are not defined as immutable (due to proxy pattern) but are effectively immutable.i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolDerivedState.sol": {
				"ICLPoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":\"ICLPoolDerivedState\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolDerivedState.sol\":{\"keccak256\":\"0xc15e4192a1b7b756cababb994341dc8e78627e1341465e47b1dcb66e9ed54af8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee4b9269244f6b7ac57cba3b8966ac188220596d16cef71d186f0a6446593b4e\",\"dweb:/ipfs/QmQjyc5ggDgoAv4YbL5uKpNxRDoTvVYw6vePFgu4aNigmQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolEvents.sol": {
				"ICLPoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectFees",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectFees(address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectFees(address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectFees(address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the gauge\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":\"ICLPoolEvents\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolEvents.sol\":{\"keccak256\":\"0x32fbcac8952f1c5c44b466b0e1c28634ce71372c0f65242aa0d821cebdddcc2b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://19f22382292967f97640f84a7edfa01cf7deb303bf882344b9985007f1dcbef2\",\"dweb:/ipfs/Qmej7vWwun9fRBCrcvzPHdZP1jtLSCxJtjTSdkVTcgWeAE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectFees(address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the gauge"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol": {
				"ICLPoolOwnerActions": {
					"abi": [
						{
							"inputs": [],
							"name": "collectFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectFees()": {
								"returns": {
									"amount0": "The gauge fee collected in token0",
									"amount1": "The gauge fee collected in token1"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectFees()": "c8796572"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"collectFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectFees()\":{\"returns\":{\"amount0\":\"The gauge fee collected in token0\",\"amount1\":\"The gauge fee collected in token1\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectFees()\":{\"notice\":\"Collect the gauge fee accrued to the pool\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":\"ICLPoolOwnerActions\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol\":{\"keccak256\":\"0xeafd14ae3e15c9f663507e004c599618bfd5d2a90d58b3b450f9372f9e3f54f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://49472c8cf06dc7084e22fc57ffdce860aa7a9ff77f12e4bef0c13a078bbc5831\",\"dweb:/ipfs/Qmd29vWULezsJJzhw3wZxsU6Hsng5949v2TiVCbdga4Vqe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectFees()": {
								"notice": "Collect the gauge fee accrued to the pool"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"contracts/core/interfaces/pool/ICLPoolState.sol": {
				"ICLPoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gaugeFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint256",
									"name": "_rewardGrowthGlobalX128",
									"type": "uint256"
								}
							],
							"name": "getRewardGrowthInside",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "rewardGrowthInsideX128",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdated",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardGrowthGlobalX128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardReserve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rollover",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakedLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "int128",
									"name": "stakedLiquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardGrowthOutsideX128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakedFee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"fee()": {
								"details": "Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.",
								"returns": {
									"_0": "The swap & flash fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"gaugeFees()": {
								"details": "Gauge fees will never exceed uint128 max in either token"
							},
							"getRewardGrowthInside(int24,int24,uint256)": {
								"details": "Used in gauge reward/earned calculations",
								"params": {
									"_rewardGrowthGlobalX128": "a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)",
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"rewardGrowthInsideX128": "The reward growth in the range"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticksThis value includes staked liquidity"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"rewardGrowthGlobalX128()": {
								"details": "This value can overflow the uint256"
							},
							"rollover()": {
								"details": "rollover will always be smaller than the rewards distributed that epoch"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"stakedLiquidity()": {
								"details": "This value has no relationship to the total staked liquidity across all ticks"
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"unstakedFee()": {
								"details": "Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.",
								"returns": {
									"_0": "The unstaked fee"
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"gaugeFees()": "293833ba",
							"getRewardGrowthInside(int24,int24,uint256)": "a16368c9",
							"lastUpdated()": "d0b06f5d",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"periodFinish()": "ebe2b12b",
							"positions(bytes32)": "514ea4bf",
							"rewardGrowthGlobalX128()": "57806ada",
							"rewardRate()": "7b0a47ee",
							"rewardReserve()": "cab64bcd",
							"rollover()": "b056b49a",
							"slot0()": "3850c7bd",
							"stakedLiquidity()": "3ab04b20",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93",
							"unstakedFee()": "b64cc67b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gaugeFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"_rewardGrowthGlobalX128\",\"type\":\"uint256\"}],\"name\":\"getRewardGrowthInside\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardGrowthInsideX128\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdated\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardGrowthGlobalX128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollover\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakedLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"stakedLiquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardGrowthOutsideX128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakedFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fee()\":{\"details\":\"Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\",\"returns\":{\"_0\":\"The swap & flash fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"gaugeFees()\":{\"details\":\"Gauge fees will never exceed uint128 max in either token\"},\"getRewardGrowthInside(int24,int24,uint256)\":{\"details\":\"Used in gauge reward/earned calculations\",\"params\":{\"_rewardGrowthGlobalX128\":\"a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)\",\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"rewardGrowthInsideX128\":\"The reward growth in the range\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticksThis value includes staked liquidity\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"rewardGrowthGlobalX128()\":{\"details\":\"This value can overflow the uint256\"},\"rollover()\":{\"details\":\"rollover will always be smaller than the rewards distributed that epoch\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. unlocked Whether the pool is currently locked to reentrancy\"}},\"stakedLiquidity()\":{\"details\":\"This value has no relationship to the total staked liquidity across all ticks\"},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"unstakedFee()\":{\"details\":\"Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\",\"returns\":{\"_0\":\"The unstaked fee\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fee()\":{\"notice\":\"The pool's swap & flash fee in pips, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"gaugeFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the gauge\"},\"getRewardGrowthInside(int24,int24,uint256)\":{\"notice\":\"Returns data about reward growth within a tick range. RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations.\"},\"lastUpdated()\":{\"notice\":\"last time the rewardReserve and rewardRate were updated\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"periodFinish()\":{\"notice\":\"timestamp of the end of the current epoch's rewards\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"rewardGrowthGlobalX128()\":{\"notice\":\"The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool\"},\"rewardRate()\":{\"notice\":\"the emission rate of time-based farming\"},\"rewardReserve()\":{\"notice\":\"acts as a virtual reserve that holds information on how many rewards are yet to be distributed\"},\"rollover()\":{\"notice\":\"tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinishthis amount is rolled over on the next call to notifyRewardAmount\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"stakedLiquidity()\":{\"notice\":\"The currently in range staked liquidity available to the pool\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"unstakedFee()\":{\"notice\":\"The pool's unstaked fee in pips, i.e. 1e-6\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/interfaces/pool/ICLPoolState.sol\":\"ICLPoolState\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/pool/ICLPoolState.sol\":{\"keccak256\":\"0xe57d65825a097d6f0ab55d7ae39b528695b3df65320ed524124fbb55949bfcf9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b63b25beebe612acfd564f40b0d95b3844ee71bf969a3357419e7a54f1ece961\",\"dweb:/ipfs/Qmdk3mNLz3cSZscbXFsJp69gjgxFcBv6K5mdc6tjnmtFSR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"fee()": {
								"notice": "The pool's swap & flash fee in pips, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"gaugeFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the gauge"
							},
							"getRewardGrowthInside(int24,int24,uint256)": {
								"notice": "Returns data about reward growth within a tick range. RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations."
							},
							"lastUpdated()": {
								"notice": "last time the rewardReserve and rewardRate were updated"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"periodFinish()": {
								"notice": "timestamp of the end of the current epoch's rewards"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"rewardGrowthGlobalX128()": {
								"notice": "The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool"
							},
							"rewardRate()": {
								"notice": "the emission rate of time-based farming"
							},
							"rewardReserve()": {
								"notice": "acts as a virtual reserve that holds information on how many rewards are yet to be distributed"
							},
							"rollover()": {
								"notice": "tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinishthis amount is rolled over on the next call to notifyRewardAmount"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"stakedLiquidity()": {
								"notice": "The currently in range staked liquidity available to the pool"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"unstakedFee()": {
								"notice": "The pool's unstaked fee in pips, i.e. 1e-6"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/BitMath.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"details": "This library provides functionality for computing bit properties of an unsigned integer",
						"kind": "dev",
						"methods": {},
						"title": "BitMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/BitMath.sol\":187:2789  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/BitMath.sol\":187:2789  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122012b9822260198edcb8aba473268010c718807f101024e59a09c9eb3575aceac564736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012b9822260198edcb8aba473268010c718807f101024e59a09c9eb3575aceac564736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xB9 DUP3 0x22 PUSH1 0x19 DUP15 0xDC 0xB8 0xAB LOG4 PUSH20 0x268010C718807F101024E59A09C9EB3575ACEAC5 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "187:2602:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012b9822260198edcb8aba473268010c718807f101024e59a09c9eb3575aceac564736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xB9 DUP3 0x22 PUSH1 0x19 DUP15 0xDC 0xB8 0xAB LOG4 PUSH20 0x268010C718807F101024E59A09C9EB3575ACEAC5 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "187:2602:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "INVALID",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012b9822260198edcb8aba473268010c718807f101024e59a09c9eb3575aceac564736f6c63430007060033",
									".code": [
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/libraries/FixedPoint128.sol": {
				"FixedPoint128": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "FixedPoint128",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/FixedPoint128.sol\":211:310  library FixedPoint128 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/FixedPoint128.sol\":211:310  library FixedPoint128 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e909c26ffa67156a1f4719e8b0cdf8713276ef78f02340f01c478a45b0580d864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e909c26ffa67156a1f4719e8b0cdf8713276ef78f02340f01c478a45b0580d864736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY SWAP1 SWAP13 0x26 SELFDESTRUCT 0xA6 PUSH18 0x56A1F4719E8B0CDF8713276EF78F02340F01 0xC4 PUSH25 0xA45B0580D864736F6C63430007060033000000000000000000 ",
							"sourceMap": "211:99:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e909c26ffa67156a1f4719e8b0cdf8713276ef78f02340f01c478a45b0580d864736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY SWAP1 SWAP13 0x26 SELFDESTRUCT 0xA6 PUSH18 0x56A1F4719E8B0CDF8713276EF78F02340F01 0xC4 PUSH25 0xA45B0580D864736F6C63430007060033000000000000000000 ",
							"sourceMap": "211:99:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "INVALID",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 211,
									"end": 310,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e909c26ffa67156a1f4719e8b0cdf8713276ef78f02340f01c478a45b0580d864736f6c63430007060033",
									".code": [
										{
											"begin": 211,
											"end": 310,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 211,
											"end": 310,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 211,
											"end": 310,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 211,
											"end": 310,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 310,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 310,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 211,
											"end": 310,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 310,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 211,
											"end": 310,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint128\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/FixedPoint128.sol\":\"FixedPoint128\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/FixedPoint96.sol": {
				"FixedPoint96": {
					"abi": [],
					"devdoc": {
						"details": "Used in SqrtPriceMath.sol",
						"kind": "dev",
						"methods": {},
						"title": "FixedPoint96",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/FixedPoint96.sol\":245:379  library FixedPoint96 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/FixedPoint96.sol\":245:379  library FixedPoint96 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200245d39e59b2b2904c9bcbf61f4189a161378cdc224e57831532bdd92db74e1864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200245d39e59b2b2904c9bcbf61f4189a161378cdc224e57831532bdd92db74e1864736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL GASLIMIT 0xD3 SWAP15 MSIZE 0xB2 0xB2 SWAP1 0x4C SWAP12 0xCB 0xF6 0x1F COINBASE DUP10 LOG1 PUSH2 0x378C 0xDC 0x22 0x4E JUMPI DUP4 ISZERO ORIGIN 0xBD 0xD9 0x2D 0xB7 0x4E XOR PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "245:134:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200245d39e59b2b2904c9bcbf61f4189a161378cdc224e57831532bdd92db74e1864736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL GASLIMIT 0xD3 SWAP15 MSIZE 0xB2 0xB2 SWAP1 0x4C SWAP12 0xCB 0xF6 0x1F COINBASE DUP10 LOG1 PUSH2 0x378C 0xDC 0x22 0x4E JUMPI DUP4 ISZERO ORIGIN 0xBD 0xD9 0x2D 0xB7 0x4E XOR PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "245:134:20:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "BYTE",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "INVALID",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "ADDRESS",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE8",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 245,
									"end": 379,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200245d39e59b2b2904c9bcbf61f4189a161378cdc224e57831532bdd92db74e1864736f6c63430007060033",
									".code": [
										{
											"begin": 245,
											"end": 379,
											"name": "PUSHDEPLOYADDRESS",
											"source": 20
										},
										{
											"begin": 245,
											"end": 379,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 245,
											"end": 379,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 245,
											"end": 379,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Used in SqrtPriceMath.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint96\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/FixedPoint96.sol\":\"FixedPoint96\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/FullMath.sol": {
				"FullMath": {
					"abi": [],
					"devdoc": {
						"details": "Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits",
						"kind": "dev",
						"methods": {},
						"title": "Contains 512-bit math functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/FullMath.sol\":362:5064  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/FullMath.sol\":362:5064  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205d7f0360655decd42ccc6dc2b6338d00a32cad23ee4635e71a9afa77af8193d864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d7f0360655decd42ccc6dc2b6338d00a32cad23ee4635e71a9afa77af8193d864736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D PUSH32 0x360655DECD42CCC6DC2B6338D00A32CAD23EE4635E71A9AFA77AF8193D86473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "362:4702:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d7f0360655decd42ccc6dc2b6338d00a32cad23ee4635e71a9afa77af8193d864736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D PUSH32 0x360655DECD42CCC6DC2B6338D00A32CAD23EE4635E71A9AFA77AF8193D86473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "362:4702:21:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH #[$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH [$]",
									"source": 21,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 21,
									"value": "B"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "CODECOPY",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP1",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "MLOAD",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "BYTE",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "EQ",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH [tag]",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "JUMPI",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "INVALID",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "tag",
									"source": 21,
									"value": "1"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "JUMPDEST",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "ADDRESS",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 21,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "MSTORE",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "PUSH",
									"source": 21,
									"value": "73"
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "MSTORE8",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP3",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "DUP2",
									"source": 21
								},
								{
									"begin": 362,
									"end": 5064,
									"name": "RETURN",
									"source": 21
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d7f0360655decd42ccc6dc2b6338d00a32cad23ee4635e71a9afa77af8193d864736f6c63430007060033",
									".code": [
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSHDEPLOYADDRESS",
											"source": 21
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "ADDRESS",
											"source": 21
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "EQ",
											"source": 21
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSH",
											"source": 21,
											"value": "80"
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSH",
											"source": 21,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "MSTORE",
											"source": 21
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "PUSH",
											"source": 21,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "DUP1",
											"source": 21
										},
										{
											"begin": 362,
											"end": 5064,
											"name": "REVERT",
											"source": 21
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/LiquidityAmounts.sol": {
				"LiquidityAmounts": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Liquidity amount functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/LiquidityAmounts.sol\":311:6863  library LiquidityAmounts {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/LiquidityAmounts.sol\":311:6863  library LiquidityAmounts {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220154d0b6f7adaff8c191c27b09c4ec5059feb461d69dd639f2ea2219b31788e6564736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220154d0b6f7adaff8c191c27b09c4ec5059feb461d69dd639f2ea2219b31788e6564736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0x4D SIGNEXTEND PUSH16 0x7ADAFF8C191C27B09C4EC5059FEB461D PUSH10 0xDD639F2EA2219B31788E PUSH6 0x64736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "311:6552:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220154d0b6f7adaff8c191c27b09c4ec5059feb461d69dd639f2ea2219b31788e6564736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0x4D SIGNEXTEND PUSH16 0x7ADAFF8C191C27B09C4EC5059FEB461D PUSH10 0xDD639F2EA2219B31788E PUSH6 0x64736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "311:6552:22:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAmount0ForLiquidity(uint160,uint160,uint128)": "infinite",
								"getAmount1ForLiquidity(uint160,uint160,uint128)": "infinite",
								"getAmountsForLiquidity(uint160,uint160,uint160,uint128)": "infinite",
								"getLiquidityForAmount0(uint160,uint160,uint256)": "infinite",
								"getLiquidityForAmount1(uint160,uint160,uint256)": "infinite",
								"getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)": "infinite",
								"toUint128(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH #[$]",
									"source": 22,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH [$]",
									"source": 22,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH",
									"source": 22,
									"value": "B"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "CODECOPY",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP1",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "MLOAD",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "BYTE",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH",
									"source": 22,
									"value": "73"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "EQ",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH [tag]",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "JUMPI",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "INVALID",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "tag",
									"source": 22,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "JUMPDEST",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "ADDRESS",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH",
									"source": 22,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "MSTORE",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "PUSH",
									"source": 22,
									"value": "73"
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "MSTORE8",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP3",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "DUP2",
									"source": 22
								},
								{
									"begin": 311,
									"end": 6863,
									"name": "RETURN",
									"source": 22
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220154d0b6f7adaff8c191c27b09c4ec5059feb461d69dd639f2ea2219b31788e6564736f6c63430007060033",
									".code": [
										{
											"begin": 311,
											"end": 6863,
											"name": "PUSHDEPLOYADDRESS",
											"source": 22
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "ADDRESS",
											"source": 22
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "EQ",
											"source": 22
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "PUSH",
											"source": 22,
											"value": "80"
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "PUSH",
											"source": 22,
											"value": "40"
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "MSTORE",
											"source": 22
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "PUSH",
											"source": 22,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "DUP1",
											"source": 22
										},
										{
											"begin": 311,
											"end": 6863,
											"name": "REVERT",
											"source": 22
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity amount functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions for computing liquidity amounts from token amounts and prices\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/LiquidityAmounts.sol\":\"LiquidityAmounts\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0xae7f7b0bbbd864bc1761ec5eac62ec761f2ef168d32ef9e914e337b077ebba4a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b57b2f04997cd6055404801982f57083f8e9242935b3ebf3bbed032f5035f2f1\",\"dweb:/ipfs/QmdxHVMQEA32jnyroWZG2sk4NPtQFWXPfkDDYvRtK2APFA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides functions for computing liquidity amounts from token amounts and prices",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/LiquidityMath.sol": {
				"LiquidityMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Math library for liquidity",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/LiquidityMath.sol\":109:621  library LiquidityMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f5402307e690c2b76a8f7983efcd95dab7974ed30674c6634140894b042549fd64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5402307e690c2b76a8f7983efcd95dab7974ed30674c6634140894b042549fd64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 BLOCKHASH 0x23 SMOD 0xE6 SWAP1 0xC2 0xB7 PUSH11 0x8F7983EFCD95DAB7974ED3 MOD PUSH21 0xC6634140894B042549FD64736F6C63430007060033 ",
							"sourceMap": "109:512:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5402307e690c2b76a8f7983efcd95dab7974ed30674c6634140894b042549fd64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 BLOCKHASH 0x23 SMOD 0xE6 SWAP1 0xC2 0xB7 PUSH11 0x8F7983EFCD95DAB7974ED3 MOD PUSH21 0xC6634140894B042549FD64736F6C63430007060033 ",
							"sourceMap": "109:512:23:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"addDelta(uint128,int128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH #[$]",
									"source": 23,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH [$]",
									"source": 23,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 23,
									"value": "B"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "CODECOPY",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP1",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MLOAD",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "BYTE",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 23,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "EQ",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "JUMPI",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "INVALID",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "tag",
									"source": 23,
									"value": "1"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "JUMPDEST",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "ADDRESS",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 23,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MSTORE",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "PUSH",
									"source": 23,
									"value": "73"
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "MSTORE8",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP3",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "DUP2",
									"source": 23
								},
								{
									"begin": 109,
									"end": 621,
									"name": "RETURN",
									"source": 23
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5402307e690c2b76a8f7983efcd95dab7974ed30674c6634140894b042549fd64736f6c63430007060033",
									".code": [
										{
											"begin": 109,
											"end": 621,
											"name": "PUSHDEPLOYADDRESS",
											"source": 23
										},
										{
											"begin": 109,
											"end": 621,
											"name": "ADDRESS",
											"source": 23
										},
										{
											"begin": 109,
											"end": 621,
											"name": "EQ",
											"source": 23
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 23,
											"value": "80"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 23,
											"value": "40"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "MSTORE",
											"source": 23
										},
										{
											"begin": 109,
											"end": 621,
											"name": "PUSH",
											"source": 23,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 621,
											"name": "DUP1",
											"source": 23
										},
										{
											"begin": 109,
											"end": 621,
											"name": "REVERT",
											"source": 23
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math library for liquidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/LiquidityMath.sol\":\"LiquidityMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/libraries/LowGasSafeMath.sol": {
				"LowGasSafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Optimized overflow and underflow safe math operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/LowGasSafeMath.sol\":249:1695  library LowGasSafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/LowGasSafeMath.sol\":249:1695  library LowGasSafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a94200dfc50b0fb839276c1cc87f4cacc7dd4d9d2053b06ebc08083dedfda56664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a94200dfc50b0fb839276c1cc87f4cacc7dd4d9d2053b06ebc08083dedfda56664736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 TIMESTAMP STOP 0xDF 0xC5 SIGNEXTEND 0xF 0xB8 CODECOPY 0x27 PUSH13 0x1CC87F4CACC7DD4D9D2053B06E 0xBC ADDMOD ADDMOD RETURNDATASIZE 0xED REVERT 0xA5 PUSH7 0x64736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "249:1446:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a94200dfc50b0fb839276c1cc87f4cacc7dd4d9d2053b06ebc08083dedfda56664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 TIMESTAMP STOP 0xDF 0xC5 SIGNEXTEND 0xF 0xB8 CODECOPY 0x27 PUSH13 0x1CC87F4CACC7DD4D9D2053B06E 0xBC ADDMOD ADDMOD RETURNDATASIZE 0xED REVERT 0xA5 PUSH7 0x64736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "249:1446:24:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(int256,int256)": "infinite",
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(int256,int256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH #[$]",
									"source": 24,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH [$]",
									"source": 24,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 24,
									"value": "B"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "CODECOPY",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP1",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MLOAD",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "BYTE",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 24,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "EQ",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "JUMPI",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "INVALID",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "tag",
									"source": 24,
									"value": "1"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "ADDRESS",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 24,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "PUSH",
									"source": 24,
									"value": "73"
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "MSTORE8",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP3",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "DUP2",
									"source": 24
								},
								{
									"begin": 249,
									"end": 1695,
									"name": "RETURN",
									"source": 24
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a94200dfc50b0fb839276c1cc87f4cacc7dd4d9d2053b06ebc08083dedfda56664736f6c63430007060033",
									".code": [
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSHDEPLOYADDRESS",
											"source": 24
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "ADDRESS",
											"source": 24
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "EQ",
											"source": 24
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 24,
											"value": "80"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 24,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "MSTORE",
											"source": 24
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "PUSH",
											"source": 24,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "DUP1",
											"source": 24
										},
										{
											"begin": 249,
											"end": 1695,
											"name": "REVERT",
											"source": 24
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/LowGasSafeMath.sol\":\"LowGasSafeMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/Position.sol": {
				"Position": {
					"abi": [],
					"devdoc": {
						"details": "Positions store additional state for tracking fees owed to the position",
						"kind": "dev",
						"methods": {},
						"title": "Position",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/Position.sol\":365:3661  library Position {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/Position.sol\":365:3661  library Position {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204b39517c7a0e4a731d6fb965ccf313c67685da15836f141dd983248848bf97cd64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204b39517c7a0e4a731d6fb965ccf313c67685da15836f141dd983248848bf97cd64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B CODECOPY MLOAD PUSH29 0x7A0E4A731D6FB965CCF313C67685DA15836F141DD983248848BF97CD64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "365:3296:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204b39517c7a0e4a731d6fb965ccf313c67685da15836f141dd983248848bf97cd64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B CODECOPY MLOAD PUSH29 0x7A0E4A731D6FB965CCF313C67685DA15836F141DD983248848BF97CD64 PUSH20 0x6F6C634300070600330000000000000000000000 ",
							"sourceMap": "365:3296:25:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"get(mapping(bytes32 => struct Position.Info storage ref),address,int24,int24)": "infinite",
								"update(struct Position.Info storage pointer,int128,uint256,uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH #[$]",
									"source": 25,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH [$]",
									"source": 25,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 25,
									"value": "B"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "CODECOPY",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP1",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "MLOAD",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 25,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "BYTE",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 25,
									"value": "73"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "EQ",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 25,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "JUMPI",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "INVALID",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "tag",
									"source": 25,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "ADDRESS",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 25,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "MSTORE",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "PUSH",
									"source": 25,
									"value": "73"
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP2",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "MSTORE8",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP3",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "DUP2",
									"source": 25
								},
								{
									"begin": 365,
									"end": 3661,
									"name": "RETURN",
									"source": 25
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b39517c7a0e4a731d6fb965ccf313c67685da15836f141dd983248848bf97cd64736f6c63430007060033",
									".code": [
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSHDEPLOYADDRESS",
											"source": 25
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "ADDRESS",
											"source": 25
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "EQ",
											"source": 25
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSH",
											"source": 25,
											"value": "80"
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSH",
											"source": 25,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "MSTORE",
											"source": 25
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "PUSH",
											"source": 25,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "DUP1",
											"source": 25
										},
										{
											"begin": 365,
											"end": 3661,
											"name": "REVERT",
											"source": 25
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Positions store additional state for tracking fees owed to the position\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Position\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Positions represent an owner address' liquidity between a lower and upper tick boundary\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/Position.sol\":\"Position\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x2d1f4f73ae0d8f0a210b8d30084659b57c56ac8f2f96011fca36f00a6d417178\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2ba88933f16cd2df398e19c6ad227268f83c03081b70d243c97116d2ed9bc241\",\"dweb:/ipfs/QmTUGxdh8snzEM9VrTSS47StCg9VVWvvLJtJeNnMTFY4xb\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/Position.sol\":{\"keccak256\":\"0xcf1e701e3fae35be8b77ff1217cfdd23d33eb16fd3cec70be8ea6888f87af285\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c8c89746dd30e76cc029d4e090e402b28aae0659cc71800758b99137dfe85f55\",\"dweb:/ipfs/QmY4Ft1YBLqzqwTgNdpCyRd7WrY78zKgg4Ddv2zqZiBEiE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Positions represent an owner address' liquidity between a lower and upper tick boundary",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Safe casting methods",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/SafeCast.sol\":165:1049  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/SafeCast.sol\":165:1049  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220aa04db2a05d701bd4be72eeb982d169c7d91cddba05b1fd0159bfa06e4f19c7864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa04db2a05d701bd4be72eeb982d169c7d91cddba05b1fd0159bfa06e4f19c7864736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DIV 0xDB 0x2A SDIV 0xD7 ADD 0xBD 0x4B 0xE7 0x2E 0xEB SWAP9 0x2D AND SWAP13 PUSH30 0x91CDDBA05B1FD0159BFA06E4F19C7864736F6C6343000706003300000000 ",
							"sourceMap": "165:884:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa04db2a05d701bd4be72eeb982d169c7d91cddba05b1fd0159bfa06e4f19c7864736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DIV 0xDB 0x2A SDIV 0xD7 ADD 0xBD 0x4B 0xE7 0x2E 0xEB SWAP9 0x2D AND SWAP13 PUSH30 0x91CDDBA05B1FD0159BFA06E4F19C7864736F6C6343000706003300000000 ",
							"sourceMap": "165:884:26:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toUint160(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH #[$]",
									"source": 26,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH [$]",
									"source": 26,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 26,
									"value": "B"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "CODECOPY",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP1",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "MLOAD",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "BYTE",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 26,
									"value": "73"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "EQ",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 26,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "JUMPI",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "INVALID",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "tag",
									"source": 26,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "ADDRESS",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 26,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "MSTORE",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "PUSH",
									"source": 26,
									"value": "73"
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP2",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "MSTORE8",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP3",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "DUP2",
									"source": 26
								},
								{
									"begin": 165,
									"end": 1049,
									"name": "RETURN",
									"source": 26
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aa04db2a05d701bd4be72eeb982d169c7d91cddba05b1fd0159bfa06e4f19c7864736f6c63430007060033",
									".code": [
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSHDEPLOYADDRESS",
											"source": 26
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "ADDRESS",
											"source": 26
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "EQ",
											"source": 26
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSH",
											"source": 26,
											"value": "80"
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSH",
											"source": 26,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "MSTORE",
											"source": 26
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "PUSH",
											"source": 26,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "DUP1",
											"source": 26
										},
										{
											"begin": 165,
											"end": 1049,
											"name": "REVERT",
											"source": 26
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe casting methods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for safely casting between types",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/SqrtPriceMath.sol": {
				"SqrtPriceMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Functions based on Q64.96 sqrt price and liquidity",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/SqrtPriceMath.sol\":377:10495  library SqrtPriceMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/SqrtPriceMath.sol\":377:10495  library SqrtPriceMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ecb63ca95a9ee1511718afa5d3d3d0e10b49cd1e4b814c0d2175ee557e296f4064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ecb63ca95a9ee1511718afa5d3d3d0e10b49cd1e4b814c0d2175ee557e296f4064736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xB6 EXTCODECOPY 0xA9 GAS SWAP15 0xE1 MLOAD OR XOR 0xAF 0xA5 0xD3 0xD3 0xD0 0xE1 SIGNEXTEND 0x49 0xCD 0x1E 0x4B DUP2 0x4C 0xD 0x21 PUSH22 0xEE557E296F4064736F6C634300070600330000000000 ",
							"sourceMap": "377:10118:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ecb63ca95a9ee1511718afa5d3d3d0e10b49cd1e4b814c0d2175ee557e296f4064736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xB6 EXTCODECOPY 0xA9 GAS SWAP15 0xE1 MLOAD OR XOR 0xAF 0xA5 0xD3 0xD3 0xD0 0xE1 SIGNEXTEND 0x49 0xCD 0x1E 0x4B DUP2 0x4C 0xD 0x21 PUSH22 0xEE557E296F4064736F6C634300070600330000000000 ",
							"sourceMap": "377:10118:27:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAmount0Delta(uint160,uint160,int128)": "infinite",
								"getAmount0Delta(uint160,uint160,uint128,bool)": "infinite",
								"getAmount1Delta(uint160,uint160,int128)": "infinite",
								"getAmount1Delta(uint160,uint160,uint128,bool)": "infinite",
								"getNextSqrtPriceFromAmount0RoundingUp(uint160,uint128,uint256,bool)": "infinite",
								"getNextSqrtPriceFromAmount1RoundingDown(uint160,uint128,uint256,bool)": "infinite",
								"getNextSqrtPriceFromInput(uint160,uint128,uint256,bool)": "infinite",
								"getNextSqrtPriceFromOutput(uint160,uint128,uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH #[$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH [$]",
									"source": 27,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 27,
									"value": "B"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "CODECOPY",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP1",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "MLOAD",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "BYTE",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 27,
									"value": "73"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "EQ",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH [tag]",
									"source": 27,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "JUMPI",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "INVALID",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "tag",
									"source": 27,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "JUMPDEST",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "ADDRESS",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 27,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "MSTORE",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "PUSH",
									"source": 27,
									"value": "73"
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP2",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "MSTORE8",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP3",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "DUP2",
									"source": 27
								},
								{
									"begin": 377,
									"end": 10495,
									"name": "RETURN",
									"source": 27
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ecb63ca95a9ee1511718afa5d3d3d0e10b49cd1e4b814c0d2175ee557e296f4064736f6c63430007060033",
									".code": [
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSHDEPLOYADDRESS",
											"source": 27
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "ADDRESS",
											"source": 27
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "EQ",
											"source": 27
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSH",
											"source": 27,
											"value": "80"
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSH",
											"source": 27,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "MSTORE",
											"source": 27
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "PUSH",
											"source": 27,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "DUP1",
											"source": 27
										},
										{
											"begin": 377,
											"end": 10495,
											"name": "REVERT",
											"source": 27
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Functions based on Q64.96 sqrt price and liquidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/SqrtPriceMath.sol\":\"SqrtPriceMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"contracts/core/libraries/FullMath.sol\":{\"keccak256\":\"0x5340256039418f5d03512a44173d3dcf1da277a73a461e06fb5668f49cfc46f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75dee99795d1125875233a7f1d356935099cc97b4085c0e451060d77db85d144\",\"dweb:/ipfs/QmTGqyrxVLQd8TBaarqSQDiYvq1QFutCdmTyXk6JpxzKTN\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xefd51a282ca9fbc89394776e7f5c6f96fa084ca26b71d99727780332c87d1843\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f09b719eff523f65d0d11fc476b9735e1390018d5ff585991d0fc644e913ecf\",\"dweb:/ipfs/QmNiZxxQhqteYgJdhCQ3cZ4S7bTQf2AQRUJqMVvPY3doot\"]},\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/Tick.sol": {
				"Tick": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Tick",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/Tick.sol\":292:13071  library Tick {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/Tick.sol\":292:13071  library Tick {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201cf88ce1e28ed1c510dba192309556c376901886b6d27ae58a9d06bd440bb00164736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201cf88ce1e28ed1c510dba192309556c376901886b6d27ae58a9d06bd440bb00164736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xF8 DUP13 0xE1 0xE2 DUP15 0xD1 0xC5 LT 0xDB LOG1 SWAP3 ADDRESS SWAP6 JUMP 0xC3 PUSH23 0x901886B6D27AE58A9D06BD440BB00164736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "292:12779:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201cf88ce1e28ed1c510dba192309556c376901886b6d27ae58a9d06bd440bb00164736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xF8 DUP13 0xE1 0xE2 DUP15 0xD1 0xC5 LT 0xDB LOG1 SWAP3 ADDRESS SWAP6 JUMP 0xC3 PUSH23 0x901886B6D27AE58A9D06BD440BB00164736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "292:12779:28:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"clear(mapping(int24 => struct Tick.Info storage ref),int24)": "infinite",
								"cross(mapping(int24 => struct Tick.Info storage ref),int24,uint256,uint256,uint160,int56,uint32,uint256)": "infinite",
								"getFeeGrowthInside(mapping(int24 => struct Tick.Info storage ref),int24,int24,int24,uint256,uint256)": "infinite",
								"getRewardGrowthInside(mapping(int24 => struct Tick.Info storage ref),int24,int24,int24,uint256)": "infinite",
								"tickSpacingToMaxLiquidityPerTick(int24)": "infinite",
								"update(mapping(int24 => struct Tick.Info storage ref),int24,int24,int128,uint256,uint256,uint256,uint160,int56,uint32,bool,uint128)": "infinite",
								"updateStake(mapping(int24 => struct Tick.Info storage ref),int24,int128,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH #[$]",
									"source": 28,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH [$]",
									"source": 28,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 28,
									"value": "B"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "CODECOPY",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP1",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "MLOAD",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "BYTE",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 28,
									"value": "73"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "EQ",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH [tag]",
									"source": 28,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "JUMPI",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "INVALID",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "tag",
									"source": 28,
									"value": "1"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "JUMPDEST",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "ADDRESS",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "MSTORE",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "PUSH",
									"source": 28,
									"value": "73"
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP2",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "MSTORE8",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "DUP2",
									"source": 28
								},
								{
									"begin": 292,
									"end": 13071,
									"name": "RETURN",
									"source": 28
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201cf88ce1e28ed1c510dba192309556c376901886b6d27ae58a9d06bd440bb00164736f6c63430007060033",
									".code": [
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSHDEPLOYADDRESS",
											"source": 28
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "ADDRESS",
											"source": 28
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "EQ",
											"source": 28
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSH",
											"source": 28,
											"value": "80"
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 292,
											"end": 13071,
											"name": "REVERT",
											"source": 28
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Tick\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains functions for managing tick processes and relevant calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/Tick.sol\":\"Tick\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/LiquidityMath.sol\":{\"keccak256\":\"0xd1059ccc904c8752cec175e8d99e31921c6cd7f3a9c2dd315ce34ac486172ac9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f3630a49e62fa056e2cc4e0278b6f17c5f7e1c9ad2190540cf84c152b58cdef8\",\"dweb:/ipfs/QmdGjKRTNY2qLXJtR2rXU8Nxk4pZwXfbzZYNn3F472QEn6\"]},\"contracts/core/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0x86715eb960f18e01ac94e3bba4614ed51a887fa3c5bd1c43bf80aa98e019cf2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bfc1d5d58e59015086b0e65a6c3a2ddad312e2350480510f6c0c8167f3d71a37\",\"dweb:/ipfs/QmQndULYjFsHKHjMAKLMfc12vWbVB5FawtioHtvwcWRJZp\"]},\"contracts/core/libraries/SafeCast.sol\":{\"keccak256\":\"0xd4c1c1b67f946b077d7c52a158113763a89a210fc2927b8491055a962ecd18c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5344400c74320ca8dbe19241db7ff49babbd6c875c1b561c79d6e4315a9fb5f9\",\"dweb:/ipfs/QmRKCNTbkovxK1WvejXZr3iAHhGN97ZT1yWGsWCJFkrT5X\"]},\"contracts/core/libraries/Tick.sol\":{\"keccak256\":\"0xb5ebd80c667f4501dba65f4e39e51ff36e5334480849e0ed8604222d20b4ed1e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://246f590513441ac0f307170f5099e4a0c0b1f579406fc30b909b249858dbd099\",\"dweb:/ipfs/QmaA5uC3eck7nMqyJbpSPEhmXmAXaKLNBSS1Lfnzzzjc95\"]},\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains functions for managing tick processes and relevant calculations",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/TickBitmap.sol": {
				"TickBitmap": {
					"abi": [],
					"devdoc": {
						"details": "The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.",
						"kind": "dev",
						"methods": {},
						"title": "Packed tick initialized state library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/TickBitmap.sol\":339:4089  library TickBitmap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/TickBitmap.sol\":339:4089  library TickBitmap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c971e3b206f83923d6695ffc5b6c44f126d4be74244a6fb9dae7fc346f5b139664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c971e3b206f83923d6695ffc5b6c44f126d4be74244a6fb9dae7fc346f5b139664736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH18 0xE3B206F83923D6695FFC5B6C44F126D4BE74 0x24 0x4A PUSH16 0xB9DAE7FC346F5B139664736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "339:3750:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c971e3b206f83923d6695ffc5b6c44f126d4be74244a6fb9dae7fc346f5b139664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH18 0xE3B206F83923D6695FFC5B6C44F126D4BE74 0x24 0x4A PUSH16 0xB9DAE7FC346F5B139664736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "339:3750:29:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"flipTick(mapping(int16 => uint256),int24,int24)": "infinite",
								"nextInitializedTickWithinOneWord(mapping(int16 => uint256),int24,int24,bool)": "infinite",
								"position(int24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH #[$]",
									"source": 29,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH [$]",
									"source": 29,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 29,
									"value": "B"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "CODECOPY",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP1",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "MLOAD",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "BYTE",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 29,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "EQ",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH [tag]",
									"source": 29,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "JUMPI",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "INVALID",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "tag",
									"source": 29,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "JUMPDEST",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "ADDRESS",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 29,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "MSTORE",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "PUSH",
									"source": 29,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "MSTORE8",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP3",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "DUP2",
									"source": 29
								},
								{
									"begin": 339,
									"end": 4089,
									"name": "RETURN",
									"source": 29
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c971e3b206f83923d6695ffc5b6c44f126d4be74244a6fb9dae7fc346f5b139664736f6c63430007060033",
									".code": [
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSHDEPLOYADDRESS",
											"source": 29
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "ADDRESS",
											"source": 29
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "EQ",
											"source": 29
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSH",
											"source": 29,
											"value": "80"
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSH",
											"source": 29,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "MSTORE",
											"source": 29
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "PUSH",
											"source": 29,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "DUP1",
											"source": 29
										},
										{
											"begin": 339,
											"end": 4089,
											"name": "REVERT",
											"source": 29
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/TickBitmap.sol\":\"TickBitmap\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/BitMath.sol\":{\"keccak256\":\"0x82e425066110aac05ed8a9fc90f9ee85142b6f434769447e49d4438a8d9fcd82\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://77a97078bc992c18c59cb61e07fa4632c8a26b6babf00f3b16eabb5dcaa953b4\",\"dweb:/ipfs/QmTj15ufLWk6AxedSVXBcLp5cYf2DCJAeDi94cVemCkm54\"]},\"contracts/core/libraries/TickBitmap.sol\":{\"keccak256\":\"0xd829fadfca3f8f5870c877c7eeceb4a692603c16b711174526129987e8745f5b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1d2cbf3802f7e611708a45bc390ee9307d947e49b348294591659444b9989c05\",\"dweb:/ipfs/Qmcny7JNyVYCtcZG3b1BL4ThuKREmAkE9ZKaC3i32pnt7X\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Stores a packed mapping of tick index to its initialized state",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/TickMath.sol\":313:8644  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/TickMath.sol\":313:8644  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dd8a36df742a4ef4774b2fdb4df885db24213864d6c93142b93a425d6169125764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dd8a36df742a4ef4774b2fdb4df885db24213864d6c93142b93a425d6169125764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP11 CALLDATASIZE 0xDF PUSH21 0x2A4EF4774B2FDB4DF885DB24213864D6C93142B93A TIMESTAMP 0x5D PUSH2 0x6912 JUMPI PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "313:8331:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dd8a36df742a4ef4774b2fdb4df885db24213864d6c93142b93a425d6169125764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP11 CALLDATASIZE 0xDF PUSH21 0x2A4EF4774B2FDB4DF885DB24213864D6C93142B93A TIMESTAMP 0x5D PUSH2 0x6912 JUMPI PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "313:8331:30:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH #[$]",
									"source": 30,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [$]",
									"source": 30,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 30,
									"value": "B"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "CODECOPY",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP1",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MLOAD",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "BYTE",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 30,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "EQ",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [tag]",
									"source": 30,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPI",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "INVALID",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "tag",
									"source": 30,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPDEST",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "ADDRESS",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 30,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 30,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE8",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 30
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "RETURN",
									"source": 30
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dd8a36df742a4ef4774b2fdb4df885db24213864d6c93142b93a425d6169125764736f6c63430007060033",
									".code": [
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 30
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "ADDRESS",
											"source": 30
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "EQ",
											"source": 30
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 30,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 30,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "MSTORE",
											"source": 30
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 30,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "DUP1",
											"source": 30
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "REVERT",
											"source": 30
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/TickMath.sol\":{\"keccak256\":\"0x2aa3180a8a59b34a513b948d3f2207b5376de7a2c37065853b7c9fbf0cd3d43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c4d46ca5384037f14497c6268342b15becf8bbe1a8fecbcd89ca5b80f41fabc2\",\"dweb:/ipfs/QmanLcdh7EppV4yJ1CdWfPB67es3nEjrDiByAYwgkSE58D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "TransferHelper",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/TransferHelper.sol\":253:902  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/TransferHelper.sol\":253:902  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d7d316c24922d2f63606e41b03d6faa635d743b5ad6006ab6227623ab248620f64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d7d316c24922d2f63606e41b03d6faa635d743b5ad6006ab6227623ab248620f64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xD3 AND 0xC2 0x49 0x22 0xD2 0xF6 CALLDATASIZE MOD 0xE4 SHL SUB 0xD6 STATICCALL 0xA6 CALLDATALOAD 0xD7 NUMBER 0xB5 0xAD PUSH1 0x6 0xAB PUSH3 0x27623A 0xB2 0x48 PUSH3 0xF6473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "253:649:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d7d316c24922d2f63606e41b03d6faa635d743b5ad6006ab6227623ab248620f64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xD3 AND 0xC2 0x49 0x22 0xD2 0xF6 CALLDATASIZE MOD 0xE4 SHL SUB 0xD6 STATICCALL 0xA6 CALLDATALOAD 0xD7 NUMBER 0xB5 0xAD PUSH1 0x6 0xAB PUSH3 0x27623A 0xB2 0x48 PUSH3 0xF6473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "253:649:31:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH #[$]",
									"source": 31,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH [$]",
									"source": 31,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 31,
									"value": "B"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "CODECOPY",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP1",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "MLOAD",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "BYTE",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 31,
									"value": "73"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "EQ",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 31,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "JUMPI",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "INVALID",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "tag",
									"source": 31,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "JUMPDEST",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "ADDRESS",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 31,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "MSTORE",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "PUSH",
									"source": 31,
									"value": "73"
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "MSTORE8",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP3",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "DUP2",
									"source": 31
								},
								{
									"begin": 253,
									"end": 902,
									"name": "RETURN",
									"source": 31
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d7d316c24922d2f63606e41b03d6faa635d743b5ad6006ab6227623ab248620f64736f6c63430007060033",
									".code": [
										{
											"begin": 253,
											"end": 902,
											"name": "PUSHDEPLOYADDRESS",
											"source": 31
										},
										{
											"begin": 253,
											"end": 902,
											"name": "ADDRESS",
											"source": 31
										},
										{
											"begin": 253,
											"end": 902,
											"name": "EQ",
											"source": 31
										},
										{
											"begin": 253,
											"end": 902,
											"name": "PUSH",
											"source": 31,
											"value": "80"
										},
										{
											"begin": 253,
											"end": 902,
											"name": "PUSH",
											"source": 31,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 902,
											"name": "MSTORE",
											"source": 31
										},
										{
											"begin": 253,
											"end": 902,
											"name": "PUSH",
											"source": 31,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 902,
											"name": "DUP1",
											"source": 31
										},
										{
											"begin": 253,
											"end": 902,
											"name": "REVERT",
											"source": 31
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"TransferHelper\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0xa7d3b1fd5f9b9d8848a3ed9d1137eb9c79fa1fa4484347e0f75e285a2e51ea40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0a3f7e24d48048a87d541cc014fd51ff4cc3c54aeb78b559d17d75884671fb43\",\"dweb:/ipfs/QmWQC2DiaLXaj3QnwUgvZrKP3xvWVxUjxXDfTMmq6aziYc\"]},\"contracts/core/libraries/TransferHelper.sol\":{\"keccak256\":\"0x3bbe07a0684d98efe73f7012e446873494e74983e1f75a16d42c25b956d61651\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://78ac9659c70ba3253a6e526ba5a144994fb3d32df2e9537787eeb45aae320aec\",\"dweb:/ipfs/QmbaZRbPP2wFZ9coJd2iyPM37hm3kXzPLuRtL6KKr1MCSL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false",
						"version": 1
					}
				}
			},
			"contracts/core/libraries/UnsafeMath.sol": {
				"UnsafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Math functions that do not check inputs or outputs",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/libraries/UnsafeMath.sol\":244:659  library UnsafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/libraries/UnsafeMath.sol\":244:659  library UnsafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220da705bbeff872296976db7456d6205a3a5809082136fe545d075bcf9636f184d64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220da705bbeff872296976db7456d6205a3a5809082136fe545d075bcf9636f184d64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA PUSH17 0x5BBEFF872296976DB7456D6205A3A58090 DUP3 SGT PUSH16 0xE545D075BCF9636F184D64736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "244:415:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220da705bbeff872296976db7456d6205a3a5809082136fe545d075bcf9636f184d64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA PUSH17 0x5BBEFF872296976DB7456D6205A3A58090 DUP3 SGT PUSH16 0xE545D075BCF9636F184D64736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "244:415:32:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"divRoundingUp(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH #[$]",
									"source": 32,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH [$]",
									"source": 32,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 32,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "CODECOPY",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP1",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "MLOAD",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "BYTE",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 32,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "EQ",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH [tag]",
									"source": 32,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "JUMPI",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "INVALID",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "tag",
									"source": 32,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "JUMPDEST",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "ADDRESS",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 32,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "MSTORE",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "PUSH",
									"source": 32,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP2",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "MSTORE8",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP3",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "DUP2",
									"source": 32
								},
								{
									"begin": 244,
									"end": 659,
									"name": "RETURN",
									"source": 32
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220da705bbeff872296976db7456d6205a3a5809082136fe545d075bcf9636f184d64736f6c63430007060033",
									".code": [
										{
											"begin": 244,
											"end": 659,
											"name": "PUSHDEPLOYADDRESS",
											"source": 32
										},
										{
											"begin": 244,
											"end": 659,
											"name": "ADDRESS",
											"source": 32
										},
										{
											"begin": 244,
											"end": 659,
											"name": "EQ",
											"source": 32
										},
										{
											"begin": 244,
											"end": 659,
											"name": "PUSH",
											"source": 32,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 659,
											"name": "PUSH",
											"source": 32,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 659,
											"name": "MSTORE",
											"source": 32
										},
										{
											"begin": 244,
											"end": 659,
											"name": "PUSH",
											"source": 32,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 659,
											"name": "DUP1",
											"source": 32
										},
										{
											"begin": 244,
											"end": 659,
											"name": "REVERT",
											"source": 32
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math functions that do not check inputs or outputs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods that perform common math functions but do not do any overflow or underflow checks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/libraries/UnsafeMath.sol\":\"UnsafeMath\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x5f36d7d16348d8c37fe64fda932018d6e5e8acecd054f0f97d32db62d20c6c88\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bd4e817ea3d2c26bb2be7e58db3eaa403119562c18d4c09cc92fb31aa231496\",\"dweb:/ipfs/QmbpjgL8Hf1mhmUyf9hpuPk4noGAggCdTqaRBFKqNF3AQw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods that perform common math functions but do not do any overflow or underflow checks",
						"version": 1
					}
				}
			},
			"contracts/libraries/VelodromeTimeLibrary.sol": {
				"VelodromeTimeLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/VelodromeTimeLibrary.sol\":57:952  library VelodromeTimeLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/VelodromeTimeLibrary.sol\":57:952  library VelodromeTimeLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069c1b3f7a4ca519c98b1bf910f59e19cd8bd1acb91216af9a261603865d4c5ff64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122069c1b3f7a4ca519c98b1bf910f59e19cd8bd1acb91216af9a261603865d4c5ff64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xC1B3F7A4CA519C98B1BF SWAP2 0xF MSIZE 0xE1 SWAP13 0xD8 0xBD BYTE 0xCB SWAP2 0x21 PUSH11 0xF9A261603865D4C5FF6473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "57:895:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122069c1b3f7a4ca519c98b1bf910f59e19cd8bd1acb91216af9a261603865d4c5ff64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xC1B3F7A4CA519C98B1BF SWAP2 0xF MSIZE 0xE1 SWAP13 0xD8 0xBD BYTE 0xCB SWAP2 0x21 PUSH11 0xF9A261603865D4C5FF6473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "57:895:33:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"epochNext(uint256)": "infinite",
								"epochStart(uint256)": "infinite",
								"epochVoteEnd(uint256)": "infinite",
								"epochVoteStart(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 952,
									"name": "PUSH #[$]",
									"source": 33,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 952,
									"name": "PUSH [$]",
									"source": 33,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 952,
									"name": "PUSH",
									"source": 33,
									"value": "B"
								},
								{
									"begin": 57,
									"end": 952,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "CODECOPY",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "DUP1",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "MLOAD",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 952,
									"name": "BYTE",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "PUSH",
									"source": 33,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 952,
									"name": "EQ",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 952,
									"name": "JUMPI",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "INVALID",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "tag",
									"source": 33,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 952,
									"name": "JUMPDEST",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "ADDRESS",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "PUSH",
									"source": 33,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 952,
									"name": "MSTORE",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "PUSH",
									"source": 33,
									"value": "73"
								},
								{
									"begin": 57,
									"end": 952,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "MSTORE8",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "DUP3",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "DUP2",
									"source": 33
								},
								{
									"begin": 57,
									"end": 952,
									"name": "RETURN",
									"source": 33
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069c1b3f7a4ca519c98b1bf910f59e19cd8bd1acb91216af9a261603865d4c5ff64736f6c63430007060033",
									".code": [
										{
											"begin": 57,
											"end": 952,
											"name": "PUSHDEPLOYADDRESS",
											"source": 33
										},
										{
											"begin": 57,
											"end": 952,
											"name": "ADDRESS",
											"source": 33
										},
										{
											"begin": 57,
											"end": 952,
											"name": "EQ",
											"source": 33
										},
										{
											"begin": 57,
											"end": 952,
											"name": "PUSH",
											"source": 33,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 952,
											"name": "PUSH",
											"source": 33,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 952,
											"name": "MSTORE",
											"source": 33
										},
										{
											"begin": 57,
											"end": 952,
											"name": "PUSH",
											"source": 33,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 952,
											"name": "DUP1",
											"source": 33
										},
										{
											"begin": 57,
											"end": 952,
											"name": "REVERT",
											"source": 33
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/VelodromeTimeLibrary.sol\":\"VelodromeTimeLibrary\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/VelodromeTimeLibrary.sol\":{\"keccak256\":\"0x53d5f0b1b864a7dc552ef0291526938a36b1936517d17f62515bb6ba51c1260d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbc80fd3b18f04224a2a813d6c20a305c7e0479d6414a78d482b45635bc97dba\",\"dweb:/ipfs/QmQFbXCkjzeFgY5M8DyeKZjxeuN8xGdmUmjNH7FNMkLi8T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							26
						],
						"IERC721Receiver": [
							44
						]
					},
					"id": 27,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 27,
							"sourceUnit": 45,
							"src": "66:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC721Receiver",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 44,
										"src": "373:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Receiver_$44",
											"typeString": "contract IERC721Receiver"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "373:15:0"
								}
							],
							"contractDependencies": [
								44
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "101:246:0",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers. \n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26,
								44
							],
							"name": "ERC721Holder",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										43
									],
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "646:54:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 20,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "663:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$26",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "663:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "663:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 19,
												"id": 23,
												"nodeType": "Return",
												"src": "656:37:0"
											}
										]
									},
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "396:137:0",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 16,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "620:8:0"
									},
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "564:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "573:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "582:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "591:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "591:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:41:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "638:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 17,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "638:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:8:0"
									},
									"scope": 26,
									"src": "538:162:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 27,
							"src": "348:354:0"
						}
					],
					"src": "33:670:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							44
						]
					},
					"id": 45,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 28,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".00"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 29,
								"nodeType": "StructuredDocumentation",
								"src": "142:154:1",
								"text": " @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 44,
							"linearizedBaseContracts": [
								44
							],
							"name": "IERC721Receiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "329:500:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "869:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "895:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "917:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "942:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 37,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "942:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:108:1"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "986:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "986:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:8:1"
									},
									"scope": 44,
									"src": "834:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 45,
							"src": "297:699:1"
						}
					],
					"src": "116:881:1"
				},
				"id": 1
			},
			"contracts/core/INonfungiblePositionManager.sol": {
				"ast": {
					"absolutePath": "contracts/core/INonfungiblePositionManager.sol",
					"exportedSymbols": {
						"INonfungiblePositionManager": [
							256
						]
					},
					"id": 257,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 46,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:2"
						},
						{
							"id": 47,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "72:19:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "97:172:2",
								"text": "@title Non-fungible token for positions\n @notice Wraps CL positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 256,
							"linearizedBaseContracts": [
								256
							],
							"name": "INonfungiblePositionManager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "315:463:2",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"id": 59,
									"name": "IncreaseLiquidity",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "808:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "833:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 52,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "852:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "869:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:78:2"
									},
									"src": "784:102:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "892:423:2",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"id": 70,
									"name": "DecreaseLiquidity",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1345:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1370:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 63,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1389:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1406:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:78:2"
									},
									"src": "1321:102:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1429:527:2",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"id": 81,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1976:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2001:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2020:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2037:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:78:2"
									},
									"src": "1962:92:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2060:122:2",
										"text": "@notice Emitted when a new Token Descriptor is set\n @param tokenDescriptor Address of the new Token Descriptor"
									},
									"id": 86,
									"name": "TokenDescriptorChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenDescriptor",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2217:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2216:33:2"
									},
									"src": "2188:62:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "2256:90:2",
										"text": "@notice Emitted when a new Owner is set\n @param owner Address of the new Owner"
									},
									"id": 91,
									"name": "TransferOwnership",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2376:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2376:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:23:2"
									},
									"src": "2352:47:2"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2407:1188:2",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return tickSpacing The tick spacing associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3620:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3620:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3619:17:2"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3701:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 96,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3701:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3728:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3728:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3759:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3788:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3788:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3817:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 104,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3817:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3849:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 106,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3849:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3879:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 108,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3879:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3909:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 110,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3941:32:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "3988:32:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3988:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "4035:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 116,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4035:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "4069:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 118,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3686:413:2"
									},
									"scope": 256,
									"src": "3601:499:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "4108:105:2",
										"text": "@notice Returns the address of the Token Descriptor, that handles generating token URIs for Positions"
									},
									"functionSelector": "5a9d7a68",
									"id": 127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenDescriptor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4243:2:2"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "4269:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4269:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4268:9:2"
									},
									"scope": 256,
									"src": "4219:59:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "4286:90:2",
										"text": "@notice Returns the address of the Owner, that is allowed to set a new TokenDescriptor"
									},
									"functionSelector": "8da5cb5b",
									"id": 133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4396:2:2"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4422:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4422:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:9:2"
									},
									"scope": 256,
									"src": "4382:49:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 158,
									"members": [
										{
											"constant": false,
											"id": 135,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4468:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 134,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4468:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 137,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4493:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 136,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4493:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 139,
											"mutability": "mutable",
											"name": "tickSpacing",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4518:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 138,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4518:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 141,
											"mutability": "mutable",
											"name": "tickLower",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4546:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 140,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4546:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 143,
											"mutability": "mutable",
											"name": "tickUpper",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4572:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 142,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "4572:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 145,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4598:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 144,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4598:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 147,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4631:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4631:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 149,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4664:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4664:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 151,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4693:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4693:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 153,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4722:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 152,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4722:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 155,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4750:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4750:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 157,
											"mutability": "mutable",
											"name": "sqrtPriceX96",
											"nodeType": "VariableDeclaration",
											"scope": 158,
											"src": "4777:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 156,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "4777:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nodeType": "StructDefinition",
									"scope": 256,
									"src": "4439:366:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "4813:593:2",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "b5007d1f",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5426:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$158_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 160,
													"name": "MintParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 158,
													"src": "5426:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$158_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5425:28:2"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5507:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5524:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 165,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5524:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5543:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5543:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5560:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5506:70:2"
									},
									"scope": 256,
									"src": "5412:165:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 185,
									"members": [
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "5627:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 173,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5627:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "5653:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5653:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "5686:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5686:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "5719:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5719:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 182,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "5748:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 181,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5748:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 184,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 185,
											"src": "5777:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 183,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5777:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nodeType": "StructDefinition",
									"scope": 256,
									"src": "5585:216:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "5809:830:2",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "6672:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$185_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 187,
													"name": "IncreaseLiquidityParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 185,
													"src": "6672:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$185_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6671:41:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "6766:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 190,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6766:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "6785:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6785:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "6802:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6765:53:2"
									},
									"scope": 256,
									"src": "6645:174:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 208,
									"members": [
										{
											"constant": false,
											"id": 199,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "6869:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 198,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6869:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "liquidity",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "6895:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 200,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "6895:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 203,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "6923:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 202,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6923:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 205,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "6952:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6952:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 207,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 208,
											"src": "6981:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 206,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6981:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nodeType": "StructDefinition",
									"scope": 256,
									"src": "6827:178:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "7013:1005:2",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed\n @dev The use of this function can cause a loss to users of the NonfungiblePositionManager\n @dev for tokens that have very high decimals.\n @dev The amount of tokens necessary for the loss is: 3.4028237e+38.\n @dev This is equivalent to 1e20 value with 18 decimals."
									},
									"functionSelector": "0c49ccbe",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "8051:39:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$208_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 210,
													"name": "DecreaseLiquidityParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 208,
													"src": "8051:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$208_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8050:41:2"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "8145:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8145:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "8162:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8162:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8144:34:2"
									},
									"scope": 256,
									"src": "8024:155:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 227,
									"members": [
										{
											"constant": false,
											"id": 220,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 227,
											"src": "8219:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 219,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8219:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 222,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 227,
											"src": "8245:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 221,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8245:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 224,
											"mutability": "mutable",
											"name": "amount0Max",
											"nodeType": "VariableDeclaration",
											"scope": 227,
											"src": "8273:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 223,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "8273:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 226,
											"mutability": "mutable",
											"name": "amount1Max",
											"nodeType": "VariableDeclaration",
											"scope": 227,
											"src": "8302:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 225,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "8302:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nodeType": "StructDefinition",
									"scope": 256,
									"src": "8187:141:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "8336:572:2",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @notice Used to update staked positions before deposit and withdraw\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8931:29:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$227_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 229,
													"name": "CollectParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 227,
													"src": "8931:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$227_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8930:31:2"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "8988:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8988:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "9005:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9005:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8987:34:2"
									},
									"scope": 256,
									"src": "8914:108:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "9030:215:2",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "9265:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9264:17:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9298:0:2"
									},
									"scope": 256,
									"src": "9251:48:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "9307:121:2",
										"text": "@notice Sets a new Token Descriptor\n @param _tokenDescriptor Address of the new Token Descriptor to be chosen"
									},
									"functionSelector": "b6dc7ea3",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenDescriptor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_tokenDescriptor",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "9462:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9461:26:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9496:0:2"
									},
									"scope": 256,
									"src": "9434:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "9505:97:2",
										"text": "@notice Sets a new Owner address\n @param _owner Address of the new Owner to be chosen"
									},
									"functionSelector": "13af4035",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "9626:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9626:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9625:16:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9650:0:2"
									},
									"scope": 256,
									"src": "9608:43:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 257,
							"src": "269:9385:2"
						}
					],
					"src": "46:9610:2"
				},
				"id": 2
			},
			"contracts/core/VeloStake.sol": {
				"ast": {
					"absolutePath": "contracts/core/VeloStake.sol",
					"exportedSymbols": {
						"BitMath": [
							2217
						],
						"ERC721Holder": [
							26
						],
						"FixedPoint128": [
							2224
						],
						"FixedPoint96": [
							2234
						],
						"FullMath": [
							2407
						],
						"ICLFactory": [
							1098
						],
						"ICLGauge": [
							605
						],
						"ICLMintCallback": [
							1360
						],
						"ICLPool": [
							1120
						],
						"ICLPoolActions": [
							1550
						],
						"ICLPoolConstants": [
							1602
						],
						"ICLPoolDerivedState": [
							1633
						],
						"ICLPoolEvents": [
							1750
						],
						"ICLPoolOwnerActions": [
							1762
						],
						"ICLPoolState": [
							1938
						],
						"ICLSwapCallback": [
							1374
						],
						"IERC20": [
							677
						],
						"IERC20Minimal": [
							1192
						],
						"IERC721": [
							398
						],
						"IFactoryRegistry": [
							1220
						],
						"INonfungiblePositionManager": [
							256
						],
						"IVoter": [
							1328
						],
						"LiquidityAmounts": [
							2747
						],
						"LiquidityMath": [
							2799
						],
						"LowGasSafeMath": [
							2929
						],
						"Oracle": [
							300
						],
						"Position": [
							3114
						],
						"SafeCast": [
							3184
						],
						"SqrtPriceMath": [
							3701
						],
						"Tick": [
							4320
						],
						"TickBitmap": [
							4576
						],
						"TickMath": [
							5111
						],
						"TransferHelper": [
							5162
						],
						"UnsafeMath": [
							5178
						],
						"V3BotStaking": [
							853
						],
						"VelodromeTimeLibrary": [
							5256
						]
					},
					"id": 854,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 258,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"id": 259,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "58:19:3"
						},
						{
							"absolutePath": "contracts/core/interfaces/ICLPool.sol",
							"file": "./interfaces/ICLPool.sol",
							"id": 260,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 1121,
							"src": "81:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
							"file": "./libraries/LowGasSafeMath.sol",
							"id": 261,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 2930,
							"src": "117:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SafeCast.sol",
							"file": "./libraries/SafeCast.sol",
							"id": 262,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 3185,
							"src": "159:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/Tick.sol",
							"file": "./libraries/Tick.sol",
							"id": 263,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 4321,
							"src": "195:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TickBitmap.sol",
							"file": "./libraries/TickBitmap.sol",
							"id": 264,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 4577,
							"src": "227:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/Position.sol",
							"file": "./libraries/Position.sol",
							"id": 265,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 3115,
							"src": "265:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FullMath.sol",
							"file": "./libraries/FullMath.sol",
							"id": 266,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 2408,
							"src": "303:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FixedPoint128.sol",
							"file": "./libraries/FixedPoint128.sol",
							"id": 267,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 2225,
							"src": "339:39:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TransferHelper.sol",
							"file": "./libraries/TransferHelper.sol",
							"id": 268,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 5163,
							"src": "380:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TickMath.sol",
							"file": "./libraries/TickMath.sol",
							"id": 269,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 5112,
							"src": "422:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
							"file": "./libraries/LiquidityMath.sol",
							"id": 270,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 2800,
							"src": "458:39:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LiquidityAmounts.sol",
							"file": "./libraries/LiquidityAmounts.sol",
							"id": 271,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 2748,
							"src": "499:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SqrtPriceMath.sol",
							"file": "./libraries/SqrtPriceMath.sol",
							"id": 272,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 3702,
							"src": "543:39:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/ICLFactory.sol",
							"file": "./interfaces/ICLFactory.sol",
							"id": 273,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 1099,
							"src": "586:37:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/IFactoryRegistry.sol",
							"file": "./interfaces/IFactoryRegistry.sol",
							"id": 274,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 1221,
							"src": "625:43:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/IERC20Minimal.sol",
							"file": "./interfaces/IERC20Minimal.sol",
							"id": 275,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 1193,
							"src": "670:40:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/callback/ICLMintCallback.sol",
							"file": "./interfaces/callback/ICLMintCallback.sol",
							"id": 276,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 1361,
							"src": "712:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/callback/ICLSwapCallback.sol",
							"file": "./interfaces/callback/ICLSwapCallback.sol",
							"id": 277,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 1375,
							"src": "765:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/VelodromeTimeLibrary.sol",
							"file": "contracts/libraries/VelodromeTimeLibrary.sol",
							"id": 278,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 5257,
							"src": "818:54:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/INonfungiblePositionManager.sol",
							"file": "./INonfungiblePositionManager.sol",
							"id": 279,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 257,
							"src": "874:43:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721Holder.sol",
							"id": 281,
							"nodeType": "ImportDirective",
							"scope": 854,
							"sourceUnit": 27,
							"src": "921:83:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 280,
										"name": "ERC721Holder",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "929:12:3",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 300,
							"linearizedBaseContracts": [
								300
							],
							"name": "Oracle",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f29d0040",
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "GetPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "pooladdress",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1050:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:21:3"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "price",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1094:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:15:3"
									},
									"scope": 300,
									"src": "1032:77:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "941e0eb8",
									"id": 299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsforLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1147:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "usdAmount",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1161:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:33:3"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1203:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1203:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1217:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1217:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:28:3"
									},
									"scope": 300,
									"src": "1115:116:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 854,
							"src": "1008:226:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 398,
							"linearizedBaseContracts": [
								398
							],
							"name": "IERC721",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 308,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1278:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1300:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1320:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:67:3"
									},
									"src": "1263:82:3"
								},
								{
									"anonymous": false,
									"id": 316,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "1366:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "1389:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "1415:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:74:3"
									},
									"src": "1351:89:3"
								},
								{
									"anonymous": false,
									"id": 324,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1467:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1490:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1516:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1516:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1466:64:3"
									},
									"src": "1446:85:3"
								},
								{
									"functionSelector": "70a08231",
									"id": 331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1556:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:15:3"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1594:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:17:3"
									},
									"scope": 398,
									"src": "1537:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6352211e",
									"id": 338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1634:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1634:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:17:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1674:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:15:3"
									},
									"scope": 398,
									"src": "1617:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b88d4fde",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1721:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1735:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1747:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1764:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1764:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:64:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:0:3"
									},
									"scope": 398,
									"src": "1695:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42842e0e",
									"id": 358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "1826:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "1840:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "1852:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1825:43:3"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1877:0:3"
									},
									"scope": 398,
									"src": "1800:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1906:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1920:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1932:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1905:43:3"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1957:0:3"
									},
									"scope": 398,
									"src": "1884:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1981:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1993:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1980:29:3"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2018:0:3"
									},
									"scope": 398,
									"src": "1964:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a22cb465",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2052:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2070:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2051:33:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2093:0:3"
									},
									"scope": 398,
									"src": "2025:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "081812fc",
									"id": 388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2121:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2120:17:3"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "2161:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2160:18:3"
									},
									"scope": 398,
									"src": "2100:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e985e9c5",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2211:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2226:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:33:3"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2266:6:3"
									},
									"scope": 398,
									"src": "2185:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 854,
							"src": "1238:1038:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 605,
							"linearizedBaseContracts": [
								605
							],
							"name": "ICLGauge",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 404,
									"name": "NotifyReward",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2325:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2347:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:38:3"
									},
									"src": "2306:57:3"
								},
								{
									"anonymous": false,
									"id": 412,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2383:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2405:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2405:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"indexed": true,
												"mutability": "mutable",
												"name": "liquidityToStake",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2430:32:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 409,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:81:3"
									},
									"src": "2369:95:3"
								},
								{
									"anonymous": false,
									"id": 420,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2485:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2485:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2507:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"indexed": true,
												"mutability": "mutable",
												"name": "liquidityToStake",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2532:32:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 417,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2532:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2484:81:3"
									},
									"src": "2470:96:3"
								},
								{
									"anonymous": false,
									"id": 428,
									"name": "ClaimFees",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2588:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2588:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimed0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2610:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimed1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2628:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:58:3"
									},
									"src": "2572:74:3"
								},
								{
									"anonymous": false,
									"id": 434,
									"name": "ClaimRewards",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "2671:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2671:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "2693:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2670:38:3"
									},
									"src": "2652:57:3"
								},
								{
									"functionSelector": "47ccca02",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nft",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:3"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "2753:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_INonfungiblePositionManager_$256",
													"typeString": "contract INonfungiblePositionManager"
												},
												"typeName": {
													"id": 436,
													"name": "INonfungiblePositionManager",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 256,
													"src": "2753:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INonfungiblePositionManager_$256",
														"typeString": "contract INonfungiblePositionManager"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:29:3"
									},
									"scope": 605,
									"src": "2715:67:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46c96aac",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "voter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2802:2:3"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2828:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVoter_$1328",
													"typeString": "contract IVoter"
												},
												"typeName": {
													"id": 441,
													"name": "IVoter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1328,
													"src": "2828:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVoter_$1328",
														"typeString": "contract IVoter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:8:3"
									},
									"scope": 605,
									"src": "2788:48:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "16f0115b",
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2855:2:3"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2881:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ICLPool_$1120",
													"typeString": "contract ICLPool"
												},
												"typeName": {
													"id": 446,
													"name": "ICLPool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1120,
													"src": "2881:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ICLPool_$1120",
														"typeString": "contract ICLPool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:9:3"
									},
									"scope": 605,
									"src": "2842:48:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0fe2f711",
									"id": 454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feesVotingReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:3"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2947:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2947:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2946:9:3"
									},
									"scope": 605,
									"src": "2896:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ebe2b12b",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "periodFinish",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2983:2:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3009:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3009:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3008:9:3"
									},
									"scope": 605,
									"src": "2962:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7b0a47ee",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardRate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3043:2:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 605,
									"src": "3024:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f301af42",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3101:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3101:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3100:17:3"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3141:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:9:3"
									},
									"scope": 605,
									"src": "3084:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4bcddb1f",
									"id": 478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastUpdateTime",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3180:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:17:3"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "3220:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:9:3"
									},
									"scope": 605,
									"src": "3156:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "94af5b63",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardRateByEpoch",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3262:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:9:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3294:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:9:3"
									},
									"scope": 605,
									"src": "3235:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "93f1c442",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fees0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3323:2:3"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3349:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3348:9:3"
									},
									"scope": 605,
									"src": "3309:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4c02a21c",
									"id": 495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fees1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3378:2:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3404:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3404:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3403:9:3"
									},
									"scope": 605,
									"src": "3364:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3434:2:3"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "3460:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3460:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3459:9:3"
									},
									"scope": 605,
									"src": "3419:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3490:2:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3516:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3515:9:3"
									},
									"scope": 605,
									"src": "3475:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d0c93a7c",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3551:2:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "3577:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 507,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3577:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3576:7:3"
									},
									"scope": 605,
									"src": "3531:53:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "16e64048",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "left",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3603:2:3"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "_left",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3629:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3628:15:3"
									},
									"scope": 605,
									"src": "3590:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f7c618c1",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3670:2:3"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3696:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:9:3"
									},
									"scope": 605,
									"src": "3650:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e2e1c6db",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3726:2:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3752:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3752:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:6:3"
									},
									"scope": 605,
									"src": "3711:47:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ac789c08",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardGrowthInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3792:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3791:17:3"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3832:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:9:3"
									},
									"scope": 605,
									"src": "3764:77:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3e491d47",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3863:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:34:3"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3920:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3920:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3919:9:3"
									},
									"scope": 605,
									"src": "3847:82:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c00007b0",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "3954:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:17:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3979:0:3"
									},
									"scope": 605,
									"src": "3935:45:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1c4b774b",
									"id": 551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "4005:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4005:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:17:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4030:0:3"
									},
									"scope": 605,
									"src": "3986:45:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3c6b16ab",
									"id": 556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4065:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:16:3"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:0:3"
									},
									"scope": 605,
									"src": "4037:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dcdc18dc",
									"id": 561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardWithoutClaim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4130:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:16:3"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4154:0:3"
									},
									"scope": 605,
									"src": "4096:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6b55f25",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4178:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:17:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4203:0:3"
									},
									"scope": 605,
									"src": "4161:43:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "4228:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4228:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:17:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4253:0:3"
									},
									"scope": 605,
									"src": "4210:44:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4b937763",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakedValues",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "depositor",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "4282:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4282:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4281:19:3"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "4324:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 575,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4324:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 576,
													"nodeType": "ArrayTypeName",
													"src": "4324:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4323:18:3"
									},
									"scope": 605,
									"src": "4260:82:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38463937",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakedByIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "depositor",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "4371:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4371:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "4390:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4390:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4370:34:3"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "4428:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4428:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4427:9:3"
									},
									"scope": 605,
									"src": "4348:89:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c69deec5",
									"id": 597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakedContains",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "depositor",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4467:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4486:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4466:36:3"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4526:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 594,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4526:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4525:6:3"
									},
									"scope": 605,
									"src": "4443:89:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ae775c32",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakedLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "depositor",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4560:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4560:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:19:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4602:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4602:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4601:9:3"
									},
									"scope": 605,
									"src": "4538:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 854,
							"src": "2280:2334:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 677,
							"linearizedBaseContracts": [
								677
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 613,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "4657:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "4679:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "4699:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4699:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4656:57:3"
									},
									"src": "4642:72:3"
								},
								{
									"anonymous": false,
									"id": 621,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4735:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4758:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4758:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4783:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4783:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:63:3"
									},
									"src": "4720:78:3"
								},
								{
									"functionSelector": "18160ddd",
									"id": 626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4824:2:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4850:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4850:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4849:9:3"
									},
									"scope": 677,
									"src": "4804:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4884:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4884:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4883:17:3"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4924:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4924:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4923:9:3"
									},
									"scope": 677,
									"src": "4865:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "4957:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4957:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "4969:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4956:27:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "5002:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5002:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5001:6:3"
									},
									"scope": 677,
									"src": "4939:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "5033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "5048:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5048:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5032:32:3"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "5088:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5088:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5087:9:3"
									},
									"scope": 677,
									"src": "5014:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "5120:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "5137:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5119:32:3"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "5170:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5169:6:3"
									},
									"scope": 677,
									"src": "5103:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5204:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5218:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5230:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5230:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5203:41:3"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5263:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 668,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5263:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5262:6:3"
									},
									"scope": 677,
									"src": "5182:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5292:2:3"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "5318:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 673,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5318:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5317:7:3"
									},
									"scope": 677,
									"src": "5275:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 854,
							"src": "4618:710:3"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 678,
										"name": "ERC721Holder",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 26,
										"src": "5359:12:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC721Holder_$26",
											"typeString": "contract ERC721Holder"
										}
									},
									"id": 679,
									"nodeType": "InheritanceSpecifier",
									"src": "5359:12:3"
								}
							],
							"contractDependencies": [
								26,
								44
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 853,
							"linearizedBaseContracts": [
								853,
								26,
								44
							],
							"name": "V3BotStaking",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "16f0115b",
									"id": 681,
									"mutability": "mutable",
									"name": "pool",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "5378:19:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 680,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5378:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 683,
									"mutability": "mutable",
									"name": "token0",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "5434:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 682,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5434:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 685,
									"mutability": "mutable",
									"name": "token1",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "5484:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 684,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5484:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "da802f80",
									"id": 687,
									"mutability": "mutable",
									"name": "farmNFT",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "5534:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 686,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5534:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17d70f7c",
									"id": 689,
									"mutability": "mutable",
									"name": "tokenId",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "5563:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 688,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5563:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 691,
									"mutability": "mutable",
									"name": "admin",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "5592:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 690,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5592:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0c93a7c",
									"id": 693,
									"mutability": "mutable",
									"name": "tickSpacing",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "5619:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 692,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "5619:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fd1c1518",
									"id": 695,
									"mutability": "mutable",
									"name": "spaceMultiplier",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "5650:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 694,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "5650:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7dc0d1d0",
									"id": 698,
									"mutability": "mutable",
									"name": "oracle",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "5685:66:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 696,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5685:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839343635654431356237304538413533343636333533304334664363393245323242384636303332",
										"id": 697,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5709:42:3",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x9465eD15b70E8A534663530C4fCc92E22B8F6032"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "V3BotStaking.Deposit",
									"id": 707,
									"members": [
										{
											"constant": false,
											"id": 700,
											"mutability": "mutable",
											"name": "owner",
											"nodeType": "VariableDeclaration",
											"scope": 707,
											"src": "5786:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 699,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5786:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 702,
											"mutability": "mutable",
											"name": "liquidity",
											"nodeType": "VariableDeclaration",
											"scope": 707,
											"src": "5810:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 701,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "5810:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 704,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 707,
											"src": "5838:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 703,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5838:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 706,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 707,
											"src": "5863:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 705,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5863:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nodeType": "StructDefinition",
									"scope": 853,
									"src": "5760:125:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "5893:37:3",
										"text": "@dev deposits[tokenId] => Deposit"
									},
									"functionSelector": "b02c43d0",
									"id": 712,
									"mutability": "mutable",
									"name": "deposits",
									"nodeType": "VariableDeclaration",
									"scope": 853,
									"src": "5936:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$707_storage_$",
										"typeString": "mapping(uint256 => struct V3BotStaking.Deposit)"
									},
									"typeName": {
										"id": 711,
										"keyType": {
											"id": 709,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5944:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5936:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Deposit_$707_storage_$",
											"typeString": "mapping(uint256 => struct V3BotStaking.Deposit)"
										},
										"valueType": {
											"id": 710,
											"name": "Deposit",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 707,
											"src": "5955:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Deposit_$707_storage_ptr",
												"typeString": "struct V3BotStaking.Deposit"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "6006:37:3",
										"statements": [
											{
												"expression": {
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 715,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "6017:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 716,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6025:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6025:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "6017:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "6017:18:3"
											}
										]
									},
									"id": 721,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6003:2:3"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6006:0:3"
									},
									"scope": 853,
									"src": "5992:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6097:100:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 727,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6116:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6116:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 729,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "6130:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6116:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e20646f2074686973",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6137:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fd24def08b0888543800c4127fd6d1aa58919ac12b49d8f20efd315c642cdfa",
																"typeString": "literal_string \"Only owner can do this\""
															},
															"value": "Only owner can do this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6fd24def08b0888543800c4127fd6d1aa58919ac12b49d8f20efd315c642cdfa",
																"typeString": "literal_string \"Only owner can do this\""
															}
														],
														"id": 726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6108:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6108:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "6108:54:3"
											},
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 734,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "6173:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 735,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "6181:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6173:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "6173:16:3"
											}
										]
									},
									"functionSelector": "e6f4d0aa",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_newAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6070:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6069:18:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6097:0:3"
									},
									"scope": 853,
									"src": "6051:146:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "6255:104:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 745,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6274:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6274:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 747,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "6288:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6274:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e20646f2074686973",
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6295:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fd24def08b0888543800c4127fd6d1aa58919ac12b49d8f20efd315c642cdfa",
																"typeString": "literal_string \"Only owner can do this\""
															},
															"value": "Only owner can do this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6fd24def08b0888543800c4127fd6d1aa58919ac12b49d8f20efd315c642cdfa",
																"typeString": "literal_string \"Only owner can do this\""
															}
														],
														"id": 744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6266:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6266:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "6266:54:3"
											},
											{
												"expression": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 752,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "6331:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 753,
														"name": "newTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "6341:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6331:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "6331:20:3"
											}
										]
									},
									"functionSelector": "6020159d",
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_newtokenID",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "newTokenId",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "6226:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6226:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6225:20:3"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6255:0:3"
									},
									"scope": 853,
									"src": "6205:154:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "6444:413:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 764,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6520:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6520:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 768,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6540:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_V3BotStaking_$853",
																		"typeString": "contract V3BotStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_V3BotStaking_$853",
																		"typeString": "contract V3BotStaking"
																	}
																],
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6532:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 766,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6532:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6532:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "6547:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307834313662343333393036623142373246413735386531363665323339633433643638644336463239",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6463:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	"value": "0x416b433906b1B72FA758e166e239c43d68dC6F29"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 760,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "6455:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$398_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6455:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$398",
																"typeString": "contract IERC721"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "6455:64:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6455:100:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "6455:100:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 777,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6626:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6626:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 779,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "6638:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307834313662343333393036623142373246413735386531363665323339633433643638644336463239",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6574:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	"value": "0x416b433906b1B72FA758e166e239c43d68dC6F29"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 773,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "6566:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$398_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6566:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$398",
																"typeString": "contract IERC721"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 374,
														"src": "6566:59:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6566:80:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "6566:80:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307843386337623561453631643937426537643032643630363632393035393438373036364443394346",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6717:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0xC8c7b5aE61d97Be7d02d606629059487066DC9CF"
														},
														{
															"id": 787,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "6761:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307834313662343333393036623142373246413735386531363665323339633433643638644336463239",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6665:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	"value": "0x416b433906b1B72FA758e166e239c43d68dC6F29"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 782,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "6657:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$398_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6657:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$398",
																"typeString": "contract IERC721"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 374,
														"src": "6657:59:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6657:112:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "6657:112:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 794,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "6841:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307843386337623561453631643937426537643032643630363632393035393438373036364443394346",
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6789:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	"value": "0xC8c7b5aE61d97Be7d02d606629059487066DC9CF"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 790,
																"name": "ICLGauge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "6780:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICLGauge_$605_$",
																	"typeString": "type(contract ICLGauge)"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:52:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICLGauge_$605",
																"typeString": "contract ICLGauge"
															}
														},
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 566,
														"src": "6780:60:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6780:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "6780:69:3"
											}
										]
									},
									"functionSelector": "3a4b66f1",
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6426:2:3"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6444:0:3"
									},
									"scope": 853,
									"src": "6412:445:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "6902:89:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "6975:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307843386337623561453631643937426537643032643630363632393035393438373036364443394346",
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6922:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	"value": "0xC8c7b5aE61d97Be7d02d606629059487066DC9CF"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 801,
																"name": "ICLGauge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "6913:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICLGauge_$605_$",
																	"typeString": "type(contract ICLGauge)"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6913:52:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICLGauge_$605",
																"typeString": "contract ICLGauge"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 571,
														"src": "6913:61:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6913:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "6913:70:3"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6884:2:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6902:0:3"
									},
									"scope": 853,
									"src": "6867:124:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "7037:119:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 818,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7121:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_V3BotStaking_$853",
																		"typeString": "contract V3BotStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_V3BotStaking_$853",
																		"typeString": "contract V3BotStaking"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7113:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 816,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7113:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7113:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 820,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7128:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7128:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 822,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "7140:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307834313662343333393036623142373246413735386531363665323339633433643638644336463239",
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7056:42:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	"value": "0x416b433906b1B72FA758e166e239c43d68dC6F29"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 812,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "7048:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$398_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7048:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$398",
																"typeString": "contract IERC721"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "7048:64:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7048:100:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "7048:100:3"
											}
										]
									},
									"functionSelector": "e58d539e",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendNFTBack",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7019:2:3"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7037:0:3"
									},
									"scope": 853,
									"src": "6999:157:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "7214:134:3",
										"statements": [
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "value",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "7225:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 831,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7225:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 839,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7280:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_V3BotStaking_$853",
																		"typeString": "contract V3BotStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_V3BotStaking_$853",
																		"typeString": "contract V3BotStaking"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7272:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7272:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7272:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 834,
																	"name": "Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "7255:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 833,
																"name": "IERC20Minimal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "7241:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$1192_$",
																	"typeString": "type(contract IERC20Minimal)"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7241:20:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Minimal_$1192",
																"typeString": "contract IERC20Minimal"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1131,
														"src": "7241:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7225:61:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "7327:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "7334:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 844,
																	"name": "Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "7311:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 843,
																"name": "IERC20Minimal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "7297:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$1192_$",
																	"typeString": "type(contract IERC20Minimal)"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7297:20:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Minimal_$1192",
																"typeString": "contract IERC20Minimal"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1141,
														"src": "7297:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7297:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "7297:43:3"
											}
										]
									},
									"functionSelector": "7210468a",
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "Token",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "7190:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7190:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7189:15:3"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7214:0:3"
									},
									"scope": 853,
									"src": "7164:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 854,
							"src": "5334:2031:3"
						}
					],
					"src": "33:7332:3"
				},
				"id": 3
			},
			"contracts/core/interfaces/ICLFactory.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/ICLFactory.sol",
					"exportedSymbols": {
						"ICLFactory": [
							1098
						],
						"IFactoryRegistry": [
							1220
						],
						"IVoter": [
							1328
						]
					},
					"id": 1099,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 855,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"absolutePath": "contracts/core/interfaces/IVoter.sol",
							"file": "contracts/core/interfaces/IVoter.sol",
							"id": 857,
							"nodeType": "ImportDirective",
							"scope": 1099,
							"sourceUnit": 1329,
							"src": "71:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 856,
										"name": "IVoter",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "79:6:4",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/IFactoryRegistry.sol",
							"file": "contracts/core/interfaces/IFactoryRegistry.sol",
							"id": 859,
							"nodeType": "ImportDirective",
							"scope": 1099,
							"sourceUnit": 1221,
							"src": "132:80:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 858,
										"name": "IFactoryRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "140:16:4",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 860,
								"nodeType": "StructuredDocumentation",
								"src": "214:139:4",
								"text": "@title The interface for the CL Factory\n @notice The CL Factory facilitates creation of CL pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 1098,
							"linearizedBaseContracts": [
								1098
							],
							"name": "ICLFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "380:185:4",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"id": 867,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "589:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "615:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:52:4"
									},
									"src": "570:71:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "647:240:4",
										"text": "@notice Emitted when the swapFeeManager of the factory is changed\n @param oldFeeManager The swapFeeManager before the swapFeeManager was changed\n @param newFeeManager The swapFeeManager after the swapFeeManager was changed"
									},
									"id": 874,
									"name": "SwapFeeManagerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldFeeManager",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "920:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "newFeeManager",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "951:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:62:4"
									},
									"src": "892:90:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "988:233:4",
										"text": "@notice Emitted when the swapFeeModule of the factory is changed\n @param oldFeeModule The swapFeeModule before the swapFeeModule was changed\n @param newFeeModule The swapFeeModule after the swapFeeModule was changed"
									},
									"id": 881,
									"name": "SwapFeeModuleChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldFeeModule",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1253:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "newFeeModule",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "1283:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:60:4"
									},
									"src": "1226:87:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "1319:260:4",
										"text": "@notice Emitted when the unstakedFeeManager of the factory is changed\n @param oldFeeManager The unstakedFeeManager before the unstakedFeeManager was changed\n @param newFeeManager The unstakedFeeManager after the unstakedFeeManager was changed"
									},
									"id": 888,
									"name": "UnstakedFeeManagerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldFeeManager",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1616:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "newFeeManager",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1647:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:62:4"
									},
									"src": "1584:94:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "1684:253:4",
										"text": "@notice Emitted when the unstakedFeeModule of the factory is changed\n @param oldFeeModule The unstakedFeeModule before the unstakedFeeModule was changed\n @param newFeeModule The unstakedFeeModule after the unstakedFeeModule was changed"
									},
									"id": 895,
									"name": "UnstakedFeeModuleChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldFeeModule",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "1973:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"indexed": true,
												"mutability": "mutable",
												"name": "newFeeModule",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2003:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1972:60:4"
									},
									"src": "1942:91:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "2039:261:4",
										"text": "@notice Emitted when the defaultUnstakedFee of the factory is changed\n @param oldUnstakedFee The defaultUnstakedFee before the defaultUnstakedFee was changed\n @param newUnstakedFee The defaultUnstakedFee after the unstakedFeeModule was changed"
									},
									"id": 902,
									"name": "DefaultUnstakedFeeChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldUnstakedFee",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2337:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 897,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2337:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": true,
												"mutability": "mutable",
												"name": "newUnstakedFee",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2368:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 899,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2368:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2336:62:4"
									},
									"src": "2305:94:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2405:320:4",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"id": 913,
									"name": "PoolCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2748:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2772:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2796:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 908,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2796:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2823:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:89:4"
									},
									"src": "2730:107:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "2843:258:4",
										"text": "@notice Emitted when a new tick spacing is enabled for pool creation via the factory\n @param tickSpacing The minimum number of ticks between initialized ticks for pools\n @param fee The default fee for a pool created with a given tickSpacing"
									},
									"id": 920,
									"name": "TickSpacingEnabled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "3131:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 915,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3131:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "3158:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 917,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:47:4"
									},
									"src": "3106:72:4"
								},
								{
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "3184:103:4",
										"text": "@notice The voter contract, used to create gauges\n @return The address of the voter contract"
									},
									"functionSelector": "46c96aac",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "voter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3306:2:4"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "3332:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVoter_$1328",
													"typeString": "contract IVoter"
												},
												"typeName": {
													"id": 923,
													"name": "IVoter",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1328,
													"src": "3332:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVoter_$1328",
														"typeString": "contract IVoter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3331:8:4"
									},
									"scope": 1098,
									"src": "3292:48:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "3346:155:4",
										"text": "@notice The address of the pool implementation contract used to deploy proxies / clones\n @return The address of the pool implementation contract"
									},
									"functionSelector": "cefa7799",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "poolImplementation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3533:2:4"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "3559:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3558:9:4"
									},
									"scope": 1098,
									"src": "3506:62:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "3574:123:4",
										"text": "@notice Factory registry for valid pool / gauge / rewards factories\n @return The address of the factory registry"
									},
									"functionSelector": "3bf0c9fb",
									"id": 938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryRegistry",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3726:2:4"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "3752:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFactoryRegistry_$1220",
													"typeString": "contract IFactoryRegistry"
												},
												"typeName": {
													"id": 935,
													"name": "IFactoryRegistry",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1220,
													"src": "3752:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFactoryRegistry_$1220",
														"typeString": "contract IFactoryRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:18:4"
									},
									"scope": 1098,
									"src": "3702:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "3776:163:4",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3958:2:4"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "3984:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3984:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3983:9:4"
									},
									"scope": 1098,
									"src": "3944:49:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "3999:201:4",
										"text": "@notice Returns the current swapFeeManager of the factory\n @dev Can be changed by the current swap fee manager via setSwapFeeManager\n @return The address of the factory swapFeeManager"
									},
									"functionSelector": "d574afa9",
									"id": 950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapFeeManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:2:4"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "4254:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4253:9:4"
									},
									"scope": 1098,
									"src": "4205:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "4269:198:4",
										"text": "@notice Returns the current swapFeeModule of the factory\n @dev Can be changed by the current swap fee manager via setSwapFeeModule\n @return The address of the factory swapFeeModule"
									},
									"functionSelector": "23c43a51",
									"id": 956,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapFeeModule",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4494:2:4"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "4520:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4520:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4519:9:4"
									},
									"scope": 1098,
									"src": "4472:57:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "4535:217:4",
										"text": "@notice Returns the current unstakedFeeManager of the factory\n @dev Can be changed by the current unstaked fee manager via setUnstakedFeeManager\n @return The address of the factory unstakedFeeManager"
									},
									"functionSelector": "82e189e0",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstakedFeeManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4784:2:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "4810:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4810:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4809:9:4"
									},
									"scope": 1098,
									"src": "4757:62:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "4825:214:4",
										"text": "@notice Returns the current unstakedFeeModule of the factory\n @dev Can be changed by the current unstaked fee manager via setUnstakedFeeModule\n @return The address of the factory unstakedFeeModule"
									},
									"functionSelector": "7693bc11",
									"id": 968,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstakedFeeModule",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5070:2:4"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5096:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5096:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5095:9:4"
									},
									"scope": 1098,
									"src": "5044:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "5111:211:4",
										"text": "@notice Returns the current defaultUnstakedFee of the factory\n @dev Can be changed by the current unstaked fee manager via setDefaultUnstakedFee\n @return The default Unstaked Fee of the factory"
									},
									"functionSelector": "e2824832",
									"id": 974,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultUnstakedFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5354:2:4"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "5380:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 971,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5380:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5379:8:4"
									},
									"scope": 1098,
									"src": "5327:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "5394:377:4",
										"text": "@notice Returns a default fee for a tick spacing.\n @dev Use getFee for the most up to date fee for a given pool.\n A tick spacing can never be removed, so this value should be hard coded or cached in the calling context\n @param tickSpacing The enabled tick spacing. Returns 0 if not enabled\n @return fee The default fee for the given tick spacing"
									},
									"functionSelector": "380dc1c2",
									"id": 982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacingToFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "5802:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 976,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:19:4"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "5844:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 979,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5844:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5843:12:4"
									},
									"scope": 1098,
									"src": "5776:80:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "5862:227:4",
										"text": "@notice Returns a list of enabled tick spacings. Used to iterate through pools created by the factory\n @dev Tick spacings cannot be removed. Tick spacings are not ordered\n @return List of enabled tick spacings"
									},
									"functionSelector": "9cbbbe86",
									"id": 989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacings",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6115:2:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "6141:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int24_$dyn_memory_ptr",
													"typeString": "int24[]"
												},
												"typeName": {
													"baseType": {
														"id": 985,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "6141:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 986,
													"nodeType": "ArrayTypeName",
													"src": "6141:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int24_$dyn_storage_ptr",
														"typeString": "int24[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6140:16:4"
									},
									"scope": 1098,
									"src": "6094:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "6163:435:4",
										"text": "@notice Returns the pool address for a given pair of tokens and a tick spacing, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param tickSpacing The tick spacing of the pool\n @return pool The pool address"
									},
									"functionSelector": "28af8d0b",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "6620:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6620:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "6636:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "6652:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 995,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "6652:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6619:51:4"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "6694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6694:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6693:14:4"
									},
									"scope": 1098,
									"src": "6603:105:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "6714:167:4",
										"text": "@notice Return address of pool created by this factory given its `index`\n @param index Index of the pool\n @return The pool address in the given index"
									},
									"functionSelector": "41d1de97",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "6904:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:15:4"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "6942:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6942:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6941:9:4"
									},
									"scope": 1098,
									"src": "6886:65:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "6957:123:4",
										"text": "@notice Returns the number of pools created from this factory\n @return Number of pools created from this factory"
									},
									"functionSelector": "efde4e64",
									"id": 1015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPoolsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7108:2:4"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "7134:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7134:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7133:9:4"
									},
									"scope": 1098,
									"src": "7085:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "7149:207:4",
										"text": "@notice Used in VotingEscrow to determine if a contract is a valid pool of the factory\n @param pool The address of the pool to check\n @return Whether the pool is a valid pool of the factory"
									},
									"functionSelector": "e5e31b13",
									"id": 1023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "7377:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:14:4"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "7414:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7414:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7413:6:4"
									},
									"scope": 1098,
									"src": "7361:59:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "7426:269:4",
										"text": "@notice Get swap & flash fee for a given pool. Accounts for default and dynamic fees\n @dev Swap & flash fee is denominated in pips. i.e. 1e-6\n @param pool The pool to get the swap & flash fee for\n @return The swap & flash fee for the given pool"
									},
									"functionSelector": "35458dcc",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSwapFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "7720:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7720:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7719:14:4"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "7757:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1028,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "7757:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7756:8:4"
									},
									"scope": 1098,
									"src": "7700:65:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "7771:253:4",
										"text": "@notice Get unstaked fee for a given pool. Accounts for default and dynamic fees\n @dev Unstaked fee is denominated in pips. i.e. 1e-6\n @param pool The pool to get the unstaked fee for\n @return The unstaked fee for the given pool"
									},
									"functionSelector": "48cf7a43",
									"id": 1039,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUnstakedFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "8053:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8052:14:4"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "8090:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1036,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "8090:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8089:8:4"
									},
									"scope": 1098,
									"src": "8029:69:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "8104:608:4",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param tickSpacing The desired tick spacing for the pool\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. The call will\n revert if the pool already exists, the tick spacing is invalid, or the token arguments are invalid\n @return pool The address of the newly created pool"
									},
									"functionSelector": "232aa5ac",
									"id": 1053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "8737:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8737:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "8753:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8753:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "8769:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1045,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "8769:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "8788:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1047,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8788:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:73:4"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "8844:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8844:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8843:14:4"
									},
									"scope": 1098,
									"src": "8717:141:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "8864:144:4",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 1059,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "9031:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9031:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9030:16:4"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9055:0:4"
									},
									"scope": 1098,
									"src": "9013:43:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "9062:182:4",
										"text": "@notice Updates the swapFeeManager of the factory\n @dev Must be called by the current swap fee manager\n @param _swapFeeManager The new swapFeeManager of the factory"
									},
									"functionSelector": "ffb4d9d1",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSwapFeeManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "_swapFeeManager",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "9276:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9276:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9275:25:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9309:0:4"
									},
									"scope": 1098,
									"src": "9249:61:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "9316:179:4",
										"text": "@notice Updates the swapFeeModule of the factory\n @dev Must be called by the current swap fee manager\n @param _swapFeeModule The new swapFeeModule of the factory"
									},
									"functionSelector": "61b9c3ec",
									"id": 1071,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSwapFeeModule",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "_swapFeeModule",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "9526:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9526:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9525:24:4"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9558:0:4"
									},
									"scope": 1098,
									"src": "9500:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "9565:198:4",
										"text": "@notice Updates the unstakedFeeManager of the factory\n @dev Must be called by the current unstaked fee manager\n @param _unstakedFeeManager The new unstakedFeeManager of the factory"
									},
									"functionSelector": "93ce8627",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUnstakedFeeManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "_unstakedFeeManager",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "9799:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9799:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9798:29:4"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9836:0:4"
									},
									"scope": 1098,
									"src": "9768:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "9843:195:4",
										"text": "@notice Updates the unstakedFeeModule of the factory\n @dev Must be called by the current unstaked fee manager\n @param _unstakedFeeModule The new unstakedFeeModule of the factory"
									},
									"functionSelector": "1b31d878",
									"id": 1083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setUnstakedFeeModule",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "_unstakedFeeModule",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "10073:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10073:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10072:28:4"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10109:0:4"
									},
									"scope": 1098,
									"src": "10043:67:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "10116:198:4",
										"text": "@notice Updates the defaultUnstakedFee of the factory\n @dev Must be called by the current unstaked fee manager\n @param _defaultUnstakedFee The new defaultUnstakedFee of the factory"
									},
									"functionSelector": "a2f97f42",
									"id": 1089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDefaultUnstakedFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "_defaultUnstakedFee",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "10350:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1085,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "10350:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10349:28:4"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10386:0:4"
									},
									"scope": 1098,
									"src": "10319:68:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "10393:254:4",
										"text": "@notice Enables a certain tickSpacing\n @dev Tick spacings may never be removed once enabled\n @param tickSpacing The spacing between ticks to be enforced in the pool\n @param fee The default fee associated with a given tick spacing"
									},
									"functionSelector": "eee0fdb4",
									"id": 1097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableTickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "10679:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1091,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10679:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "10698:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1093,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "10698:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10678:31:4"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10718:0:4"
									},
									"scope": 1098,
									"src": "10652:67:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1099,
							"src": "353:10368:4"
						}
					],
					"src": "45:10677:4"
				},
				"id": 4
			},
			"contracts/core/interfaces/ICLPool.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/ICLPool.sol",
					"exportedSymbols": {
						"ICLPool": [
							1120
						],
						"ICLPoolActions": [
							1550
						],
						"ICLPoolConstants": [
							1602
						],
						"ICLPoolDerivedState": [
							1633
						],
						"ICLPoolEvents": [
							1750
						],
						"ICLPoolOwnerActions": [
							1762
						],
						"ICLPoolState": [
							1938
						]
					},
					"id": 1121,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1100,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolConstants.sol",
							"file": "./pool/ICLPoolConstants.sol",
							"id": 1101,
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1603,
							"src": "71:37:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolState.sol",
							"file": "./pool/ICLPoolState.sol",
							"id": 1102,
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1939,
							"src": "109:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolDerivedState.sol",
							"file": "./pool/ICLPoolDerivedState.sol",
							"id": 1103,
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1634,
							"src": "143:40:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolActions.sol",
							"file": "./pool/ICLPoolActions.sol",
							"id": 1104,
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1551,
							"src": "184:35:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolOwnerActions.sol",
							"file": "./pool/ICLPoolOwnerActions.sol",
							"id": 1105,
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1763,
							"src": "220:40:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/pool/ICLPoolEvents.sol",
							"file": "./pool/ICLPoolEvents.sol",
							"id": 1106,
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1751,
							"src": "261:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1108,
										"name": "ICLPoolConstants",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1602,
										"src": "574:16:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolConstants_$1602",
											"typeString": "contract ICLPoolConstants"
										}
									},
									"id": 1109,
									"nodeType": "InheritanceSpecifier",
									"src": "574:16:5"
								},
								{
									"baseName": {
										"id": 1110,
										"name": "ICLPoolState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1938,
										"src": "596:12:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolState_$1938",
											"typeString": "contract ICLPoolState"
										}
									},
									"id": 1111,
									"nodeType": "InheritanceSpecifier",
									"src": "596:12:5"
								},
								{
									"baseName": {
										"id": 1112,
										"name": "ICLPoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1633,
										"src": "614:19:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolDerivedState_$1633",
											"typeString": "contract ICLPoolDerivedState"
										}
									},
									"id": 1113,
									"nodeType": "InheritanceSpecifier",
									"src": "614:19:5"
								},
								{
									"baseName": {
										"id": 1114,
										"name": "ICLPoolActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1550,
										"src": "639:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolActions_$1550",
											"typeString": "contract ICLPoolActions"
										}
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "639:14:5"
								},
								{
									"baseName": {
										"id": 1116,
										"name": "ICLPoolEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1750,
										"src": "659:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolEvents_$1750",
											"typeString": "contract ICLPoolEvents"
										}
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "659:13:5"
								},
								{
									"baseName": {
										"id": 1118,
										"name": "ICLPoolOwnerActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1762,
										"src": "678:19:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLPoolOwnerActions_$1762",
											"typeString": "contract ICLPoolOwnerActions"
										}
									},
									"id": 1119,
									"nodeType": "InheritanceSpecifier",
									"src": "678:19:5"
								}
							],
							"contractDependencies": [
								1550,
								1602,
								1633,
								1750,
								1762,
								1938
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1107,
								"nodeType": "StructuredDocumentation",
								"src": "297:252:5",
								"text": "@title The interface for a CL Pool\n @notice A CL pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 1120,
							"linearizedBaseContracts": [
								1120,
								1762,
								1750,
								1550,
								1633,
								1938,
								1602
							],
							"name": "ICLPool",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1121,
							"src": "549:151:5"
						}
					],
					"src": "45:656:5"
				},
				"id": 5
			},
			"contracts/core/interfaces/IERC20Minimal.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/IERC20Minimal.sol",
					"exportedSymbols": {
						"IERC20Minimal": [
							1192
						]
					},
					"id": 1193,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1122,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1123,
								"nodeType": "StructuredDocumentation",
								"src": "71:119:6",
								"text": "@title Minimal ERC20 interface for CL\n @notice Contains a subset of the full ERC20 interface that is used in CL"
							},
							"fullyImplemented": false,
							"id": 1192,
							"linearizedBaseContracts": [
								1192
							],
							"name": "IERC20Minimal",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "220:201:6",
										"text": "@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
									},
									"functionSelector": "70a08231",
									"id": 1131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "445:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:17:6"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "485:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:9:6"
									},
									"scope": 1192,
									"src": "426:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "500:333:6",
										"text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
									},
									"functionSelector": "a9059cbb",
									"id": 1141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "856:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "875:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:35:6"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "909:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "909:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:6:6"
									},
									"scope": 1192,
									"src": "838:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "921:250:6",
										"text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
									},
									"functionSelector": "dd62ed3e",
									"id": 1151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1195:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1210:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:32:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "1250:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1249:9:6"
									},
									"scope": 1192,
									"src": "1176:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "1265:343:6",
										"text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
									},
									"functionSelector": "095ea7b3",
									"id": 1161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1630:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1647:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:33:6"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1681:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1681:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:6:6"
									},
									"scope": 1192,
									"src": "1613:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "1693:371:6",
										"text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
									},
									"functionSelector": "23b872dd",
									"id": 1173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2091:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2107:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2126:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:51:6"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2160:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2160:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:6:6"
									},
									"scope": 1192,
									"src": "2069:97:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "2172:369:6",
										"text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
									},
									"id": 1182,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2561:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2583:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2603:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:57:6"
									},
									"src": "2546:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "2624:321:6",
										"text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
									},
									"id": 1191,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2965:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2988:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "3013:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:63:6"
									},
									"src": "2950:78:6"
								}
							],
							"scope": 1193,
							"src": "190:2840:6"
						}
					],
					"src": "45:2986:6"
				},
				"id": 6
			},
			"contracts/core/interfaces/IFactoryRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/IFactoryRegistry.sol",
					"exportedSymbols": {
						"IFactoryRegistry": [
							1220
						]
					},
					"id": 1221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1194,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1220,
							"linearizedBaseContracts": [
								1220
							],
							"name": "IFactoryRegistry",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9b140a85",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "poolFactory",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "107:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "votingRewardsFactory",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "128:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "128:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "gaugeFactory",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "158:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "106:73:7"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:0:7"
									},
									"scope": 1220,
									"src": "90:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d1ea0a1d",
									"id": 1210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolFactoryApproved",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "poolFactory",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "226:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "225:21:7"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "265:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "265:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:6:7"
									},
									"scope": 1220,
									"src": "195:76:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1217afdb",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoriesToPoolFactory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "poolFactory",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "309:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:21:7"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "votingRewardsFactory",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "364:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "364:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "gaugeFactory",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "394:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "363:52:7"
									},
									"scope": 1220,
									"src": "277:139:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1221,
							"src": "57:361:7"
						}
					],
					"src": "32:387:7"
				},
				"id": 7
			},
			"contracts/core/interfaces/IVoter.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/IVoter.sol",
					"exportedSymbols": {
						"IFactoryRegistry": [
							1220
						],
						"IVoter": [
							1328
						],
						"IVotingEscrow": [
							1346
						]
					},
					"id": 1329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1222,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"id": 1223,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "56:19:8"
						},
						{
							"absolutePath": "contracts/core/interfaces/IVotingEscrow.sol",
							"file": "contracts/core/interfaces/IVotingEscrow.sol",
							"id": 1225,
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1347,
							"src": "77:74:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1224,
										"name": "IVotingEscrow",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "85:13:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/interfaces/IFactoryRegistry.sol",
							"file": "contracts/core/interfaces/IFactoryRegistry.sol",
							"id": 1227,
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1221,
							"src": "152:80:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1226,
										"name": "IFactoryRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "160:16:8",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1328,
							"linearizedBaseContracts": [
								1328
							],
							"name": "IVoter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1f850716",
									"id": 1232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "268:2:8"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "294:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVotingEscrow_$1346",
													"typeString": "contract IVotingEscrow"
												},
												"typeName": {
													"id": 1229,
													"name": "IVotingEscrow",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1346,
													"src": "294:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVotingEscrow_$1346",
														"typeString": "contract IVotingEscrow"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:15:8"
									},
									"scope": 1328,
									"src": "257:52:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ac09bf7",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "_tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "329:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "_poolVote",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "347:28:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1235,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "347:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1236,
													"nodeType": "ArrayTypeName",
													"src": "347:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "_weights",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "377:27:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1238,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "377:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1239,
													"nodeType": "ArrayTypeName",
													"src": "377:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:77:8"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:8"
									},
									"scope": 1328,
									"src": "315:100:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b9a09fd5",
									"id": 1250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gauges",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "437:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:15:8"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "475:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:9:8"
									},
									"scope": 1328,
									"src": "421:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4f08165",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gaugeToFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "_gauge",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "511:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:16:8"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "550:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:9:8"
									},
									"scope": 1328,
									"src": "490:69:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "294a6aeb",
									"id": 1264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gaugeToBribes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "_gauge",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "588:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:16:8"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "627:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:9:8"
									},
									"scope": 1328,
									"src": "565:71:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "794cea3c",
									"id": 1273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createGauge",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "_poolFactory",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "663:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "_pool",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "685:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:37:8"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "718:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:9:8"
									},
									"scope": 1328,
									"src": "642:85:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "63453ae1",
									"id": 1278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "gauge",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "753:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:15:8"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:8"
									},
									"scope": 1328,
									"src": "733:44:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3bf0c9fb",
									"id": 1283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryRegistry",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:2:8"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "833:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFactoryRegistry_$1220",
													"typeString": "contract IFactoryRegistry"
												},
												"typeName": {
													"id": 1280,
													"name": "IFactoryRegistry",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1220,
													"src": "833:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFactoryRegistry_$1220",
														"typeString": "contract IFactoryRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:18:8"
									},
									"scope": 1328,
									"src": "783:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "857:116:8",
										"text": "@dev Utility to distribute to gauges of pools in array.\n @param _gauges Array of gauges to distribute to."
									},
									"functionSelector": "6138889b",
									"id": 1290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_gauges",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "998:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1285,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "998:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1286,
													"nodeType": "ArrayTypeName",
													"src": "998:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:26:8"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1032:0:8"
									},
									"scope": 1328,
									"src": "978:55:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1703e5f9",
									"id": 1297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAlive",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "_gauge",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1056:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:16:8"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1095:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1095:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1094:6:8"
									},
									"scope": 1328,
									"src": "1039:62:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "992a7933",
									"id": 1302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "killGauge",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "_gauge",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "1126:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1125:16:8"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1150:0:8"
									},
									"scope": 1328,
									"src": "1107:44:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7778960e",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyCouncil",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1182:2:8"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "1208:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:9:8"
									},
									"scope": 1328,
									"src": "1157:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "1223:106:8",
										"text": "@notice Claim emissions from gauges.\n @param _gauges Array of gauges to collect emissions from."
									},
									"functionSelector": "f9f031df",
									"id": 1314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "_gauges",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "1356:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1309,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1356:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1310,
													"nodeType": "ArrayTypeName",
													"src": "1356:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1355:26:8"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:0:8"
									},
									"scope": 1328,
									"src": "1334:57:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "1397:295:8",
										"text": "@notice Claim fees for a given NFT.\n @dev Utility to help batch fee claims.\n @param _fees    Array of FeesVotingReward contracts to collect from.\n @param _tokens  Array of tokens that are used as fees.\n @param _tokenId Id of veNFT that you wish to claim fees for."
									},
									"functionSelector": "666256aa",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "_fees",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1716:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1316,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1716:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1317,
													"nodeType": "ArrayTypeName",
													"src": "1716:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "_tokens",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1740:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr",
													"typeString": "address[][]"
												},
												"typeName": {
													"baseType": {
														"baseType": {
															"id": 1319,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1740:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1320,
														"nodeType": "ArrayTypeName",
														"src": "1740:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[]"
														}
													},
													"id": 1321,
													"nodeType": "ArrayTypeName",
													"src": "1740:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr",
														"typeString": "address[][]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "_tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1768:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1715:70:8"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:0:8"
									},
									"scope": 1328,
									"src": "1697:98:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1329,
							"src": "234:1563:8"
						}
					],
					"src": "32:1766:8"
				},
				"id": 8
			},
			"contracts/core/interfaces/IVotingEscrow.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/IVotingEscrow.sol",
					"exportedSymbols": {
						"IVotingEscrow": [
							1346
						]
					},
					"id": 1347,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1330,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1346,
							"linearizedBaseContracts": [
								1346
							],
							"name": "IVotingEscrow",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "85f2aef2",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "team",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "100:2:9"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "121:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "121:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "120:9:9"
									},
									"scope": 1346,
									"src": "87:43:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "136:259:9",
										"text": "@notice Deposit `_value` tokens for `msg.sender` and lock for `_lockDuration`\n @param _value Amount to deposit\n @param _lockDuration Number of seconds to lock tokens for (rounded down to nearest week)\n @return TokenId of created veNFT"
									},
									"functionSelector": "b52c05fe",
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createLock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "420:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "_lockDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "436:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:39:9"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "477:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:9:9"
									},
									"scope": 1346,
									"src": "400:86:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1347,
							"src": "57:431:9"
						}
					],
					"src": "32:457:9"
				},
				"id": 9
			},
			"contracts/core/interfaces/callback/ICLMintCallback.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/callback/ICLMintCallback.sol",
					"exportedSymbols": {
						"ICLMintCallback": [
							1360
						]
					},
					"id": 1361,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1348,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1349,
								"nodeType": "StructuredDocumentation",
								"src": "71:130:10",
								"text": "@title Callback for ICLPoolActions#mint\n @notice Any contract that calls ICLPoolActions#mint must implement this interface"
							},
							"fullyImplemented": false,
							"id": 1360,
							"linearizedBaseContracts": [
								1360
							],
							"name": "ICLMintCallback",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "233:557:10",
										"text": "@notice Called to `msg.sender` after minting liquidity to a position from ICLPool#mint.\n @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\n The caller of this method must be checked to be a CLPool deployed by the canonical CLFactory.\n @param amount0Owed The amount of token0 due to the pool for the minted liquidity\n @param amount1Owed The amount of token1 due to the pool for the minted liquidity\n @param data Any data passed through by the caller via the ICLPoolActions#mint call"
									},
									"functionSelector": "d3487997",
									"id": 1359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3MintCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "amount0Owed",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "826:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "amount1Owed",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "847:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "868:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "868:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "825:63:10"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "897:0:10"
									},
									"scope": 1360,
									"src": "795:103:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1361,
							"src": "201:699:10"
						}
					],
					"src": "45:856:10"
				},
				"id": 10
			},
			"contracts/core/interfaces/callback/ICLSwapCallback.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/callback/ICLSwapCallback.sol",
					"exportedSymbols": {
						"ICLSwapCallback": [
							1374
						]
					},
					"id": 1375,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1362,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1363,
								"nodeType": "StructuredDocumentation",
								"src": "71:130:11",
								"text": "@title Callback for ICLPoolActions#swap\n @notice Any contract that calls ICLPoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 1374,
							"linearizedBaseContracts": [
								1374
							],
							"name": "ICLSwapCallback",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "233:870:11",
										"text": "@notice Called to `msg.sender` after executing a swap via ICLPool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a CLPool deployed by the canonical CLFactory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the ICLPoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 1373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1139:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1365,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1139:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1160:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1367,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1160:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1181:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1181:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1138:63:11"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:11"
									},
									"scope": 1374,
									"src": "1108:103:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1375,
							"src": "201:1012:11"
						}
					],
					"src": "45:1169:11"
				},
				"id": 11
			},
			"contracts/core/interfaces/pool/ICLPoolActions.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolActions.sol",
					"exportedSymbols": {
						"ICLPoolActions": [
							1550
						]
					},
					"id": 1551,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1376,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1377,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:12",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 1550,
							"linearizedBaseContracts": [
								1550
							],
							"name": "ICLPoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "204:652:12",
										"text": "@notice Initialize function used in proxy deployment\n @dev Can be called once only\n Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @dev not locked because it initializes unlocked\n @param _factory The CL factory contract address\n @param _token0 The first token of the pool by address sort order\n @param _token1 The second token of the pool by address sort order\n @param _tickSpacing The pool tick spacing\n @param _factoryRegistry The address of the factory registry managing the pool factory\n @param _sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96"
									},
									"functionSelector": "2071d884",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "_factory",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "890:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "_token0",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "916:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "_token1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "941:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "_tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "966:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1385,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "966:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "_factoryRegistry",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "994:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "_sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1028:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1389,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:175:12"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:0:12"
									},
									"scope": 1550,
									"src": "861:204:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "1071:227:12",
										"text": "@notice Initialize gauge and nft manager\n @dev Callable only once, by the gauge factory\n @param _gauge The gauge corresponding to this pool\n @param _nft The position manager used for position management"
									},
									"functionSelector": "1f7c3568",
									"id": 1401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setGaugeAndPositionManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "_gauge",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1339:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "_nft",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "1355:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1338:30:12"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:0:12"
									},
									"scope": 1550,
									"src": "1303:75:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "1384:1022:12",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of ICLMintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 1419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2425:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2444:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1405,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2444:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2461:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1407,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2461:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2478:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1409,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2478:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2494:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2494:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:90:12"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2549:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2549:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "2566:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2548:34:12"
									},
									"scope": 1550,
									"src": "2411:172:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "2589:1053:12",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 1437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "3673:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3673:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "3700:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1423,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3700:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "3725:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1425,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3725:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "3750:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1427,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3750:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "3784:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1429,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3784:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3663:151:12"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "3833:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1432,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "3850:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1434,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3850:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:34:12"
									},
									"scope": 1550,
									"src": "3647:220:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "3873:1131:12",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @param owner Owner of the position in the pool (nft manager or gauge)\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "31338374",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "5035:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5035:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "5062:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1441,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5062:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "5087:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1443,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5087:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "5112:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1445,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5112:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "5146:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1447,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5146:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "5180:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5025:174:12"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "5218:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1452,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "5235:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1454,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5235:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5217:34:12"
									},
									"scope": 1550,
									"src": "5009:243:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "5258:631:12",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "5908:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1459,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5908:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "5925:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1461,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5925:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "5942:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1463,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5942:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5907:50:12"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "5992:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "6009:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6009:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:34:12"
									},
									"scope": 1550,
									"src": "5894:132:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "6032:717:12",
										"text": "@notice Burn liquidity from the supplied owner and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @param owner Owner of the position in the pool (nft manager or gauge)\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "6f89244c",
									"id": 1487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "6768:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1473,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "6785:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1475,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "6785:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "6802:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1477,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "6818:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6818:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:65:12"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "6867:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6867:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "6884:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6884:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6866:34:12"
									},
									"scope": 1550,
									"src": "6754:147:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "6907:478:12",
										"text": "@notice Convert existing liquidity into staked liquidity\n @notice Only callable by the gauge associated with this pool\n @param stakedLiquidityDelta The amount by which to increase or decrease the staked liquidity\n @param tickLower The lower tick of the position for which to stake liquidity\n @param tickUpper The upper tick of the position for which to stake liquidity\n @param positionUpdate If the nft and gauge position should be updated"
									},
									"functionSelector": "4ed6210f",
									"id": 1499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "stakedLiquidityDelta",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "7405:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1489,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "7405:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "7434:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1491,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "7434:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "7451:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1493,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "7451:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "positionUpdate",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "7468:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1495,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7468:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7404:84:12"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7497:0:12"
									},
									"scope": 1550,
									"src": "7390:108:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "7504:1008:12",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of ICLSwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 1517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "8540:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8540:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "8567:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8567:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "8592:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1505,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8592:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "8624:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1507,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8624:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "8659:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8659:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8530:154:12"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "8703:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1512,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8703:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "8719:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1514,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8719:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8702:32:12"
									},
									"scope": 1550,
									"src": "8517:218:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "8741:650:12",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of ICLFlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "9411:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9411:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "9430:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9430:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "9447:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9447:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "9464:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9464:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9410:74:12"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9493:0:12"
									},
									"scope": 1550,
									"src": "9396:98:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "9500:367:12",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 1535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "9916:33:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1531,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9916:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9915:35:12"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9959:0:12"
									},
									"scope": 1550,
									"src": "9872:88:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "9966:142:12",
										"text": "@notice Updates rewardGrowthGlobalX128 every time when any tick is crossed,\n or when any position is staked/unstaked from the gauge"
									},
									"functionSelector": "1b410960",
									"id": 1539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRewardsGrowthGlobal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10147:2:12"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10158:0:12"
									},
									"scope": 1550,
									"src": "10113:46:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "10165:293:12",
										"text": "@notice Syncs rewards with gauge\n @param rewardRate the rate rewards being distributed during the epoch\n @param rewardReserve the available rewards to be distributed during the epoch\n @param periodFinish the end of the current period of rewards, updated once per epoch"
									},
									"functionSelector": "60a73f9b",
									"id": 1549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "syncReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "rewardRate",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "10483:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10483:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "rewardReserve",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "10503:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "periodFinish",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "10526:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10526:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10482:65:12"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10556:0:12"
									},
									"scope": 1550,
									"src": "10463:94:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1551,
							"src": "173:10386:12"
						}
					],
					"src": "45:10515:12"
				},
				"id": 12
			},
			"contracts/core/interfaces/pool/ICLPoolConstants.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolConstants.sol",
					"exportedSymbols": {
						"ICLPoolConstants": [
							1602
						]
					},
					"id": 1603,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1552,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1553,
								"nodeType": "StructuredDocumentation",
								"src": "71:218:13",
								"text": "@title Pool state that never changes\n @notice These parameters are not defined as immutable (due to proxy pattern) but are effectively immutable.\n @notice i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1602,
							"linearizedBaseContracts": [
								1602
							],
							"name": "ICLPoolConstants",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "322:131:13",
										"text": "@notice The contract that deployed the pool, which must adhere to the ICLFactory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:13"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "500:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:9:13"
									},
									"scope": 1602,
									"src": "458:51:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "515:113:13",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 1565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:13"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "674:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:9:13"
									},
									"scope": 1602,
									"src": "633:50:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "689:114:13",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 1571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:2:13"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "849:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:9:13"
									},
									"scope": 1602,
									"src": "808:50:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "864:91:13",
										"text": "@notice The gauge corresponding to this pool\n @return The gauge contract address"
									},
									"functionSelector": "a6f19c84",
									"id": 1577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gauge",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "974:2:13"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "1000:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:9:13"
									},
									"scope": 1602,
									"src": "960:49:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "1015:76:13",
										"text": "@notice The nft manager\n @return The nft manager contract address"
									},
									"functionSelector": "47ccca02",
									"id": 1583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nft",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:13"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1134:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:13"
									},
									"scope": 1602,
									"src": "1096:47:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "1149:145:13",
										"text": "@notice The factory registry that manages pool <> gauge <> reward factory relationships\n @return The factory registry contract address"
									},
									"functionSelector": "3bf0c9fb",
									"id": 1589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryRegistry",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1323:2:13"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "1349:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1348:9:13"
									},
									"scope": 1602,
									"src": "1299:59:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "1364:358:13",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 1595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:13"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "1773:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1592,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1773:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:7:13"
									},
									"scope": 1602,
									"src": "1727:53:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "1786:363:13",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2182:2:13"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "2208:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1598,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:9:13"
									},
									"scope": 1602,
									"src": "2154:63:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1603,
							"src": "289:1930:13"
						}
					],
					"src": "45:2175:13"
				},
				"id": 13
			},
			"contracts/core/interfaces/pool/ICLPoolDerivedState.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolDerivedState.sol",
					"exportedSymbols": {
						"ICLPoolDerivedState": [
							1633
						]
					},
					"id": 1634,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1604,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1605,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:14",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 1633,
							"linearizedBaseContracts": [
								1633
							],
							"name": "ICLPoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "329:1045:14",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 1618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "1396:29:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1607,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1396:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1608,
													"nodeType": "ArrayTypeName",
													"src": "1396:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1395:31:14"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "1474:30:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 1611,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1474:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 1612,
													"nodeType": "ArrayTypeName",
													"src": "1474:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "1506:51:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 1614,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1506:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 1615,
													"nodeType": "ArrayTypeName",
													"src": "1506:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1473:85:14"
									},
									"scope": 1633,
									"src": "1379:180:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1619,
										"nodeType": "StructuredDocumentation",
										"src": "1565:771:14",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 1632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "2376:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1620,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2376:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "2393:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1622,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2393:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:34:14"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "2457:26:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1625,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2457:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "2485:37:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1627,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2485:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "2524:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1629,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2524:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:89:14"
									},
									"scope": 1633,
									"src": "2341:205:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1634,
							"src": "293:2255:14"
						}
					],
					"src": "45:2504:14"
				},
				"id": 14
			},
			"contracts/core/interfaces/pool/ICLPoolEvents.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolEvents.sol",
					"exportedSymbols": {
						"ICLPoolEvents": [
							1750
						]
					},
					"id": 1751,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1635,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1636,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:15",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 1750,
							"linearizedBaseContracts": [
								1750
							],
							"name": "ICLPoolEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "189:344:15",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"id": 1643,
									"name": "Initialize",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "555:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1638,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "577:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1640,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "577:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:34:15"
									},
									"src": "538:51:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "595:551:15",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"id": 1660,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1171:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1195:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1226:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1649,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1226:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1259:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1651,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1259:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1292:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1653,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1316:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "1341:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:201:15"
									},
									"src": "1151:212:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "1369:493:15",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"id": 1675,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1890:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1890:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1921:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1948:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1666,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1948:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1981:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1668,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1981:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "2014:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1670,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "2039:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1672,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:180:15"
									},
									"src": "1867:194:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "2067:523:15",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"id": 1690,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2615:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2646:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1679,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2646:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2679:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1681,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2679:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2712:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1683,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2736:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2761:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2605:177:15"
									},
									"src": "2595:188:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "2789:600:15",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"id": 1707,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3414:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3446:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3481:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1696,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3481:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3505:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1698,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3505:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3529:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1700,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3529:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3559:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1702,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3586:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1704,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3586:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3404:198:15"
									},
									"src": "3394:209:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "3609:562:15",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"id": 1722,
									"name": "Flash",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4197:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4229:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4229:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4264:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4264:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4289:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4289:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4314:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4314:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4337:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4337:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4187:169:15"
									},
									"src": "4176:181:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "4363:451:15",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"id": 1729,
									"name": "IncreaseObservationCardinalityNext",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "4869:36:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1724,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4869:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "4907:36:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1726,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4907:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:90:15"
									},
									"src": "4819:131:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "4956:370:15",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"id": 1740,
									"name": "SetFeeProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "5352:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1731,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5352:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "5375:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1733,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5375:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "5398:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1735,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5398:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "5421:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1737,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5421:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5351:92:15"
									},
									"src": "5331:113:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "5450:310:15",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the gauge\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"id": 1749,
									"name": "CollectFees",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "5783:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5783:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "5810:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1744,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5810:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "5827:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1746,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5782:61:15"
									},
									"src": "5765:79:15"
								}
							],
							"scope": 1751,
							"src": "159:5687:15"
						}
					],
					"src": "45:5802:15"
				},
				"id": 15
			},
			"contracts/core/interfaces/pool/ICLPoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolOwnerActions.sol",
					"exportedSymbols": {
						"ICLPoolOwnerActions": [
							1762
						]
					},
					"id": 1763,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1752,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1753,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:16",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1762,
							"linearizedBaseContracts": [
								1762
							],
							"name": "ICLPoolOwnerActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "223:169:16",
										"text": "@notice Collect the gauge fee accrued to the pool\n @return amount0 The gauge fee collected in token0\n @return amount1 The gauge fee collected in token1"
									},
									"functionSelector": "c8796572",
									"id": 1761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "417:2:16"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "438:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1756,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "455:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1758,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:34:16"
									},
									"scope": 1762,
									"src": "397:75:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1763,
							"src": "187:287:16"
						}
					],
					"src": "45:430:16"
				},
				"id": 16
			},
			"contracts/core/interfaces/pool/ICLPoolState.sol": {
				"ast": {
					"absolutePath": "contracts/core/interfaces/pool/ICLPoolState.sol",
					"exportedSymbols": {
						"ICLPoolState": [
							1938
						]
					},
					"id": 1939,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1764,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1765,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:17",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 1938,
							"linearizedBaseContracts": [
								1938
							],
							"name": "ICLPoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "269:835:17",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:17"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1186:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1768,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1220:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1770,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1220:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1244:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1772,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1244:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1281:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1774,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1281:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1324:33:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1776,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1324:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1371:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1371:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:222:17"
									},
									"scope": 1938,
									"src": "1109:286:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "1401:182:17",
										"text": "@notice The pool's swap & flash fee in pips, i.e. 1e-6\n @dev Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\n @return The swap & flash fee"
									},
									"functionSelector": "ddca3f43",
									"id": 1787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1600:2:17"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "1626:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1784,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1626:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:8:17"
									},
									"scope": 1938,
									"src": "1588:46:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "1640:174:17",
										"text": "@notice The pool's unstaked fee in pips, i.e. 1e-6\n @dev Can be modified in PoolFactory on a pool basis or upgraded to be dynamic.\n @return The unstaked fee"
									},
									"functionSelector": "b64cc67b",
									"id": 1793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unstakedFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1839:2:17"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "1865:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1790,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1865:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1864:8:17"
									},
									"scope": 1938,
									"src": "1819:54:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1794,
										"nodeType": "StructuredDocumentation",
										"src": "1879:168:17",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:2:17"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "2107:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:9:17"
									},
									"scope": 1938,
									"src": "2052:64:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "2122:168:17",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2324:2:17"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1805,
												"src": "2350:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:9:17"
									},
									"scope": 1938,
									"src": "2295:64:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "2365:176:17",
										"text": "@notice The reward growth as a Q128.128 rewards of emission collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "57806ada",
									"id": 1811,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardGrowthGlobalX128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2577:2:17"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2603:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:9:17"
									},
									"scope": 1938,
									"src": "2546:66:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "2618:141:17",
										"text": "@notice The amounts of token0 and token1 that are owed to the gauge\n @dev Gauge fees will never exceed uint128 max in either token"
									},
									"functionSelector": "293833ba",
									"id": 1819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gaugeFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:2:17"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "2808:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1814,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "2824:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1816,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2807:32:17"
									},
									"scope": 1938,
									"src": "2764:76:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "2846:51:17",
										"text": "@notice the emission rate of time-based farming"
									},
									"functionSelector": "7b0a47ee",
									"id": 1825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardRate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:17"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "2947:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2947:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2946:9:17"
									},
									"scope": 1938,
									"src": "2902:54:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "2962:106:17",
										"text": "@notice acts as a virtual reserve that holds information on how many rewards are yet to be distributed"
									},
									"functionSelector": "cab64bcd",
									"id": 1831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardReserve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3095:2:17"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "3121:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:9:17"
									},
									"scope": 1938,
									"src": "3073:57:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "3136:63:17",
										"text": "@notice timestamp of the end of the current epoch's rewards"
									},
									"functionSelector": "ebe2b12b",
									"id": 1837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "periodFinish",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3225:2:17"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "3251:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3250:9:17"
									},
									"scope": 1938,
									"src": "3204:56:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "3266:67:17",
										"text": "@notice last time the rewardReserve and rewardRate were updated"
									},
									"functionSelector": "d0b06f5d",
									"id": 1843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastUpdated",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3358:2:17"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "3384:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1840,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3384:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:8:17"
									},
									"scope": 1938,
									"src": "3338:54:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "3398:284:17",
										"text": "@notice tracks total rewards distributed when no staked liquidity in active tick for epoch ending at periodFinish\n @notice this amount is rolled over on the next call to notifyRewardAmount\n @dev rollover will always be smaller than the rewards distributed that epoch"
									},
									"functionSelector": "b056b49a",
									"id": 1849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rollover",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:2:17"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "3730:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3730:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3729:9:17"
									},
									"scope": 1938,
									"src": "3687:52:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "3745:200:17",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks\n @dev This value includes staked liquidity"
									},
									"functionSelector": "1a686502",
									"id": 1855,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3968:2:17"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "3994:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1852,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:9:17"
									},
									"scope": 1938,
									"src": "3950:53:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "4009:164:17",
										"text": "@notice The currently in range staked liquidity available to the pool\n @dev This value has no relationship to the total staked liquidity across all ticks"
									},
									"functionSelector": "3ab04b20",
									"id": 1861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakedLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4202:2:17"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "4228:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1858,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4228:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:9:17"
									},
									"scope": 1938,
									"src": "4178:59:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "4243:1463:17",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n stakedLiquidityNet how much staked liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n rewardGrowthOutsideX128 the reward growth on the other side of the tick from the current tick in emission token\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 1887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "5726:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1863,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5726:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5725:12:17"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "5798:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1866,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "5834:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1868,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "5834:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "stakedLiquidityNet",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "5867:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1870,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "5867:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "5906:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5906:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "5949:29:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5949:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "rewardGrowthOutsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "5992:31:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "6037:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1878,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6037:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "6078:38:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1880,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6078:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "6130:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1882,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6130:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "6165:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6165:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5784:407:17"
									},
									"scope": 1938,
									"src": "5711:481:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1888,
										"nodeType": "StructuredDocumentation",
										"src": "6198:99:17",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 1895,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "wordPosition",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "6322:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1889,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "6322:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6321:20:17"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "6365:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6365:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6364:9:17"
									},
									"scope": 1938,
									"src": "6302:72:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "6380:700:17",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 1911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "7104:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1897,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7104:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7103:13:17"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "_liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "7177:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1900,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "7209:32:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7209:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "7255:32:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7255:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "7301:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1906,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7301:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "7334:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1908,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7163:200:17"
									},
									"scope": 1938,
									"src": "7085:279:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "7370:749:17",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "8146:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8146:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8145:15:17"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "8221:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1916,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8221:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "8256:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1918,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "8256:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "8290:41:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1920,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8290:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "8345:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8345:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8207:164:17"
									},
									"scope": 1938,
									"src": "8124:248:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "8378:541:17",
										"text": "@notice Returns data about reward growth within a tick range.\n RewardGrowthGlobalX128 can be supplied as a parameter for claimable reward calculations.\n @dev Used in gauge reward/earned calculations\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @param _rewardGrowthGlobalX128 a calculated rewardGrowthGlobalX128 or 0 (in case of 0 it means we use the rewardGrowthGlobalX128 from state)\n @return rewardGrowthInsideX128 The reward growth in the range"
									},
									"functionSelector": "a16368c9",
									"id": 1937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardGrowthInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "8955:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1927,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "8972:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1929,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "8972:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "_rewardGrowthGlobalX128",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "8989:31:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8989:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8954:67:17"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "rewardGrowthInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "9069:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9069:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9068:32:17"
									},
									"scope": 1938,
									"src": "8924:177:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1939,
							"src": "240:8863:17"
						}
					],
					"src": "45:9059:17"
				},
				"id": 17
			},
			"contracts/core/libraries/BitMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/BitMath.sol",
					"exportedSymbols": {
						"BitMath": [
							2217
						]
					},
					"id": 2218,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1940,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1941,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:18",
								"text": "@title BitMath\n @dev This library provides functionality for computing bit properties of an unsigned integer"
							},
							"fullyImplemented": true,
							"id": 2217,
							"linearizedBaseContracts": [
								2217
							],
							"name": "BitMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2054,
										"nodeType": "Block",
										"src": "742:660:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1950,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "760:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "764:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "760:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1949,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "752:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "752:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "752:14:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1955,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "781:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:35:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "781:40:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1967,
												"nodeType": "IfStatement",
												"src": "777:102:18",
												"trueBody": {
													"id": 1966,
													"nodeType": "Block",
													"src": "823:56:18",
													"statements": [
														{
															"expression": {
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1958,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "837:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "837:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1961,
															"nodeType": "ExpressionStatement",
															"src": "837:9:18"
														},
														{
															"expression": {
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1962,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "860:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "865:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "860:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1965,
															"nodeType": "ExpressionStatement",
															"src": "860:8:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1968,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "892:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "897:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "892:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1980,
												"nodeType": "IfStatement",
												"src": "888:84:18",
												"trueBody": {
													"id": 1979,
													"nodeType": "Block",
													"src": "918:54:18",
													"statements": [
														{
															"expression": {
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1971,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "932:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "938:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "932:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1974,
															"nodeType": "ExpressionStatement",
															"src": "932:8:18"
														},
														{
															"expression": {
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1975,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "954:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "959:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "954:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1978,
															"nodeType": "ExpressionStatement",
															"src": "954:7:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1981,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "985:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "990:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "985:16:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1993,
												"nodeType": "IfStatement",
												"src": "981:76:18",
												"trueBody": {
													"id": 1992,
													"nodeType": "Block",
													"src": "1003:54:18",
													"statements": [
														{
															"expression": {
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1984,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "1017:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1023:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1017:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1987,
															"nodeType": "ExpressionStatement",
															"src": "1017:8:18"
														},
														{
															"expression": {
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1988,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "1039:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1044:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1039:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1991,
															"nodeType": "ExpressionStatement",
															"src": "1039:7:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1994,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "1070:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1075:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "1070:12:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2006,
												"nodeType": "IfStatement",
												"src": "1066:72:18",
												"trueBody": {
													"id": 2005,
													"nodeType": "Block",
													"src": "1084:54:18",
													"statements": [
														{
															"expression": {
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1997,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "1098:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1104:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1098:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2000,
															"nodeType": "ExpressionStatement",
															"src": "1098:8:18"
														},
														{
															"expression": {
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2001,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "1120:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1125:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1120:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2004,
															"nodeType": "ExpressionStatement",
															"src": "1120:7:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2007,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "1151:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1156:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "1151:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2019,
												"nodeType": "IfStatement",
												"src": "1147:68:18",
												"trueBody": {
													"id": 2018,
													"nodeType": "Block",
													"src": "1163:52:18",
													"statements": [
														{
															"expression": {
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2010,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "1177:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1183:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1177:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2013,
															"nodeType": "ExpressionStatement",
															"src": "1177:7:18"
														},
														{
															"expression": {
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2014,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "1198:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1203:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1198:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2017,
															"nodeType": "ExpressionStatement",
															"src": "1198:6:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2020,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "1228:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "1228:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2032,
												"nodeType": "IfStatement",
												"src": "1224:67:18",
												"trueBody": {
													"id": 2031,
													"nodeType": "Block",
													"src": "1239:52:18",
													"statements": [
														{
															"expression": {
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2023,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "1253:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1259:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1253:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2026,
															"nodeType": "ExpressionStatement",
															"src": "1253:7:18"
														},
														{
															"expression": {
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2027,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "1274:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1279:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1274:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2030,
															"nodeType": "ExpressionStatement",
															"src": "1274:6:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2033,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "1304:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307834",
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1309:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "0x4"
													},
													"src": "1304:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2045,
												"nodeType": "IfStatement",
												"src": "1300:66:18",
												"trueBody": {
													"id": 2044,
													"nodeType": "Block",
													"src": "1314:52:18",
													"statements": [
														{
															"expression": {
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2036,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "1328:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1334:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1328:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2039,
															"nodeType": "ExpressionStatement",
															"src": "1328:7:18"
														},
														{
															"expression": {
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2040,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1947,
																	"src": "1349:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 2041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1354:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1349:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2043,
															"nodeType": "ExpressionStatement",
															"src": "1349:6:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2046,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "1379:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307832",
														"id": 2047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1384:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "0x2"
													},
													"src": "1379:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2053,
												"nodeType": "IfStatement",
												"src": "1375:20:18",
												"trueBody": {
													"expression": {
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2049,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1947,
															"src": "1389:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1389:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2052,
													"nodeType": "ExpressionStatement",
													"src": "1389:6:18"
												}
											}
										]
									},
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "209:457:18",
										"text": "@notice Returns the index of the most significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n @param x the value for which to compute the most significant bit, must be greater than 0\n @return r the index of the most significant bit"
									},
									"id": 2055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "699:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:11:18"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "733:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1946,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "733:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:9:18"
									},
									"scope": 2217,
									"src": "671:731:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2215,
										"nodeType": "Block",
										"src": "1965:822:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2064,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "1983:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1987:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1983:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1975:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:14:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2068,
												"nodeType": "ExpressionStatement",
												"src": "1975:14:18"
											},
											{
												"expression": {
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2069,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "2000:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323535",
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2004:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "2000:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "2000:7:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2073,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "2021:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2030:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 2075,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2030:7:18",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 2074,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2025:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2025:13:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2025:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "2021:21:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2045:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2021:25:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2091,
													"nodeType": "Block",
													"src": "2087:34:18",
													"statements": [
														{
															"expression": {
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2087,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "2101:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2101:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2090,
															"nodeType": "ExpressionStatement",
															"src": "2101:9:18"
														}
													]
												},
												"id": 2092,
												"nodeType": "IfStatement",
												"src": "2017:104:18",
												"trueBody": {
													"id": 2086,
													"nodeType": "Block",
													"src": "2048:33:18",
													"statements": [
														{
															"expression": {
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2082,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "2062:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2067:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2062:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2085,
															"nodeType": "ExpressionStatement",
															"src": "2062:8:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2093,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "2134:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2143:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 2095,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "2143:6:18",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		}
																	],
																	"id": 2094,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2138:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2138:12:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint64",
																	"typeString": "type(uint64)"
																}
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2138:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "2134:20:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2157:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2134:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2111,
													"nodeType": "Block",
													"src": "2198:33:18",
													"statements": [
														{
															"expression": {
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2107,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "2212:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2218:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2212:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2110,
															"nodeType": "ExpressionStatement",
															"src": "2212:8:18"
														}
													]
												},
												"id": 2112,
												"nodeType": "IfStatement",
												"src": "2130:101:18",
												"trueBody": {
													"id": 2106,
													"nodeType": "Block",
													"src": "2160:32:18",
													"statements": [
														{
															"expression": {
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2102,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "2174:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2179:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2174:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2105,
															"nodeType": "ExpressionStatement",
															"src": "2174:7:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2113,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "2244:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2253:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 2115,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2253:6:18",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 2114,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2248:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:12:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2248:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "2244:20:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2267:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2244:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2131,
													"nodeType": "Block",
													"src": "2308:33:18",
													"statements": [
														{
															"expression": {
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2127,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "2322:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2328:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2322:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2130,
															"nodeType": "ExpressionStatement",
															"src": "2322:8:18"
														}
													]
												},
												"id": 2132,
												"nodeType": "IfStatement",
												"src": "2240:101:18",
												"trueBody": {
													"id": 2126,
													"nodeType": "Block",
													"src": "2270:32:18",
													"statements": [
														{
															"expression": {
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2122,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "2284:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2289:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2284:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2125,
															"nodeType": "ExpressionStatement",
															"src": "2284:7:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2133,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "2354:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2363:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 2135,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "2363:6:18",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		}
																	],
																	"id": 2134,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2358:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2358:12:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint16",
																	"typeString": "type(uint16)"
																}
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2358:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "2354:20:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2354:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2151,
													"nodeType": "Block",
													"src": "2418:33:18",
													"statements": [
														{
															"expression": {
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2147,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "2432:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2438:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2432:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2150,
															"nodeType": "ExpressionStatement",
															"src": "2432:8:18"
														}
													]
												},
												"id": 2152,
												"nodeType": "IfStatement",
												"src": "2350:101:18",
												"trueBody": {
													"id": 2146,
													"nodeType": "Block",
													"src": "2380:32:18",
													"statements": [
														{
															"expression": {
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2142,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "2394:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2399:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2394:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2145,
															"nodeType": "ExpressionStatement",
															"src": "2394:7:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2153,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "2464:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2473:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 2155,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "2473:5:18",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 2154,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2468:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2468:11:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2468:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2464:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2486:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2464:23:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2171,
													"nodeType": "Block",
													"src": "2526:32:18",
													"statements": [
														{
															"expression": {
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2167,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "2540:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2546:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2540:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2170,
															"nodeType": "ExpressionStatement",
															"src": "2540:7:18"
														}
													]
												},
												"id": 2172,
												"nodeType": "IfStatement",
												"src": "2460:98:18",
												"trueBody": {
													"id": 2166,
													"nodeType": "Block",
													"src": "2489:31:18",
													"statements": [
														{
															"expression": {
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2162,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "2503:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2508:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2503:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2165,
															"nodeType": "ExpressionStatement",
															"src": "2503:6:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2173,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "2571:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307866",
															"id": 2174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2575:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "0xf"
														},
														"src": "2571:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2581:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2571:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2187,
													"nodeType": "Block",
													"src": "2621:32:18",
													"statements": [
														{
															"expression": {
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2183,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "2635:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2641:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2635:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2186,
															"nodeType": "ExpressionStatement",
															"src": "2635:7:18"
														}
													]
												},
												"id": 2188,
												"nodeType": "IfStatement",
												"src": "2567:86:18",
												"trueBody": {
													"id": 2182,
													"nodeType": "Block",
													"src": "2584:31:18",
													"statements": [
														{
															"expression": {
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2178,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "2598:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2603:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2598:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2181,
															"nodeType": "ExpressionStatement",
															"src": "2598:6:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2189,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "2666:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307833",
															"id": 2190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2670:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "0x3"
														},
														"src": "2666:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2676:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2666:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2203,
													"nodeType": "Block",
													"src": "2716:32:18",
													"statements": [
														{
															"expression": {
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2199,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2058,
																	"src": "2730:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2736:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2730:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2202,
															"nodeType": "ExpressionStatement",
															"src": "2730:7:18"
														}
													]
												},
												"id": 2204,
												"nodeType": "IfStatement",
												"src": "2662:86:18",
												"trueBody": {
													"id": 2198,
													"nodeType": "Block",
													"src": "2679:31:18",
													"statements": [
														{
															"expression": {
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2194,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "2693:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2698:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2693:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2197,
															"nodeType": "ExpressionStatement",
															"src": "2693:6:18"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2205,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2058,
															"src": "2761:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831",
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2765:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x1"
														},
														"src": "2761:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2771:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2761:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2214,
												"nodeType": "IfStatement",
												"src": "2757:23:18",
												"trueBody": {
													"expression": {
														"id": 2212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2210,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "2774:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2779:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2774:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2213,
													"nodeType": "ExpressionStatement",
													"src": "2774:6:18"
												}
											}
										]
									},
									"documentation": {
										"id": 2056,
										"nodeType": "StructuredDocumentation",
										"src": "1408:480:18",
										"text": "@notice Returns the index of the least significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n @param x the value for which to compute the least significant bit, must be greater than 0\n @return r the index of the least significant bit"
									},
									"id": 2216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "1922:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:11:18"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "1956:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2060,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1956:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:9:18"
									},
									"scope": 2217,
									"src": "1893:894:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2218,
							"src": "187:2602:18"
						}
					],
					"src": "45:2745:18"
				},
				"id": 18
			},
			"contracts/core/libraries/FixedPoint128.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/FixedPoint128.sol",
					"exportedSymbols": {
						"FixedPoint128": [
							2224
						]
					},
					"id": 2225,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2219,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2220,
								"nodeType": "StructuredDocumentation",
								"src": "71:140:19",
								"text": "@title FixedPoint128\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)"
							},
							"fullyImplemented": true,
							"id": 2224,
							"linearizedBaseContracts": [
								2224
							],
							"name": "FixedPoint128",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2223,
									"mutability": "constant",
									"name": "Q128",
									"nodeType": "VariableDeclaration",
									"scope": 2224,
									"src": "239:68:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2221,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "239:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
										"id": 2222,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "272:35:19",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
											"typeString": "int_const 3402...(31 digits omitted)...1456"
										},
										"value": "0x100000000000000000000000000000000"
									},
									"visibility": "internal"
								}
							],
							"scope": 2225,
							"src": "211:99:19"
						}
					],
					"src": "45:266:19"
				},
				"id": 19
			},
			"contracts/core/libraries/FixedPoint96.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/FixedPoint96.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							2234
						]
					},
					"id": 2235,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2226,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2227,
								"nodeType": "StructuredDocumentation",
								"src": "71:174:20",
								"text": "@title FixedPoint96\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n @dev Used in SqrtPriceMath.sol"
							},
							"fullyImplemented": true,
							"id": 2234,
							"linearizedBaseContracts": [
								2234
							],
							"name": "FixedPoint96",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2230,
									"mutability": "constant",
									"name": "RESOLUTION",
									"nodeType": "VariableDeclaration",
									"scope": 2234,
									"src": "272:39:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2228,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "272:5:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3936",
										"id": 2229,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "309:2:20",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96_by_1",
											"typeString": "int_const 96"
										},
										"value": "96"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2233,
									"mutability": "constant",
									"name": "Q96",
									"nodeType": "VariableDeclaration",
									"scope": 2234,
									"src": "317:59:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2231,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307831303030303030303030303030303030303030303030303030",
										"id": 2232,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "349:27:20",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
											"typeString": "int_const 79228162514264337593543950336"
										},
										"value": "0x1000000000000000000000000"
									},
									"visibility": "internal"
								}
							],
							"scope": 2235,
							"src": "245:134:20"
						}
					],
					"src": "45:335:20"
				},
				"id": 20
			},
			"contracts/core/libraries/FullMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/FullMath.sol",
					"exportedSymbols": {
						"FullMath": [
							2407
						]
					},
					"id": 2408,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2236,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:21"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2237,
								"nodeType": "StructuredDocumentation",
								"src": "65:297:21",
								"text": "@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"
							},
							"fullyImplemented": true,
							"id": 2407,
							"linearizedBaseContracts": [
								2407
							],
							"name": "FullMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2362,
										"nodeType": "Block",
										"src": "847:3648:21",
										"statements": [
											{
												"assignments": [
													2250
												],
												"declarations": [
													{
														"constant": false,
														"id": 2250,
														"mutability": "mutable",
														"name": "prod0",
														"nodeType": "VariableDeclaration",
														"scope": 2362,
														"src": "1160:13:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1160:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2251,
												"nodeType": "VariableDeclarationStatement",
												"src": "1160:13:21"
											},
											{
												"assignments": [
													2253
												],
												"declarations": [
													{
														"constant": false,
														"id": 2253,
														"mutability": "mutable",
														"name": "prod1",
														"nodeType": "VariableDeclaration",
														"scope": 2362,
														"src": "1228:13:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2252,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1228:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2254,
												"nodeType": "VariableDeclarationStatement",
												"src": "1228:13:21"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1304:141:21",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1318:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1335:1:21"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1338:1:21"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1345:1:21",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1341:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1341:6:21"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:20:21"
															},
															"variables": [
																{
																	"name": "mm",
																	"nodeType": "YulTypedName",
																	"src": "1322:2:21",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1361:18:21",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1374:1:21"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1377:1:21"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1370:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:9:21"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "1361:5:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1392:43:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1409:2:21"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:21"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:14:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1424:2:21"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1428:5:21"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1421:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:13:21"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1401:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:34:21"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "1392:5:21"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "1335:1:21",
														"valueSize": 1
													},
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "1374:1:21",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "1338:1:21",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "1377:1:21",
														"valueSize": 1
													},
													{
														"declaration": 2250,
														"isOffset": false,
														"isSlot": false,
														"src": "1361:5:21",
														"valueSize": 1
													},
													{
														"declaration": 2250,
														"isOffset": false,
														"isSlot": false,
														"src": "1413:5:21",
														"valueSize": 1
													},
													{
														"declaration": 2250,
														"isOffset": false,
														"isSlot": false,
														"src": "1428:5:21",
														"valueSize": 1
													},
													{
														"declaration": 2253,
														"isOffset": false,
														"isSlot": false,
														"src": "1392:5:21",
														"valueSize": 1
													}
												],
												"id": 2255,
												"nodeType": "InlineAssembly",
												"src": "1295:150:21"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2256,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "1517:5:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1526:1:21",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1517:10:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2269,
												"nodeType": "IfStatement",
												"src": "1513:179:21",
												"trueBody": {
													"id": 2268,
													"nodeType": "Block",
													"src": "1529:163:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2260,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2244,
																			"src": "1551:11:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1565:1:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1551:15:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2259,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1543:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 2263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1543:24:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2264,
															"nodeType": "ExpressionStatement",
															"src": "1543:24:21"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1590:65:21",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1608:33:21",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod0",
																					"nodeType": "YulIdentifier",
																					"src": "1622:5:21"
																				},
																				{
																					"name": "denominator",
																					"nodeType": "YulIdentifier",
																					"src": "1629:11:21"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "1618:3:21"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1618:23:21"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:21"
																			}
																		]
																	}
																]
															},
															"evmVersion": "berlin",
															"externalReferences": [
																{
																	"declaration": 2244,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1629:11:21",
																	"valueSize": 1
																},
																{
																	"declaration": 2250,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1622:5:21",
																	"valueSize": 1
																},
																{
																	"declaration": 2247,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1608:6:21",
																	"valueSize": 1
																}
															],
															"id": 2265,
															"nodeType": "InlineAssembly",
															"src": "1581:74:21"
														},
														{
															"expression": {
																"id": 2266,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2247,
																"src": "1675:6:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2248,
															"id": 2267,
															"nodeType": "Return",
															"src": "1668:13:21"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2271,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2244,
																"src": "1805:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2272,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2253,
																"src": "1819:5:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1805:19:21",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1797:7:21",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:28:21",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2275,
												"nodeType": "ExpressionStatement",
												"src": "1797:28:21"
											},
											{
												"assignments": [
													2277
												],
												"declarations": [
													{
														"constant": false,
														"id": 2277,
														"mutability": "mutable",
														"name": "remainder",
														"nodeType": "VariableDeclaration",
														"scope": 2362,
														"src": "2102:17:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2102:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2278,
												"nodeType": "VariableDeclarationStatement",
												"src": "2102:17:21"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2138:62:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2152:38:21",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2172:1:21"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2175:1:21"
																	},
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2178:11:21"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "2165:6:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:25:21"
															},
															"variableNames": [
																{
																	"name": "remainder",
																	"nodeType": "YulIdentifier",
																	"src": "2152:9:21"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "2172:1:21",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "2175:1:21",
														"valueSize": 1
													},
													{
														"declaration": 2244,
														"isOffset": false,
														"isSlot": false,
														"src": "2178:11:21",
														"valueSize": 1
													},
													{
														"declaration": 2277,
														"isOffset": false,
														"isSlot": false,
														"src": "2152:9:21",
														"valueSize": 1
													}
												],
												"id": 2279,
												"nodeType": "InlineAssembly",
												"src": "2129:71:21"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2273:108:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2287:41:21",
															"value": {
																"arguments": [
																	{
																		"name": "prod1",
																		"nodeType": "YulIdentifier",
																		"src": "2300:5:21"
																	},
																	{
																		"arguments": [
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "2310:9:21"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "2321:5:21"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2307:2:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:21"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:32:21"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "2287:5:21"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2341:30:21",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2354:5:21"
																	},
																	{
																		"name": "remainder",
																		"nodeType": "YulIdentifier",
																		"src": "2361:9:21"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2350:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2350:21:21"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2341:5:21"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 2250,
														"isOffset": false,
														"isSlot": false,
														"src": "2321:5:21",
														"valueSize": 1
													},
													{
														"declaration": 2250,
														"isOffset": false,
														"isSlot": false,
														"src": "2341:5:21",
														"valueSize": 1
													},
													{
														"declaration": 2250,
														"isOffset": false,
														"isSlot": false,
														"src": "2354:5:21",
														"valueSize": 1
													},
													{
														"declaration": 2253,
														"isOffset": false,
														"isSlot": false,
														"src": "2287:5:21",
														"valueSize": 1
													},
													{
														"declaration": 2253,
														"isOffset": false,
														"isSlot": false,
														"src": "2300:5:21",
														"valueSize": 1
													},
													{
														"declaration": 2277,
														"isOffset": false,
														"isSlot": false,
														"src": "2310:9:21",
														"valueSize": 1
													},
													{
														"declaration": 2277,
														"isOffset": false,
														"isSlot": false,
														"src": "2361:9:21",
														"valueSize": 1
													}
												],
												"id": 2280,
												"nodeType": "InlineAssembly",
												"src": "2264:117:21"
											},
											{
												"assignments": [
													2282
												],
												"declarations": [
													{
														"constant": false,
														"id": 2282,
														"mutability": "mutable",
														"name": "twos",
														"nodeType": "VariableDeclaration",
														"scope": 2362,
														"src": "2530:12:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2530:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2287,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "2545:12:21",
														"subExpression": {
															"id": 2283,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "2546:11:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 2285,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2244,
														"src": "2560:11:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2545:26:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2530:41:21"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2636:61:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2650:37:21",
															"value": {
																"arguments": [
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2669:11:21"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2682:4:21"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2665:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2665:22:21"
															},
															"variableNames": [
																{
																	"name": "denominator",
																	"nodeType": "YulIdentifier",
																	"src": "2650:11:21"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 2244,
														"isOffset": false,
														"isSlot": false,
														"src": "2650:11:21",
														"valueSize": 1
													},
													{
														"declaration": 2244,
														"isOffset": false,
														"isSlot": false,
														"src": "2669:11:21",
														"valueSize": 1
													},
													{
														"declaration": 2282,
														"isOffset": false,
														"isSlot": false,
														"src": "2682:4:21",
														"valueSize": 1
													}
												],
												"id": 2288,
												"nodeType": "InlineAssembly",
												"src": "2627:70:21"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2770:49:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2784:25:21",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2797:5:21"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2804:4:21"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2793:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "2793:16:21"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2784:5:21"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 2250,
														"isOffset": false,
														"isSlot": false,
														"src": "2784:5:21",
														"valueSize": 1
													},
													{
														"declaration": 2250,
														"isOffset": false,
														"isSlot": false,
														"src": "2797:5:21",
														"valueSize": 1
													},
													{
														"declaration": 2282,
														"isOffset": false,
														"isSlot": false,
														"src": "2804:4:21",
														"valueSize": 1
													}
												],
												"id": 2289,
												"nodeType": "InlineAssembly",
												"src": "2761:58:21"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3007:63:21",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3021:39:21",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3041:1:21",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "3044:4:21"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3037:3:21"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3037:12:21"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3051:4:21"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:21"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3033:23:21"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3058:1:21",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3029:3:21"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:31:21"
															},
															"variableNames": [
																{
																	"name": "twos",
																	"nodeType": "YulIdentifier",
																	"src": "3021:4:21"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 2282,
														"isOffset": false,
														"isSlot": false,
														"src": "3021:4:21",
														"valueSize": 1
													},
													{
														"declaration": 2282,
														"isOffset": false,
														"isSlot": false,
														"src": "3044:4:21",
														"valueSize": 1
													},
													{
														"declaration": 2282,
														"isOffset": false,
														"isSlot": false,
														"src": "3051:4:21",
														"valueSize": 1
													}
												],
												"id": 2290,
												"nodeType": "InlineAssembly",
												"src": "2998:72:21"
											},
											{
												"expression": {
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2291,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2250,
														"src": "3079:5:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2292,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2253,
															"src": "3088:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2293,
															"name": "twos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "3096:4:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3088:12:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3079:21:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "3079:21:21"
											},
											{
												"assignments": [
													2298
												],
												"declarations": [
													{
														"constant": false,
														"id": 2298,
														"mutability": "mutable",
														"name": "inv",
														"nodeType": "VariableDeclaration",
														"scope": 2362,
														"src": "3434:11:21",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2297,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3434:7:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2305,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "33",
																	"id": 2299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3449:1:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2300,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "3453:11:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3449:15:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2302,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3448:17:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "^",
													"rightExpression": {
														"hexValue": "32",
														"id": 2303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3468:1:21",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3448:21:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3434:35:21"
											},
											{
												"expression": {
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2306,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2298,
														"src": "3684:3:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3691:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2308,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2244,
																"src": "3695:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2309,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "3709:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3695:17:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3691:21:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3684:28:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2313,
												"nodeType": "ExpressionStatement",
												"src": "3684:28:21"
											},
											{
												"expression": {
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2314,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2298,
														"src": "3742:3:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3749:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2316,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2244,
																"src": "3753:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2317,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "3767:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3753:17:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3749:21:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3742:28:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2321,
												"nodeType": "ExpressionStatement",
												"src": "3742:28:21"
											},
											{
												"expression": {
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2322,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2298,
														"src": "3801:3:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2324,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2244,
																"src": "3812:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2325,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "3826:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3812:17:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3808:21:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3801:28:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2329,
												"nodeType": "ExpressionStatement",
												"src": "3801:28:21"
											},
											{
												"expression": {
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2330,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2298,
														"src": "3860:3:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3867:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2332,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2244,
																"src": "3871:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2333,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "3885:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3871:17:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3867:21:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3860:28:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2337,
												"nodeType": "ExpressionStatement",
												"src": "3860:28:21"
											},
											{
												"expression": {
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2338,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2298,
														"src": "3919:3:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3926:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2340,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2244,
																"src": "3930:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2341,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "3944:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3930:17:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3926:21:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3919:28:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2345,
												"nodeType": "ExpressionStatement",
												"src": "3919:28:21"
											},
											{
												"expression": {
													"id": 2352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2346,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2298,
														"src": "3979:3:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3986:1:21",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2348,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2244,
																"src": "3990:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2349,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2298,
																"src": "4004:3:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3990:17:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3986:21:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3979:28:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2353,
												"nodeType": "ExpressionStatement",
												"src": "3979:28:21"
											},
											{
												"expression": {
													"id": 2358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2354,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2247,
														"src": "4445:6:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2355,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "4454:5:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 2356,
															"name": "inv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2298,
															"src": "4462:3:21",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4454:11:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4445:20:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2359,
												"nodeType": "ExpressionStatement",
												"src": "4445:20:21"
											},
											{
												"expression": {
													"id": 2360,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2247,
													"src": "4482:6:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2248,
												"id": 2361,
												"nodeType": "Return",
												"src": "4475:13:21"
											}
										]
									},
									"documentation": {
										"id": 2238,
										"nodeType": "StructuredDocumentation",
										"src": "385:359:21",
										"text": "@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 2363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "765:9:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "776:9:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "787:19:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:43:21"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "831:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:16:21"
									},
									"scope": 2407,
									"src": "749:3746:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2405,
										"nodeType": "Block",
										"src": "4885:177:21",
										"statements": [
											{
												"expression": {
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2375,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "4895:6:21",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2377,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2366,
																"src": "4911:1:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2378,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "4914:1:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2379,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2370,
																"src": "4917:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2376,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "4904:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4904:25:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4895:34:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2382,
												"nodeType": "ExpressionStatement",
												"src": "4895:34:21"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2384,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2366,
																"src": "4950:1:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2385,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "4953:1:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2386,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2370,
																"src": "4956:11:21",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2383,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967280,
															"src": "4943:6:21",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4943:25:21",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4971:1:21",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4943:29:21",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2404,
												"nodeType": "IfStatement",
												"src": "4939:117:21",
												"trueBody": {
													"id": 2403,
													"nodeType": "Block",
													"src": "4974:82:21",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2391,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2373,
																			"src": "4996:6:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 2394,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5010:7:21",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2393,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "5010:7:21",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 2392,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "5005:4:21",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 2395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5005:13:21",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 2396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "5005:17:21",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4996:26:21",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2390,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4988:7:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4988:35:21",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2399,
															"nodeType": "ExpressionStatement",
															"src": "4988:35:21"
														},
														{
															"expression": {
																"id": 2401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5037:8:21",
																"subExpression": {
																	"id": 2400,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "5037:6:21",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2402,
															"nodeType": "ExpressionStatement",
															"src": "5037:8:21"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2364,
										"nodeType": "StructuredDocumentation",
										"src": "4501:271:21",
										"text": "@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"
									},
									"id": 2406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "4803:9:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "4814:9:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4814:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "4825:19:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4825:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:43:21"
									},
									"returnParameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "4869:14:21",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4869:7:21",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4868:16:21"
									},
									"scope": 2407,
									"src": "4777:285:21",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2408,
							"src": "362:4702:21"
						}
					],
					"src": "32:5033:21"
				},
				"id": 21
			},
			"contracts/core/libraries/LiquidityAmounts.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/LiquidityAmounts.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							2234
						],
						"FullMath": [
							2407
						],
						"LiquidityAmounts": [
							2747
						]
					},
					"id": 2748,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2409,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:22"
						},
						{
							"absolutePath": "contracts/core/libraries/FullMath.sol",
							"file": "contracts/core/libraries/FullMath.sol",
							"id": 2410,
							"nodeType": "ImportDirective",
							"scope": 2748,
							"sourceUnit": 2408,
							"src": "74:47:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FixedPoint96.sol",
							"file": "contracts/core/libraries/FixedPoint96.sol",
							"id": 2411,
							"nodeType": "ImportDirective",
							"scope": 2748,
							"sourceUnit": 2235,
							"src": "123:51:22",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2412,
								"nodeType": "StructuredDocumentation",
								"src": "178:133:22",
								"text": "@title Liquidity amount functions\n @notice Provides functions for computing liquidity amounts from token amounts and prices"
							},
							"fullyImplemented": true,
							"id": 2747,
							"linearizedBaseContracts": [
								2747
							],
							"name": "LiquidityAmounts",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2432,
										"nodeType": "Block",
										"src": "558:49:22",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2421,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2418,
																			"src": "578:1:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2424,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2415,
																					"src": "590:1:22",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "582:7:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint128_$",
																					"typeString": "type(uint128)"
																				},
																				"typeName": {
																					"id": 2422,
																					"name": "uint128",
																					"nodeType": "ElementaryTypeName",
																					"src": "582:7:22",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "582:10:22",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "578:14:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"id": 2427,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "577:16:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2428,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2415,
																"src": "597:1:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "577:21:22",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "569:7:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "569:30:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2431,
												"nodeType": "ExpressionStatement",
												"src": "569:30:22"
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "343:146:22",
										"text": "@notice Downcasts uint256 to uint128\n @param x The uint258 to be downcasted\n @return y The passed value, downcasted to uint128"
									},
									"id": 2433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "514:9:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:11:22"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "547:9:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2417,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:11:22"
									},
									"scope": 2747,
									"src": "495:112:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2478,
										"nodeType": "Block",
										"src": "1252:312:22",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2445,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2436,
														"src": "1267:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2446,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2438,
														"src": "1283:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1267:29:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2456,
												"nodeType": "IfStatement",
												"src": "1263:98:22",
												"trueBody": {
													"expression": {
														"id": 2454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2448,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "1299:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2449,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2438,
																	"src": "1314:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2450,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "1298:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2451,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2438,
																	"src": "1332:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2452,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "1347:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2453,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1331:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "1298:63:22",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2455,
													"nodeType": "ExpressionStatement",
													"src": "1298:63:22"
												}
											},
											{
												"assignments": [
													2458
												],
												"declarations": [
													{
														"constant": false,
														"id": 2458,
														"mutability": "mutable",
														"name": "intermediate",
														"nodeType": "VariableDeclaration",
														"scope": 2478,
														"src": "1372:20:22",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1372:7:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2466,
												"initialValue": {
													"arguments": [
														{
															"id": 2461,
															"name": "sqrtRatioAX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "1411:13:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 2462,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2438,
															"src": "1426:13:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"expression": {
																"id": 2463,
																"name": "FixedPoint96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "1441:12:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																	"typeString": "type(library FixedPoint96)"
																}
															},
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Q96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2233,
															"src": "1441:16:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2459,
															"name": "FullMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "1395:8:22",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																"typeString": "type(library FullMath)"
															}
														},
														"id": 2460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2363,
														"src": "1395:15:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1395:63:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1372:86:22"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2470,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2440,
																	"src": "1502:7:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2471,
																	"name": "intermediate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2458,
																	"src": "1511:12:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"id": 2474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2472,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2438,
																		"src": "1525:13:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2473,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2436,
																		"src": "1541:13:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"src": "1525:29:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"expression": {
																	"id": 2468,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2407,
																	"src": "1486:8:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2363,
																"src": "1486:15:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1486:69:22",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2467,
														"name": "toUint128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2433,
														"src": "1476:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
															"typeString": "function (uint256) pure returns (uint128)"
														}
													},
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1476:80:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2444,
												"id": 2477,
												"nodeType": "Return",
												"src": "1469:87:22"
											}
										]
									},
									"documentation": {
										"id": 2434,
										"nodeType": "StructuredDocumentation",
										"src": "615:462:22",
										"text": "@notice Computes the amount of liquidity received for a given amount of token0 and price range\n @dev Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount0 The amount0 being sent in\n @return liquidity The amount of returned liquidity"
									},
									"id": 2479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmount0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "1115:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2435,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "1138:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2437,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "1161:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1114:63:22"
									},
									"returnParameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "1228:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2442,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:19:22"
									},
									"scope": 2747,
									"src": "1083:481:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2515,
										"nodeType": "Block",
										"src": "2180:219:22",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2491,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2482,
														"src": "2195:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2492,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2484,
														"src": "2211:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "2195:29:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2502,
												"nodeType": "IfStatement",
												"src": "2191:98:22",
												"trueBody": {
													"expression": {
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2494,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2482,
																	"src": "2227:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2495,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "2242:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2496,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "2226:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2497,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "2260:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2498,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2482,
																	"src": "2275:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2499,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2259:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "2226:63:22",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2501,
													"nodeType": "ExpressionStatement",
													"src": "2226:63:22"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2506,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2486,
																	"src": "2333:7:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2507,
																		"name": "FixedPoint96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "2342:12:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																			"typeString": "type(library FixedPoint96)"
																		}
																	},
																	"id": 2508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "Q96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2233,
																	"src": "2342:16:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2509,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2484,
																		"src": "2360:13:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2510,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2482,
																		"src": "2376:13:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"src": "2360:29:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"expression": {
																	"id": 2504,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2407,
																	"src": "2317:8:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2363,
																"src": "2317:15:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:73:22",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2503,
														"name": "toUint128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2433,
														"src": "2307:9:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
															"typeString": "function (uint256) pure returns (uint128)"
														}
													},
													"id": 2513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2307:84:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2490,
												"id": 2514,
												"nodeType": "Return",
												"src": "2300:91:22"
											}
										]
									},
									"documentation": {
										"id": 2480,
										"nodeType": "StructuredDocumentation",
										"src": "1572:433:22",
										"text": "@notice Computes the amount of liquidity received for a given amount of token1 and price range\n @dev Calculates amount1 / (sqrt(upper) - sqrt(lower)).\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount1 The amount1 being sent in\n @return liquidity The amount of returned liquidity"
									},
									"id": 2516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmount1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "2043:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2481,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "2066:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2483,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "2089:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:63:22"
									},
									"returnParameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "2156:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2488,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2155:19:22"
									},
									"scope": 2747,
									"src": "2011:388:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2596,
										"nodeType": "Block",
										"src": "3237:692:22",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2532,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "3252:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2533,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2523,
														"src": "3268:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3252:29:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2543,
												"nodeType": "IfStatement",
												"src": "3248:98:22",
												"trueBody": {
													"expression": {
														"id": 2541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2535,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2521,
																	"src": "3284:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2536,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "3299:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "3283:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2538,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "3317:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2539,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2521,
																	"src": "3332:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2540,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3316:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "3283:63:22",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2542,
													"nodeType": "ExpressionStatement",
													"src": "3283:63:22"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2544,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2519,
														"src": "3363:12:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2545,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "3379:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3363:29:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 2558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2556,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "3504:12:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2557,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "3519:13:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "3504:28:22",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2593,
														"nodeType": "Block",
														"src": "3822:100:22",
														"statements": [
															{
																"expression": {
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2585,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2530,
																		"src": "3837:9:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2587,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2521,
																				"src": "3872:13:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2588,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2523,
																				"src": "3887:13:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2589,
																				"name": "amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2527,
																				"src": "3902:7:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2586,
																			"name": "getLiquidityForAmount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2516,
																			"src": "3849:22:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																				"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																			}
																		},
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3849:61:22",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "3837:73:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"id": 2592,
																"nodeType": "ExpressionStatement",
																"src": "3837:73:22"
															}
														]
													},
													"id": 2594,
													"nodeType": "IfStatement",
													"src": "3500:422:22",
													"trueBody": {
														"id": 2584,
														"nodeType": "Block",
														"src": "3534:282:22",
														"statements": [
															{
																"assignments": [
																	2560
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2560,
																		"mutability": "mutable",
																		"name": "liquidity0",
																		"nodeType": "VariableDeclaration",
																		"scope": 2584,
																		"src": "3549:18:22",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 2559,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "3549:7:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2566,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 2562,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "3593:12:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2563,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "3607:13:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2564,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "3622:7:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2561,
																		"name": "getLiquidityForAmount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2479,
																		"src": "3570:22:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3570:60:22",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3549:81:22"
															},
															{
																"assignments": [
																	2568
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2568,
																		"mutability": "mutable",
																		"name": "liquidity1",
																		"nodeType": "VariableDeclaration",
																		"scope": 2584,
																		"src": "3645:18:22",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 2567,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "3645:7:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2574,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 2570,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "3689:13:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2571,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "3704:12:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2572,
																			"name": "amount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2527,
																			"src": "3718:7:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2569,
																		"name": "getLiquidityForAmount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2516,
																		"src": "3666:22:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3666:60:22",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3645:81:22"
															},
															{
																"expression": {
																	"id": 2582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2575,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2530,
																		"src": "3743:9:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			"id": 2578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2576,
																				"name": "liquidity0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2560,
																				"src": "3755:10:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2577,
																				"name": "liquidity1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2568,
																				"src": "3768:10:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "3755:23:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"id": 2580,
																			"name": "liquidity1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "3794:10:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "3755:49:22",
																		"trueExpression": {
																			"id": 2579,
																			"name": "liquidity0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2560,
																			"src": "3781:10:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "3743:61:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"id": 2583,
																"nodeType": "ExpressionStatement",
																"src": "3743:61:22"
															}
														]
													}
												},
												"id": 2595,
												"nodeType": "IfStatement",
												"src": "3359:563:22",
												"trueBody": {
													"id": 2555,
													"nodeType": "Block",
													"src": "3394:100:22",
													"statements": [
														{
															"expression": {
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2547,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2530,
																	"src": "3409:9:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2549,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "3444:13:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2550,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2523,
																			"src": "3459:13:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2551,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2525,
																			"src": "3474:7:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2548,
																		"name": "getLiquidityForAmount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2479,
																		"src": "3421:22:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3421:61:22",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3409:73:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 2554,
															"nodeType": "ExpressionStatement",
															"src": "3409:73:22"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2517,
										"nodeType": "StructuredDocumentation",
										"src": "2407:596:22",
										"text": "@notice Computes the maximum amount of liquidity received for a given amount of token0, token1, the current\n pool prices and the prices at the tick boundaries\n @param sqrtRatioX96 A sqrt price representing the current pool prices\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount0 The amount of token0 being sent in\n @param amount1 The amount of token1 being sent in\n @return liquidity The maximum amount of liquidity received"
									},
									"id": 2597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmounts",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "sqrtRatioX96",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "3051:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2518,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3051:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "3082:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2520,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "3114:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2522,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "3146:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "3172:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3040:154:22"
									},
									"returnParameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "3218:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2529,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:19:22"
									},
									"scope": 2747,
									"src": "3009:920:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2638,
										"nodeType": "Block",
										"src": "4463:285:22",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2609,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2600,
														"src": "4478:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2610,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2602,
														"src": "4494:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "4478:29:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2620,
												"nodeType": "IfStatement",
												"src": "4474:98:22",
												"trueBody": {
													"expression": {
														"id": 2618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2612,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "4510:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2613,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2602,
																	"src": "4525:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2614,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "4509:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2615,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2602,
																	"src": "4543:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2616,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "4558:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2617,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4542:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "4509:63:22",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2619,
													"nodeType": "ExpressionStatement",
													"src": "4509:63:22"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2625,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2604,
																			"src": "4630:9:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		],
																		"id": 2624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4622:7:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2623,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4622:7:22",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4622:18:22",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"expression": {
																		"id": 2627,
																		"name": "FixedPoint96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "4644:12:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																			"typeString": "type(library FixedPoint96)"
																		}
																	},
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "RESOLUTION",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2230,
																	"src": "4644:23:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4622:45:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2630,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2602,
																	"src": "4669:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2631,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "4685:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4669:29:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 2633,
																"name": "sqrtRatioBX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2602,
																"src": "4700:13:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"expression": {
																"id": 2621,
																"name": "FullMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "4592:8:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																	"typeString": "type(library FullMath)"
																}
															},
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2363,
															"src": "4592:15:22",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4592:132:22",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2635,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2600,
														"src": "4727:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "4592:148:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2608,
												"id": 2637,
												"nodeType": "Return",
												"src": "4585:155:22"
											}
										]
									},
									"documentation": {
										"id": 2598,
										"nodeType": "StructuredDocumentation",
										"src": "3937:351:22",
										"text": "@notice Computes the amount of token0 for a given amount of liquidity and a price range\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount0 The amount of token0"
									},
									"id": 2639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount0ForLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "4326:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2599,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4326:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "4349:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2601,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4349:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "4372:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2603,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4372:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4325:65:22"
									},
									"returnParameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "4441:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4441:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4440:17:22"
									},
									"scope": 2747,
									"src": "4294:454:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2673,
										"nodeType": "Block",
										"src": "5282:212:22",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2651,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2642,
														"src": "5297:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2652,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2644,
														"src": "5313:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "5297:29:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2662,
												"nodeType": "IfStatement",
												"src": "5293:98:22",
												"trueBody": {
													"expression": {
														"id": 2660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2654,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "5329:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2655,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2644,
																	"src": "5344:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2656,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "5328:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2657,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2644,
																	"src": "5362:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2658,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "5377:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2659,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5361:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "5328:63:22",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2661,
													"nodeType": "ExpressionStatement",
													"src": "5328:63:22"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2665,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2646,
															"src": "5427:9:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2666,
																"name": "sqrtRatioBX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "5438:13:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2667,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2642,
																"src": "5454:13:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "5438:29:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"expression": {
																"id": 2669,
																"name": "FixedPoint96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "5469:12:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																	"typeString": "type(library FixedPoint96)"
																}
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "Q96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2233,
															"src": "5469:16:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2663,
															"name": "FullMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "5411:8:22",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																"typeString": "type(library FullMath)"
															}
														},
														"id": 2664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2363,
														"src": "5411:15:22",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5411:75:22",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2650,
												"id": 2672,
												"nodeType": "Return",
												"src": "5404:82:22"
											}
										]
									},
									"documentation": {
										"id": 2640,
										"nodeType": "StructuredDocumentation",
										"src": "4756:351:22",
										"text": "@notice Computes the amount of token1 for a given amount of liquidity and a price range\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount1 The amount of token1"
									},
									"id": 2674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount1ForLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "5145:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2641,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "5168:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2643,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5168:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "5191:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2645,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5191:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5144:65:22"
									},
									"returnParameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "5260:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5260:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5259:17:22"
									},
									"scope": 2747,
									"src": "5113:381:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2745,
										"nodeType": "Block",
										"src": "6264:596:22",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2690,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2679,
														"src": "6279:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2691,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2681,
														"src": "6295:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "6279:29:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2701,
												"nodeType": "IfStatement",
												"src": "6275:98:22",
												"trueBody": {
													"expression": {
														"id": 2699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2693,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2679,
																	"src": "6311:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2694,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2681,
																	"src": "6326:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2695,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "6310:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2696,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2681,
																	"src": "6344:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2697,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2679,
																	"src": "6359:13:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2698,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6343:30:22",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "6310:63:22",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2700,
													"nodeType": "ExpressionStatement",
													"src": "6310:63:22"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2702,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "6390:12:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2703,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2679,
														"src": "6406:13:22",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "6390:29:22",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 2716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2714,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "6531:12:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2715,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2681,
															"src": "6546:13:22",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "6531:28:22",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2742,
														"nodeType": "Block",
														"src": "6753:100:22",
														"statements": [
															{
																"expression": {
																	"id": 2740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2734,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2688,
																		"src": "6768:7:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2736,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2679,
																				"src": "6801:13:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2737,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2681,
																				"src": "6816:13:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2738,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2683,
																				"src": "6831:9:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2735,
																			"name": "getAmount1ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "6778:22:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6778:63:22",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6768:73:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2741,
																"nodeType": "ExpressionStatement",
																"src": "6768:73:22"
															}
														]
													},
													"id": 2743,
													"nodeType": "IfStatement",
													"src": "6527:326:22",
													"trueBody": {
														"id": 2733,
														"nodeType": "Block",
														"src": "6561:186:22",
														"statements": [
															{
																"expression": {
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2717,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2686,
																		"src": "6576:7:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2719,
																				"name": "sqrtRatioX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2677,
																				"src": "6609:12:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2720,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2681,
																				"src": "6623:13:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2721,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2683,
																				"src": "6638:9:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2718,
																			"name": "getAmount0ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2639,
																			"src": "6586:22:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6586:62:22",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6576:72:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2724,
																"nodeType": "ExpressionStatement",
																"src": "6576:72:22"
															},
															{
																"expression": {
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2725,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2688,
																		"src": "6663:7:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2727,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2679,
																				"src": "6696:13:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2728,
																				"name": "sqrtRatioX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2677,
																				"src": "6711:12:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2729,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2683,
																				"src": "6725:9:22",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2726,
																			"name": "getAmount1ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "6673:22:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6673:62:22",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6663:72:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2732,
																"nodeType": "ExpressionStatement",
																"src": "6663:72:22"
															}
														]
													}
												},
												"id": 2744,
												"nodeType": "IfStatement",
												"src": "6386:467:22",
												"trueBody": {
													"id": 2713,
													"nodeType": "Block",
													"src": "6421:100:22",
													"statements": [
														{
															"expression": {
																"id": 2711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2705,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2686,
																	"src": "6436:7:22",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2707,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2679,
																			"src": "6469:13:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2708,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2681,
																			"src": "6484:13:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2709,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "6499:9:22",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		],
																		"id": 2706,
																		"name": "getAmount0ForLiquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2639,
																		"src": "6446:22:22",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																		}
																	},
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6446:63:22",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6436:73:22",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2712,
															"nodeType": "ExpressionStatement",
															"src": "6436:73:22"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2675,
										"nodeType": "StructuredDocumentation",
										"src": "5502:537:22",
										"text": "@notice Computes the token0 and token1 value for a given amount of liquidity, the current\n pool prices and the prices at the tick boundaries\n @param sqrtRatioX96 A sqrt price representing the current pool prices\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"id": 2746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsForLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "sqrtRatioX96",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "6087:20:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2676,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6087:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "6118:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2678,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "6150:21:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2680,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6150:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "6182:17:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2682,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6182:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6076:130:22"
									},
									"returnParameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "6230:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6230:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "6247:15:22",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6247:7:22",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6229:34:22"
									},
									"scope": 2747,
									"src": "6045:815:22",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2748,
							"src": "311:6552:22"
						}
					],
					"src": "46:6819:22"
				},
				"id": 22
			},
			"contracts/core/libraries/LiquidityMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
					"exportedSymbols": {
						"LiquidityMath": [
							2799
						]
					},
					"id": 2800,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2749,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:23"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2750,
								"nodeType": "StructuredDocumentation",
								"src": "71:38:23",
								"text": "@title Math library for liquidity"
							},
							"fullyImplemented": true,
							"id": 2799,
							"linearizedBaseContracts": [
								2799
							],
							"name": "LiquidityMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2797,
										"nodeType": "Block",
										"src": "456:163:23",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 2762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2760,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2755,
														"src": "470:1:23",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 2761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "474:1:23",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "470:5:23",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2795,
													"nodeType": "Block",
													"src": "548:65:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 2791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"id": 2788,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2781,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2758,
																						"src": "571:1:23",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 2787,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2782,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2753,
																							"src": "575:1:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 2785,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2755,
																									"src": "587:1:23",
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 2784,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "579:7:23",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 2783,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "579:7:23",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2786,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "579:10:23",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "575:14:23",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "571:18:23",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 2789,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "570:20:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2790,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2753,
																			"src": "594:1:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "570:25:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c41",
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "597:4:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		},
																		"value": "LA"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383",
																			"typeString": "literal_string \"LA\""
																		}
																	],
																	"id": 2780,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "562:7:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "562:40:23",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2794,
															"nodeType": "ExpressionStatement",
															"src": "562:40:23"
														}
													]
												},
												"id": 2796,
												"nodeType": "IfStatement",
												"src": "466:147:23",
												"trueBody": {
													"id": 2779,
													"nodeType": "Block",
													"src": "477:65:23",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"id": 2772,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2764,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2758,
																						"src": "500:1:23",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						},
																						"id": 2771,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2765,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2753,
																							"src": "504:1:23",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 2769,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "-",
																									"prefix": true,
																									"src": "516:2:23",
																									"subExpression": {
																										"id": 2768,
																										"name": "y",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2755,
																										"src": "517:1:23",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int128",
																											"typeString": "int128"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 2767,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "508:7:23",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint128_$",
																									"typeString": "type(uint128)"
																								},
																								"typeName": {
																									"id": 2766,
																									"name": "uint128",
																									"nodeType": "ElementaryTypeName",
																									"src": "508:7:23",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2770,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "508:11:23",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						},
																						"src": "504:15:23",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "500:19:23",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"id": 2773,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "499:21:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2774,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2753,
																			"src": "523:1:23",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "499:25:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c53",
																		"id": 2776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "526:4:23",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		},
																		"value": "LS"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985",
																			"typeString": "literal_string \"LS\""
																		}
																	],
																	"id": 2763,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "491:7:23",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "491:40:23",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2778,
															"nodeType": "ExpressionStatement",
															"src": "491:40:23"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2751,
										"nodeType": "StructuredDocumentation",
										"src": "137:241:23",
										"text": "@notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n @param x The liquidity before change\n @param y The delta by which liquidity should be changed\n @return z The liquidity delta"
									},
									"id": 2798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addDelta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2753,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "401:9:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2752,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "412:8:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2754,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "412:6:23",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:21:23"
									},
									"returnParameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "445:9:23",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2757,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:23",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:11:23"
									},
									"scope": 2799,
									"src": "383:236:23",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2800,
							"src": "109:512:23"
						}
					],
					"src": "45:577:23"
				},
				"id": 23
			},
			"contracts/core/libraries/LowGasSafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
					"exportedSymbols": {
						"LowGasSafeMath": [
							2929
						]
					},
					"id": 2930,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2801,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:24"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2802,
								"nodeType": "StructuredDocumentation",
								"src": "71:178:24",
								"text": "@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost"
							},
							"fullyImplemented": true,
							"id": 2929,
							"linearizedBaseContracts": [
								2929
							],
							"name": "LowGasSafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2823,
										"nodeType": "Block",
										"src": "504:42:24",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2813,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2810,
																			"src": "523:1:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2814,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2805,
																				"src": "527:1:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2815,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2807,
																				"src": "531:1:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "527:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "523:9:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2818,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "522:11:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2819,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2805,
																"src": "537:1:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "522:16:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "514:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "514:25:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2822,
												"nodeType": "ExpressionStatement",
												"src": "514:25:24"
											}
										]
									},
									"documentation": {
										"id": 2803,
										"nodeType": "StructuredDocumentation",
										"src": "278:152:24",
										"text": "@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 2824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "448:9:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "459:9:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:22:24"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "493:9:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:11:24"
									},
									"scope": 2929,
									"src": "435:111:24",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2845,
										"nodeType": "Block",
										"src": "779:42:24",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2835,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2832,
																			"src": "798:1:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2836,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2827,
																				"src": "802:1:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2837,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2829,
																				"src": "806:1:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "802:5:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "798:9:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2840,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "797:11:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2841,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2827,
																"src": "812:1:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "797:16:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2834,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "789:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "789:25:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2844,
												"nodeType": "ExpressionStatement",
												"src": "789:25:24"
											}
										]
									},
									"documentation": {
										"id": 2825,
										"nodeType": "StructuredDocumentation",
										"src": "552:153:24",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 2846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "723:9:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "734:9:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:22:24"
									},
									"returnParameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "768:9:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:11:24"
									},
									"scope": 2929,
									"src": "710:111:24",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2873,
										"nodeType": "Block",
										"src": "1055:56:24",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2857,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2849,
																	"src": "1073:1:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1078:1:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1073:6:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 2864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2860,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2854,
																					"src": "1084:1:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2863,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2861,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2849,
																						"src": "1088:1:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2862,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2851,
																						"src": "1092:1:24",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1088:5:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1084:9:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2865,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1083:11:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2866,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2849,
																		"src": "1097:1:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1083:15:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2868,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "1102:1:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1083:20:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1073:30:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1065:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:39:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2872,
												"nodeType": "ExpressionStatement",
												"src": "1065:39:24"
											}
										]
									},
									"documentation": {
										"id": 2847,
										"nodeType": "StructuredDocumentation",
										"src": "827:154:24",
										"text": "@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"
									},
									"id": 2874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "999:9:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "1010:9:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "998:22:24"
									},
									"returnParameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "1044:9:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:24",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:11:24"
									},
									"scope": 2929,
									"src": "986:125:24",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2900,
										"nodeType": "Block",
										"src": "1342:54:24",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 2889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2885,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2882,
																				"src": "1361:1:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2886,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2877,
																					"src": "1365:1:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 2887,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2879,
																					"src": "1369:1:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1365:5:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1361:9:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2890,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1360:11:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2891,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "1375:1:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1360:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2893,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2879,
																			"src": "1381:1:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1386:1:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1381:6:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2896,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1380:8:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1360:28:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1352:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:37:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2899,
												"nodeType": "ExpressionStatement",
												"src": "1352:37:24"
											}
										]
									},
									"documentation": {
										"id": 2875,
										"nodeType": "StructuredDocumentation",
										"src": "1117:154:24",
										"text": "@notice Returns x + y, reverts if overflows or underflows\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 2901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "1289:8:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2876,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "1299:8:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2878,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:20:24"
									},
									"returnParameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2901,
												"src": "1332:8:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2881,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:10:24"
									},
									"scope": 2929,
									"src": "1276:120:24",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2927,
										"nodeType": "Block",
										"src": "1639:54:24",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 2916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2912,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2909,
																				"src": "1658:1:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2915,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2913,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2904,
																					"src": "1662:1:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2914,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2906,
																					"src": "1666:1:24",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "1662:5:24",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1658:9:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2917,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1657:11:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2918,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2904,
																	"src": "1672:1:24",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1657:16:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2920,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2906,
																			"src": "1678:1:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1683:1:24",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1678:6:24",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2923,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1677:8:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1657:28:24",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1649:7:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:37:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2926,
												"nodeType": "ExpressionStatement",
												"src": "1649:37:24"
											}
										]
									},
									"documentation": {
										"id": 2902,
										"nodeType": "StructuredDocumentation",
										"src": "1402:166:24",
										"text": "@notice Returns x - y, reverts if overflows or underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 2928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1586:8:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2903,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1596:8:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2905,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1596:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:20:24"
									},
									"returnParameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1629:8:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2908,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1629:6:24",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:10:24"
									},
									"scope": 2929,
									"src": "1573:120:24",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2930,
							"src": "249:1446:24"
						}
					],
					"src": "45:1651:24"
				},
				"id": 24
			},
			"contracts/core/libraries/Position.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/Position.sol",
					"exportedSymbols": {
						"FixedPoint128": [
							2224
						],
						"FullMath": [
							2407
						],
						"LiquidityMath": [
							2799
						],
						"Position": [
							3114
						]
					},
					"id": 3115,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2931,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:25"
						},
						{
							"absolutePath": "contracts/core/libraries/FullMath.sol",
							"file": "./FullMath.sol",
							"id": 2932,
							"nodeType": "ImportDirective",
							"scope": 3115,
							"sourceUnit": 2408,
							"src": "78:24:25",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FixedPoint128.sol",
							"file": "./FixedPoint128.sol",
							"id": 2933,
							"nodeType": "ImportDirective",
							"scope": 3115,
							"sourceUnit": 2225,
							"src": "103:29:25",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
							"file": "./LiquidityMath.sol",
							"id": 2934,
							"nodeType": "ImportDirective",
							"scope": 3115,
							"sourceUnit": 2800,
							"src": "133:29:25",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2935,
								"nodeType": "StructuredDocumentation",
								"src": "164:201:25",
								"text": "@title Position\n @notice Positions represent an owner address' liquidity between a lower and upper tick boundary\n @dev Positions store additional state for tracking fees owed to the position"
							},
							"fullyImplemented": true,
							"id": 3114,
							"linearizedBaseContracts": [
								3114
							],
							"name": "Position",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Position.Info",
									"id": 2946,
									"members": [
										{
											"constant": false,
											"id": 2937,
											"mutability": "mutable",
											"name": "liquidity",
											"nodeType": "VariableDeclaration",
											"scope": 2946,
											"src": "512:17:25",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2936,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "512:7:25",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2939,
											"mutability": "mutable",
											"name": "feeGrowthInside0LastX128",
											"nodeType": "VariableDeclaration",
											"scope": 2946,
											"src": "631:32:25",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2938,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "631:7:25",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2941,
											"mutability": "mutable",
											"name": "feeGrowthInside1LastX128",
											"nodeType": "VariableDeclaration",
											"scope": 2946,
											"src": "673:32:25",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2940,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "673:7:25",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2943,
											"mutability": "mutable",
											"name": "tokensOwed0",
											"nodeType": "VariableDeclaration",
											"scope": 2946,
											"src": "779:19:25",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2942,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "779:7:25",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2945,
											"mutability": "mutable",
											"name": "tokensOwed1",
											"nodeType": "VariableDeclaration",
											"scope": 2946,
											"src": "808:19:25",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2944,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "808:7:25",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nodeType": "StructDefinition",
									"scope": 3114,
									"src": "432:402:25",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2975,
										"nodeType": "Block",
										"src": "1445:90:25",
										"statements": [
											{
												"expression": {
													"id": 2973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2962,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2960,
														"src": "1455:8:25",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
															"typeString": "struct Position.Info storage pointer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 2963,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2951,
															"src": "1466:4:25",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$2946_storage_$",
																"typeString": "mapping(bytes32 => struct Position.Info storage ref)"
															}
														},
														"id": 2972,
														"indexExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2967,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2953,
																			"src": "1498:5:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2968,
																			"name": "tickLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2955,
																			"src": "1505:9:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		{
																			"id": 2969,
																			"name": "tickUpper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2957,
																			"src": "1516:9:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"expression": {
																			"id": 2965,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1481:3:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1481:16:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 2970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1481:45:25",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2964,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1471:9:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1471:56:25",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1466:62:25",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2946_storage",
															"typeString": "struct Position.Info storage ref"
														}
													},
													"src": "1455:73:25",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"id": 2974,
												"nodeType": "ExpressionStatement",
												"src": "1455:73:25"
											}
										]
									},
									"documentation": {
										"id": 2947,
										"nodeType": "StructuredDocumentation",
										"src": "840:416:25",
										"text": "@notice Returns the Info struct of a position, given an owner and position boundaries\n @param self The mapping containing all user positions\n @param owner The address of the position owner\n @param tickLower The lower tick boundary of the position\n @param tickUpper The upper tick boundary of the position\n @return position The position info struct of the given owners' position"
									},
									"id": 2976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2976,
												"src": "1274:37:25",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$2946_storage_$",
													"typeString": "mapping(bytes32 => struct Position.Info)"
												},
												"typeName": {
													"id": 2950,
													"keyType": {
														"id": 2948,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1282:7:25",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Mapping",
													"src": "1274:24:25",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$2946_storage_$",
														"typeString": "mapping(bytes32 => struct Position.Info)"
													},
													"valueType": {
														"id": 2949,
														"name": "Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2946,
														"src": "1293:4:25",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
															"typeString": "struct Position.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2976,
												"src": "1313:13:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:25",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 2976,
												"src": "1328:15:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2954,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1328:5:25",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 2976,
												"src": "1345:15:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2956,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1345:5:25",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:88:25"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "position",
												"nodeType": "VariableDeclaration",
												"scope": 2976,
												"src": "1409:30:25",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 2959,
													"name": "Position.Info",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2946,
													"src": "1409:13:25",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:32:25"
									},
									"scope": 3114,
									"src": "1261:274:25",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3112,
										"nodeType": "Block",
										"src": "2279:1380:25",
										"statements": [
											{
												"assignments": [
													2991
												],
												"declarations": [
													{
														"constant": false,
														"id": 2991,
														"mutability": "mutable",
														"name": "_self",
														"nodeType": "VariableDeclaration",
														"scope": 3112,
														"src": "2289:17:25",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$2946_memory_ptr",
															"typeString": "struct Position.Info"
														},
														"typeName": {
															"id": 2990,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 2946,
															"src": "2289:4:25",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
																"typeString": "struct Position.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2993,
												"initialValue": {
													"id": 2992,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2979,
													"src": "2309:4:25",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2289:24:25"
											},
											{
												"assignments": [
													2995
												],
												"declarations": [
													{
														"constant": false,
														"id": 2995,
														"mutability": "mutable",
														"name": "liquidityNext",
														"nodeType": "VariableDeclaration",
														"scope": 3112,
														"src": "2324:21:25",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 2994,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2324:7:25",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2996,
												"nodeType": "VariableDeclarationStatement",
												"src": "2324:21:25"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 2999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2997,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2981,
														"src": "2359:14:25",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:1:25",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2359:19:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3023,
													"nodeType": "Block",
													"src": "2534:96:25",
													"statements": [
														{
															"expression": {
																"id": 3021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3014,
																	"name": "liquidityNext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2995,
																	"src": "2548:13:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 3017,
																				"name": "_self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2991,
																				"src": "2587:5:25",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Info_$2946_memory_ptr",
																					"typeString": "struct Position.Info memory"
																				}
																			},
																			"id": 3018,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "liquidity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2937,
																			"src": "2587:15:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"id": 3019,
																			"name": "liquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2981,
																			"src": "2604:14:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"id": 3015,
																			"name": "LiquidityMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "2564:13:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_LiquidityMath_$2799_$",
																				"typeString": "type(library LiquidityMath)"
																			}
																		},
																		"id": 3016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "addDelta",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2798,
																		"src": "2564:22:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_int128_$returns$_t_uint128_$",
																			"typeString": "function (uint128,int128) pure returns (uint128)"
																		}
																	},
																	"id": 3020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2564:55:25",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2548:71:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3022,
															"nodeType": "ExpressionStatement",
															"src": "2548:71:25"
														}
													]
												},
												"id": 3024,
												"nodeType": "IfStatement",
												"src": "2355:275:25",
												"trueBody": {
													"id": 3013,
													"nodeType": "Block",
													"src": "2380:148:25",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"id": 3004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3001,
																				"name": "_self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2991,
																				"src": "2402:5:25",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Info_$2946_memory_ptr",
																					"typeString": "struct Position.Info memory"
																				}
																			},
																			"id": 3002,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "liquidity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2937,
																			"src": "2402:15:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2420:1:25",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2402:19:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e50",
																		"id": 3005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2423:4:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
																			"typeString": "literal_string \"NP\""
																		},
																		"value": "NP"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d",
																			"typeString": "literal_string \"NP\""
																		}
																	],
																	"id": 3000,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2394:7:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2394:34:25",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3007,
															"nodeType": "ExpressionStatement",
															"src": "2394:34:25"
														},
														{
															"expression": {
																"id": 3011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3008,
																	"name": "liquidityNext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2995,
																	"src": "2486:13:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3009,
																		"name": "_self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2991,
																		"src": "2502:5:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$2946_memory_ptr",
																			"typeString": "struct Position.Info memory"
																		}
																	},
																	"id": 3010,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "liquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2937,
																	"src": "2502:15:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2486:31:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3012,
															"nodeType": "ExpressionStatement",
															"src": "2486:31:25"
														}
													]
												}
											},
											{
												"assignments": [
													3026
												],
												"declarations": [
													{
														"constant": false,
														"id": 3026,
														"mutability": "mutable",
														"name": "tokensOwed0",
														"nodeType": "VariableDeclaration",
														"scope": 3112,
														"src": "2640:19:25",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 3025,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2640:7:25",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3027,
												"nodeType": "VariableDeclarationStatement",
												"src": "2640:19:25"
											},
											{
												"assignments": [
													3029
												],
												"declarations": [
													{
														"constant": false,
														"id": 3029,
														"mutability": "mutable",
														"name": "tokensOwed1",
														"nodeType": "VariableDeclaration",
														"scope": 3112,
														"src": "2669:19:25",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 3028,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2669:7:25",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3030,
												"nodeType": "VariableDeclarationStatement",
												"src": "2669:19:25"
											},
											{
												"condition": {
													"id": 3032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2702:7:25",
													"subExpression": {
														"id": 3031,
														"name": "staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2987,
														"src": "2703:6:25",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3068,
												"nodeType": "IfStatement",
												"src": "2698:490:25",
												"trueBody": {
													"id": 3067,
													"nodeType": "Block",
													"src": "2711:477:25",
													"statements": [
														{
															"expression": {
																"id": 3048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3033,
																	"name": "tokensOwed0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3026,
																	"src": "2767:11:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3041,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3038,
																						"name": "feeGrowthInside0X128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2983,
																						"src": "2843:20:25",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 3039,
																							"name": "_self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2991,
																							"src": "2866:5:25",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Info_$2946_memory_ptr",
																								"typeString": "struct Position.Info memory"
																							}
																						},
																						"id": 3040,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "feeGrowthInside0LastX128",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2939,
																						"src": "2866:30:25",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2843:53:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 3042,
																						"name": "_self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2991,
																						"src": "2898:5:25",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$2946_memory_ptr",
																							"typeString": "struct Position.Info memory"
																						}
																					},
																					"id": 3043,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2937,
																					"src": "2898:15:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				{
																					"expression": {
																						"id": 3044,
																						"name": "FixedPoint128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2224,
																						"src": "2915:13:25",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint128_$2224_$",
																							"typeString": "type(library FixedPoint128)"
																						}
																					},
																					"id": 3045,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q128",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2223,
																					"src": "2915:18:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3036,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2407,
																					"src": "2806:8:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 3037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDiv",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2363,
																				"src": "2806:15:25",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2806:145:25",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2781:7:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 3034,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2781:7:25",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2781:184:25",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2767:198:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3049,
															"nodeType": "ExpressionStatement",
															"src": "2767:198:25"
														},
														{
															"expression": {
																"id": 3065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3050,
																	"name": "tokensOwed1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3029,
																	"src": "2979:11:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3058,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3055,
																						"name": "feeGrowthInside1X128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2985,
																						"src": "3055:20:25",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 3056,
																							"name": "_self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2991,
																							"src": "3078:5:25",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Info_$2946_memory_ptr",
																								"typeString": "struct Position.Info memory"
																							}
																						},
																						"id": 3057,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "feeGrowthInside1LastX128",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2941,
																						"src": "3078:30:25",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3055:53:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 3059,
																						"name": "_self",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2991,
																						"src": "3110:5:25",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$2946_memory_ptr",
																							"typeString": "struct Position.Info memory"
																						}
																					},
																					"id": 3060,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2937,
																					"src": "3110:15:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				{
																					"expression": {
																						"id": 3061,
																						"name": "FixedPoint128",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2224,
																						"src": "3127:13:25",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint128_$2224_$",
																							"typeString": "type(library FixedPoint128)"
																						}
																					},
																					"id": 3062,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q128",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2223,
																					"src": "3127:18:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 3053,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2407,
																					"src": "3018:8:25",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 3054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDiv",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2363,
																				"src": "3018:15:25",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3018:145:25",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2993:7:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 3051,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2993:7:25",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2993:184:25",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "2979:198:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3066,
															"nodeType": "ExpressionStatement",
															"src": "2979:198:25"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													},
													"id": 3071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3069,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2981,
														"src": "3233:14:25",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3251:1:25",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:19:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3078,
												"nodeType": "IfStatement",
												"src": "3229:55:25",
												"trueBody": {
													"expression": {
														"id": 3076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"expression": {
																"id": 3072,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2979,
																"src": "3254:4:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
																	"typeString": "struct Position.Info storage pointer"
																}
															},
															"id": 3074,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2937,
															"src": "3254:14:25",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 3075,
															"name": "liquidityNext",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "3271:13:25",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "3254:30:25",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"id": 3077,
													"nodeType": "ExpressionStatement",
													"src": "3254:30:25"
												}
											},
											{
												"expression": {
													"id": 3083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3079,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2979,
															"src": "3294:4:25",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 3081,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthInside0LastX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2939,
														"src": "3294:29:25",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3082,
														"name": "feeGrowthInside0X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2983,
														"src": "3326:20:25",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3294:52:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3084,
												"nodeType": "ExpressionStatement",
												"src": "3294:52:25"
											},
											{
												"expression": {
													"id": 3089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3085,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2979,
															"src": "3356:4:25",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 3087,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthInside1LastX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2941,
														"src": "3356:29:25",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3088,
														"name": "feeGrowthInside1X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2985,
														"src": "3388:20:25",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:52:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3090,
												"nodeType": "ExpressionStatement",
												"src": "3356:52:25"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"id": 3093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3091,
															"name": "tokensOwed0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3026,
															"src": "3422:11:25",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3436:1:25",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3422:15:25",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"id": 3096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3094,
															"name": "tokensOwed1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3029,
															"src": "3441:11:25",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3455:1:25",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3441:15:25",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3422:34:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3111,
												"nodeType": "IfStatement",
												"src": "3418:235:25",
												"trueBody": {
													"id": 3110,
													"nodeType": "Block",
													"src": "3458:195:25",
													"statements": [
														{
															"expression": {
																"id": 3102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3098,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2979,
																		"src": "3566:4:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
																			"typeString": "struct Position.Info storage pointer"
																		}
																	},
																	"id": 3100,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tokensOwed0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2943,
																	"src": "3566:16:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 3101,
																	"name": "tokensOwed0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3026,
																	"src": "3586:11:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3566:31:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3103,
															"nodeType": "ExpressionStatement",
															"src": "3566:31:25"
														},
														{
															"expression": {
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3104,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2979,
																		"src": "3611:4:25",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
																			"typeString": "struct Position.Info storage pointer"
																		}
																	},
																	"id": 3106,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tokensOwed1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2945,
																	"src": "3611:16:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 3107,
																	"name": "tokensOwed1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3029,
																	"src": "3631:11:25",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3611:31:25",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 3109,
															"nodeType": "ExpressionStatement",
															"src": "3611:31:25"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2977,
										"nodeType": "StructuredDocumentation",
										"src": "1541:547:25",
										"text": "@notice Credits accumulated fees to a user's position\n @param self The individual position to update\n @param liquidityDelta The change in pool liquidity as a result of the position update\n @param feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n @param feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries\n @param staked Signifies if the position is staked in the gauge or not"
									},
									"id": 3113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2979,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "2118:17:25",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 2978,
													"name": "Info",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2946,
													"src": "2118:4:25",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$2946_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "2145:21:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2980,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2145:6:25",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2983,
												"mutability": "mutable",
												"name": "feeGrowthInside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "2176:28:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "feeGrowthInside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "2214:28:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:25",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "staked",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "2252:11:25",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2252:4:25",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2108:161:25"
									},
									"returnParameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2279:0:25"
									},
									"scope": 3114,
									"src": "2093:1566:25",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3115,
							"src": "365:3296:25"
						}
					],
					"src": "45:3617:25"
				},
				"id": 25
			},
			"contracts/core/libraries/SafeCast.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							3184
						]
					},
					"id": 3185,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3116,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:26"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3117,
								"nodeType": "StructuredDocumentation",
								"src": "71:94:26",
								"text": "@title Safe casting methods\n @notice Contains methods for safely casting between types"
							},
							"fullyImplemented": true,
							"id": 3184,
							"linearizedBaseContracts": [
								3184
							],
							"name": "SafeCast",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3137,
										"nodeType": "Block",
										"src": "421:47:26",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 3131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3126,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3123,
																			"src": "440:1:26",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 3129,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3120,
																					"src": "452:1:26",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "444:7:26",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3127,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "444:7:26",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "444:10:26",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "440:14:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 3132,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "439:16:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3133,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3120,
																"src": "459:1:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "439:21:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "431:7:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "431:30:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3136,
												"nodeType": "ExpressionStatement",
												"src": "431:30:26"
											}
										]
									},
									"documentation": {
										"id": 3118,
										"nodeType": "StructuredDocumentation",
										"src": "188:164:26",
										"text": "@notice Cast a uint256 to a uint160, revert on overflow\n @param y The uint256 to be downcasted\n @return z The downcasted integer, now type uint160"
									},
									"id": 3138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "376:9:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:11:26"
									},
									"returnParameters": {
										"id": 3124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3123,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "410:9:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3122,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:11:26"
									},
									"scope": 3184,
									"src": "357:111:26",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3158,
										"nodeType": "Block",
										"src": "713:46:26",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 3155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 3152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3147,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3144,
																			"src": "732:1:26",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 3150,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3141,
																					"src": "743:1:26",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 3149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "736:6:26",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 3148,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "736:6:26",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "736:9:26",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "732:13:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"id": 3153,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "731:15:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3154,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3141,
																"src": "750:1:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "731:20:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "723:7:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "723:29:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3157,
												"nodeType": "ExpressionStatement",
												"src": "723:29:26"
											}
										]
									},
									"documentation": {
										"id": 3139,
										"nodeType": "StructuredDocumentation",
										"src": "474:173:26",
										"text": "@notice Cast a int256 to a int128, revert on overflow or underflow\n @param y The int256 to be downcasted\n @return z The downcasted integer, now type int128"
									},
									"id": 3159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3141,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3159,
												"src": "670:8:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3140,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "670:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:10:26"
									},
									"returnParameters": {
										"id": 3145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3144,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3159,
												"src": "703:8:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3143,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "703:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:10:26"
									},
									"scope": 3184,
									"src": "652:107:26",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3182,
										"nodeType": "Block",
										"src": "986:61:26",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3168,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3162,
																"src": "1004:1:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																},
																"id": 3171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1008:1:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "323535",
																	"id": 3170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1013:3:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "255"
																},
																"src": "1008:8:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																}
															},
															"src": "1004:12:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "996:7:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:21:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3174,
												"nodeType": "ExpressionStatement",
												"src": "996:21:26"
											},
											{
												"expression": {
													"id": 3180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3175,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3165,
														"src": "1027:1:26",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3178,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3162,
																"src": "1038:1:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1031:6:26",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 3176,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1031:6:26",
																"typeDescriptions": {}
															}
														},
														"id": 3179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1031:9:26",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1027:13:26",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 3181,
												"nodeType": "ExpressionStatement",
												"src": "1027:13:26"
											}
										]
									},
									"documentation": {
										"id": 3160,
										"nodeType": "StructuredDocumentation",
										"src": "765:154:26",
										"text": "@notice Cast a uint256 to a int256, revert on overflow\n @param y The uint256 to be casted\n @return z The casted integer, now type int256"
									},
									"id": 3183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3162,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "942:9:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:26",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:11:26"
									},
									"returnParameters": {
										"id": 3166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3165,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 3183,
												"src": "976:8:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3164,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:26",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:10:26"
									},
									"scope": 3184,
									"src": "924:123:26",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3185,
							"src": "165:884:26"
						}
					],
					"src": "45:1005:26"
				},
				"id": 26
			},
			"contracts/core/libraries/SqrtPriceMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/SqrtPriceMath.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							2234
						],
						"FullMath": [
							2407
						],
						"LowGasSafeMath": [
							2929
						],
						"SafeCast": [
							3184
						],
						"SqrtPriceMath": [
							3701
						],
						"UnsafeMath": [
							5178
						]
					},
					"id": 3702,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3186,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:27"
						},
						{
							"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
							"file": "./LowGasSafeMath.sol",
							"id": 3187,
							"nodeType": "ImportDirective",
							"scope": 3702,
							"sourceUnit": 2930,
							"src": "71:30:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 3188,
							"nodeType": "ImportDirective",
							"scope": 3702,
							"sourceUnit": 3185,
							"src": "102:24:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FullMath.sol",
							"file": "./FullMath.sol",
							"id": 3189,
							"nodeType": "ImportDirective",
							"scope": 3702,
							"sourceUnit": 2408,
							"src": "128:24:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/UnsafeMath.sol",
							"file": "./UnsafeMath.sol",
							"id": 3190,
							"nodeType": "ImportDirective",
							"scope": 3702,
							"sourceUnit": 5179,
							"src": "153:26:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/FixedPoint96.sol",
							"file": "./FixedPoint96.sol",
							"id": 3191,
							"nodeType": "ImportDirective",
							"scope": 3702,
							"sourceUnit": 2235,
							"src": "180:28:27",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3192,
								"nodeType": "StructuredDocumentation",
								"src": "210:167:27",
								"text": "@title Functions based on Q64.96 sqrt price and liquidity\n @notice Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas"
							},
							"fullyImplemented": true,
							"id": 3701,
							"linearizedBaseContracts": [
								3701
							],
							"name": "SqrtPriceMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3195,
									"libraryName": {
										"id": 3193,
										"name": "LowGasSafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2929,
										"src": "411:14:27",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LowGasSafeMath_$2929",
											"typeString": "library LowGasSafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "405:33:27",
									"typeName": {
										"id": 3194,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "430:7:27",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 3198,
									"libraryName": {
										"id": 3196,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3184,
										"src": "449:8:27",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$3184",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "443:27:27",
									"typeName": {
										"id": 3197,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:27",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 3318,
										"nodeType": "Block",
										"src": "1583:1206:27",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3212,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3205,
														"src": "1709:6:27",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1719:1:27",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1709:11:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3217,
												"nodeType": "IfStatement",
												"src": "1705:32:27",
												"trueBody": {
													"expression": {
														"id": 3215,
														"name": "sqrtPX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3201,
														"src": "1729:8:27",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"functionReturnParameters": 3211,
													"id": 3216,
													"nodeType": "Return",
													"src": "1722:15:27"
												}
											},
											{
												"assignments": [
													3219
												],
												"declarations": [
													{
														"constant": false,
														"id": 3219,
														"mutability": "mutable",
														"name": "numerator1",
														"nodeType": "VariableDeclaration",
														"scope": 3318,
														"src": "1747:18:27",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1747:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3227,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3222,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3203,
																"src": "1776:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 3221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1768:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3220,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1768:7:27",
																"typeDescriptions": {}
															}
														},
														"id": 3223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1768:18:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"expression": {
															"id": 3224,
															"name": "FixedPoint96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "1790:12:27",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																"typeString": "type(library FixedPoint96)"
															}
														},
														"id": 3225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "RESOLUTION",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2230,
														"src": "1790:23:27",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1768:45:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1747:66:27"
											},
											{
												"condition": {
													"id": 3228,
													"name": "add",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3207,
													"src": "1828:3:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3316,
													"nodeType": "Block",
													"src": "2339:444:27",
													"statements": [
														{
															"assignments": [
																3282
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3282,
																	"mutability": "mutable",
																	"name": "product",
																	"nodeType": "VariableDeclaration",
																	"scope": 3316,
																	"src": "2353:15:27",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3281,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2353:7:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3283,
															"nodeType": "VariableDeclarationStatement",
															"src": "2353:15:27"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3292,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"id": 3289,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 3285,
																								"name": "product",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3282,
																								"src": "2549:7:27",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3288,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3286,
																									"name": "amount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3205,
																									"src": "2559:6:27",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"id": 3287,
																									"name": "sqrtPX96",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3201,
																									"src": "2568:8:27",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint160",
																										"typeString": "uint160"
																									}
																								},
																								"src": "2559:17:27",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2549:27:27",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 3290,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2548:29:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3291,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3205,
																					"src": "2580:6:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2548:38:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 3293,
																				"name": "sqrtPX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3201,
																				"src": "2590:8:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "2548:50:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3295,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3219,
																				"src": "2602:10:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 3296,
																				"name": "product",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3282,
																				"src": "2615:7:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2602:20:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2548:74:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 3284,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2540:7:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 3299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2540:83:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3300,
															"nodeType": "ExpressionStatement",
															"src": "2540:83:27"
														},
														{
															"assignments": [
																3302
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3302,
																	"mutability": "mutable",
																	"name": "denominator",
																	"nodeType": "VariableDeclaration",
																	"scope": 3316,
																	"src": "2637:19:27",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3301,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2637:7:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3306,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3303,
																	"name": "numerator1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3219,
																	"src": "2659:10:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 3304,
																	"name": "product",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3282,
																	"src": "2672:7:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2659:20:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2637:42:27"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3309,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3219,
																				"src": "2726:10:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 3310,
																				"name": "sqrtPX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3201,
																				"src": "2738:8:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 3311,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3302,
																				"src": "2748:11:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 3307,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2407,
																				"src": "2700:8:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 3308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDivRoundingUp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2406,
																			"src": "2700:25:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2700:60:27",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toUint160",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3138,
																	"src": "2700:70:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint160)"
																	}
																},
																"id": 3314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2700:72:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 3211,
															"id": 3315,
															"nodeType": "Return",
															"src": "2693:79:27"
														}
													]
												},
												"id": 3317,
												"nodeType": "IfStatement",
												"src": "1824:959:27",
												"trueBody": {
													"id": 3280,
													"nodeType": "Block",
													"src": "1833:500:27",
													"statements": [
														{
															"assignments": [
																3230
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3230,
																	"mutability": "mutable",
																	"name": "product",
																	"nodeType": "VariableDeclaration",
																	"scope": 3280,
																	"src": "1847:15:27",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3229,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1847:7:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3231,
															"nodeType": "VariableDeclarationStatement",
															"src": "1847:15:27"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 3236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 3232,
																					"name": "product",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3230,
																					"src": "1881:7:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3235,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3233,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3205,
																						"src": "1891:6:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3234,
																						"name": "sqrtPX96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3201,
																						"src": "1900:8:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"src": "1891:17:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1881:27:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 3237,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1880:29:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3238,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3205,
																		"src": "1912:6:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1880:38:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3240,
																	"name": "sqrtPX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3201,
																	"src": "1922:8:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "1880:50:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3264,
															"nodeType": "IfStatement",
															"src": "1876:343:27",
															"trueBody": {
																"id": 3263,
																"nodeType": "Block",
																"src": "1932:287:27",
																"statements": [
																	{
																		"assignments": [
																			3243
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3243,
																				"mutability": "mutable",
																				"name": "denominator",
																				"nodeType": "VariableDeclaration",
																				"scope": 3263,
																				"src": "1950:19:27",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 3242,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1950:7:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3247,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3244,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3219,
																				"src": "1972:10:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 3245,
																				"name": "product",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3230,
																				"src": "1985:7:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1972:20:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1950:42:27"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3248,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3243,
																				"src": "2014:11:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 3249,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3219,
																				"src": "2029:10:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2014:25:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3262,
																		"nodeType": "IfStatement",
																		"src": "2010:195:27",
																		"trueBody": {
																			"id": 3261,
																			"nodeType": "Block",
																			"src": "2041:164:27",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 3255,
																										"name": "numerator1",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3219,
																										"src": "2151:10:27",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 3256,
																										"name": "sqrtPX96",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3201,
																										"src": "2163:8:27",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint160",
																											"typeString": "uint160"
																										}
																									},
																									{
																										"id": 3257,
																										"name": "denominator",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3243,
																										"src": "2173:11:27",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_uint160",
																											"typeString": "uint160"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 3253,
																										"name": "FullMath",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2407,
																										"src": "2125:8:27",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																											"typeString": "type(library FullMath)"
																										}
																									},
																									"id": 3254,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mulDivRoundingUp",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2406,
																									"src": "2125:25:27",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 3258,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2125:60:27",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 3252,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2117:7:27",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							},
																							"typeName": {
																								"id": 3251,
																								"name": "uint160",
																								"nodeType": "ElementaryTypeName",
																								"src": "2117:7:27",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 3259,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2117:69:27",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"functionReturnParameters": 3211,
																					"id": 3260,
																					"nodeType": "Return",
																					"src": "2110:76:27"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3269,
																				"name": "numerator1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3219,
																				"src": "2273:10:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 3275,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3205,
																						"src": "2313:6:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3272,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3270,
																									"name": "numerator1",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3219,
																									"src": "2286:10:27",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 3271,
																									"name": "sqrtPX96",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3201,
																									"src": "2299:8:27",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint160",
																										"typeString": "uint160"
																									}
																								},
																								"src": "2286:21:27",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3273,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2285:23:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3274,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2824,
																					"src": "2285:27:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2285:35:27",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 3267,
																				"name": "UnsafeMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5178,
																				"src": "2248:10:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_UnsafeMath_$5178_$",
																					"typeString": "type(library UnsafeMath)"
																				}
																			},
																			"id": 3268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "divRoundingUp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 5177,
																			"src": "2248:24:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2248:73:27",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2240:7:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 3265,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "2240:7:27",
																		"typeDescriptions": {}
																	}
																},
																"id": 3278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2240:82:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 3211,
															"id": 3279,
															"nodeType": "Return",
															"src": "2233:89:27"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3199,
										"nodeType": "StructuredDocumentation",
										"src": "476:932:27",
										"text": "@notice Gets the next sqrt price given a delta of token0\n @dev Always rounds up, because in the exact output case (increasing price) we need to move the price at least\n far enough to get the desired output amount, and in the exact input case (decreasing price) we need to move the\n price less in order to not send too much output.\n The most precise formula for this is liquidity * sqrtPX96 / (liquidity +- amount * sqrtPX96),\n if this is impossible because of overflow, we calculate liquidity / (liquidity / sqrtPX96 +- amount).\n @param sqrtPX96 The starting price, i.e. before accounting for the token0 delta\n @param liquidity The amount of usable liquidity\n @param amount How much of token0 to add or remove from virtual reserves\n @param add Whether to add or remove the amount of token0\n @return The price after adding or removing amount, depending on add"
									},
									"id": 3319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromAmount0RoundingUp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3201,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 3319,
												"src": "1460:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3200,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3203,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3319,
												"src": "1478:17:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3202,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 3319,
												"src": "1497:14:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3207,
												"mutability": "mutable",
												"name": "add",
												"nodeType": "VariableDeclaration",
												"scope": 3319,
												"src": "1513:8:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1513:4:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:63:27"
									},
									"returnParameters": {
										"id": 3211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3210,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3319,
												"src": "1570:7:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3209,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1570:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1569:9:27"
									},
									"scope": 3701,
									"src": "1413:1376:27",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3413,
										"nodeType": "Block",
										"src": "3787:907:27",
										"statements": [
											{
												"condition": {
													"id": 3333,
													"name": "add",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3328,
													"src": "3955:3:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3411,
													"nodeType": "Block",
													"src": "4279:409:27",
													"statements": [
														{
															"assignments": [
																3372
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3372,
																	"mutability": "mutable",
																	"name": "quotient",
																	"nodeType": "VariableDeclaration",
																	"scope": 3411,
																	"src": "4293:16:27",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3371,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4293:7:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3397,
															"initialValue": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3373,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3326,
																				"src": "4330:6:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 3376,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4345:7:27",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							},
																							"typeName": {
																								"id": 3375,
																								"name": "uint160",
																								"nodeType": "ElementaryTypeName",
																								"src": "4345:7:27",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							}
																						],
																						"id": 3374,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967269,
																						"src": "4340:4:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 3377,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4340:13:27",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint160",
																						"typeString": "type(uint160)"
																					}
																				},
																				"id": 3378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"src": "4340:17:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "4330:27:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"arguments": [
																				{
																					"id": 3390,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3326,
																					"src": "4499:6:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 3391,
																						"name": "FixedPoint96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2234,
																						"src": "4507:12:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																							"typeString": "type(library FixedPoint96)"
																						}
																					},
																					"id": 3392,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q96",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2233,
																					"src": "4507:16:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3393,
																					"name": "liquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3324,
																					"src": "4525:9:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"expression": {
																					"id": 3388,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2407,
																					"src": "4473:8:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 3389,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDivRoundingUp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2406,
																				"src": "4473:25:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4473:62:27",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "4330:205:27",
																		"trueExpression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3385,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3382,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3326,
																						"src": "4405:6:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"expression": {
																							"id": 3383,
																							"name": "FixedPoint96",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2234,
																							"src": "4415:12:27",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																								"typeString": "type(library FixedPoint96)"
																							}
																						},
																						"id": 3384,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "RESOLUTION",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2230,
																						"src": "4415:23:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "4405:33:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3386,
																					"name": "liquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3324,
																					"src": "4440:9:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"expression": {
																					"id": 3380,
																					"name": "UnsafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5178,
																					"src": "4380:10:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_UnsafeMath_$5178_$",
																						"typeString": "type(library UnsafeMath)"
																					}
																				},
																				"id": 3381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "divRoundingUp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5177,
																				"src": "4380:24:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4380:70:27",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3396,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4312:237:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4293:256:27"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3399,
																			"name": "sqrtPX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3322,
																			"src": "4572:8:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 3400,
																			"name": "quotient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3372,
																			"src": "4583:8:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4572:19:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 3398,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4564:7:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 3402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4564:28:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3403,
															"nodeType": "ExpressionStatement",
															"src": "4564:28:27"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3406,
																			"name": "sqrtPX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3322,
																			"src": "4657:8:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 3407,
																			"name": "quotient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3372,
																			"src": "4668:8:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4657:19:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4649:7:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 3404,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "4649:7:27",
																		"typeDescriptions": {}
																	}
																},
																"id": 3409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4649:28:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 3332,
															"id": 3410,
															"nodeType": "Return",
															"src": "4642:35:27"
														}
													]
												},
												"id": 3412,
												"nodeType": "IfStatement",
												"src": "3951:737:27",
												"trueBody": {
													"id": 3370,
													"nodeType": "Block",
													"src": "3960:313:27",
													"statements": [
														{
															"assignments": [
																3335
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3335,
																	"mutability": "mutable",
																	"name": "quotient",
																	"nodeType": "VariableDeclaration",
																	"scope": 3370,
																	"src": "3974:16:27",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3334,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3974:7:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3359,
															"initialValue": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3336,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3326,
																				"src": "4011:6:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 3339,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4026:7:27",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							},
																							"typeName": {
																								"id": 3338,
																								"name": "uint160",
																								"nodeType": "ElementaryTypeName",
																								"src": "4026:7:27",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint160_$",
																								"typeString": "type(uint160)"
																							}
																						],
																						"id": 3337,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967269,
																						"src": "4021:4:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 3340,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4021:13:27",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint160",
																						"typeString": "type(uint160)"
																					}
																				},
																				"id": 3341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"src": "4021:17:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "4011:27:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"arguments": [
																				{
																					"id": 3352,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3326,
																					"src": "4147:6:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 3353,
																						"name": "FixedPoint96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2234,
																						"src": "4155:12:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																							"typeString": "type(library FixedPoint96)"
																						}
																					},
																					"id": 3354,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Q96",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2233,
																					"src": "4155:16:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3355,
																					"name": "liquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3324,
																					"src": "4173:9:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"expression": {
																					"id": 3350,
																					"name": "FullMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2407,
																					"src": "4131:8:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																						"typeString": "type(library FullMath)"
																					}
																				},
																				"id": 3351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mulDiv",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2363,
																				"src": "4131:15:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4131:52:27",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "4011:172:27",
																		"trueExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3346,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3343,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3326,
																							"src": "4062:6:27",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"expression": {
																								"id": 3344,
																								"name": "FixedPoint96",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2234,
																								"src": "4072:12:27",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																									"typeString": "type(library FixedPoint96)"
																								}
																							},
																							"id": 3345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "RESOLUTION",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2230,
																							"src": "4072:23:27",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "4062:33:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3347,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4061:35:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3348,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3324,
																				"src": "4099:9:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "4061:47:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3993:204:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3974:223:27"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3365,
																				"name": "quotient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3335,
																				"src": "4241:8:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 3362,
																						"name": "sqrtPX96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3322,
																						"src": "4227:8:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					],
																					"id": 3361,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4219:7:27",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3360,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "4219:7:27",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4219:17:27",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2824,
																			"src": "4219:21:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4219:31:27",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toUint160",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3138,
																	"src": "4219:41:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint160)"
																	}
																},
																"id": 3368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4219:43:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"functionReturnParameters": 3332,
															"id": 3369,
															"nodeType": "Return",
															"src": "4212:50:27"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3320,
										"nodeType": "StructuredDocumentation",
										"src": "2795:815:27",
										"text": "@notice Gets the next sqrt price given a delta of token1\n @dev Always rounds down, because in the exact output case (decreasing price) we need to move the price at least\n far enough to get the desired output amount, and in the exact input case (increasing price) we need to move the\n price less in order to not send too much output.\n The formula we compute is within <1 wei of the lossless version: sqrtPX96 +- amount / liquidity\n @param sqrtPX96 The starting price, i.e., before accounting for the token1 delta\n @param liquidity The amount of usable liquidity\n @param amount How much of token1 to add, or remove, from virtual reserves\n @param add Whether to add, or remove, the amount of token1\n @return The price after adding or removing `amount`"
									},
									"id": 3414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromAmount1RoundingDown",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3322,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "3664:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3321,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3664:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "3682:17:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3323,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3326,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "3701:14:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3701:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "add",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "3717:8:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3717:4:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3663:63:27"
									},
									"returnParameters": {
										"id": 3332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3331,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3414,
												"src": "3774:7:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3330,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:27"
									},
									"scope": 3701,
									"src": "3615:1079:27",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3455,
										"nodeType": "Block",
										"src": "5419:344:27",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 3431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3429,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3417,
																"src": "5437:8:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5448:1:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5437:12:27",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5429:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5429:21:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3433,
												"nodeType": "ExpressionStatement",
												"src": "5429:21:27"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 3437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3435,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3419,
																"src": "5468:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5480:1:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5468:13:27",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5460:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5460:22:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3439,
												"nodeType": "ExpressionStatement",
												"src": "5460:22:27"
											},
											{
												"expression": {
													"condition": {
														"id": 3440,
														"name": "zeroForOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3423,
														"src": "5566:10:27",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 3448,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3417,
																"src": "5720:8:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 3449,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3419,
																"src": "5730:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 3450,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3421,
																"src": "5741:8:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 3451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5751:4:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3447,
															"name": "getNextSqrtPriceFromAmount1RoundingDown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3414,
															"src": "5680:39:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 3452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5680:76:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 3453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5566:190:27",
													"trueExpression": {
														"arguments": [
															{
																"id": 3442,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3417,
																"src": "5629:8:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 3443,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3419,
																"src": "5639:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 3444,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3421,
																"src": "5650:8:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 3445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5660:4:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3441,
															"name": "getNextSqrtPriceFromAmount0RoundingUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3319,
															"src": "5591:37:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 3446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5591:74:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 3427,
												"id": 3454,
												"nodeType": "Return",
												"src": "5559:197:27"
											}
										]
									},
									"documentation": {
										"id": 3415,
										"nodeType": "StructuredDocumentation",
										"src": "4700:538:27",
										"text": "@notice Gets the next sqrt price given an input amount of token0 or token1\n @dev Throws if price or liquidity are 0, or if the next price is out of bounds\n @param sqrtPX96 The starting price, i.e., before accounting for the input amount\n @param liquidity The amount of usable liquidity\n @param amountIn How much of token0, or token1, is being swapped in\n @param zeroForOne Whether the amount in is token0 or token1\n @return sqrtQX96 The price after adding the input amount to token0 or token1"
									},
									"id": 3456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3417,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 3456,
												"src": "5278:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3416,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3419,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3456,
												"src": "5296:17:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3418,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5296:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3421,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3456,
												"src": "5315:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5315:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3423,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 3456,
												"src": "5333:15:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5333:4:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5277:72:27"
									},
									"returnParameters": {
										"id": 3427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3426,
												"mutability": "mutable",
												"name": "sqrtQX96",
												"nodeType": "VariableDeclaration",
												"scope": 3456,
												"src": "5397:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3425,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5397:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5396:18:27"
									},
									"scope": 3701,
									"src": "5243:520:27",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3497,
										"nodeType": "Block",
										"src": "6487:342:27",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 3473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3471,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3459,
																"src": "6505:8:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6516:1:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6505:12:27",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6497:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6497:21:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3475,
												"nodeType": "ExpressionStatement",
												"src": "6497:21:27"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 3479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3477,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3461,
																"src": "6536:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6548:1:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6536:13:27",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6528:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6528:22:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3481,
												"nodeType": "ExpressionStatement",
												"src": "6528:22:27"
											},
											{
												"expression": {
													"condition": {
														"id": 3482,
														"name": "zeroForOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3465,
														"src": "6628:10:27",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 3490,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3459,
																"src": "6784:8:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 3491,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3461,
																"src": "6794:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 3492,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3463,
																"src": "6805:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 3493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6816:5:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3489,
															"name": "getNextSqrtPriceFromAmount0RoundingUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3319,
															"src": "6746:37:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 3494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6746:76:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 3495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6628:194:27",
													"trueExpression": {
														"arguments": [
															{
																"id": 3484,
																"name": "sqrtPX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3459,
																"src": "6693:8:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 3485,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3461,
																"src": "6703:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 3486,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3463,
																"src": "6714:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 3487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6725:5:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3483,
															"name": "getNextSqrtPriceFromAmount1RoundingDown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3414,
															"src": "6653:39:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 3488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:78:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 3469,
												"id": 3496,
												"nodeType": "Return",
												"src": "6621:201:27"
											}
										]
									},
									"documentation": {
										"id": 3457,
										"nodeType": "StructuredDocumentation",
										"src": "5769:535:27",
										"text": "@notice Gets the next sqrt price given an output amount of token0 or token1\n @dev Throws if price or liquidity are 0 or the next price is out of bounds\n @param sqrtPX96 The starting price before accounting for the output amount\n @param liquidity The amount of usable liquidity\n @param amountOut How much of token0, or token1, is being swapped out\n @param zeroForOne Whether the amount out is token0 or token1\n @return sqrtQX96 The price after removing the output amount of token0 or token1"
									},
									"id": 3498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3459,
												"mutability": "mutable",
												"name": "sqrtPX96",
												"nodeType": "VariableDeclaration",
												"scope": 3498,
												"src": "6345:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3458,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6345:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3461,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3498,
												"src": "6363:17:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3460,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6363:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3463,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 3498,
												"src": "6382:17:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6382:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3465,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 3498,
												"src": "6401:15:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6401:4:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6344:73:27"
									},
									"returnParameters": {
										"id": 3469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3468,
												"mutability": "mutable",
												"name": "sqrtQX96",
												"nodeType": "VariableDeclaration",
												"scope": 3498,
												"src": "6465:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3467,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6465:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6464:18:27"
									},
									"scope": 3701,
									"src": "6309:520:27",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3567,
										"nodeType": "Block",
										"src": "7549:519:27",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 3514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3512,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3501,
														"src": "7563:13:27",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3513,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3503,
														"src": "7579:13:27",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7563:29:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3523,
												"nodeType": "IfStatement",
												"src": "7559:98:27",
												"trueBody": {
													"expression": {
														"id": 3521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 3515,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3501,
																	"src": "7595:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 3516,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3503,
																	"src": "7610:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 3517,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "7594:30:27",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 3518,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3503,
																	"src": "7628:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 3519,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3501,
																	"src": "7643:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 3520,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7627:30:27",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "7594:63:27",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3522,
													"nodeType": "ExpressionStatement",
													"src": "7594:63:27"
												}
											},
											{
												"assignments": [
													3525
												],
												"declarations": [
													{
														"constant": false,
														"id": 3525,
														"mutability": "mutable",
														"name": "numerator1",
														"nodeType": "VariableDeclaration",
														"scope": 3567,
														"src": "7668:18:27",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7668:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3533,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3528,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3505,
																"src": "7697:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 3527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7689:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3526,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7689:7:27",
																"typeDescriptions": {}
															}
														},
														"id": 3529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7689:18:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"expression": {
															"id": 3530,
															"name": "FixedPoint96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "7711:12:27",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																"typeString": "type(library FixedPoint96)"
															}
														},
														"id": 3531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "RESOLUTION",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2230,
														"src": "7711:23:27",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7689:45:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7668:66:27"
											},
											{
												"assignments": [
													3535
												],
												"declarations": [
													{
														"constant": false,
														"id": 3535,
														"mutability": "mutable",
														"name": "numerator2",
														"nodeType": "VariableDeclaration",
														"scope": 3567,
														"src": "7744:18:27",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7744:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3539,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 3538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3536,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3503,
														"src": "7765:13:27",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3537,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3501,
														"src": "7781:13:27",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7765:29:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7744:50:27"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 3543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3541,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3501,
																"src": "7813:13:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7829:1:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7813:17:27",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7805:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7805:26:27",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3545,
												"nodeType": "ExpressionStatement",
												"src": "7805:26:27"
											},
											{
												"expression": {
													"condition": {
														"id": 3546,
														"name": "roundUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3507,
														"src": "7849:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3559,
																	"name": "numerator1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3525,
																	"src": "8007:10:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3560,
																	"name": "numerator2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3535,
																	"src": "8019:10:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3561,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3503,
																	"src": "8031:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"expression": {
																	"id": 3557,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2407,
																	"src": "7991:8:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 3558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2363,
																"src": "7991:15:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7991:54:27",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 3563,
															"name": "sqrtRatioAX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3501,
															"src": "8048:13:27",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "7991:70:27",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7849:212:27",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3551,
																		"name": "numerator1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3525,
																		"src": "7922:10:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3552,
																		"name": "numerator2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3535,
																		"src": "7934:10:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3553,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3503,
																		"src": "7946:13:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"expression": {
																		"id": 3549,
																		"name": "FullMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2407,
																		"src": "7896:8:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																			"typeString": "type(library FullMath)"
																		}
																	},
																	"id": 3550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mulDivRoundingUp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2406,
																	"src": "7896:25:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7896:64:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3555,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3501,
																"src": "7962:13:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"expression": {
																"id": 3547,
																"name": "UnsafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5178,
																"src": "7871:10:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_UnsafeMath_$5178_$",
																	"typeString": "type(library UnsafeMath)"
																}
															},
															"id": 3548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "divRoundingUp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5177,
															"src": "7871:24:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7871:105:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3511,
												"id": 3566,
												"nodeType": "Return",
												"src": "7842:219:27"
											}
										]
									},
									"documentation": {
										"id": 3499,
										"nodeType": "StructuredDocumentation",
										"src": "6835:537:27",
										"text": "@notice Gets the amount0 delta between two prices\n @dev Calculates liquidity / sqrt(lower) - liquidity / sqrt(upper),\n i.e. liquidity * (sqrt(upper) - sqrt(lower)) / (sqrt(upper) * sqrt(lower))\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The amount of usable liquidity\n @param roundUp Whether to round the amount up or down\n @return amount0 Amount of token0 required to cover a position of size liquidity between the two passed prices"
									},
									"id": 3568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount0Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3501,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "7402:21:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3500,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7402:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3503,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "7425:21:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3502,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7425:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3505,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "7448:17:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3504,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7448:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3507,
												"mutability": "mutable",
												"name": "roundUp",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "7467:12:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7467:4:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7401:79:27"
									},
									"returnParameters": {
										"id": 3511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3510,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 3568,
												"src": "7528:15:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7528:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7527:17:27"
									},
									"scope": 3701,
									"src": "7377:691:27",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3615,
										"nodeType": "Block",
										"src": "8695:330:27",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3582,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3571,
														"src": "8709:13:27",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3583,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3573,
														"src": "8725:13:27",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "8709:29:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3593,
												"nodeType": "IfStatement",
												"src": "8705:98:27",
												"trueBody": {
													"expression": {
														"id": 3591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 3585,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3571,
																	"src": "8741:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 3586,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3573,
																	"src": "8756:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 3587,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "8740:30:27",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 3588,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3573,
																	"src": "8774:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 3589,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3571,
																	"src": "8789:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 3590,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8773:30:27",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "8740:63:27",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3592,
													"nodeType": "ExpressionStatement",
													"src": "8740:63:27"
												}
											},
											{
												"expression": {
													"condition": {
														"id": 3594,
														"name": "roundUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3577,
														"src": "8821:7:27",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 3606,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3575,
																"src": "8959:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3607,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3573,
																	"src": "8970:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 3608,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3571,
																	"src": "8986:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8970:29:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"expression": {
																	"id": 3610,
																	"name": "FixedPoint96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "9001:12:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																		"typeString": "type(library FixedPoint96)"
																	}
																},
																"id": 3611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Q96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2233,
																"src": "9001:16:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3604,
																"name": "FullMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "8943:8:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																	"typeString": "type(library FullMath)"
																}
															},
															"id": 3605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2363,
															"src": "8943:15:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8943:75:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8821:197:27",
													"trueExpression": {
														"arguments": [
															{
																"id": 3597,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3575,
																"src": "8869:9:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 3600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3598,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3573,
																	"src": "8880:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 3599,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3571,
																	"src": "8896:13:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8880:29:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"expression": {
																	"id": 3601,
																	"name": "FixedPoint96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "8911:12:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$2234_$",
																		"typeString": "type(library FixedPoint96)"
																	}
																},
																"id": 3602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "Q96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2233,
																"src": "8911:16:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3595,
																"name": "FullMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "8843:8:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FullMath_$2407_$",
																	"typeString": "type(library FullMath)"
																}
															},
															"id": 3596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mulDivRoundingUp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2406,
															"src": "8843:25:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8843:85:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3581,
												"id": 3614,
												"nodeType": "Return",
												"src": "8814:204:27"
											}
										]
									},
									"documentation": {
										"id": 3569,
										"nodeType": "StructuredDocumentation",
										"src": "8074:444:27",
										"text": "@notice Gets the amount1 delta between two prices\n @dev Calculates liquidity * (sqrt(upper) - sqrt(lower))\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The amount of usable liquidity\n @param roundUp Whether to round the amount up, or down\n @return amount1 Amount of token1 required to cover a position of size liquidity between the two passed prices"
									},
									"id": 3616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount1Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3571,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 3616,
												"src": "8548:21:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3570,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8548:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3573,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 3616,
												"src": "8571:21:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3572,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8571:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3575,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3616,
												"src": "8594:17:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3574,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8594:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3577,
												"mutability": "mutable",
												"name": "roundUp",
												"nodeType": "VariableDeclaration",
												"scope": 3616,
												"src": "8613:12:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8613:4:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8547:79:27"
									},
									"returnParameters": {
										"id": 3581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3580,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 3616,
												"src": "8674:15:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8673:17:27"
									},
									"scope": 3701,
									"src": "8523:502:27",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3657,
										"nodeType": "Block",
										"src": "9525:234:27",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														},
														"id": 3630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3628,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3623,
															"src": "9542:9:27",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 3629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9554:1:27",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9542:13:27",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 3645,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3619,
																		"src": "9686:13:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 3646,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3621,
																		"src": "9701:13:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3649,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3623,
																				"src": "9724:9:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 3648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9716:7:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 3647,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "9716:7:27",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9716:18:27",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 3651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9736:4:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 3644,
																	"name": "getAmount0Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3568,
																		3658
																	],
																	"referencedDeclaration": 3568,
																	"src": "9670:15:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																	}
																},
																"id": 3652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9670:71:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toInt256",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3183,
															"src": "9670:80:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (int256)"
															}
														},
														"id": 3654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9670:82:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9542:210:27",
													"trueExpression": {
														"id": 3643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "9570:85:27",
														"subExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 3632,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3619,
																			"src": "9587:13:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 3633,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3621,
																			"src": "9602:13:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 3637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "9625:10:27",
																					"subExpression": {
																						"id": 3636,
																						"name": "liquidity",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3623,
																						"src": "9626:9:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 3635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9617:7:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint128_$",
																					"typeString": "type(uint128)"
																				},
																				"typeName": {
																					"id": 3634,
																					"name": "uint128",
																					"nodeType": "ElementaryTypeName",
																					"src": "9617:7:27",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9617:19:27",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"hexValue": "66616c7365",
																			"id": 3639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9638:5:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 3631,
																		"name": "getAmount0Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3568,
																			3658
																		],
																		"referencedDeclaration": 3568,
																		"src": "9571:15:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																		}
																	},
																	"id": 3640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9571:73:27",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt256",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3183,
																"src": "9571:82:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (int256)"
																}
															},
															"id": 3642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9571:84:27",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3627,
												"id": 3656,
												"nodeType": "Return",
												"src": "9535:217:27"
											}
										]
									},
									"documentation": {
										"id": 3617,
										"nodeType": "StructuredDocumentation",
										"src": "9031:333:27",
										"text": "@notice Helper that gets signed token0 delta\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The change in liquidity for which to compute the amount0 delta\n @return amount0 Amount of token0 corresponding to the passed liquidityDelta between the two prices"
									},
									"id": 3658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount0Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3619,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 3658,
												"src": "9394:21:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3618,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "9394:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3621,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 3658,
												"src": "9417:21:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3620,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "9417:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3623,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3658,
												"src": "9440:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3622,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "9440:6:27",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9393:64:27"
									},
									"returnParameters": {
										"id": 3627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3626,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 3658,
												"src": "9505:14:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3625,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "9505:6:27",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9504:16:27"
									},
									"scope": 3701,
									"src": "9369:390:27",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3699,
										"nodeType": "Block",
										"src": "10259:234:27",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														},
														"id": 3672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3670,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3665,
															"src": "10276:9:27",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 3671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10288:1:27",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10276:13:27",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 3687,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3661,
																		"src": "10420:13:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 3688,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3663,
																		"src": "10435:13:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3691,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3665,
																				"src": "10458:9:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 3690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10450:7:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 3689,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "10450:7:27",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10450:18:27",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 3693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10470:4:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 3686,
																	"name": "getAmount1Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3616,
																		3700
																	],
																	"referencedDeclaration": 3616,
																	"src": "10404:15:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																	}
																},
																"id": 3694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10404:71:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toInt256",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3183,
															"src": "10404:80:27",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (int256)"
															}
														},
														"id": 3696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10404:82:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10276:210:27",
													"trueExpression": {
														"id": 3685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "10304:85:27",
														"subExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 3674,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3661,
																			"src": "10321:13:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 3675,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3663,
																			"src": "10336:13:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 3679,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "10359:10:27",
																					"subExpression": {
																						"id": 3678,
																						"name": "liquidity",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3665,
																						"src": "10360:9:27",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 3677,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10351:7:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint128_$",
																					"typeString": "type(uint128)"
																				},
																				"typeName": {
																					"id": 3676,
																					"name": "uint128",
																					"nodeType": "ElementaryTypeName",
																					"src": "10351:7:27",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10351:19:27",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"hexValue": "66616c7365",
																			"id": 3681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10372:5:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 3673,
																		"name": "getAmount1Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3616,
																			3700
																		],
																		"referencedDeclaration": 3616,
																		"src": "10305:15:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128,bool) pure returns (uint256)"
																		}
																	},
																	"id": 3682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10305:73:27",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt256",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3183,
																"src": "10305:82:27",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (int256)"
																}
															},
															"id": 3684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10305:84:27",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3669,
												"id": 3698,
												"nodeType": "Return",
												"src": "10269:217:27"
											}
										]
									},
									"documentation": {
										"id": 3659,
										"nodeType": "StructuredDocumentation",
										"src": "9765:333:27",
										"text": "@notice Helper that gets signed token1 delta\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The change in liquidity for which to compute the amount1 delta\n @return amount1 Amount of token1 corresponding to the passed liquidityDelta between the two prices"
									},
									"id": 3700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount1Delta",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3661,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nodeType": "VariableDeclaration",
												"scope": 3700,
												"src": "10128:21:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3660,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "10128:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3663,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nodeType": "VariableDeclaration",
												"scope": 3700,
												"src": "10151:21:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3662,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "10151:7:27",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3665,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 3700,
												"src": "10174:16:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3664,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10174:6:27",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:64:27"
									},
									"returnParameters": {
										"id": 3669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3668,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 3700,
												"src": "10239:14:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3667,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10239:6:27",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10238:16:27"
									},
									"scope": 3701,
									"src": "10103:390:27",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3702,
							"src": "377:10118:27"
						}
					],
					"src": "45:10451:27"
				},
				"id": 27
			},
			"contracts/core/libraries/Tick.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/Tick.sol",
					"exportedSymbols": {
						"LiquidityMath": [
							2799
						],
						"LowGasSafeMath": [
							2929
						],
						"SafeCast": [
							3184
						],
						"Tick": [
							4320
						],
						"TickMath": [
							5111
						]
					},
					"id": 4321,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3703,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:28"
						},
						{
							"absolutePath": "contracts/core/libraries/LowGasSafeMath.sol",
							"file": "./LowGasSafeMath.sol",
							"id": 3704,
							"nodeType": "ImportDirective",
							"scope": 4321,
							"sourceUnit": 2930,
							"src": "78:30:28",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 3705,
							"nodeType": "ImportDirective",
							"scope": 4321,
							"sourceUnit": 3185,
							"src": "109:24:28",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/TickMath.sol",
							"file": "./TickMath.sol",
							"id": 3706,
							"nodeType": "ImportDirective",
							"scope": 4321,
							"sourceUnit": 5112,
							"src": "135:24:28",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/libraries/LiquidityMath.sol",
							"file": "./LiquidityMath.sol",
							"id": 3707,
							"nodeType": "ImportDirective",
							"scope": 4321,
							"sourceUnit": 2800,
							"src": "160:29:28",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3708,
								"nodeType": "StructuredDocumentation",
								"src": "191:101:28",
								"text": "@title Tick\n @notice Contains functions for managing tick processes and relevant calculations"
							},
							"fullyImplemented": true,
							"id": 4320,
							"linearizedBaseContracts": [
								4320
							],
							"name": "Tick",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3711,
									"libraryName": {
										"id": 3709,
										"name": "LowGasSafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2929,
										"src": "317:14:28",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LowGasSafeMath_$2929",
											"typeString": "library LowGasSafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "311:32:28",
									"typeName": {
										"id": 3710,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "336:6:28",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"id": 3714,
									"libraryName": {
										"id": 3712,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 3184,
										"src": "354:8:28",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$3184",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "348:26:28",
									"typeName": {
										"id": 3713,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "367:6:28",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									}
								},
								{
									"canonicalName": "Tick.Info",
									"id": 3735,
									"members": [
										{
											"constant": false,
											"id": 3716,
											"mutability": "mutable",
											"name": "liquidityGross",
											"nodeType": "VariableDeclaration",
											"scope": 3735,
											"src": "579:22:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 3715,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "579:7:28",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3718,
											"mutability": "mutable",
											"name": "liquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 3735,
											"src": "776:19:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 3717,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "776:6:28",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3720,
											"mutability": "mutable",
											"name": "stakedLiquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 3735,
											"src": "922:25:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 3719,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "922:6:28",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3722,
											"mutability": "mutable",
											"name": "feeGrowthOutside0X128",
											"nodeType": "VariableDeclaration",
											"scope": 3735,
											"src": "1170:29:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3721,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1170:7:28",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3724,
											"mutability": "mutable",
											"name": "feeGrowthOutside1X128",
											"nodeType": "VariableDeclaration",
											"scope": 3735,
											"src": "1209:29:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3723,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1209:7:28",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3726,
											"mutability": "mutable",
											"name": "rewardGrowthOutsideX128",
											"nodeType": "VariableDeclaration",
											"scope": 3735,
											"src": "1464:31:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3725,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1464:7:28",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3728,
											"mutability": "mutable",
											"name": "tickCumulativeOutside",
											"nodeType": "VariableDeclaration",
											"scope": 3735,
											"src": "1572:27:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int56",
												"typeString": "int56"
											},
											"typeName": {
												"id": 3727,
												"name": "int56",
												"nodeType": "ElementaryTypeName",
												"src": "1572:5:28",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3730,
											"mutability": "mutable",
											"name": "secondsPerLiquidityOutsideX128",
											"nodeType": "VariableDeclaration",
											"scope": 3735,
											"src": "1823:38:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 3729,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1823:7:28",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3732,
											"mutability": "mutable",
											"name": "secondsOutside",
											"nodeType": "VariableDeclaration",
											"scope": 3735,
											"src": "2066:21:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3731,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2066:6:28",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3734,
											"mutability": "mutable",
											"name": "initialized",
											"nodeType": "VariableDeclaration",
											"scope": 3735,
											"src": "2312:16:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3733,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2312:4:28",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nodeType": "StructDefinition",
									"scope": 4320,
									"src": "436:1899:28",
									"visibility": "public"
								},
								{
									"canonicalName": "Tick.LiquidityNets",
									"id": 3740,
									"members": [
										{
											"constant": false,
											"id": 3737,
											"mutability": "mutable",
											"name": "liquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 3740,
											"src": "2372:19:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 3736,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "2372:6:28",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3739,
											"mutability": "mutable",
											"name": "stakedLiquidityNet",
											"nodeType": "VariableDeclaration",
											"scope": 3740,
											"src": "2401:25:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int128",
												"typeString": "int128"
											},
											"typeName": {
												"id": 3738,
												"name": "int128",
												"nodeType": "ElementaryTypeName",
												"src": "2401:6:28",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LiquidityNets",
									"nodeType": "StructDefinition",
									"scope": 4320,
									"src": "2341:92:28",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3790,
										"nodeType": "Block",
										"src": "2919:271:28",
										"statements": [
											{
												"assignments": [
													3749
												],
												"declarations": [
													{
														"constant": false,
														"id": 3749,
														"mutability": "mutable",
														"name": "minTick",
														"nodeType": "VariableDeclaration",
														"scope": 3790,
														"src": "2929:13:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 3748,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2929:5:28",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3757,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 3753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3750,
																		"name": "TickMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5111,
																		"src": "2946:8:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TickMath_$5111_$",
																			"typeString": "type(library TickMath)"
																		}
																	},
																	"id": 3751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "MIN_TICK",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4584,
																	"src": "2946:17:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3752,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3743,
																	"src": "2966:11:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "2946:31:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"id": 3754,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2945:33:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3755,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3743,
														"src": "2981:11:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2945:47:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2929:63:28"
											},
											{
												"assignments": [
													3759
												],
												"declarations": [
													{
														"constant": false,
														"id": 3759,
														"mutability": "mutable",
														"name": "maxTick",
														"nodeType": "VariableDeclaration",
														"scope": 3790,
														"src": "3002:13:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 3758,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "3002:5:28",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3767,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 3763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3760,
																		"name": "TickMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5111,
																		"src": "3019:8:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TickMath_$5111_$",
																			"typeString": "type(library TickMath)"
																		}
																	},
																	"id": 3761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "MAX_TICK",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4589,
																	"src": "3019:17:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3762,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3743,
																	"src": "3039:11:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3019:31:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"id": 3764,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3018:33:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3765,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3743,
														"src": "3054:11:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "3018:47:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3002:63:28"
											},
											{
												"assignments": [
													3769
												],
												"declarations": [
													{
														"constant": false,
														"id": 3769,
														"mutability": "mutable",
														"name": "numTicks",
														"nodeType": "VariableDeclaration",
														"scope": 3790,
														"src": "3075:15:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 3768,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "3075:6:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3781,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													},
													"id": 3780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 3777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			"id": 3774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3772,
																				"name": "maxTick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3759,
																				"src": "3101:7:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 3773,
																				"name": "minTick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3749,
																				"src": "3111:7:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"src": "3101:17:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"id": 3775,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3100:19:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 3776,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3743,
																	"src": "3122:11:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3100:33:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 3771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3093:6:28",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 3770,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "3093:6:28",
																"typeDescriptions": {}
															}
														},
														"id": 3778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3093:41:28",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 3779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3137:1:28",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3093:45:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3075:63:28"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 3788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3160:7:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3783,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "3160:7:28",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 3782,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3155:4:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3155:13:28",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 3786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3155:17:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3787,
														"name": "numTicks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3769,
														"src": "3175:8:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "3155:28:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 3747,
												"id": 3789,
												"nodeType": "Return",
												"src": "3148:35:28"
											}
										]
									},
									"documentation": {
										"id": 3741,
										"nodeType": "StructuredDocumentation",
										"src": "2439:382:28",
										"text": "@notice Derives max liquidity per tick from given tick spacing\n @dev Executed within the pool constructor\n @param tickSpacing The amount of required tick separation, realized in multiples of `tickSpacing`\n     e.g., a tickSpacing of 3 requires ticks to be initialized every 3rd tick i.e., ..., -6, -3, 0, 3, 6, ...\n @return The max liquidity per tick"
									},
									"id": 3791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacingToMaxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3743,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 3791,
												"src": "2868:17:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3742,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2868:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2867:19:28"
									},
									"returnParameters": {
										"id": 3747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3746,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3791,
												"src": "2910:7:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3745,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2910:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2909:9:28"
									},
									"scope": 4320,
									"src": "2826:364:28",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3913,
										"nodeType": "Block",
										"src": "4286:1249:28",
										"statements": [
											{
												"assignments": [
													3814
												],
												"declarations": [
													{
														"constant": false,
														"id": 3814,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 3913,
														"src": "4296:18:28",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 3813,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3735,
															"src": "4296:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3818,
												"initialValue": {
													"baseExpression": {
														"id": 3815,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3796,
														"src": "4317:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 3817,
													"indexExpression": {
														"id": 3816,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3798,
														"src": "4322:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4317:15:28",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3735_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4296:36:28"
											},
											{
												"assignments": [
													3820
												],
												"declarations": [
													{
														"constant": false,
														"id": 3820,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 3913,
														"src": "4342:18:28",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 3819,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3735,
															"src": "4342:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3824,
												"initialValue": {
													"baseExpression": {
														"id": 3821,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3796,
														"src": "4363:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 3823,
													"indexExpression": {
														"id": 3822,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3800,
														"src": "4368:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4363:15:28",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3735_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4342:36:28"
											},
											{
												"assignments": [
													3826
												],
												"declarations": [
													{
														"constant": false,
														"id": 3826,
														"mutability": "mutable",
														"name": "feeGrowthBelow0X128",
														"nodeType": "VariableDeclaration",
														"scope": 3913,
														"src": "4427:27:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4427:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3827,
												"nodeType": "VariableDeclarationStatement",
												"src": "4427:27:28"
											},
											{
												"assignments": [
													3829
												],
												"declarations": [
													{
														"constant": false,
														"id": 3829,
														"mutability": "mutable",
														"name": "feeGrowthBelow1X128",
														"nodeType": "VariableDeclaration",
														"scope": 3913,
														"src": "4464:27:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3828,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4464:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3830,
												"nodeType": "VariableDeclarationStatement",
												"src": "4464:27:28"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3831,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3802,
														"src": "4505:11:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3832,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3798,
														"src": "4520:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "4505:24:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3859,
													"nodeType": "Block",
													"src": "4674:183:28",
													"statements": [
														{
															"expression": {
																"id": 3850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3845,
																	"name": "feeGrowthBelow0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3826,
																	"src": "4688:19:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3846,
																		"name": "feeGrowthGlobal0X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3804,
																		"src": "4710:20:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3847,
																			"name": "lower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3814,
																			"src": "4733:5:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 3848,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside0X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3722,
																		"src": "4733:27:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4710:50:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4688:72:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3851,
															"nodeType": "ExpressionStatement",
															"src": "4688:72:28"
														},
														{
															"expression": {
																"id": 3857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3852,
																	"name": "feeGrowthBelow1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3829,
																	"src": "4774:19:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3853,
																		"name": "feeGrowthGlobal1X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3806,
																		"src": "4796:20:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3854,
																			"name": "lower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3814,
																			"src": "4819:5:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 3855,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside1X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3724,
																		"src": "4819:27:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4796:50:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4774:72:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3858,
															"nodeType": "ExpressionStatement",
															"src": "4774:72:28"
														}
													]
												},
												"id": 3860,
												"nodeType": "IfStatement",
												"src": "4501:356:28",
												"trueBody": {
													"id": 3844,
													"nodeType": "Block",
													"src": "4531:137:28",
													"statements": [
														{
															"expression": {
																"id": 3837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3834,
																	"name": "feeGrowthBelow0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3826,
																	"src": "4545:19:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3835,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3814,
																		"src": "4567:5:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 3836,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside0X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3722,
																	"src": "4567:27:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4545:49:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3838,
															"nodeType": "ExpressionStatement",
															"src": "4545:49:28"
														},
														{
															"expression": {
																"id": 3842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3839,
																	"name": "feeGrowthBelow1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3829,
																	"src": "4608:19:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3840,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3814,
																		"src": "4630:5:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 3841,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside1X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3724,
																	"src": "4630:27:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4608:49:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3843,
															"nodeType": "ExpressionStatement",
															"src": "4608:49:28"
														}
													]
												}
											},
											{
												"assignments": [
													3862
												],
												"declarations": [
													{
														"constant": false,
														"id": 3862,
														"mutability": "mutable",
														"name": "feeGrowthAbove0X128",
														"nodeType": "VariableDeclaration",
														"scope": 3913,
														"src": "4905:27:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3861,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4905:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3863,
												"nodeType": "VariableDeclarationStatement",
												"src": "4905:27:28"
											},
											{
												"assignments": [
													3865
												],
												"declarations": [
													{
														"constant": false,
														"id": 3865,
														"mutability": "mutable",
														"name": "feeGrowthAbove1X128",
														"nodeType": "VariableDeclaration",
														"scope": 3913,
														"src": "4942:27:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3864,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4942:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3866,
												"nodeType": "VariableDeclarationStatement",
												"src": "4942:27:28"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3867,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3802,
														"src": "4983:11:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3868,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3800,
														"src": "4997:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "4983:23:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3895,
													"nodeType": "Block",
													"src": "5151:183:28",
													"statements": [
														{
															"expression": {
																"id": 3886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3881,
																	"name": "feeGrowthAbove0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3862,
																	"src": "5165:19:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3882,
																		"name": "feeGrowthGlobal0X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3804,
																		"src": "5187:20:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3883,
																			"name": "upper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3820,
																			"src": "5210:5:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 3884,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside0X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3722,
																		"src": "5210:27:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5187:50:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5165:72:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3887,
															"nodeType": "ExpressionStatement",
															"src": "5165:72:28"
														},
														{
															"expression": {
																"id": 3893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3888,
																	"name": "feeGrowthAbove1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3865,
																	"src": "5251:19:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3889,
																		"name": "feeGrowthGlobal1X128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3806,
																		"src": "5273:20:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3890,
																			"name": "upper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3820,
																			"src": "5296:5:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 3891,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "feeGrowthOutside1X128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3724,
																		"src": "5296:27:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5273:50:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5251:72:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3894,
															"nodeType": "ExpressionStatement",
															"src": "5251:72:28"
														}
													]
												},
												"id": 3896,
												"nodeType": "IfStatement",
												"src": "4979:355:28",
												"trueBody": {
													"id": 3880,
													"nodeType": "Block",
													"src": "5008:137:28",
													"statements": [
														{
															"expression": {
																"id": 3873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3870,
																	"name": "feeGrowthAbove0X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3862,
																	"src": "5022:19:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3871,
																		"name": "upper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3820,
																		"src": "5044:5:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 3872,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside0X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3722,
																	"src": "5044:27:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5022:49:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3874,
															"nodeType": "ExpressionStatement",
															"src": "5022:49:28"
														},
														{
															"expression": {
																"id": 3878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3875,
																	"name": "feeGrowthAbove1X128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3865,
																	"src": "5085:19:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3876,
																		"name": "upper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3820,
																		"src": "5107:5:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 3877,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "feeGrowthOutside1X128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3724,
																	"src": "5107:27:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5085:49:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3879,
															"nodeType": "ExpressionStatement",
															"src": "5085:49:28"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3897,
														"name": "feeGrowthInside0X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3809,
														"src": "5344:20:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3898,
																"name": "feeGrowthGlobal0X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3804,
																"src": "5367:20:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3899,
																"name": "feeGrowthBelow0X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3826,
																"src": "5390:19:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5367:42:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 3901,
															"name": "feeGrowthAbove0X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3862,
															"src": "5412:19:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5367:64:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5344:87:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3904,
												"nodeType": "ExpressionStatement",
												"src": "5344:87:28"
											},
											{
												"expression": {
													"id": 3911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3905,
														"name": "feeGrowthInside1X128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3811,
														"src": "5441:20:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3906,
																"name": "feeGrowthGlobal1X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3806,
																"src": "5464:20:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3907,
																"name": "feeGrowthBelow1X128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3829,
																"src": "5487:19:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5464:42:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 3909,
															"name": "feeGrowthAbove1X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3865,
															"src": "5509:19:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5464:64:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5441:87:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3912,
												"nodeType": "ExpressionStatement",
												"src": "5441:87:28"
											}
										]
									},
									"documentation": {
										"id": 3792,
										"nodeType": "StructuredDocumentation",
										"src": "3196:765:28",
										"text": "@notice Retrieves fee growth data\n @param self The mapping containing all tick information for initialized ticks\n @param tickLower The lower tick boundary of the position\n @param tickUpper The upper tick boundary of the position\n @param tickCurrent The current tick\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @return feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n @return feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries"
									},
									"id": 3914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeGrowthInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3796,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 3914,
												"src": "4003:40:28",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 3795,
													"keyType": {
														"id": 3793,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "4011:5:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "4003:27:28",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 3794,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3735,
														"src": "4020:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3798,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 3914,
												"src": "4053:15:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3797,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4053:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3800,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 3914,
												"src": "4078:15:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3799,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4078:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3802,
												"mutability": "mutable",
												"name": "tickCurrent",
												"nodeType": "VariableDeclaration",
												"scope": 3914,
												"src": "4103:17:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3801,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4103:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3804,
												"mutability": "mutable",
												"name": "feeGrowthGlobal0X128",
												"nodeType": "VariableDeclaration",
												"scope": 3914,
												"src": "4130:28:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3806,
												"mutability": "mutable",
												"name": "feeGrowthGlobal1X128",
												"nodeType": "VariableDeclaration",
												"scope": 3914,
												"src": "4168:28:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:209:28"
									},
									"returnParameters": {
										"id": 3812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3809,
												"mutability": "mutable",
												"name": "feeGrowthInside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 3914,
												"src": "4226:28:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4226:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3811,
												"mutability": "mutable",
												"name": "feeGrowthInside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 3914,
												"src": "4256:28:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4256:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4225:60:28"
									},
									"scope": 4320,
									"src": "3966:1569:28",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3993,
										"nodeType": "Block",
										"src": "5800:818:28",
										"statements": [
											{
												"assignments": [
													3932
												],
												"declarations": [
													{
														"constant": false,
														"id": 3932,
														"mutability": "mutable",
														"name": "lower",
														"nodeType": "VariableDeclaration",
														"scope": 3993,
														"src": "5810:18:28",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 3931,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3735,
															"src": "5810:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3936,
												"initialValue": {
													"baseExpression": {
														"id": 3933,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3918,
														"src": "5831:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 3935,
													"indexExpression": {
														"id": 3934,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3920,
														"src": "5836:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5831:15:28",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3735_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5810:36:28"
											},
											{
												"assignments": [
													3938
												],
												"declarations": [
													{
														"constant": false,
														"id": 3938,
														"mutability": "mutable",
														"name": "upper",
														"nodeType": "VariableDeclaration",
														"scope": 3993,
														"src": "5856:18:28",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 3937,
															"name": "Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3735,
															"src": "5856:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3942,
												"initialValue": {
													"baseExpression": {
														"id": 3939,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3918,
														"src": "5877:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 3941,
													"indexExpression": {
														"id": 3940,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3922,
														"src": "5882:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5877:15:28",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3735_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5856:36:28"
											},
											{
												"assignments": [
													3944
												],
												"declarations": [
													{
														"constant": false,
														"id": 3944,
														"mutability": "mutable",
														"name": "rewardGrowthBelowX128",
														"nodeType": "VariableDeclaration",
														"scope": 3993,
														"src": "5944:29:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3943,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5944:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3945,
												"nodeType": "VariableDeclarationStatement",
												"src": "5944:29:28"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3946,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3924,
														"src": "5987:11:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 3947,
														"name": "tickLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3920,
														"src": "6002:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "5987:24:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3962,
													"nodeType": "Block",
													"src": "6097:103:28",
													"statements": [
														{
															"expression": {
																"id": 3960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3955,
																	"name": "rewardGrowthBelowX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3944,
																	"src": "6111:21:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3956,
																		"name": "rewardGrowthGlobalX128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3926,
																		"src": "6135:22:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3957,
																			"name": "lower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3932,
																			"src": "6160:5:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 3958,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardGrowthOutsideX128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3726,
																		"src": "6160:29:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6135:54:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6111:78:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3961,
															"nodeType": "ExpressionStatement",
															"src": "6111:78:28"
														}
													]
												},
												"id": 3963,
												"nodeType": "IfStatement",
												"src": "5983:217:28",
												"trueBody": {
													"id": 3954,
													"nodeType": "Block",
													"src": "6013:78:28",
													"statements": [
														{
															"expression": {
																"id": 3952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3949,
																	"name": "rewardGrowthBelowX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3944,
																	"src": "6027:21:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3950,
																		"name": "lower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3932,
																		"src": "6051:5:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 3951,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardGrowthOutsideX128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3726,
																	"src": "6051:29:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6027:53:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3953,
															"nodeType": "ExpressionStatement",
															"src": "6027:53:28"
														}
													]
												}
											},
											{
												"assignments": [
													3965
												],
												"declarations": [
													{
														"constant": false,
														"id": 3965,
														"mutability": "mutable",
														"name": "rewardGrowthAboveX128",
														"nodeType": "VariableDeclaration",
														"scope": 3993,
														"src": "6251:29:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3964,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6251:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3966,
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:29:28"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 3969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3967,
														"name": "tickCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3924,
														"src": "6294:11:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3968,
														"name": "tickUpper",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3922,
														"src": "6308:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "6294:23:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3983,
													"nodeType": "Block",
													"src": "6403:103:28",
													"statements": [
														{
															"expression": {
																"id": 3981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3976,
																	"name": "rewardGrowthAboveX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3965,
																	"src": "6417:21:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3977,
																		"name": "rewardGrowthGlobalX128",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3926,
																		"src": "6441:22:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 3978,
																			"name": "upper",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3938,
																			"src": "6466:5:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																				"typeString": "struct Tick.Info storage pointer"
																			}
																		},
																		"id": 3979,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardGrowthOutsideX128",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3726,
																		"src": "6466:29:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6441:54:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6417:78:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3982,
															"nodeType": "ExpressionStatement",
															"src": "6417:78:28"
														}
													]
												},
												"id": 3984,
												"nodeType": "IfStatement",
												"src": "6290:216:28",
												"trueBody": {
													"id": 3975,
													"nodeType": "Block",
													"src": "6319:78:28",
													"statements": [
														{
															"expression": {
																"id": 3973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3970,
																	"name": "rewardGrowthAboveX128",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3965,
																	"src": "6333:21:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3971,
																		"name": "upper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3938,
																		"src": "6357:5:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 3972,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardGrowthOutsideX128",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3726,
																	"src": "6357:29:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6333:53:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3974,
															"nodeType": "ExpressionStatement",
															"src": "6333:53:28"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3985,
														"name": "rewardGrowthInsideX128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3929,
														"src": "6516:22:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3986,
																"name": "rewardGrowthGlobalX128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3926,
																"src": "6541:22:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3987,
																"name": "rewardGrowthBelowX128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3944,
																"src": "6566:21:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6541:46:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 3989,
															"name": "rewardGrowthAboveX128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3965,
															"src": "6590:21:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6541:70:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6516:95:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3992,
												"nodeType": "ExpressionStatement",
												"src": "6516:95:28"
											}
										]
									},
									"id": 3994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardGrowthInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3918,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 3994,
												"src": "5581:40:28",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 3917,
													"keyType": {
														"id": 3915,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "5589:5:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "5581:27:28",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 3916,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3735,
														"src": "5598:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3920,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 3994,
												"src": "5631:15:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3919,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5631:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3922,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 3994,
												"src": "5656:15:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3921,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5656:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3924,
												"mutability": "mutable",
												"name": "tickCurrent",
												"nodeType": "VariableDeclaration",
												"scope": 3994,
												"src": "5681:17:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3923,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5681:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3926,
												"mutability": "mutable",
												"name": "rewardGrowthGlobalX128",
												"nodeType": "VariableDeclaration",
												"scope": 3994,
												"src": "5708:30:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5708:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5571:173:28"
									},
									"returnParameters": {
										"id": 3930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3929,
												"mutability": "mutable",
												"name": "rewardGrowthInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 3994,
												"src": "5768:30:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5767:32:28"
									},
									"scope": 4320,
									"src": "5541:1077:28",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4151,
										"nodeType": "Block",
										"src": "8360:1350:28",
										"statements": [
											{
												"assignments": [
													4029
												],
												"declarations": [
													{
														"constant": false,
														"id": 4029,
														"mutability": "mutable",
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 4151,
														"src": "8370:22:28",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 4028,
															"name": "Tick.Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3735,
															"src": "8370:9:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4033,
												"initialValue": {
													"baseExpression": {
														"id": 4030,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3999,
														"src": "8395:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 4032,
													"indexExpression": {
														"id": 4031,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4001,
														"src": "8400:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8395:10:28",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3735_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8370:35:28"
											},
											{
												"assignments": [
													4035
												],
												"declarations": [
													{
														"constant": false,
														"id": 4035,
														"mutability": "mutable",
														"name": "liquidityGrossBefore",
														"nodeType": "VariableDeclaration",
														"scope": 4151,
														"src": "8416:28:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 4034,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "8416:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4038,
												"initialValue": {
													"expression": {
														"id": 4036,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4029,
														"src": "8447:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info storage pointer"
														}
													},
													"id": 4037,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "liquidityGross",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3716,
													"src": "8447:19:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8416:50:28"
											},
											{
												"assignments": [
													4040
												],
												"declarations": [
													{
														"constant": false,
														"id": 4040,
														"mutability": "mutable",
														"name": "liquidityGrossAfter",
														"nodeType": "VariableDeclaration",
														"scope": 4151,
														"src": "8476:27:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 4039,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "8476:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4046,
												"initialValue": {
													"arguments": [
														{
															"id": 4043,
															"name": "liquidityGrossBefore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4035,
															"src": "8529:20:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 4044,
															"name": "liquidityDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4005,
															"src": "8551:14:28",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														],
														"expression": {
															"id": 4041,
															"name": "LiquidityMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2799,
															"src": "8506:13:28",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LiquidityMath_$2799_$",
																"typeString": "type(library LiquidityMath)"
															}
														},
														"id": 4042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "addDelta",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2798,
														"src": "8506:22:28",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_int128_$returns$_t_uint128_$",
															"typeString": "function (uint128,int128) pure returns (uint128)"
														}
													},
													"id": 4045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8506:60:28",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8476:90:28"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 4050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4048,
																"name": "liquidityGrossAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4040,
																"src": "8585:19:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 4049,
																"name": "maxLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4021,
																"src": "8608:12:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8585:35:28",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c4f",
															"id": 4051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8622:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df0e8e403ea3fe54c7efb80492fa8f6599886b9c5435c1772b8d6400862c8c48",
																"typeString": "literal_string \"LO\""
															},
															"value": "LO"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df0e8e403ea3fe54c7efb80492fa8f6599886b9c5435c1772b8d6400862c8c48",
																"typeString": "literal_string \"LO\""
															}
														],
														"id": 4047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8577:7:28",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8577:50:28",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4053,
												"nodeType": "ExpressionStatement",
												"src": "8577:50:28"
											},
											{
												"expression": {
													"id": 4064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4054,
														"name": "flipped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4024,
														"src": "8638:7:28",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 4063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 4057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4055,
																		"name": "liquidityGrossAfter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4040,
																		"src": "8649:19:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8672:1:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "8649:24:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 4058,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8648:26:28",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 4061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4059,
																		"name": "liquidityGrossBefore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4035,
																		"src": "8679:20:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8703:1:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "8679:25:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 4062,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8678:27:28",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "8648:57:28",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8638:67:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4065,
												"nodeType": "ExpressionStatement",
												"src": "8638:67:28"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 4068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4066,
														"name": "liquidityGrossBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4035,
														"src": "8720:20:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 4067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8744:1:28",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8720:25:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4117,
												"nodeType": "IfStatement",
												"src": "8716:643:28",
												"trueBody": {
													"id": 4116,
													"nodeType": "Block",
													"src": "8747:612:28",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 4071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4069,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4001,
																	"src": "8877:4:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 4070,
																	"name": "tickCurrent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4003,
																	"src": "8885:11:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "8877:19:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4109,
															"nodeType": "IfStatement",
															"src": "8873:439:28",
															"trueBody": {
																"id": 4108,
																"nodeType": "Block",
																"src": "8898:414:28",
																"statements": [
																	{
																		"expression": {
																			"id": 4076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4072,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4029,
																					"src": "8916:4:28",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4074,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "feeGrowthOutside0X128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3722,
																				"src": "8916:26:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4075,
																				"name": "feeGrowthGlobal0X128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4007,
																				"src": "8945:20:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8916:49:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4077,
																		"nodeType": "ExpressionStatement",
																		"src": "8916:49:28"
																	},
																	{
																		"expression": {
																			"id": 4082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4078,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4029,
																					"src": "8983:4:28",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4080,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "feeGrowthOutside1X128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3724,
																				"src": "8983:26:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4081,
																				"name": "feeGrowthGlobal1X128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4009,
																				"src": "9012:20:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8983:49:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4083,
																		"nodeType": "ExpressionStatement",
																		"src": "8983:49:28"
																	},
																	{
																		"expression": {
																			"id": 4088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4084,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4029,
																					"src": "9050:4:28",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4086,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "rewardGrowthOutsideX128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3726,
																				"src": "9050:28:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4087,
																				"name": "rewardGrowthGlobalX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4011,
																				"src": "9081:22:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9050:53:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4089,
																		"nodeType": "ExpressionStatement",
																		"src": "9050:53:28"
																	},
																	{
																		"expression": {
																			"id": 4094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4090,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4029,
																					"src": "9121:4:28",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4092,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "secondsPerLiquidityOutsideX128",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3730,
																				"src": "9121:35:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4093,
																				"name": "secondsPerLiquidityCumulativeX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4013,
																				"src": "9159:33:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "9121:71:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 4095,
																		"nodeType": "ExpressionStatement",
																		"src": "9121:71:28"
																	},
																	{
																		"expression": {
																			"id": 4100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4096,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4029,
																					"src": "9210:4:28",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4098,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "tickCumulativeOutside",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3728,
																				"src": "9210:26:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4099,
																				"name": "tickCumulative",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4015,
																				"src": "9239:14:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int56",
																					"typeString": "int56"
																				}
																			},
																			"src": "9210:43:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int56",
																				"typeString": "int56"
																			}
																		},
																		"id": 4101,
																		"nodeType": "ExpressionStatement",
																		"src": "9210:43:28"
																	},
																	{
																		"expression": {
																			"id": 4106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 4102,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4029,
																					"src": "9271:4:28",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																						"typeString": "struct Tick.Info storage pointer"
																					}
																				},
																				"id": 4104,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "secondsOutside",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3732,
																				"src": "9271:19:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4105,
																				"name": "time",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4017,
																				"src": "9293:4:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint32",
																					"typeString": "uint32"
																				}
																			},
																			"src": "9271:26:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"id": 4107,
																		"nodeType": "ExpressionStatement",
																		"src": "9271:26:28"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 4114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 4110,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4029,
																		"src": "9325:4:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 4112,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3734,
																	"src": "9325:16:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 4113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9344:4:28",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "9325:23:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4115,
															"nodeType": "ExpressionStatement",
															"src": "9325:23:28"
														}
													]
												}
											},
											{
												"expression": {
													"id": 4122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4118,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4029,
															"src": "9369:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4120,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "liquidityGross",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3716,
														"src": "9369:19:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4121,
														"name": "liquidityGrossAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4040,
														"src": "9391:19:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9369:41:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 4123,
												"nodeType": "ExpressionStatement",
												"src": "9369:41:28"
											},
											{
												"expression": {
													"id": 4149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4124,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4029,
															"src": "9536:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4126,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "liquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3718,
														"src": "9536:17:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 4127,
															"name": "upper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4019,
															"src": "9556:5:28",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 4144,
																			"name": "liquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4005,
																			"src": "9677:14:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 4140,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4029,
																						"src": "9654:4:28",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 4141,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3718,
																					"src": "9654:17:28",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 4139,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9647:6:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 4138,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9647:6:28",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9647:25:28",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 4143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2901,
																		"src": "9647:29:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 4145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9647:45:28",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 4146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3159,
																"src": "9647:54:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 4147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9647:56:28",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"id": 4148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "9556:147:28",
														"trueExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 4134,
																			"name": "liquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4005,
																			"src": "9606:14:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 4130,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4029,
																						"src": "9583:4:28",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 4131,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "liquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3718,
																					"src": "9583:17:28",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 4129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9576:6:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 4128,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "9576:6:28",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9576:25:28",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 4133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2928,
																		"src": "9576:29:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 4135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9576:45:28",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 4136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3159,
																"src": "9576:54:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 4137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9576:56:28",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "9536:167:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4150,
												"nodeType": "ExpressionStatement",
												"src": "9536:167:28"
											}
										]
									},
									"documentation": {
										"id": 3995,
										"nodeType": "StructuredDocumentation",
										"src": "6624:1281:28",
										"text": "@notice Updates a tick and returns true if the tick was flipped from initialized to uninitialized, or vice versa\n @param self The mapping containing all tick information for initialized ticks\n @param tick The tick that will be updated\n @param tickCurrent The current tick\n @param liquidityDelta A new amount of liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n @param secondsPerLiquidityCumulativeX128 The all-time seconds per max(1, liquidity) of the pool\n @param tickCumulative The tick * time elapsed since the pool was first initialized\n @param time The current block timestamp cast to a uint32\n @param upper true for updating a position's upper tick, or false for updating a position's lower tick\n @param maxLiquidity The maximum liquidity allocation for a single tick\n @return flipped Whether the tick was flipped from initialized to uninitialized, or vice versa"
									},
									"id": 4152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3999,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "7935:40:28",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 3998,
													"keyType": {
														"id": 3996,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "7943:5:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "7935:27:28",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 3997,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3735,
														"src": "7952:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4001,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "7985:10:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4000,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "7985:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4003,
												"mutability": "mutable",
												"name": "tickCurrent",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "8005:17:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4002,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "8005:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4005,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "8032:21:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 4004,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "8032:6:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4007,
												"mutability": "mutable",
												"name": "feeGrowthGlobal0X128",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "8063:28:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8063:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4009,
												"mutability": "mutable",
												"name": "feeGrowthGlobal1X128",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "8101:28:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8101:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4011,
												"mutability": "mutable",
												"name": "rewardGrowthGlobalX128",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "8139:30:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8139:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4013,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "8179:41:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4012,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "8179:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4015,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "8230:20:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4014,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "8230:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4017,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "8260:11:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 4016,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8260:6:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4019,
												"mutability": "mutable",
												"name": "upper",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "8281:10:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4018,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8281:4:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4021,
												"mutability": "mutable",
												"name": "maxLiquidity",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "8301:20:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4020,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8301:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7925:402:28"
									},
									"returnParameters": {
										"id": 4025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4024,
												"mutability": "mutable",
												"name": "flipped",
												"nodeType": "VariableDeclaration",
												"scope": 4152,
												"src": "8346:12:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8346:4:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8345:14:28"
									},
									"scope": 4320,
									"src": "7910:1800:28",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4201,
										"nodeType": "Block",
										"src": "10468:381:28",
										"statements": [
											{
												"assignments": [
													4169
												],
												"declarations": [
													{
														"constant": false,
														"id": 4169,
														"mutability": "mutable",
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 4201,
														"src": "10478:22:28",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 4168,
															"name": "Tick.Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3735,
															"src": "10478:9:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4173,
												"initialValue": {
													"baseExpression": {
														"id": 4170,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4157,
														"src": "10503:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 4172,
													"indexExpression": {
														"id": 4171,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4159,
														"src": "10508:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10503:10:28",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3735_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10478:35:28"
											},
											{
												"expression": {
													"id": 4199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4174,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4169,
															"src": "10645:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedLiquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3720,
														"src": "10645:23:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 4177,
															"name": "upper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4163,
															"src": "10671:5:28",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 4194,
																			"name": "stakedLiquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4161,
																			"src": "10810:20:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 4190,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4169,
																						"src": "10781:4:28",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 4191,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakedLiquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3720,
																					"src": "10781:23:28",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 4189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10774:6:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 4188,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10774:6:28",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10774:31:28",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 4193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2901,
																		"src": "10774:35:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 4195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10774:57:28",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 4196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3159,
																"src": "10774:66:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 4197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10774:68:28",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"id": 4198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "10671:171:28",
														"trueExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 4184,
																			"name": "stakedLiquidityDelta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4161,
																			"src": "10727:20:28",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 4180,
																						"name": "info",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4169,
																						"src": "10698:4:28",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																							"typeString": "struct Tick.Info storage pointer"
																						}
																					},
																					"id": 4181,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "stakedLiquidityNet",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3720,
																					"src": "10698:23:28",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 4179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10691:6:28",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 4178,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10691:6:28",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10691:31:28",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 4183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2928,
																		"src": "10691:35:28",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
																			"typeString": "function (int256,int256) pure returns (int256)"
																		}
																	},
																	"id": 4185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10691:57:28",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"id": 4186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt128",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3159,
																"src": "10691:66:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$",
																	"typeString": "function (int256) pure returns (int128)"
																}
															},
															"id": 4187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10691:68:28",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "10645:197:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4200,
												"nodeType": "ExpressionStatement",
												"src": "10645:197:28"
											}
										]
									},
									"documentation": {
										"id": 4153,
										"nodeType": "StructuredDocumentation",
										"src": "9716:610:28",
										"text": "@notice Updates the staked liquidity component of a tick. Assumes tick is already initialized with an existing position.\n @notice We reuse existing liquidity for staking, so there is no change in liquidity\n @param self The mapping containing all tick information for initialized ticks\n @param tick The tick that will be updated\n @param stakedLiquidityDelta The amount of staked liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n @param upper true for updating a position's upper tick, or false for updating a position's lower tick"
									},
									"id": 4202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateStake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4157,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4202,
												"src": "10352:40:28",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 4156,
													"keyType": {
														"id": 4154,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "10360:5:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "10352:27:28",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 4155,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3735,
														"src": "10369:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4159,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4202,
												"src": "10394:10:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4158,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10394:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4161,
												"mutability": "mutable",
												"name": "stakedLiquidityDelta",
												"nodeType": "VariableDeclaration",
												"scope": 4202,
												"src": "10406:27:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 4160,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10406:6:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4163,
												"mutability": "mutable",
												"name": "upper",
												"nodeType": "VariableDeclaration",
												"scope": 4202,
												"src": "10435:10:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10435:4:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10351:95:28"
									},
									"returnParameters": {
										"id": 4165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10468:0:28"
									},
									"scope": 4320,
									"src": "10331:518:28",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4217,
										"nodeType": "Block",
										"src": "11114:34:28",
										"statements": [
											{
												"expression": {
													"id": 4215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11124:17:28",
													"subExpression": {
														"baseExpression": {
															"id": 4212,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4207,
															"src": "11131:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
																"typeString": "mapping(int24 => struct Tick.Info storage ref)"
															}
														},
														"id": 4214,
														"indexExpression": {
															"id": 4213,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4209,
															"src": "11136:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11131:10:28",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage",
															"typeString": "struct Tick.Info storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4216,
												"nodeType": "ExpressionStatement",
												"src": "11124:17:28"
											}
										]
									},
									"documentation": {
										"id": 4203,
										"nodeType": "StructuredDocumentation",
										"src": "10855:176:28",
										"text": "@notice Clears tick data\n @param self The mapping containing all initialized tick information for initialized ticks\n @param tick The tick that will be cleared"
									},
									"id": 4218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clear",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4207,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4218,
												"src": "11051:40:28",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 4206,
													"keyType": {
														"id": 4204,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "11059:5:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "11051:27:28",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 4205,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3735,
														"src": "11068:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4209,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4218,
												"src": "11093:10:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4208,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "11093:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11050:54:28"
									},
									"returnParameters": {
										"id": 4211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11114:0:28"
									},
									"scope": 4320,
									"src": "11036:112:28",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4318,
										"nodeType": "Block",
										"src": "12382:687:28",
										"statements": [
											{
												"assignments": [
													4245
												],
												"declarations": [
													{
														"constant": false,
														"id": 4245,
														"mutability": "mutable",
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 4318,
														"src": "12392:22:28",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 4244,
															"name": "Tick.Info",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 3735,
															"src": "12392:9:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4249,
												"initialValue": {
													"baseExpression": {
														"id": 4246,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4223,
														"src": "12417:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 4248,
													"indexExpression": {
														"id": 4247,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4225,
														"src": "12422:4:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12417:10:28",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$3735_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12392:35:28"
											},
											{
												"expression": {
													"id": 4257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4250,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4245,
															"src": "12437:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4252,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthOutside0X128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3722,
														"src": "12437:26:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4253,
															"name": "feeGrowthGlobal0X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4227,
															"src": "12466:20:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4254,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4245,
																"src": "12489:4:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4255,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "feeGrowthOutside0X128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3722,
															"src": "12489:26:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12466:49:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12437:78:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4258,
												"nodeType": "ExpressionStatement",
												"src": "12437:78:28"
											},
											{
												"expression": {
													"id": 4266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4259,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4245,
															"src": "12525:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4261,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "feeGrowthOutside1X128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3724,
														"src": "12525:26:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4262,
															"name": "feeGrowthGlobal1X128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4229,
															"src": "12554:20:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4263,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4245,
																"src": "12577:4:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4264,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "feeGrowthOutside1X128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3724,
															"src": "12577:26:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12554:49:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12525:78:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4267,
												"nodeType": "ExpressionStatement",
												"src": "12525:78:28"
											},
											{
												"expression": {
													"id": 4275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4268,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4245,
															"src": "12613:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4270,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardGrowthOutsideX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3726,
														"src": "12613:28:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4271,
															"name": "rewardGrowthGlobalX128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4237,
															"src": "12644:22:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4272,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4245,
																"src": "12669:4:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4273,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardGrowthOutsideX128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3726,
															"src": "12669:28:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12644:53:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12613:84:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4276,
												"nodeType": "ExpressionStatement",
												"src": "12613:84:28"
											},
											{
												"expression": {
													"id": 4284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4277,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4245,
															"src": "12707:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4279,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "secondsPerLiquidityOutsideX128",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3730,
														"src": "12707:35:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 4283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4280,
															"name": "secondsPerLiquidityCumulativeX128",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4231,
															"src": "12745:33:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4281,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4245,
																"src": "12781:4:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4282,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "secondsPerLiquidityOutsideX128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3730,
															"src": "12781:35:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "12745:71:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "12707:109:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 4285,
												"nodeType": "ExpressionStatement",
												"src": "12707:109:28"
											},
											{
												"expression": {
													"id": 4293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4286,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4245,
															"src": "12826:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4288,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tickCumulativeOutside",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3728,
														"src": "12826:26:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"id": 4292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4289,
															"name": "tickCumulative",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4233,
															"src": "12855:14:28",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4290,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4245,
																"src": "12872:4:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4291,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tickCumulativeOutside",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3728,
															"src": "12872:26:28",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"src": "12855:43:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "12826:72:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 4294,
												"nodeType": "ExpressionStatement",
												"src": "12826:72:28"
											},
											{
												"expression": {
													"id": 4302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4295,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4245,
															"src": "12908:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4297,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "secondsOutside",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3732,
														"src": "12908:19:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 4301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4298,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4235,
															"src": "12930:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 4299,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4245,
																"src": "12937:4:28",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																	"typeString": "struct Tick.Info storage pointer"
																}
															},
															"id": 4300,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "secondsOutside",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3732,
															"src": "12937:19:28",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "12930:26:28",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "12908:48:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 4303,
												"nodeType": "ExpressionStatement",
												"src": "12908:48:28"
											},
											{
												"expression": {
													"id": 4309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4304,
															"name": "nets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4240,
															"src": "12966:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityNets_$3740_memory_ptr",
																"typeString": "struct Tick.LiquidityNets memory"
															}
														},
														"id": 4306,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "liquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3737,
														"src": "12966:17:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4307,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4245,
															"src": "12986:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4308,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "liquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3718,
														"src": "12986:17:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "12966:37:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4310,
												"nodeType": "ExpressionStatement",
												"src": "12966:37:28"
											},
											{
												"expression": {
													"id": 4316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4311,
															"name": "nets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4240,
															"src": "13013:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityNets_$3740_memory_ptr",
																"typeString": "struct Tick.LiquidityNets memory"
															}
														},
														"id": 4313,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedLiquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3739,
														"src": "13013:23:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4314,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4245,
															"src": "13039:4:28",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 4315,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "stakedLiquidityNet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3720,
														"src": "13039:23:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "13013:49:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4317,
												"nodeType": "ExpressionStatement",
												"src": "13013:49:28"
											}
										]
									},
									"documentation": {
										"id": 4219,
										"nodeType": "StructuredDocumentation",
										"src": "11154:869:28",
										"text": "@notice Transitions to next tick as needed by price movement\n @param self The mapping containing all tick information for initialized ticks\n @param tick The destination tick of the transition\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @param secondsPerLiquidityCumulativeX128 The current seconds per liquidity\n @param tickCumulative The tick * time elapsed since the pool was first initialized\n @param time The current block.timestamp\n @param rewardGrowthGlobalX128 The all-time global reward growth, per unit of liquidity\n @return nets The amount of liquidity and staked liquidity added (subtracted) when tick is crossed from left to right (right to left)"
									},
									"id": 4319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cross",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4223,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4319,
												"src": "12052:40:28",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 4222,
													"keyType": {
														"id": 4220,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "12060:5:28",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "12052:27:28",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$3735_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueType": {
														"id": 4221,
														"name": "Tick.Info",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 3735,
														"src": "12069:9:28",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$3735_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4225,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4319,
												"src": "12102:10:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4224,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "12102:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4227,
												"mutability": "mutable",
												"name": "feeGrowthGlobal0X128",
												"nodeType": "VariableDeclaration",
												"scope": 4319,
												"src": "12122:28:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12122:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4229,
												"mutability": "mutable",
												"name": "feeGrowthGlobal1X128",
												"nodeType": "VariableDeclaration",
												"scope": 4319,
												"src": "12160:28:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12160:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4231,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 4319,
												"src": "12198:41:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4230,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "12198:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4233,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 4319,
												"src": "12249:20:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4232,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "12249:5:28",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4235,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"scope": 4319,
												"src": "12279:11:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 4234,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "12279:6:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4237,
												"mutability": "mutable",
												"name": "rewardGrowthGlobalX128",
												"nodeType": "VariableDeclaration",
												"scope": 4319,
												"src": "12300:30:28",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12300:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12042:294:28"
									},
									"returnParameters": {
										"id": 4241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4240,
												"mutability": "mutable",
												"name": "nets",
												"nodeType": "VariableDeclaration",
												"scope": 4319,
												"src": "12355:25:28",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LiquidityNets_$3740_memory_ptr",
													"typeString": "struct Tick.LiquidityNets"
												},
												"typeName": {
													"id": 4239,
													"name": "LiquidityNets",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 3740,
													"src": "12355:13:28",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LiquidityNets_$3740_storage_ptr",
														"typeString": "struct Tick.LiquidityNets"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12354:27:28"
									},
									"scope": 4320,
									"src": "12028:1041:28",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4321,
							"src": "292:12779:28"
						}
					],
					"src": "45:13027:28"
				},
				"id": 28
			},
			"contracts/core/libraries/TickBitmap.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/TickBitmap.sol",
					"exportedSymbols": {
						"BitMath": [
							2217
						],
						"TickBitmap": [
							4576
						]
					},
					"id": 4577,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4322,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:29"
						},
						{
							"absolutePath": "contracts/core/libraries/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 4323,
							"nodeType": "ImportDirective",
							"scope": 4577,
							"sourceUnit": 2218,
							"src": "71:23:29",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4324,
								"nodeType": "StructuredDocumentation",
								"src": "96:243:29",
								"text": "@title Packed tick initialized state library\n @notice Stores a packed mapping of tick index to its initialized state\n @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word."
							},
							"fullyImplemented": true,
							"id": 4576,
							"linearizedBaseContracts": [
								4576
							],
							"name": "TickBitmap",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4352,
										"nodeType": "Block",
										"src": "775:79:29",
										"statements": [
											{
												"expression": {
													"id": 4341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4334,
														"name": "wordPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4330,
														"src": "785:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 4339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4337,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4327,
																	"src": "801:4:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 4338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "809:1:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "801:9:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 4336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "795:5:29",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 4335,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "795:5:29",
																"typeDescriptions": {}
															}
														},
														"id": 4340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "795:16:29",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "785:26:29",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 4342,
												"nodeType": "ExpressionStatement",
												"src": "785:26:29"
											},
											{
												"expression": {
													"id": 4350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4343,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4332,
														"src": "821:6:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 4348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4346,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4327,
																	"src": "836:4:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "323536",
																	"id": 4347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:3:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "836:10:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 4345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "830:5:29",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 4344,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "830:5:29",
																"typeDescriptions": {}
															}
														},
														"id": 4349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "830:17:29",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "821:26:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 4351,
												"nodeType": "ExpressionStatement",
												"src": "821:26:29"
											}
										]
									},
									"documentation": {
										"id": 4325,
										"nodeType": "StructuredDocumentation",
										"src": "364:325:29",
										"text": "@notice Computes the position in the mapping where the initialized bit for a tick lives\n @param tick The tick for which to compute the position\n @return wordPos The key in the mapping containing the word in which the bit is stored\n @return bitPos The bit position in the word where the flag is stored"
									},
									"id": 4353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "position",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4327,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4353,
												"src": "712:10:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4326,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "712:5:29",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:12:29"
									},
									"returnParameters": {
										"id": 4333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4330,
												"mutability": "mutable",
												"name": "wordPos",
												"nodeType": "VariableDeclaration",
												"scope": 4353,
												"src": "746:13:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 4329,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "746:5:29",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4332,
												"mutability": "mutable",
												"name": "bitPos",
												"nodeType": "VariableDeclaration",
												"scope": 4353,
												"src": "761:12:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4331,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "761:5:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:29:29"
									},
									"scope": 4576,
									"src": "694:160:29",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4395,
										"nodeType": "Block",
										"src": "1208:220:29",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 4370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 4368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4366,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4360,
																	"src": "1226:4:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 4367,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4362,
																	"src": "1233:11:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "1226:18:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 4369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1248:1:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1226:23:29",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 4365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1218:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 4371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:32:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4372,
												"nodeType": "ExpressionStatement",
												"src": "1218:32:29"
											},
											{
												"assignments": [
													4374,
													4376
												],
												"declarations": [
													{
														"constant": false,
														"id": 4374,
														"mutability": "mutable",
														"name": "wordPos",
														"nodeType": "VariableDeclaration",
														"scope": 4395,
														"src": "1295:13:29",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 4373,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "1295:5:29",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 4376,
														"mutability": "mutable",
														"name": "bitPos",
														"nodeType": "VariableDeclaration",
														"scope": 4395,
														"src": "1310:12:29",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 4375,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1310:5:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4382,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 4380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4378,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4360,
																"src": "1335:4:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 4379,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4362,
																"src": "1342:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "1335:18:29",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 4377,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4353,
														"src": "1326:8:29",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
															"typeString": "function (int24) pure returns (int16,uint8)"
														}
													},
													"id": 4381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1326:28:29",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
														"typeString": "tuple(int16,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1294:60:29"
											},
											{
												"assignments": [
													4384
												],
												"declarations": [
													{
														"constant": false,
														"id": 4384,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"scope": 4395,
														"src": "1364:12:29",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1364:7:29",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4388,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 4385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1379:1:29",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 4386,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4376,
														"src": "1384:6:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1379:11:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1364:26:29"
											},
											{
												"expression": {
													"id": 4393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4389,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4358,
															"src": "1400:4:29",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																"typeString": "mapping(int16 => uint256)"
															}
														},
														"id": 4391,
														"indexExpression": {
															"id": 4390,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4374,
															"src": "1405:7:29",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1400:13:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "^=",
													"rightHandSide": {
														"id": 4392,
														"name": "mask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4384,
														"src": "1417:4:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1400:21:29",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4394,
												"nodeType": "ExpressionStatement",
												"src": "1400:21:29"
											}
										]
									},
									"documentation": {
										"id": 4354,
										"nodeType": "StructuredDocumentation",
										"src": "860:245:29",
										"text": "@notice Flips the initialized state for a given tick from false to true, or vice versa\n @param self The mapping in which to flip the tick\n @param tick The tick to flip\n @param tickSpacing The spacing between usable ticks"
									},
									"id": 4396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4358,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4396,
												"src": "1128:38:29",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 4357,
													"keyType": {
														"id": 4355,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "1136:5:29",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "1128:25:29",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueType": {
														"id": 4356,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1145:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4360,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4396,
												"src": "1168:10:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4359,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1168:5:29",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4362,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 4396,
												"src": "1180:17:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4361,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1180:5:29",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:71:29"
									},
									"returnParameters": {
										"id": 4364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1208:0:29"
									},
									"scope": 4576,
									"src": "1110:318:29",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4574,
										"nodeType": "Block",
										"src": "2380:1707:29",
										"statements": [
											{
												"assignments": [
													4415
												],
												"declarations": [
													{
														"constant": false,
														"id": 4415,
														"mutability": "mutable",
														"name": "compressed",
														"nodeType": "VariableDeclaration",
														"scope": 4574,
														"src": "2390:16:29",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 4414,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2390:5:29",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4419,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 4418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4416,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4403,
														"src": "2409:4:29",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 4417,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4405,
														"src": "2416:11:29",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2409:18:29",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2390:37:29"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 4428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 4422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4420,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4403,
															"src": "2441:4:29",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 4421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2448:1:29",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2441:8:29",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 4427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 4425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4423,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4403,
																"src": "2453:4:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 4424,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4405,
																"src": "2460:11:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2453:18:29",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 4426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2475:1:29",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2453:23:29",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2441:35:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4432,
												"nodeType": "IfStatement",
												"src": "2437:53:29",
												"trueBody": {
													"expression": {
														"id": 4430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "2478:12:29",
														"subExpression": {
															"id": 4429,
															"name": "compressed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4415,
															"src": "2478:10:29",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 4431,
													"nodeType": "ExpressionStatement",
													"src": "2478:12:29"
												}
											},
											{
												"condition": {
													"id": 4433,
													"name": "lte",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4407,
													"src": "2540:3:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4572,
													"nodeType": "Block",
													"src": "3267:814:29",
													"statements": [
														{
															"assignments": [
																4500,
																4502
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4500,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 4572,
																	"src": "3379:13:29",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 4499,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "3379:5:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 4502,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 4572,
																	"src": "3394:12:29",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 4501,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3394:5:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4508,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 4506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4504,
																			"name": "compressed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4415,
																			"src": "3419:10:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 4505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3432:1:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3419:14:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 4503,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4353,
																	"src": "3410:8:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 4507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3410:24:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3378:56:29"
														},
														{
															"assignments": [
																4510
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4510,
																	"mutability": "mutable",
																	"name": "mask",
																	"nodeType": "VariableDeclaration",
																	"scope": 4572,
																	"src": "3506:12:29",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4509,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3506:7:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4519,
															"initialValue": {
																"id": 4518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "3521:20:29",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 4513,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 4511,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3524:1:29",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 4512,
																							"name": "bitPos",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4502,
																							"src": "3529:6:29",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "3524:11:29",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 4514,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3523:13:29",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 4515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3539:1:29",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3523:17:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4517,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3522:19:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3506:35:29"
														},
														{
															"assignments": [
																4521
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4521,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 4572,
																	"src": "3555:14:29",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4520,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3555:7:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4527,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 4522,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4401,
																		"src": "3572:4:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 4524,
																	"indexExpression": {
																		"id": 4523,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4500,
																		"src": "3577:7:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3572:13:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 4525,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4510,
																	"src": "3588:4:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3572:20:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3555:37:29"
														},
														{
															"expression": {
																"id": 4532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4528,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4412,
																	"src": "3717:11:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4529,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4521,
																		"src": "3731:6:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3741:1:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3731:11:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3717:25:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4533,
															"nodeType": "ExpressionStatement",
															"src": "3717:25:29"
														},
														{
															"expression": {
																"id": 4570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4534,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4410,
																	"src": "3866:4:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 4535,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4412,
																		"src": "3873:11:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 4568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 4565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 4554,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 4552,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4415,
																							"src": "4007:10:29",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 4553,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4020:1:29",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4007:14:29",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 4563,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"arguments": [
																											{
																												"id": 4559,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "4035:5:29",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_uint8_$",
																													"typeString": "type(uint8)"
																												},
																												"typeName": {
																													"id": 4558,
																													"name": "uint8",
																													"nodeType": "ElementaryTypeName",
																													"src": "4035:5:29",
																													"typeDescriptions": {}
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_type$_t_uint8_$",
																													"typeString": "type(uint8)"
																												}
																											],
																											"id": 4557,
																											"name": "type",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967269,
																											"src": "4030:4:29",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 4560,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4030:11:29",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_meta_type_t_uint8",
																											"typeString": "type(uint8)"
																										}
																									},
																									"id": 4561,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "max",
																									"nodeType": "MemberAccess",
																									"src": "4030:15:29",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 4562,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4502,
																									"src": "4048:6:29",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "4030:24:29",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 4556,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4024:5:29",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 4555,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "4024:5:29",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 4564,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4024:31:29",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "4007:48:29",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 4566,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4006:50:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 4567,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4405,
																			"src": "4059:11:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "4006:64:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 4569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3873:197:29",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 4551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 4548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 4538,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 4536,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4415,
																							"src": "3904:10:29",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 4537,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3917:1:29",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3904:14:29",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 4546,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"id": 4543,
																											"name": "masked",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4521,
																											"src": "3955:6:29",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 4541,
																											"name": "BitMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2217,
																											"src": "3927:7:29",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_BitMath_$2217_$",
																												"typeString": "type(library BitMath)"
																											}
																										},
																										"id": 4542,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "leastSignificantBit",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2216,
																										"src": "3927:27:29",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																											"typeString": "function (uint256) pure returns (uint8)"
																										}
																									},
																									"id": 4544,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3927:35:29",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 4545,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4502,
																									"src": "3965:6:29",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "3927:44:29",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 4540,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3921:5:29",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 4539,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3921:5:29",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 4547,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3921:51:29",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3904:68:29",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 4549,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3903:70:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 4550,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4405,
																			"src": "3976:11:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3903:84:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3866:204:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 4571,
															"nodeType": "ExpressionStatement",
															"src": "3866:204:29"
														}
													]
												},
												"id": 4573,
												"nodeType": "IfStatement",
												"src": "2536:1545:29",
												"trueBody": {
													"id": 4498,
													"nodeType": "Block",
													"src": "2545:716:29",
													"statements": [
														{
															"assignments": [
																4435,
																4437
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4435,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 4498,
																	"src": "2560:13:29",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 4434,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "2560:5:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 4437,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 4498,
																	"src": "2575:12:29",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 4436,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2575:5:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4441,
															"initialValue": {
																"arguments": [
																	{
																		"id": 4439,
																		"name": "compressed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4415,
																		"src": "2600:10:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 4438,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4353,
																	"src": "2591:8:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 4440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2591:20:29",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2559:52:29"
														},
														{
															"assignments": [
																4443
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4443,
																	"mutability": "mutable",
																	"name": "mask",
																	"nodeType": "VariableDeclaration",
																	"scope": 4498,
																	"src": "2692:12:29",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4442,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2692:7:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4455,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 4446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 4444,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2708:1:29",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 4445,
																					"name": "bitPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4437,
																					"src": "2713:6:29",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "2708:11:29",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 4447,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2707:13:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 4448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2723:1:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2707:17:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 4450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2728:1:29",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 4451,
																				"name": "bitPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4437,
																				"src": "2733:6:29",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2728:11:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4453,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2727:13:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2707:33:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2692:48:29"
														},
														{
															"assignments": [
																4457
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4457,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 4498,
																	"src": "2754:14:29",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4456,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2754:7:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4463,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 4458,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4401,
																		"src": "2771:4:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 4460,
																	"indexExpression": {
																		"id": 4459,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4435,
																		"src": "2776:7:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2771:13:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 4461,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4443,
																	"src": "2787:4:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2771:20:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2754:37:29"
														},
														{
															"expression": {
																"id": 4468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4464,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4412,
																	"src": "2924:11:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4465,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4457,
																		"src": "2938:6:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2948:1:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2938:11:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2924:25:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4469,
															"nodeType": "ExpressionStatement",
															"src": "2924:25:29"
														},
														{
															"expression": {
																"id": 4496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4470,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4410,
																	"src": "3073:4:29",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 4471,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4412,
																		"src": "3080:11:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 4494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 4491,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 4486,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4415,
																						"src": "3209:10:29",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 4489,
																								"name": "bitPos",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4437,
																								"src": "3228:6:29",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 4488,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3222:5:29",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 4487,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3222:5:29",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 4490,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3222:13:29",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3209:26:29",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 4492,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3208:28:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 4493,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4405,
																			"src": "3239:11:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3208:42:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 4495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3080:170:29",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 4485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 4482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 4472,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4415,
																						"src": "3111:10:29",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 4480,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 4475,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4437,
																									"src": "3130:6:29",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"arguments": [
																										{
																											"id": 4478,
																											"name": "masked",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4457,
																											"src": "3166:6:29",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 4476,
																											"name": "BitMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2217,
																											"src": "3139:7:29",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_BitMath_$2217_$",
																												"typeString": "type(library BitMath)"
																											}
																										},
																										"id": 4477,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mostSignificantBit",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2055,
																										"src": "3139:26:29",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																											"typeString": "function (uint256) pure returns (uint8)"
																										}
																									},
																									"id": 4479,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "3139:34:29",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "3130:43:29",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 4474,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3124:5:29",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 4473,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3124:5:29",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 4481,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3124:50:29",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3111:63:29",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 4483,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3110:65:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 4484,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4405,
																			"src": "3178:11:29",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3110:79:29",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3073:177:29",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 4497,
															"nodeType": "ExpressionStatement",
															"src": "3073:177:29"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4397,
										"nodeType": "StructuredDocumentation",
										"src": "1434:727:29",
										"text": "@notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n to the left (less than or equal to) or right (greater than) of the given tick\n @param self The mapping in which to compute the next initialized tick\n @param tick The starting tick\n @param tickSpacing The spacing between usable ticks\n @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks"
									},
									"id": 4575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextInitializedTickWithinOneWord",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4401,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 4575,
												"src": "2217:38:29",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 4400,
													"keyType": {
														"id": 4398,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "2225:5:29",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "2217:25:29",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueType": {
														"id": 4399,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2234:7:29",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4403,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4575,
												"src": "2265:10:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4402,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2265:5:29",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4405,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 4575,
												"src": "2285:17:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4404,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2285:5:29",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4407,
												"mutability": "mutable",
												"name": "lte",
												"nodeType": "VariableDeclaration",
												"scope": 4575,
												"src": "2312:8:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2312:4:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:119:29"
									},
									"returnParameters": {
										"id": 4413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4410,
												"mutability": "mutable",
												"name": "next",
												"nodeType": "VariableDeclaration",
												"scope": 4575,
												"src": "2350:10:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4409,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2350:5:29",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4412,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 4575,
												"src": "2362:16:29",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2362:4:29",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:30:29"
									},
									"scope": 4576,
									"src": "2166:1921:29",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4577,
							"src": "339:3750:29"
						}
					],
					"src": "45:4045:29"
				},
				"id": 29
			},
			"contracts/core/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							5111
						]
					},
					"id": 5112,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4578,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:30"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4579,
								"nodeType": "StructuredDocumentation",
								"src": "78:235:30",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 5111,
							"linearizedBaseContracts": [
								5111
							],
							"name": "TickMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 4580,
										"nodeType": "StructuredDocumentation",
										"src": "336:108:30",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 4584,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 5111,
									"src": "449:42:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 4581,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "449:5:30",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 4583,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "484:7:30",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 4582,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "485:6:30",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4585,
										"nodeType": "StructuredDocumentation",
										"src": "497:107:30",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 4589,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 5111,
									"src": "609:44:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 4586,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "609:5:30",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 4588,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "644:9:30",
										"subExpression": {
											"id": 4587,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4584,
											"src": "645:8:30",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4590,
										"nodeType": "StructuredDocumentation",
										"src": "660:116:30",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 4593,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 5111,
									"src": "781:53:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 4591,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "781:7:30",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 4592,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "824:10:30",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 4594,
										"nodeType": "StructuredDocumentation",
										"src": "840:116:30",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 4597,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 5111,
									"src": "961:92:30",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 4595,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "961:7:30",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 4596,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1004:49:30",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4970,
										"nodeType": "Block",
										"src": "1447:2495:30",
										"statements": [
											{
												"assignments": [
													4606
												],
												"declarations": [
													{
														"constant": false,
														"id": 4606,
														"mutability": "mutable",
														"name": "absTick",
														"nodeType": "VariableDeclaration",
														"scope": 4970,
														"src": "1457:15:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4605,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1457:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4626,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 4609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4607,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4600,
															"src": "1475:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 4608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1482:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1475:8:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 4622,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4600,
																		"src": "1526:4:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 4621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1519:6:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 4620,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1519:6:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 4623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1519:12:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1511:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4618,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1511:7:30",
																"typeDescriptions": {}
															}
														},
														"id": 4624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1511:21:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1475:57:30",
													"trueExpression": {
														"arguments": [
															{
																"id": 4616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1494:13:30",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 4614,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4600,
																			"src": "1502:4:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 4613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1495:6:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 4612,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1495:6:30",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1495:12:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1486:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4610,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1486:7:30",
																"typeDescriptions": {}
															}
														},
														"id": 4617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1486:22:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1457:75:30"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4628,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4606,
																"src": "1550:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 4631,
																		"name": "MAX_TICK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4589,
																		"src": "1569:8:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 4630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1561:7:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 4629,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1561:7:30",
																		"typeDescriptions": {}
																	}
																},
																"id": 4632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1561:17:30",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1550:28:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 4634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1580:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 4627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1542:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:42:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4636,
												"nodeType": "ExpressionStatement",
												"src": "1542:42:30"
											},
											{
												"assignments": [
													4638
												],
												"declarations": [
													{
														"constant": false,
														"id": 4638,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 4970,
														"src": "1595:13:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1595:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4647,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4639,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4606,
																"src": "1611:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 4640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1621:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1611:13:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 4642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1628:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1611:18:30",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 4645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1669:35:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 4646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1611:93:30",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 4644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1632:34:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1595:109:30"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4648,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "1718:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 4649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1728:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1718:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1718:18:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4662,
												"nodeType": "IfStatement",
												"src": "1714:83:30",
												"trueBody": {
													"expression": {
														"id": 4660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4653,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "1738:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4654,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "1747:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 4655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1755:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1747:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4657,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1746:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1794:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1746:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1738:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4661,
													"nodeType": "ExpressionStatement",
													"src": "1738:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4663,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "1811:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 4664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1821:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1811:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1828:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1811:18:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4677,
												"nodeType": "IfStatement",
												"src": "1807:83:30",
												"trueBody": {
													"expression": {
														"id": 4675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4668,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "1831:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4669,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "1840:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 4670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1848:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1840:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4672,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1839:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1887:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1839:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1831:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4676,
													"nodeType": "ExpressionStatement",
													"src": "1831:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4678,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "1904:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 4679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1914:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1904:13:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1921:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1904:18:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4692,
												"nodeType": "IfStatement",
												"src": "1900:83:30",
												"trueBody": {
													"expression": {
														"id": 4690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4683,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "1924:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4684,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "1933:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 4685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1941:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1933:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4687,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1932:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1932:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1924:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4691,
													"nodeType": "ExpressionStatement",
													"src": "1924:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4693,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "1997:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 4694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1997:14:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2015:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1997:19:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4707,
												"nodeType": "IfStatement",
												"src": "1993:84:30",
												"trueBody": {
													"expression": {
														"id": 4705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4698,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "2018:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4699,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "2027:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 4700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2035:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2027:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4702,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2026:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2074:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2026:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2018:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4706,
													"nodeType": "ExpressionStatement",
													"src": "2018:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4708,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "2091:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 4709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2101:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2091:14:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2109:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2091:19:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4722,
												"nodeType": "IfStatement",
												"src": "2087:84:30",
												"trueBody": {
													"expression": {
														"id": 4720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4713,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "2112:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4714,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "2121:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 4715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2129:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2121:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4717,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2168:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2120:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2112:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4721,
													"nodeType": "ExpressionStatement",
													"src": "2112:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4723,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "2185:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 4724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2195:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2185:14:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2203:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2185:19:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4737,
												"nodeType": "IfStatement",
												"src": "2181:84:30",
												"trueBody": {
													"expression": {
														"id": 4735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4728,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "2206:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4729,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "2215:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 4730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2223:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2215:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4732,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2214:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2262:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2214:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2206:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4736,
													"nodeType": "ExpressionStatement",
													"src": "2206:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4738,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "2279:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 4739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2289:4:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2279:14:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2297:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2279:19:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4752,
												"nodeType": "IfStatement",
												"src": "2275:84:30",
												"trueBody": {
													"expression": {
														"id": 4750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4743,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "2300:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4744,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "2309:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 4745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2317:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2309:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4747,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2308:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2356:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2308:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2300:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4751,
													"nodeType": "ExpressionStatement",
													"src": "2300:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4753,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "2373:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 4754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2383:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2373:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2392:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2373:20:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4767,
												"nodeType": "IfStatement",
												"src": "2369:85:30",
												"trueBody": {
													"expression": {
														"id": 4765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4758,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "2395:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4759,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "2404:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 4760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2412:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2404:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4762,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2403:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2451:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2403:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2395:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4766,
													"nodeType": "ExpressionStatement",
													"src": "2395:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4768,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "2468:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 4769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2468:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2487:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2468:20:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4782,
												"nodeType": "IfStatement",
												"src": "2464:85:30",
												"trueBody": {
													"expression": {
														"id": 4780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4773,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "2490:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4774,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "2499:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 4775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2507:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2499:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4777,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2498:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2546:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2498:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2490:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4781,
													"nodeType": "ExpressionStatement",
													"src": "2490:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4783,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "2563:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 4784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2573:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2563:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2582:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2563:20:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4797,
												"nodeType": "IfStatement",
												"src": "2559:85:30",
												"trueBody": {
													"expression": {
														"id": 4795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4788,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "2585:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4789,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "2594:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 4790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2602:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2594:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4792,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2593:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2641:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2593:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2585:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4796,
													"nodeType": "ExpressionStatement",
													"src": "2585:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4798,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "2658:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 4799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2668:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2658:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2677:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2658:20:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4812,
												"nodeType": "IfStatement",
												"src": "2654:85:30",
												"trueBody": {
													"expression": {
														"id": 4810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4803,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "2680:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4804,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "2689:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 4805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2697:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2689:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4807,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2688:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2736:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2688:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2680:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4811,
													"nodeType": "ExpressionStatement",
													"src": "2680:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4813,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "2753:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 4814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2763:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2753:16:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2773:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2753:21:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4827,
												"nodeType": "IfStatement",
												"src": "2749:86:30",
												"trueBody": {
													"expression": {
														"id": 4825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4818,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "2776:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4819,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "2785:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 4820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2793:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2785:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4822,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2784:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2832:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2784:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2776:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4826,
													"nodeType": "ExpressionStatement",
													"src": "2776:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4828,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "2849:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 4829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2859:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2849:16:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2869:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2849:21:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4842,
												"nodeType": "IfStatement",
												"src": "2845:86:30",
												"trueBody": {
													"expression": {
														"id": 4840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4833,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "2872:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4834,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "2881:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 4835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2889:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2881:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4837,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2880:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2928:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2880:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2872:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4841,
													"nodeType": "ExpressionStatement",
													"src": "2872:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4843,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "2945:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 4844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2955:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2945:16:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2965:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2945:21:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4857,
												"nodeType": "IfStatement",
												"src": "2941:86:30",
												"trueBody": {
													"expression": {
														"id": 4855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4848,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "2968:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4849,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "2977:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 4850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2985:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2977:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4852,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2976:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2976:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2968:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4856,
													"nodeType": "ExpressionStatement",
													"src": "2968:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4858,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "3041:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 4859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3051:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3041:16:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3061:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3041:21:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4872,
												"nodeType": "IfStatement",
												"src": "3037:86:30",
												"trueBody": {
													"expression": {
														"id": 4870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4863,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "3064:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4864,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "3073:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 4865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3081:34:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3073:42:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4867,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3072:44:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3120:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3072:51:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3064:59:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4871,
													"nodeType": "ExpressionStatement",
													"src": "3064:59:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4873,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "3137:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 4874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3147:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3137:17:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3158:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3137:22:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4887,
												"nodeType": "IfStatement",
												"src": "3133:86:30",
												"trueBody": {
													"expression": {
														"id": 4885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4878,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "3161:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4879,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "3170:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 4880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3178:33:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3170:41:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4882,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3169:43:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3216:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3169:50:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3161:58:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4886,
													"nodeType": "ExpressionStatement",
													"src": "3161:58:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4888,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "3233:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 4889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3243:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3233:17:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3254:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:22:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4902,
												"nodeType": "IfStatement",
												"src": "3229:85:30",
												"trueBody": {
													"expression": {
														"id": 4900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4893,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "3257:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4894,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "3266:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 4895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3274:32:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3266:40:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4897,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3265:42:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3311:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3265:49:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3257:57:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4901,
													"nodeType": "ExpressionStatement",
													"src": "3257:57:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4903,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "3328:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 4904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3338:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3328:17:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3349:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3328:22:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4917,
												"nodeType": "IfStatement",
												"src": "3324:83:30",
												"trueBody": {
													"expression": {
														"id": 4915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4908,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "3352:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4909,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "3361:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 4910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3369:30:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3361:38:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4912,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3360:40:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3404:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3360:47:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3352:55:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4916,
													"nodeType": "ExpressionStatement",
													"src": "3352:55:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4918,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4606,
															"src": "3421:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 4919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3431:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3421:17:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3442:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3421:22:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4932,
												"nodeType": "IfStatement",
												"src": "3417:78:30",
												"trueBody": {
													"expression": {
														"id": 4930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4923,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "3445:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4924,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4638,
																			"src": "3454:5:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 4925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:25:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3454:33:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4927,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3453:35:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 4928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3492:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3453:42:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3445:50:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4931,
													"nodeType": "ExpressionStatement",
													"src": "3445:50:30"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 4935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4933,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4600,
														"src": "3510:4:30",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 4934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3517:1:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3510:8:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4946,
												"nodeType": "IfStatement",
												"src": "3506:47:30",
												"trueBody": {
													"expression": {
														"id": 4944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 4936,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4638,
															"src": "3520:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 4939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3533:7:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 4938,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3533:7:30",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 4937,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3528:4:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 4940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3528:13:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 4941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3528:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 4942,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4638,
																"src": "3548:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3528:25:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3520:33:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4945,
													"nodeType": "ExpressionStatement",
													"src": "3520:33:30"
												}
											},
											{
												"expression": {
													"id": 4968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4947,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4603,
														"src": "3863:12:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4950,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4638,
																				"src": "3887:5:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 4951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3896:2:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3887:11:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4953,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3886:13:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 4961,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 4959,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 4954,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4638,
																						"src": "3903:5:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 4957,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 4955,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3912:1:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 4956,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3917:2:30",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3912:7:30",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 4958,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3911:9:30",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3903:17:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 4960,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3924:1:30",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3903:22:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 4963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3932:1:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 4964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3903:30:30",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 4962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3928:1:30",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 4965,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3902:32:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3886:48:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3878:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 4948,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3878:7:30",
																"typeDescriptions": {}
															}
														},
														"id": 4967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3878:57:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3863:72:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 4969,
												"nodeType": "ExpressionStatement",
												"src": "3863:72:30"
											}
										]
									},
									"documentation": {
										"id": 4598,
										"nodeType": "StructuredDocumentation",
										"src": "1060:297:30",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 4971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4600,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 4971,
												"src": "1390:10:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4599,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1390:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:12:30"
									},
									"returnParameters": {
										"id": 4604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4603,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 4971,
												"src": "1425:20:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4602,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:22:30"
									},
									"scope": 5111,
									"src": "1362:2580:30",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5109,
										"nodeType": "Block",
										"src": "4446:4196:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 4982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4980,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4974,
																	"src": "4563:12:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 4981,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4593,
																	"src": "4579:14:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4563:30:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 4985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4983,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4974,
																	"src": "4597:12:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 4984,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4597,
																	"src": "4612:14:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4597:29:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4563:63:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 4987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:3:30",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 4979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4555:7:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:77:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4989,
												"nodeType": "ExpressionStatement",
												"src": "4555:77:30"
											},
											{
												"assignments": [
													4991
												],
												"declarations": [
													{
														"constant": false,
														"id": 4991,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 5109,
														"src": "4642:13:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4990,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4642:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4998,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 4994,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4974,
																"src": "4666:12:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 4993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4658:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4992,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4658:7:30",
																"typeDescriptions": {}
															}
														},
														"id": 4995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4658:21:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 4996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4683:2:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4658:27:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4642:43:30"
											},
											{
												"assignments": [
													5000
												],
												"declarations": [
													{
														"constant": false,
														"id": 5000,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 5109,
														"src": "4696:9:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4999,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4696:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5002,
												"initialValue": {
													"id": 5001,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4991,
													"src": "4708:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4696:17:30"
											},
											{
												"assignments": [
													5004
												],
												"declarations": [
													{
														"constant": false,
														"id": 5004,
														"mutability": "mutable",
														"name": "msb",
														"nodeType": "VariableDeclaration",
														"scope": 5109,
														"src": "4723:11:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5003,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4723:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5006,
												"initialValue": {
													"hexValue": "30",
													"id": 5005,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4737:1:30",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4723:15:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4758:139:30",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4772:58:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:1:30",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4791:1:30"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4794:34:30",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4788:2:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4788:41:30"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:49:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4776:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4843:17:30",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4853:3:30"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4858:1:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4850:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:10:30"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4843:3:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4873:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4882:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4885:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4873:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "4843:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "4853:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "4791:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "4873:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "4885:1:30",
														"valueSize": 1
													}
												],
												"id": 5007,
												"nodeType": "InlineAssembly",
												"src": "4749:148:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4915:123:30",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4929:42:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:30",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4948:1:30"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4951:18:30",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4945:2:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4945:25:30"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:33:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4933:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4984:17:30",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4994:3:30"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4999:1:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4991:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:10:30"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5014:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5023:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5026:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5014:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "4984:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "4994:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "4948:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5014:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5026:1:30",
														"valueSize": 1
													}
												],
												"id": 5008,
												"nodeType": "InlineAssembly",
												"src": "4906:132:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5056:115:30",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5070:34:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5083:1:30",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5089:1:30"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:10:30",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5086:2:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:17:30"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5079:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:25:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5074:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5117:17:30",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:30"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5132:1:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5124:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:10:30"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5147:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5159:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5147:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5117:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5127:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5089:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5147:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5159:1:30",
														"valueSize": 1
													}
												],
												"id": 5009,
												"nodeType": "InlineAssembly",
												"src": "5047:124:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5189:111:30",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5203:30:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5216:1:30",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5222:1:30"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5225:6:30",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:13:30"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5212:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:21:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5207:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5246:17:30",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5256:3:30"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5261:1:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5253:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:10:30"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5246:3:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5285:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5288:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5281:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5276:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5246:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5256:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5222:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5276:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5288:1:30",
														"valueSize": 1
													}
												],
												"id": 5010,
												"nodeType": "InlineAssembly",
												"src": "5180:120:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5318:109:30",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5332:28:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5345:1:30",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5351:1:30"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5354:4:30",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5348:2:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5348:11:30"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5341:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:19:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5336:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5373:17:30",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5383:3:30"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5388:1:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5380:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:10:30"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5403:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5412:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5415:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5403:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5373:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5383:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5351:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5403:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5415:1:30",
														"valueSize": 1
													}
												],
												"id": 5011,
												"nodeType": "InlineAssembly",
												"src": "5309:118:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5445:108:30",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5459:27:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5472:1:30",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5478:1:30"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:3:30",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5475:2:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5475:10:30"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:18:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5463:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5499:17:30",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5509:3:30"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5514:1:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5506:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:10:30"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5529:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5538:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5541:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5529:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5499:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5509:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5478:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5529:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5541:1:30",
														"valueSize": 1
													}
												],
												"id": 5012,
												"nodeType": "InlineAssembly",
												"src": "5436:117:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5571:108:30",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5585:27:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5598:1:30",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5604:1:30"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5607:3:30",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5601:2:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5601:10:30"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:18:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5589:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5625:17:30",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5635:3:30"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5640:1:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5632:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:10:30"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5664:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5667:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5655:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5625:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5635:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5604:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5655:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5667:1:30",
														"valueSize": 1
													}
												],
												"id": 5013,
												"nodeType": "InlineAssembly",
												"src": "5562:117:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5697:73:30",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5711:19:30",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5723:1:30"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:3:30",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5720:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:10:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5715:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5743:17:30",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5753:3:30"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5758:1:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5750:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:10:30"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5743:3:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5743:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5004,
														"isOffset": false,
														"isSlot": false,
														"src": "5753:3:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5723:1:30",
														"valueSize": 1
													}
												],
												"id": 5014,
												"nodeType": "InlineAssembly",
												"src": "5688:82:30"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5015,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5004,
														"src": "5784:3:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 5016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5791:3:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5784:10:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 5034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 5027,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5000,
															"src": "5835:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5028,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4991,
																"src": "5839:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 5031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 5029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5849:3:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 5030,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5004,
																			"src": "5855:3:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5849:9:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 5032,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5848:11:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5839:20:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5835:24:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 5035,
													"nodeType": "ExpressionStatement",
													"src": "5835:24:30"
												},
												"id": 5036,
												"nodeType": "IfStatement",
												"src": "5780:79:30",
												"trueBody": {
													"expression": {
														"id": 5025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 5018,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5000,
															"src": "5796:1:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5019,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4991,
																"src": "5800:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 5022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 5020,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5004,
																			"src": "5810:3:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 5021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5816:3:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5810:9:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 5023,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5809:11:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5800:20:30",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5796:24:30",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 5026,
													"nodeType": "ExpressionStatement",
													"src": "5796:24:30"
												}
											},
											{
												"assignments": [
													5038
												],
												"declarations": [
													{
														"constant": false,
														"id": 5038,
														"mutability": "mutable",
														"name": "log_2",
														"nodeType": "VariableDeclaration",
														"scope": 5109,
														"src": "5870:12:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 5037,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5870:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5048,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 5044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 5041,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5004,
																			"src": "5893:3:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 5040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5886:6:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 5039,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5886:6:30",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 5042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5886:11:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 5043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5900:3:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5886:17:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 5045,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5885:19:30",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 5046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5908:2:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5885:25:30",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5870:40:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5930:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5944:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5953:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5962:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5965:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5958:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5944:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5981:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5999:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5990:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "5990:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5985:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6014:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6026:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6037:2:30",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6041:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6033:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6033:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6023:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6014:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6057:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6066:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6069:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6062:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6057:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6014:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6026:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5944:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5962:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5965:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "5999:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6057:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6069:1:30",
														"valueSize": 1
													}
												],
												"id": 5049,
												"nodeType": "InlineAssembly",
												"src": "5921:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6099:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6113:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6122:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6131:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6134:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6127:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6118:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6113:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6150:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6163:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6168:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6154:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6183:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6195:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6206:2:30",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6210:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6192:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6183:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6226:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6235:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6238:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6226:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6183:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6195:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6113:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6131:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6134:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6168:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6226:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6238:1:30",
														"valueSize": 1
													}
												],
												"id": 5050,
												"nodeType": "InlineAssembly",
												"src": "6090:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6268:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6282:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6300:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6303:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6296:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6296:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6287:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6282:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6319:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6332:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6337:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6323:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6352:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6364:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6375:2:30",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6379:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6361:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6352:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6395:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6404:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6407:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6395:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6352:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6364:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6282:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6300:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6303:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6337:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6395:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6407:1:30",
														"valueSize": 1
													}
												],
												"id": 5051,
												"nodeType": "InlineAssembly",
												"src": "6259:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6437:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6451:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6460:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6469:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6472:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6465:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6465:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6456:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6451:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6488:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6501:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6506:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6497:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6492:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6533:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6544:2:30",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6548:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6540:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6530:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6521:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6564:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6573:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6576:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6564:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6521:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6533:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6451:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6469:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6472:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6506:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6564:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6576:1:30",
														"valueSize": 1
													}
												],
												"id": 5052,
												"nodeType": "InlineAssembly",
												"src": "6428:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6606:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6620:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6629:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6638:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6641:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6620:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6657:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6670:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6675:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6666:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6661:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6690:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6702:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6713:2:30",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6717:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6709:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6709:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6699:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6690:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6733:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6742:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6745:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6738:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6738:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6733:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6690:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6702:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6620:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6638:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6641:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6675:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6733:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6745:1:30",
														"valueSize": 1
													}
												],
												"id": 5053,
												"nodeType": "InlineAssembly",
												"src": "6597:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6775:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6807:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6810:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6803:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6803:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6826:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6839:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6844:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6835:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6830:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6859:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6871:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6882:2:30",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6886:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6868:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6859:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6902:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6911:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6914:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6907:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6902:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6859:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "6871:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6789:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6807:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6810:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6844:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6902:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6914:1:30",
														"valueSize": 1
													}
												],
												"id": 5054,
												"nodeType": "InlineAssembly",
												"src": "6766:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6944:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6958:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6967:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6976:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6979:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6972:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6963:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6958:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6995:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7008:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7013:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7004:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6999:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7028:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7040:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7051:2:30",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7055:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7047:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7028:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7071:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7080:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7083:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7071:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7028:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7040:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6958:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6976:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "6979:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7013:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7071:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7083:1:30",
														"valueSize": 1
													}
												],
												"id": 5055,
												"nodeType": "InlineAssembly",
												"src": "6935:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7113:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7127:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7136:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7145:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7148:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7141:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7141:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7132:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7127:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7164:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7177:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7182:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7173:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7173:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7168:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7197:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7209:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7220:2:30",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7224:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7216:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7206:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7197:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7240:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7249:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7252:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7245:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7240:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7197:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7209:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7127:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7145:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7148:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7182:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7240:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7252:1:30",
														"valueSize": 1
													}
												],
												"id": 5056,
												"nodeType": "InlineAssembly",
												"src": "7104:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7282:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7296:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7305:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7314:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7317:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7310:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7301:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7296:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7333:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7346:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7351:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7337:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7366:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7378:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7389:2:30",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7393:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7385:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7375:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7366:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7409:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7418:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7421:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7414:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7409:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7366:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7378:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7296:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7314:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7317:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7351:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7409:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7421:1:30",
														"valueSize": 1
													}
												],
												"id": 5057,
												"nodeType": "InlineAssembly",
												"src": "7273:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7451:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7465:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7474:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7483:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7486:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7479:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7479:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7470:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7465:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7502:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7515:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7520:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7511:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7506:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7535:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7547:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7558:2:30",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7562:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7544:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7535:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7578:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7587:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7590:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7583:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7578:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7535:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7547:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7465:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7483:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7486:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7520:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7578:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7590:1:30",
														"valueSize": 1
													}
												],
												"id": 5058,
												"nodeType": "InlineAssembly",
												"src": "7442:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7620:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7634:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7643:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7652:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7655:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7648:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7648:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7634:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7671:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7689:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7675:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7704:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7716:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7727:2:30",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7731:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7713:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7704:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7747:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7756:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7759:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7752:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7752:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7747:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7704:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7634:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7652:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7655:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7689:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7747:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7759:1:30",
														"valueSize": 1
													}
												],
												"id": 5059,
												"nodeType": "InlineAssembly",
												"src": "7611:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7789:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7803:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7821:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7824:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7803:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7840:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7853:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7858:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7844:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7873:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7885:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7896:2:30",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7900:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7882:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7873:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7916:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7925:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7928:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7921:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7916:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7873:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "7885:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7803:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7821:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7824:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7858:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7916:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7928:1:30",
														"valueSize": 1
													}
												],
												"id": 5060,
												"nodeType": "InlineAssembly",
												"src": "7780:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7958:151:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7972:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7981:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7990:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7993:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7986:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7986:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7977:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7972:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8009:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8022:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8027:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8018:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8013:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8054:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8065:2:30",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8069:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8061:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8051:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "8051:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8042:5:30"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8085:14:30",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8094:1:30"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8097:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8090:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "8090:9:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8085:1:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "8042:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "8054:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7972:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7990:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "7993:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "8027:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "8085:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "8097:1:30",
														"valueSize": 1
													}
												],
												"id": 5061,
												"nodeType": "InlineAssembly",
												"src": "7949:160:30"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8127:124:30",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8141:24:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8150:3:30",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8159:1:30"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8162:1:30"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:9:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8146:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:19:30"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8141:1:30"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8178:20:30",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8191:3:30",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:30"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8187:3:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "8187:11:30"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8182:1:30",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:30:30",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8223:5:30"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8234:2:30",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8238:1:30"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:30"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8230:10:30"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8220:2:30"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:21:30"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8211:5:30"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5038,
														"isOffset": false,
														"isSlot": false,
														"src": "8223:5:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "8141:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "8159:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "8162:1:30",
														"valueSize": 1
													},
													{
														"declaration": 5000,
														"isOffset": false,
														"isSlot": false,
														"src": "8196:1:30",
														"valueSize": 1
													}
												],
												"id": 5062,
												"nodeType": "InlineAssembly",
												"src": "8118:133:30"
											},
											{
												"assignments": [
													5064
												],
												"declarations": [
													{
														"constant": false,
														"id": 5064,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nodeType": "VariableDeclaration",
														"scope": 5109,
														"src": "8261:20:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 5063,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8261:6:30",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5068,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 5067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5065,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5038,
														"src": "8284:5:30",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 5066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8292:24:30",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8284:32:30",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8261:55:30"
											},
											{
												"assignments": [
													5070
												],
												"declarations": [
													{
														"constant": false,
														"id": 5070,
														"mutability": "mutable",
														"name": "tickLow",
														"nodeType": "VariableDeclaration",
														"scope": 5109,
														"src": "8345:13:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 5069,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8345:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5080,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 5075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 5073,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5064,
																			"src": "8368:13:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 5074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8384:37:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8368:53:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 5076,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8367:55:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 5077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8426:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8367:62:30",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8361:5:30",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 5071,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8361:5:30",
															"typeDescriptions": {}
														}
													},
													"id": 5079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8361:69:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8345:85:30"
											},
											{
												"assignments": [
													5082
												],
												"declarations": [
													{
														"constant": false,
														"id": 5082,
														"mutability": "mutable",
														"name": "tickHi",
														"nodeType": "VariableDeclaration",
														"scope": 5109,
														"src": "8440:12:30",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 5081,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8440:5:30",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5092,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 5090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 5087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 5085,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5064,
																			"src": "8462:13:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 5086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8478:39:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8462:55:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 5088,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8461:57:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 5089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8522:3:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8461:64:30",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 5084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8455:5:30",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 5083,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8455:5:30",
															"typeDescriptions": {}
														}
													},
													"id": 5091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8455:71:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8440:86:30"
											},
											{
												"expression": {
													"id": 5107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5093,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4977,
														"src": "8537:4:30",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 5096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5094,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5070,
																"src": "8544:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 5095,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5082,
																"src": "8555:6:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8544:17:30",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 5102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 5099,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5082,
																			"src": "8593:6:30",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 5098,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4971,
																		"src": "8574:18:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 5100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8574:26:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 5101,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4974,
																	"src": "8604:12:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8574:42:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 5104,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5070,
																"src": "8628:7:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 5105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8574:61:30",
															"trueExpression": {
																"id": 5103,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5082,
																"src": "8619:6:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 5106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8544:91:30",
														"trueExpression": {
															"id": 5097,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5070,
															"src": "8564:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8537:98:30",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 5108,
												"nodeType": "ExpressionStatement",
												"src": "8537:98:30"
											}
										]
									},
									"documentation": {
										"id": 4972,
										"nodeType": "StructuredDocumentation",
										"src": "3948:408:30",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 5110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4974,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 5110,
												"src": "4389:20:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4973,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4389:7:30",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4388:22:30"
									},
									"returnParameters": {
										"id": 4978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4977,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 5110,
												"src": "4434:10:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4976,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4434:5:30",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:12:30"
									},
									"scope": 5111,
									"src": "4361:4281:30",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5112,
							"src": "313:8331:30"
						}
					],
					"src": "45:8600:30"
				},
				"id": 30
			},
			"contracts/core/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20Minimal": [
							1192
						],
						"TransferHelper": [
							5162
						]
					},
					"id": 5163,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5113,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:31"
						},
						{
							"absolutePath": "contracts/core/interfaces/IERC20Minimal.sol",
							"file": "../interfaces/IERC20Minimal.sol",
							"id": 5114,
							"nodeType": "ImportDirective",
							"scope": 5163,
							"sourceUnit": 1193,
							"src": "71:41:31",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 5115,
								"nodeType": "StructuredDocumentation",
								"src": "114:139:31",
								"text": "@title TransferHelper\n @notice Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false"
							},
							"fullyImplemented": true,
							"id": 5162,
							"linearizedBaseContracts": [
								5162
							],
							"name": "TransferHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 5160,
										"nodeType": "Block",
										"src": "675:225:31",
										"statements": [
											{
												"assignments": [
													5126,
													5128
												],
												"declarations": [
													{
														"constant": false,
														"id": 5126,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 5160,
														"src": "686:12:31",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 5125,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "686:4:31",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 5128,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 5160,
														"src": "700:17:31",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 5127,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "700:5:31",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5140,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 5133,
																			"name": "IERC20Minimal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1192,
																			"src": "767:13:31",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$1192_$",
																				"typeString": "type(contract IERC20Minimal)"
																			}
																		},
																		"id": 5134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1141,
																		"src": "767:22:31",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20Minimal.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 5135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "767:31:31",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 5136,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5120,
																	"src": "800:2:31",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 5137,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5122,
																	"src": "804:5:31",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 5131,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "744:3:31",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 5132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "744:22:31",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 5138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "744:66:31",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 5129,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5118,
															"src": "733:5:31",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 5130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "733:10:31",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 5139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "733:78:31",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "685:126:31"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 5156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5142,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5126,
																"src": "829:7:31",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 5154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 5146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 5143,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5128,
																					"src": "841:4:31",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 5144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "841:11:31",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 5145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "856:1:31",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "841:16:31",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 5149,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5128,
																					"src": "872:4:31",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 5151,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "879:4:31",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 5150,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "879:4:31",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 5152,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "878:6:31",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 5147,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "861:3:31",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 5148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "861:10:31",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 5153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "861:24:31",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "841:44:31",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 5155,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "840:46:31",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "829:57:31",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5446",
															"id": 5157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "888:4:31",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cebb2b2e317200ffcf39e4291b6400d95f06e73adfd258bd495d227b7d846ff0",
																"typeString": "literal_string \"TF\""
															},
															"value": "TF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cebb2b2e317200ffcf39e4291b6400d95f06e73adfd258bd495d227b7d846ff0",
																"typeString": "literal_string \"TF\""
															}
														],
														"id": 5141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "821:7:31",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "821:72:31",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5159,
												"nodeType": "ExpressionStatement",
												"src": "821:72:31"
											}
										]
									},
									"documentation": {
										"id": 5116,
										"nodeType": "StructuredDocumentation",
										"src": "282:315:31",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Calls transfer on token contract, errors with TF if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 5161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5118,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 5161,
												"src": "624:13:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:31",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5120,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 5161,
												"src": "639:10:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:31",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5122,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 5161,
												"src": "651:13:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:31",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:42:31"
									},
									"returnParameters": {
										"id": 5124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:0:31"
									},
									"scope": 5162,
									"src": "602:298:31",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5163,
							"src": "253:649:31"
						}
					],
					"src": "45:858:31"
				},
				"id": 31
			},
			"contracts/core/libraries/UnsafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/core/libraries/UnsafeMath.sol",
					"exportedSymbols": {
						"UnsafeMath": [
							5178
						]
					},
					"id": 5179,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5164,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:32"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 5165,
								"nodeType": "StructuredDocumentation",
								"src": "71:173:32",
								"text": "@title Math functions that do not check inputs or outputs\n @notice Contains methods that perform common math functions but do not do any overflow or underflow checks"
							},
							"fullyImplemented": true,
							"id": 5178,
							"linearizedBaseContracts": [
								5178
							],
							"name": "UnsafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 5176,
										"nodeType": "Block",
										"src": "571:86:32",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "590:61:32",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "604:37:32",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "617:1:32"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "620:1:32"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:32"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "613:9:32"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "631:1:32"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "634:1:32"
																					}
																				],
																				"functionName": {
																					"name": "mod",
																					"nodeType": "YulIdentifier",
																					"src": "627:3:32"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "627:9:32"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "638:1:32",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "624:2:32"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "624:16:32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:32"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:32:32"
															},
															"variableNames": [
																{
																	"name": "z",
																	"nodeType": "YulIdentifier",
																	"src": "604:1:32"
																}
															]
														}
													]
												},
												"evmVersion": "berlin",
												"externalReferences": [
													{
														"declaration": 5168,
														"isOffset": false,
														"isSlot": false,
														"src": "617:1:32",
														"valueSize": 1
													},
													{
														"declaration": 5168,
														"isOffset": false,
														"isSlot": false,
														"src": "631:1:32",
														"valueSize": 1
													},
													{
														"declaration": 5170,
														"isOffset": false,
														"isSlot": false,
														"src": "620:1:32",
														"valueSize": 1
													},
													{
														"declaration": 5170,
														"isOffset": false,
														"isSlot": false,
														"src": "634:1:32",
														"valueSize": 1
													},
													{
														"declaration": 5173,
														"isOffset": false,
														"isSlot": false,
														"src": "604:1:32",
														"valueSize": 1
													}
												],
												"id": 5175,
												"nodeType": "InlineAssembly",
												"src": "581:70:32"
											}
										]
									},
									"documentation": {
										"id": 5166,
										"nodeType": "StructuredDocumentation",
										"src": "269:218:32",
										"text": "@notice Returns ceil(x / y)\n @dev division by 0 has unspecified behavior, and must be checked externally\n @param x The dividend\n @param y The divisor\n @return z The quotient, ceil(x / y)"
									},
									"id": 5177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divRoundingUp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5168,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 5177,
												"src": "515:9:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5170,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 5177,
												"src": "526:9:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:22:32"
									},
									"returnParameters": {
										"id": 5174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5173,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 5177,
												"src": "560:9:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:11:32"
									},
									"scope": 5178,
									"src": "492:165:32",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5179,
							"src": "244:415:32"
						}
					],
					"src": "45:615:32"
				},
				"id": 32
			},
			"contracts/libraries/VelodromeTimeLibrary.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/VelodromeTimeLibrary.sol",
					"exportedSymbols": {
						"VelodromeTimeLibrary": [
							5256
						]
					},
					"id": 5257,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5180,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:33"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 5256,
							"linearizedBaseContracts": [
								5256
							],
							"name": "VelodromeTimeLibrary",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5183,
									"mutability": "constant",
									"name": "WEEK",
									"nodeType": "VariableDeclaration",
									"scope": 5256,
									"src": "92:39:33",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5181,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "92:7:33",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 5182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "125:6:33",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5198,
										"nodeType": "Block",
										"src": "272:54:33",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5191,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5186,
														"src": "289:9:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 5194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 5192,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5186,
																	"src": "302:9:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 5193,
																	"name": "WEEK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5183,
																	"src": "314:4:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "302:16:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 5195,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "301:18:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "289:30:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5190,
												"id": 5197,
												"nodeType": "Return",
												"src": "282:37:33"
											}
										]
									},
									"documentation": {
										"id": 5184,
										"nodeType": "StructuredDocumentation",
										"src": "138:58:33",
										"text": "@dev Returns start of epoch based on current timestamp"
									},
									"id": 5199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "epochStart",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5186,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 5199,
												"src": "221:17:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:19:33"
									},
									"returnParameters": {
										"id": 5190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 5199,
												"src": "263:7:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:9:33"
									},
									"scope": 5256,
									"src": "201:125:33",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5216,
										"nodeType": "Block",
										"src": "466:61:33",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 5212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 5207,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5202,
															"src": "483:9:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 5210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 5208,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5202,
																		"src": "496:9:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 5209,
																		"name": "WEEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5183,
																		"src": "508:4:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "496:16:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 5211,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "495:18:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "483:30:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 5213,
														"name": "WEEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5183,
														"src": "516:4:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "483:37:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5206,
												"id": 5215,
												"nodeType": "Return",
												"src": "476:44:33"
											}
										]
									},
									"documentation": {
										"id": 5200,
										"nodeType": "StructuredDocumentation",
										"src": "332:59:33",
										"text": "@dev Returns start of next epoch / end of current epoch"
									},
									"id": 5217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "epochNext",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5202,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 5217,
												"src": "415:17:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:19:33"
									},
									"returnParameters": {
										"id": 5206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5205,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 5217,
												"src": "457:7:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "456:9:33"
									},
									"scope": 5256,
									"src": "396:131:33",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5234,
										"nodeType": "Block",
										"src": "652:64:33",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 5230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 5225,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5220,
															"src": "669:9:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 5228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 5226,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5220,
																		"src": "682:9:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 5227,
																		"name": "WEEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5183,
																		"src": "694:4:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "682:16:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 5229,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "681:18:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "669:30:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 5231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "702:7:33",
														"subdenomination": "hours",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "1"
													},
													"src": "669:40:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5224,
												"id": 5233,
												"nodeType": "Return",
												"src": "662:47:33"
											}
										]
									},
									"documentation": {
										"id": 5218,
										"nodeType": "StructuredDocumentation",
										"src": "533:39:33",
										"text": "@dev Returns start of voting window"
									},
									"id": 5235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "epochVoteStart",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5220,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 5235,
												"src": "601:17:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:19:33"
									},
									"returnParameters": {
										"id": 5224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5223,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 5235,
												"src": "643:7:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:9:33"
									},
									"scope": 5256,
									"src": "577:139:33",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5254,
										"nodeType": "Block",
										"src": "879:71:33",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 5250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5243,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5238,
																"src": "896:9:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 5246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 5244,
																			"name": "timestamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5238,
																			"src": "909:9:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 5245,
																			"name": "WEEK",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5183,
																			"src": "921:4:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "909:16:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 5247,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "908:18:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "896:30:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 5249,
															"name": "WEEK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5183,
															"src": "929:4:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "896:37:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 5251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "936:7:33",
														"subdenomination": "hours",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "1"
													},
													"src": "896:47:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5242,
												"id": 5253,
												"nodeType": "Return",
												"src": "889:54:33"
											}
										]
									},
									"documentation": {
										"id": 5236,
										"nodeType": "StructuredDocumentation",
										"src": "722:79:33",
										"text": "@dev Returns end of voting window / beginning of unrestricted voting window"
									},
									"id": 5255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "epochVoteEnd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5238,
												"mutability": "mutable",
												"name": "timestamp",
												"nodeType": "VariableDeclaration",
												"scope": 5255,
												"src": "828:17:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:19:33"
									},
									"returnParameters": {
										"id": 5242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 5255,
												"src": "870:7:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:9:33"
									},
									"scope": 5256,
									"src": "806:144:33",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5257,
							"src": "57:895:33"
						}
					],
					"src": "32:921:33"
				},
				"id": 33
			}
		}
	}
}